{"posts": [{"title": "HashMap\u5e95\u5c42\u7ed3\u6784\u4e0e\u5b9e\u73b0\u539f\u7406\u4e4b\u2014\u2014put\u3001get\u65b9\u6cd5", "date": "2021-07-29T17:25:00-00.00", "path": "/Xuxx_Blogs/archives/bj46/", "text": "\u7b80\u4ecb\n\u672c\u6587\u5185\u5bb9\u57fa\u4e8eJDK8\u3002\nimg\nHashMap\u5728java.util\u5305\u4e0b\uff0c\u5b83\u5b9e\u73b0\u4e86Map\u63a5\u53e3\uff0c\u5b9e\u73b0\u4e86Map\u63a5\u53e3\u7684\u5168\u90e8\u65b9\u6cd5\u3002\u5176\u4e2d\u6700\u5e38\u4f7f\u7528\u7684\u4e24\u4e2a\u65b9\u6cd5\u4e3aput\u548cget\u65b9\u6cd5\u3002\n\u6211\u4eec\u77e5\u9053\uff0cHashMap\u662f\u7528\u4e8e\u5b58\u50a8key-value\u952e\u503c\u5bf9\u7684\u96c6\u5408\uff0c\u800ckey-value\u952e\u503c\u5bf9\u7ed3\u6784\u662f\u57fa\u4e8eMap\u4e2d\u7684Entry\u63a5\u53e3\u5b9e\u73b0\u7684\uff0c\u6240\u4ee5\u6bcf\u4e00\u4e2a\u952e\u503c\u5bf9\u4e5f\u53ef\u4ee5\u79f0\u4e3aEntry\u3002\u8fd9\u4e9b\u952e\u503c\u5bf9\u5b58\u653e\u5728HashMap\u7684\u4e00\u4e2a\u6570\u7ec4\u4e2d\uff0c\u8fd9\u4e2a\u6570\u7ec4\u662fHashMap\u7684\u6838\u5fc3\u90e8\u5206\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u4e5f\u88ab\u79f0\u4e3a\u6876\u3002\u5f53\u7136\uff0cHashMap\u7684\u5e95\u5c42\u7ed3\u6784\u4e0d\u6b62\u662f\u6570\u7ec4\u8fd9\u4e48\u7b80\u5355\u3002\n\u5728JDK8\u4e4b\u524d\uff0cHashMap\u7684\u5e95\u5c42\u7ed3\u6784\u662f\u6570\u7ec4+\u94fe\u8868\u7684\u7ed3\u6784\uff0c\u6570\u7ec4\u7684\u6bcf\u4e00\u4e2a\u4f4d\u7f6e\u5b58\u653e\u7684\u662f\u4e00\u6761\u94fe\u8868\u3002\u4eceJDK8\u5f00\u59cb\uff0cHashMap\u7684\u5e95\u5c42\u7ed3\u6784\u5374\u53d8\u6210\u4e86\u6570\u7ec4+\u94fe\u8868+\u7ea2\u9ed1\u6811\u7684\u7ed3\u6784\uff0c\u57fa\u672c\u7ed3\u6784\u5982\u4e0b\u56fe\u6240\u793a\u3002\nJDK8\u7684HashMap\u5e95\u5c42\u7ed3\u6784\n\u5c5e\u6027\n\u5148\u6765\u770b\u770bHashMap\u4e2d\u7684\u4e00\u4e9b\u91cd\u8981\u5c5e\u6027\u3002\n\u5e38\u91cf\uff1a\n1.DEFAULT_INITIAL_CAPACITY\uff1a\u9ed8\u8ba4\u521d\u59cb\u5316\u5bb9\u91cf\uff0c\u53ef\u4ee5\u5b58\u50a8\u5143\u7d20(Entry)\u7684\u6570\u91cf\uff0c\u503c\u4e3a16\uff1b\n2.MAXIMUM_CAPACITY\uff1a\u6700\u5927\u5bb9\u91cf\uff0c\u5141\u8bb8\u8bbe\u7f6e\u7684\u6700\u5927\u5b58\u50a8\u6570\u91cf\uff0c\u503c\u4e3a2^30\uff1b\n3.DEFAULT_LOAD_FACTOR\uff1a\u9ed8\u8ba4\u8d1f\u8f7d\u56e0\u5b50\uff0c\u7528\u4e8e\u63a7\u5236\u6269\u5bb9\u7684\u9608\u503c\uff0c\u503c\u4e3a0.75\uff1b\n4.TREEIFY_THRESHOLD\uff1a\u94fe\u8868\u7ed3\u6784\u8f6c\u4e3a\u7ea2\u9ed1\u6811\u6811\u7684\u9608\u503c\uff0c\u4e3a8\uff0c\u5373\u5f53\u94fe\u8868\u7ed3\u6784\u957f\u5ea6\u8fbe\u52308\u65f6\uff0c\u8fdb\u884c\u7ed3\u6784\u8f6c\u5316\uff1b\n5.UNTREEIFY_THRESHOLD\uff1a\u6811\u7ed3\u6784\u8f6c\u4e3a\u94fe\u8868\u7684\u9608\u503c\uff0c\u4e3a6\uff0c\u5373\u5f53\u6811\u7684\u8282\u70b9\u6570\u8fbe\u52306\u65f6\uff0c\u8f6c\u5316\u4e3a\u94fe\u8868\uff1b\n6.MIN_TREEIFY_CAPACITY\uff1a\u6700\u5c0f\u6811\u5f62\u5316\u5bb9\u91cf\u9608\u503c\uff0c\u4e3a64\uff0c\u5373\u5f53HashMap\u4e2d\u7684\u5143\u7d20\u603b\u6570\u5927\u4e8e64\u65f6\uff0c\u624d\u5141\u8bb8\u5c06\u94fe\u8868\u8f6c\u6362\u6210\u7ea2\u9ed1\u6811\uff0c\u5426\u5219\uff0c\u82e5\u6876\u5185\u5143\u7d20\u592a\u591a\u65f6\uff0c\u5219\u76f4\u63a5\u6269\u5bb9\uff0c\u800c\u4e0d\u662f\u6811\u5f62\u5316\u3002\n\u53d8\u91cf\uff1a\n1.size\uff1aHashMap\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\uff1b\n2.table\uff1aNode\u7c7b\u578b\u6570\u7ec4\uff0c\u5b58\u653e\u5143\u7d20\u7684\u5bb9\u5668\uff1b\n3.entrySet\uff1aEntry\u7c7b\u578b\u7684Set\u96c6\u5408\uff1b\n4.threshold\uff1aHashMap\u7684\u6269\u5bb9\u9608\u503c\uff1b\n5.loadFactor\uff1aHashMap\u8d1f\u8f7d\u56e0\u5b50\u3002\n\u6570\u636e\u7ed3\u6784\uff1a\nMap.Entry&lt;K,V&gt;\uff1a\u662fMap\u63a5\u53e3\u4e0b\u7684\u4e00\u4e2a\u5185\u90e8\u63a5\u53e3\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9bgetKey\u3001getValue\u3001setValue\u7b49\u65b9\u6cd5\u3002\nNode&lt;K,V&gt;\uff1a\u662fHashMap\u4e0b\u7684\u4e00\u4e2a\u9759\u6001\u5185\u90e8\u7c7b\uff0c\u5b9e\u73b0\u4e86MapEntry\u63a5\u53e3\uff0c\u662f\u94fe\u8868\u7684\u8282\u70b9\u7c7b\u3002\u4e3b\u8981\u5305\u62ec\u4e24\u4e2a\u5e38\u91cf\u548c\u4e24\u4e2a\u53d8\u91cf\uff1a\n1.hash\uff1a\u5e38\u91cf\uff0ckey\u7684hash\u503c\uff0c\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u8d4b\u503c\uff1b\n2.key\uff1a\u5e38\u91cf\uff0c\u5b58\u50a8\u7684\u952e\u503c\u5bf9\u4e2d\u7684\u952e\uff0c\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u8d4b\u503c\uff1b\n3.value\uff1a\u53d8\u91cf\uff0c\u5b58\u50a8\u7684\u952e\u503c\u5bf9\u4e2d\u7684\u503c\uff1b\n4.next\uff1aNode\u7c7b\u578b\uff0c\u8868\u793a\u8fde\u63a5\u7684\u4e0b\u4e00\u4e2a\u8282\u70b9\u3002\nTreeNode&lt;K,V&gt;\uff1a\u94fe\u8868\u8f6c\u4e3a\u7ea2\u9ed1\u6811\u65f6\u7684\u8282\u70b9\u6570\u636e\u7c7b\u578b\uff0c\u662fHashMap\u7684\u9759\u6001\u5185\u90e8\u7c7b\u3002\n\u4ee5\u4e0a\u662fHashMap\u4e2d\u4e00\u4e9b\u5e38\u7528\u7684\u5c5e\u6027\u548c\u6570\u636e\u7ed3\u6784\uff0c\u6211\u4eec\u901a\u8fc7put\u548cget\u65b9\u6cd5\u6765\u770b\u4e00\u4e0b\u8fd9\u4e9b\u5c5e\u6027\u662f\u4f7f\u7528\u7684\u3002\nPUT\u65b9\u6cd5\n\u5148\u6765\u770b\u770b\u6e90\u7801\uff1a\npublic V put(K key, V value) {\n    return putVal(hash(key), key, value, false, true);\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2460\n}\nfinal V putVal(int hash, K key, V value, boolean onlyIfAbsent,\n               boolean evict) {\n    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; p; int n, i;\n    if ((tab = table) == null || (n = tab.length) == 0)\n        n = (tab = resize()).length;\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2461\n    if ((p = tab[i = (n - 1) &amp; hash]) == null)\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2462\n        tab[i] = newNode(hash, key, value, null);\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2463\n    else {\n        Node&lt;K,V&gt; e; K k;\n        if (p.hash == hash &amp;&amp;\n            ((k = p.key) == key || (key != null &amp;&amp; key.equals(k))))\n            e = p;\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2464\n        else if (p instanceof TreeNode)\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2465\n            e = ((TreeNode&lt;K,V&gt;)p).putTreeVal(this, tab, hash, key, value);\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2466\n        else {\n            for (int binCount = 0; ; ++binCount) {\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2467\n                if ((e = p.next) == null) {\n                    p.next = newNode(hash, key, value, null);//\u751f\u6210\u65b0\u8282\u70b9\uff0c\u63d2\u5165\u94fe\u8868\u5c3e\u90e8\n                    if (binCount &gt;= TREEIFY_THRESHOLD - 1) // -1 for 1st\n                        treeifyBin(tab, hash);\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2468\n                    break;\n                }\n                if (e.hash == hash &amp;&amp;\n                    ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))//\u53d1\u73b0\u76f8\u540ckey\u7684\u8282\u70b9\uff0c\u8df3\u51fa\u5faa\u73af\n                    break;\n                p = e;\n            }\n        }\n        if (e != null) { // existing mapping for key\n            V oldValue = e.value;\n            if (!onlyIfAbsent || oldValue == null)\n                e.value = value;\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2464//\u65b0\u503c\u8986\u76d6\u65e7\u503c\n            afterNodeAccess(e);\n            return oldValue;\n        }\n    }\n    ++modCount;\n    if (++size &gt; threshold)\n        resize();\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2469\n    afterNodeInsertion(evict);\n    return null;\n}\n\n\u6211\u5c06\u6e90\u7801\u7684\u91cd\u8981\u90e8\u5206\u505a\u4e0a\u4e86\u6807\u8bb0\uff0c\u901a\u8fc7\u4e00\u5f20\u6d41\u7a0b\u56fe\u6765\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u7684\u4e86\u89e3put\u65b9\u6cd5\u7684\u6d41\u7a0b\uff1a\nHashMap\u7684put\u65b9\u6cd5\u6267\u884c\u8fc7\u7a0b\nput\u6d41\u7a0b\u89e3\u8bfb\uff1a\n\u7b80\u8ff0\uff1a\n1.\u8ba1\u7b97key\u7684hash\u503c\uff0c\u627e\u5230\u5bf9\u5e94\u7684\u6570\u7ec4\u4f4d\u7f6e\uff0c\u53d6\u51fa\u8be5\u4f4d\u7f6e\u7684\u5143\u7d20\uff1b\n2.\u8be5\u5143\u7d20\u5982\u679c\u4e3anull\uff0c\u5219\u76f4\u63a5\u63d2\u5165Node\u8282\u70b9\u3002\u5982\u679c\u4e0d\u4e3anull\uff0c\u904d\u5386\u5f53\u524d\u7684\u94fe\u8868\u6216\u7ea2\u9ed1\u6811\uff1b\n3.\u5982\u679c\u6709\u67d0\u4e00\u4e2a\u8282\u70b9\u7684hash\u3001key\u548c\u8981put\u7684hash\u3001key\u76f8\u540c\uff0c\u5219\u7531\u63d2\u5165\u8282\u70b9\u66ff\u6362\u8be5\u8282\u70b9\uff1b\n4.\u5982\u679c\u904d\u5386\u7ed3\u675f\u53d1\u73b0\u6ca1\u6709\u76f8\u540c\u7684key\uff0c\u5219\u751f\u6210Node\u6216TreeNode\u63d2\u5165\u672b\u5c3e\uff1b\n5.\u5c06size++\uff0c\u5224\u65ad\u5f53\u524dsize\u662f\u5426\u8d85\u8fc7\u9608\u503c\uff0c\u5982\u679c\u8d85\u8fc7\u8fd8\u9700\u8fdb\u884c\u6269\u5bb9\u5904\u7406\u3002\n\u8be6\u7ec6\u8fc7\u7a0b(\u5e8f\u53f7\u4e0e\u6d41\u7a0b\u56fe\u5bf9\u5e94)\uff1a\n\u2460hash(Object key)\u65b9\u6cd5\uff1a\u6839\u636ekey\u503c\u8ba1\u7b97hash\u503c\u3002\n\u8ba1\u7b97\u65b9\u6cd5\uff1a(h = key.hashCode()) ^ (h &gt;&gt;&gt; 16)\n\u8fd9\u4e00\u8fc7\u7a0b\u4e3b\u8981\u662f\u901a\u8fc7\u8c03\u7528\u5e95\u5c42\u5b9e\u73b0\u7684hashCode()\u65b9\u6cd5\uff0c\u751f\u6210\u4e00\u4e2aint\u7c7b\u578b\u7684\u503c\uff0c\u7136\u540e\u4e0e\u8be5\u503c\u7684\u65e0\u7b26\u53f7\u53f3\u79fb16\u4f4d\u7684\u7ed3\u679c\u53d6\u5f02\u6216\uff0c\u6700\u7ec8\u5f97\u5230\u4e00\u4e2ahash\u503c\u3002\n\u4ec0\u4e48\u610f\u601d\u5462\uff1f\n\u4e00\u4e2aint\u7c7b\u578b\u7684\u503c\u662f\u4e8c\u8fdb\u523632\u4f4d\u7684\u3002\u6211\u4eec\u5047\u8bbe\u7ecf\u8fc7hashCode()\u65b9\u6cd5\u8ba1\u7b97\u5f97\u5230\u4e00\u4e2a32\u4f4d\u7684int\u7c7b\u578b\u7684\u503c:\n0110 1101 0011 0001 0001 0011 0011 0100\n\u5bf9\u8fd9\u4e2a\u503c\u8fdb\u884c\u65e0\u7b26\u53f7\u53f3\u79fb16\u4f4d\u53ef\u4ee5\u5f97\u5230:\n0000 0000 0000 0000 0110 1101 0011 0001\n\u4e24\u8005\u53d6\u5f02\u6216\uff0c\u5373\u5f53\u4e24\u8005\u540c\u4f4d\u503c\u4e0d\u540c\u65f6\uff0c\u7ed3\u679c\u4e3a1\uff0c\u53ef\u4ee5\u5f97\u5230:\n0110 1101 0011 0001 0001 1110 0000 0101\n\u8fd9\u5c31\u662f\u6700\u7ec8\u5f97\u5230\u7684hash\u503c\u3002\n\u2461\u5982\u679cHashMap\u4e2d\u7684\u6570\u7ec4tab\u4e3a\u7a7a\uff0c\u6211\u4eec\u9700\u8981\u901a\u8fc7resize()\u65b9\u6cd5\u5bf9\u6570\u7ec4\u8fdb\u884c\u6269\u5bb9\uff0c\u5982\u4f55\u6269\u5bb9\u6211\u4eec\u540e\u9762\u518d\u8bf4\u3002\n\u2462\u5982\u679cHashMap\u4e2d\u7684\u6570\u7ec4tab\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06\u2460\u4e2d\u5f97\u5230\u7684hash\u503c\u4e0e\u5f53\u524d\u6570\u7ec4\u957f\u5ea6\u51cf1\u505a&amp;\u8fd0\u7b97\u3002\n\u6211\u4eec\u5047\u8bbe\u5f53\u524dHashMap\u7684\u6570\u7ec4\u957f\u5ea6\u4e3a16\uff0c\u51cf\u53bb1\u5373\u4e3a15\uff0c\u8f6c\u4e3a\u4e8c\u8fdb\u5236\u4e3a1111\uff0c\u9ad8\u4f4d\u88650\u5f97\u5230:\n0000 0000 0000 0000 0000 0000 0000 1111\n\u4e0ehash\u503c\u505a&amp;\u8fd0\u7b97\u53ef\u4ee5\u5f97\u5230:\n0000 0000 0000 0000 0000 0000 0000 0101\n\u53ef\u4ee5\u5f97\u5230\u6570\u7ec4\u7684\u4f4d\u7f6e\u4e3a\u7b2c5\u4f4d\u3002\n\u6570\u7ec4\u4f4d\u7f6e\u8ba1\u7b97\u8fc7\u7a0b\n\u2463\u6211\u4eec\u5c06\u2461\u4e2d\u5f97\u5230\u7684\u6570\u7ec4\u4f4d\u7f6e\u7684\u5143\u7d20\u53d6\u51fa\uff0c\u5224\u65ad\u8be5\u4f4d\u7f6e\u7684\u5143\u7d20\u662f\u5426\u4e3a\u7a7a\u3002\u5982\u679c\u4e3a\u7a7a\uff0c\u90a3\u4e48\u76f4\u63a5\u5c06hash\u3001key\u3001value\u5c01\u88c5\u6210\u94fe\u8868\u8282\u70b9\u7c7b\u578b\uff0c\u63d2\u5165\u5f53\u524d\u7684\u6570\u7ec4\u4f4d\u7f6e\u3002\n\u2464\u5982\u679c\u8be5\u4f4d\u7f6e\u5143\u7d20\u4e0d\u4e3a\u7a7a\uff0c\u5219\u8981\u5c06\u8be5\u5143\u7d20\u7684hash\u3001key\u4e0e\u6211\u4eec\u8981\u63d2\u5165\u7684hash\u3001key\u4f5c\u6bd4\u8f83\u662f\u5426\u76f8\u540c\uff0c\u5982\u679c\u76f8\u540c\uff0c\u5219\u7528\u6211\u4eec\u8981\u63d2\u5165\u7684value\u8986\u76d6\u5f53\u524d\u4f4d\u7f6e\u7684value\u503c\u5373\u53ef\u3002\n\u2465\u5982\u679ckey\u7684\u6bd4\u8f83\u7ed3\u679c\u4e0d\u540c\uff0c\u6b64\u65f6\u9700\u8981\u5c06\u6211\u4eec\u8981\u63d2\u5165\u7684\u503c\u8fde\u63a5\u5728\u5f53\u524d\u6570\u7ec4\u4f4d\u7f6e\u4e0a\u5b58\u5728\u7684\u94fe\u8868\u6216\u7ea2\u9ed1\u6811\u4e0a\u4e86\u3002\u6240\u4ee5\u6211\u4eec\u8981\u5224\u65ad\u5f53\u524d\u6570\u7ec4\u4f4d\u7f6e\u4e0a\u7684\u6570\u636e\u7ed3\u6784\u662f\u7ea2\u9ed1\u6811\u8fd8\u662f\u94fe\u8868\u3002\n\u2466\u9996\u5148\u5224\u65ad\u8be5\u4f4d\u7f6e\u7684\u8282\u70b9\u662f\u5426\u4e3a\u7ea2\u9ed1\u6811\u8282\u70b9\uff0c\u5982\u679c\u662f\uff0c\u5219\u4ee5\u7ea2\u9ed1\u6811\u7684\u65b9\u5f0f\u63d2\u5165\u5f53\u524d\u8282\u70b9\u3002\n\u2467\u5982\u679c\u4e0d\u662f\uff0c\u5219\u8981\u4ee5\u94fe\u8868\u7684\u65b9\u5f0f\u51c6\u5907\u63d2\u5165\u3002\u9996\u5148\u904d\u5386\u5f53\u524d\u94fe\u8868\uff0c\u5982\u679c\u6709\u67d0\u4e2a\u8282\u70b9\u7684key\u4e0e\u63d2\u5165\u7684key\u76f8\u540c\uff0c\u5219\u8986\u76d6\u8be5\u8282\u70b9\uff1b\u5982\u679c\u6ca1\u6709\u76f8\u540ckey\u7684\u8282\u70b9\uff0c\u5219\u5728\u94fe\u8868\u5c3e\u90e8\u63d2\u5165\u65b0\u8282\u70b9\u3002\n\u2468\u5982\u679c\u63d2\u5165\u540e\u94fe\u8868\u957f\u5ea6&gt;=8\uff0c\u5219\u9700\u5c06\u94fe\u8868\u8f6c\u6362\u4e3a\u7ea2\u9ed1\u6811\u7ed3\u6784\u3002\n\u2469\u5982\u679c\u6b64\u65f6HashMap\u7684\u5143\u7d20\u603b\u6570\u5927\u4e8ethreshold\u65f6\uff0c\u4f1a\u89e6\u53d1\u6269\u5bb9\uff0cresize()\uff0c\u6269\u5bb9\u7ed3\u675f\u540e\uff0c\u6574\u4e2aput\u7684\u8fc7\u7a0b\u4e5f\u968f\u4e4b\u7ed3\u675f\u3002\u5982\u679c\u5143\u7d20\u603b\u6570\u4e0d\u5927\u4e8ethreshold\u65f6\uff0cput\u8fc7\u7a0b\u76f4\u63a5\u7ed3\u675f\u3002\nGET\u65b9\u6cd5\n\u6e90\u7801\uff1a\npublic V get(Object key) {\n    Node&lt;K,V&gt; e;\n    return (e = getNode(hash(key), key)) == null ? null : e.value;\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2460\n}\n\nfinal Node&lt;K,V&gt; getNode(int hash, Object key) {\n    Node&lt;K,V&gt;[] tab; Node&lt;K,V&gt; first, e; int n; K k;\n    if ((tab = table) != null &amp;&amp; (n = tab.length) &gt; 0 &amp;&amp;\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2461\n        (first = tab[(n - 1) &amp; hash]) != null) {\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2462\u2463\n        if (first.hash == hash &amp;&amp; // always check first node\n            ((k = first.key) == key || (key != null &amp;&amp; key.equals(k))))\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2464\n            return first;\n        if ((e = first.next) != null) {\n            if (first instanceof TreeNode)\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2465\n                return ((TreeNode&lt;K,V&gt;)first).getTreeNode(hash, key);\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u2466\n            do {\n                if (e.hash == hash &amp;&amp;\n                    ((k = e.key) == key || (key != null &amp;&amp; key.equals(k))))\u00b7\u00b7\u00b7\u00b7\u00b7\u2467\n                    return e;\n            } while ((e = e.next) != null);\n        }\n    }\n    return null;\n}\n\n\u6211\u4eec\u540c\u6837\u5c06\u6e90\u7801\u7684\u91cd\u8981\u90e8\u5206\u505a\u4e0a\u4e86\u6807\u8bb0\uff0c\u901a\u8fc7\u4e00\u5f20\u6d41\u7a0b\u56fe\u6765\u5e2e\u52a9\u6211\u4eec\u66f4\u597d\u7684\u4e86\u89e3get\u65b9\u6cd5\u7684\u6d41\u7a0b\uff1a\nHashMap\u7684get\u65b9\u6cd5\u6267\u884c\u8fc7\u7a0b\nget\u6d41\u7a0b\u89e3\u8bfb\uff1a\nget\u65b9\u6cd5\u7684\u6d41\u7a0b\u8981\u6bd4put\u65b9\u6cd5\u7684\u6d41\u7a0b\u7b80\u5355\u8bb8\u591a\u3002\n\u2460\u7b2c\u4e00\u6b65\u548cput\u65b9\u6cd5\u4e00\u6837\uff0c\u83b7\u53d6key\u7684hash\u503c\uff1b\n\u2461\u5224\u65ad\u6570\u7ec4table\u662f\u5426\u4e3a\u7a7a\uff1b\n\u2462\u5982\u679c\u6570\u7ec4\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56denull\uff1b\u5982\u679c\u6570\u7ec4\u4e0d\u4e3a\u7a7a\uff0c\u5219\u5c06hash\u503c\u4e0e\u6570\u7ec4\u957f\u5ea6\u51cf1\u505a&\u8fd0\u7b97\u786e\u5b9a\u6570\u7ec4\u4f4d\u7f6e;\n\u2463\u53d6\u51fa\u8be5\u4f4d\u7f6e\u7684\u8282\u70b9\u5224\u65ad\u662f\u5426\u4e3a\u7a7a\uff0c\u5982\u679c\u4e3a\u7a7a\uff0c\u76f4\u63a5\u8fd4\u56denull\uff0c\u7ed3\u675f\u67e5\u627e\uff1b\n\u2464\u5982\u679c\u4e0d\u4e3a\u7a7a\uff0c\u5224\u65ad\u5f53\u524d\u8282\u70b9\u7684hash\u3001key\u4e0e\u5f85\u67e5\u627e\u7684hash\u3001key\u662f\u5426\u76f8\u7b49\uff0c\u5982\u679c\u76f8\u7b49\u8fd4\u56de\u8be5\u8282\u70b9Value\uff0c\u67e5\u627e\u7ed3\u675f\uff1b\u5982\u679c\u4e0d\u76f8\u540c\u5219\u5224\u65ad\u5f53\u524d\u8282\u70b9\u7684\u540e\u7ee7\u8282\u70b9\u662f\u5426\u5b58\u5728\uff0c\u4e0d\u5b58\u5728\u5219\u76f4\u63a5\u8fd4\u56denull\uff0c\u7ed3\u675f\u67e5\u627e\uff1b\n\u2465\u82e5\u5b58\u5728\u5219\u9700\u5224\u65ad\u8282\u70b9\u7c7b\u578b\u5c5e\u4e8e\u94fe\u8868\u8282\u70b9\u8fd8\u662f\u7ea2\u9ed1\u6811\u8282\u70b9\uff1b\n\u2466\u5982\u679c\u662f\u7ea2\u9ed1\u6811\u8282\u70b9\u5219\u8c03\u7528\u7ea2\u9ed1\u6811\u67e5\u627e\u65b9\u6cd5\uff1b\n\u2467\u5982\u679c\u662f\u94fe\u8868\u8282\u70b9\uff0c\u5219\u6574\u6761\u904d\u5386\u94fe\u8868\uff0c\u627e\u5230key\u548chash\u503c\u76f8\u540c\u7684\u8282\u70b9\u5219\u8fd4\u56deValue\uff0c\u6ca1\u6709\u627e\u5230\u5219\u8fd4\u56denull\u3002\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}]}, {"title": "Java8 Stream\u68b3\u7406", "date": "2021-03-30T11:25:00-00.00", "path": "/Xuxx_Blogs/archives/bj45/", "text": "1. Streams API \u9762\u9762\u89c2\n1.1 Streams API \u80fd\u505a\u4ec0\u4e48\nStreams API \u662f\u5bf9 java \u4e2d\u96c6\u5408\u5bf9\u8c61\u529f\u80fd\u7684\u589e\u5f3a\uff0c\u4ed6\u53ef\u4ee5\u8ba9\u96c6\u5408\u7684\u64cd\u4f5c\u53d8\u5f97\u66f4\u52a0\u4fbf\u5229\u3001\u9ad8\u6548\n\u4ed6\u4f1a\u81ea\u52a8\u901a\u8fc7\u5e76\u53d1\u6267\u884c\u7684\u65b9\u5f0f\u4f18\u5316\u5927\u6279\u91cf\u6570\u636e\u96c6\u5408\u7684\u805a\u5408\u64cd\u4f5c\uff0c\u540c\u65f6\uff0c\u7ed3\u5408\u53e6\u4e00\u4e2a java8 \u7684\u65b0\u7279\u6027 -- Lambda \u8868\u8fbe\u5f0f\uff0c\u53ef\u4ee5\u6781\u5927\u5730\u63d0\u5347\u7f16\u7a0b\u6548\u7387\uff0c\u589e\u52a0\u4ee3\u7801\u53ef\u8bfb\u6027\n\u57fa\u4e8e jvm \u5e95\u5c42\u7684\u786c\u4ef6\u4f18\u5316\uff0cstreams api \u53ef\u4ee5\u5341\u5206\u65b9\u4fbf\u7684\u5229\u7528\u591a\u6838\u6027\u80fd\uff0c\u8fbe\u5230\u5e76\u53d1\u7f16\u7a0b\u7684\u6548\u679c\uff0c\u4f20\u7edf\u7684\u5e76\u53d1\u7f16\u7a0b\u5f80\u5f80\u56e0\u4e3a\u5176\u590d\u6742\u6027\u5341\u5206\u5bb9\u6613\u51fa\u9519\uff0c\u4f46\u4f7f\u7528 streams api \u5219\u65e0\u9700\u62c5\u5fc3\u8fd9\u4e2a\u95ee\u9898\n1.2 Stream \u662f\u4ec0\u4e48\nstream \u987e\u540d\u601d\u4e49\uff0c\u5c31\u662f\u201c\u6d41\u201d\uff0c\u8fd9\u4e2a\u540d\u5b57\u7a81\u51fa\u4e86\u96c6\u5408\u5bf9\u8c61\u6d41\u5f0f\u5904\u7406\u7684\u542b\u4e49\n\u8bf4\u5230\u201c\u6d41\u5f0f\u5904\u7406\u201d\uff0c\u8bfb\u8005\u670b\u53cb\u4eec\u80af\u5b9a\u5e76\u4e0d\u964c\u751f\uff0c\u5728 java \u4e2d\uff0c\u8fed\u4ee3\u5668\u5c31\u662f\u4e00\u79cd\u901a\u7528\u7684\u6d41\u5f0f\u5904\u7406\u624b\u6bb5\uff0cstream \u53ef\u4ee5\u770b\u6210\u662f\u8fed\u4ee3\u5668\u7684\u9ad8\u7ea7\u7248\u672c\uff0c\u4ed6\u4e0d\u4fdd\u5b58\u6570\u636e\uff0c\u4ed6\u53ea\u8d1f\u8d23\u6267\u884c\u9884\u5b9a\u7684\u7b97\u6cd5\u548c\u8ba1\u7b97\u8fc7\u7a0b\uff0c\u56e0\u6b64 stream \u5f88\u50cf\u662f\u8fed\u4ee3\u5668\u7684\u51fd\u6570\u5f0f\u7f16\u7a0b\u7248\u672c\n\u548c\u8fed\u4ee3\u5668\u4e00\u6837\uff0cstream \u4e5f\u662f\u5bf9\u96c6\u5408\u5355\u5411\u904d\u5386\u4e00\u6b21\uff0c\u5e76\u4e14\u4e0d\u53ef\u4ee5\u56de\u5934\u5f80\u590d\uff0c\u4f46\u4e0d\u540c\u7684\u662f\uff0cstream \u652f\u6301\u4e86\u8fd9\u4e2a\u8fc7\u7a0b\u7684\u81ea\u52a8\u5e76\u53d1\u6267\u884c\uff0c\u5e76\u4e14\u5c06\u904d\u5386\u8fc7\u7a0b\u53d8\u5f97\u66f4\u52a0\u7b80\u6d01\u6613\u8bfb\n1.3 Stream \u7684\u6784\u6210\n\u4e00\u4e2a\u6d41\u7684\u4f7f\u7528\u901a\u5e38\u5305\u62ec\u4e09\u4e2a\u57fa\u672c\u6b65\u9aa4\uff1a\n\n\u83b7\u53d6\u6570\u636e\u6e90\n\u6570\u636e\u8f6c\u6362 -- Intermediate\n\u6267\u884c\u64cd\u4f5c -- Terminal\n\n\u5176\u4e2d\uff0c\u6570\u636e\u8f6c\u6362\u64cd\u4f5c\u662f\u4ee5\u6570\u636e\u6e90\u4e3a\u8f93\u5165\uff0c\u8fdb\u884c\u4e00\u4e9b\u64cd\u4f5c\u540e\u8fd4\u56de\u4e00\u4e2a\u65b0\u7684\u6d41\u8fdb\u884c\u63a5\u4e0b\u6765\u64cd\u4f5c\uff0c\u6570\u636e\u8f6c\u6362\u64cd\u4f5c\u53ef\u4ee5\u591a\u6b21\u8fdb\u884c\uff0c\u4ece\u800c\u8ba9\u6574\u4e2a\u6d41\u53d8\u6210\u4e00\u4e2a\u6d41\u7ba1\u9053\uff1a\n\n\u6700\u7ec8\uff0c\u4e00\u4e2a\u6d41\u53ea\u80fd\u6709\u4e00\u4e2a terminal \u6267\u884c\u64cd\u4f5c\uff0c\u4f5c\u4e3a\u6d41\u7684\u7ec8\u7ed3\uff0c\u4ed6\u751f\u6210\u4e00\u4e2a\u7ed3\u679c\u6216\u4e00\u4e2a side effect\n\u4e8b\u5b9e\u4e0a\uff0c\u771f\u6b63\u89e6\u53d1\u6d41\u7684\u904d\u5386\u64cd\u4f5c\u7684\u5c31\u662f terminal \u64cd\u4f5c\u7684\u6267\u884c\n\u9664\u6b64\u4ee5\u5916\uff0c\u5982\u679c\u6d41\u7684\u8f93\u5165\u662f\u4e00\u4e2a\u65e0\u9650\u5927\u7684\u96c6\u5408\uff0c\u90a3\u4e48\u8fd8\u5fc5\u987b\u5177\u6709 short-circuiting \u64cd\u4f5c\uff0c\u4ed6\u6709\u4e24\u4e2a\u4f5c\u7528\uff1a\n\n\u5bf9\u4e8e\u4e00\u4e2a intermediate \u64cd\u4f5c\uff0c\u5982\u679c\u5b83\u63a5\u53d7\u7684\u662f\u4e00\u4e2a\u65e0\u9650\u5927\uff08infinite/unbounded\uff09\u7684 Stream\uff0c\u4f46\u8fd4\u56de\u4e00\u4e2a\u6709\u9650\u7684\u65b0 Stream\n\u5bf9\u4e8e\u4e00\u4e2a terminal \u64cd\u4f5c\uff0c\u5982\u679c\u5b83\u63a5\u53d7\u7684\u662f\u4e00\u4e2a\u65e0\u9650\u5927\u7684 Stream\uff0c\u4f46\u80fd\u5728\u6709\u9650\u7684\u65f6\u95f4\u8ba1\u7b97\u51fa\u7ed3\u679c \n\n2. \u6d41\u7684\u521b\u5efa\n\u6d41\u7684\u521b\u5efa\u65b9\u5f0f\u6709\u5f88\u591a\u79cd\uff1a\n2.1 \u4ece Collection \u548c\u6570\u7ec4\u521b\u5efa\u6d41\n\nCollection.stream()\nCollection.parallelStream()\nArrays.stream(T array)\nStream.of(T array)\n\n\n\u989d\u5916\u4e00\u63d0\uff0cjava8 \u9664\u4e86\u901a\u7528\u7684 Stream \u5916\uff0c\u8fd8\u4e3a\u57fa\u672c\u6570\u503c\u7c7b\u578b\u63d0\u4f9b\u4e86 IntStream\u3001LongStream\u3001DoubleStream \u4e09\u79cd\u5305\u88c5\u7c7b\u578b\u53ef\u4f9b\u4f7f\u7528\n\n2.2 \u901a\u8fc7 BufferedReader \u8bfb\u53d6\n\njava.io.BufferedReader.lines()\n\n2.3 \u901a\u8fc7\u9759\u6001\u5de5\u5382\u751f\u6210\u6d41\n\njava.util.stream.IntStream.range()\njava.nio.file.Files.walk()\n\n2.4 \u5176\u4ed6\u521b\u5efa\u65b9\u5f0f\n\n\u81ea\u5b9a\u4e49\u6784\u5efa -- java.util.Spliterator\n\u968f\u673a\u6570\u6d41 -- Random.ints()\n\u4f4d\u64cd\u4f5c\u6d41 -- BitSet.stream()\n\u5b57\u7b26\u6d41 -- Pattern.splitAsStream(java.lang.CharSequence)\njar \u6587\u4ef6\u5185\u5bb9\u6d41 -- JarFile.stream()\n\n3. \u6d41\u7684\u64cd\u4f5c\n\u4e0a\u9762\u5df2\u7ecf\u63d0\u5230\uff0c\u6d41\u5171\u6709\u4e09\u79cd\u64cd\u4f5c\uff1a\n\nIntermediate \u64cd\u4f5c\nShort-Circuiting \u64cd\u4f5c\nTerminal \u64cd\u4f5c\n\n\u4e0b\u9762\u5c31\u6765\u4e00\u4e00\u4ecb\u7ecd\u4e00\u4e0b\u8fd9\u4e09\u5927\u7c7b\u64cd\u4f5c\u4e2d\u5177\u4f53\u7684\u90a3\u4e9b\u64cd\u4f5c\n3.1 Intermediate \u64cd\u4f5c\nIntermediate \u64cd\u4f5c\u7684\u8f93\u5165\u662f\u5df2\u7ecf\u521b\u5efa\u597d\u7684\u6d41\uff0c\u8f93\u51fa\u662f\u8fdb\u884c\u8f6c\u6362\u540e\u7684\u6d41\uff0c\u4e3b\u8981\u6709\u4ee5\u4e0b\u64cd\u4f5c\uff1a\n\nmap -- \u5c06\u8f93\u5165\u6d41\u8f6c\u6362\u4e3a\u53e6\u4e00\u4e2a\u6d41\npublic class Map {\n\n    /**\n     * map\uff0c\u53ef\u4ee5\u770b\u5230 map \u64cd\u4f5c\u7b26\u8981\u6c42\u8f93\u5165\u4e00\u4e2aFunction\u7684\u51fd\u6570\u662f\u63a5\u53e3\u5b9e\u4f8b\uff0c\u529f\u80fd\u662f\u5c06T\u7c7b\u578b\u8f6c\u6362\u6210R\u7c7b\u578b\u7684\u3002\n     */\n    public static void main(String[] args) {\n        Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                //\u8f6c\u6210\u5355\u8bcd\u7684\u957f\u5ea6 int\n                .map(e -&gt; e.length())\n                //\u8f93\u51fa\n                //.forEach(e -&gt; System.out.println(e));\n                //\u65b9\u6cd5\u5f15\u7528\n                .forEach(System.out::println);\n    }\n}\n\n\nmapToInt/mapToLong -- \u5c06\u8f6c\u6362\u7ed3\u679c\u7684\u539f\u59cb\u6570\u503c\u81ea\u52a8\u5305\u88c5\uff0c\u8f6c\u6362\u540e\u751f\u6210\u4e00\u4e2a IntStream/LongStream\npublic class MapToInt {\n\n    /**\n     * mapToInt \u5c06\u6570\u636e\u6d41\u4e2d\u5f97\u5143\u7d20\u8f6c\u6210Int\uff0c\u8fd9\u9650\u5b9a\u4e86\u8f6c\u6362\u7684\u7c7b\u578bInt\uff0c\u6700\u7ec8\u4ea7\u751f\u7684\u6d41\u4e3aIntStream\uff0c\u53ca\u7ed3\u679c\u53ea\u80fd\u8f6c\u5316\u6210int\u3002\n     * mapToLong\u3001mapToDouble\u4e0e mapToInt \u7c7b\u4f3c\n     */\n    public static void main(String[] args) {\n        Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                //\u8f6c\u6210int\n                .mapToInt(String::length)\n                .forEach(System.out::println);\n\n        Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                //\u8f6c\u6210long ,\u672c\u8d28\u4e0a\u662fint \u4f46\u662f\u5b58\u5728\u7c7b\u578b\u81ea\u52a8\u8f6c\u6362\n                .mapToLong(String::length)\n                .forEach(System.out::println);\n\n        Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                //\u8f6c\u6210Double \uff0c\u81ea\u52a8\u7c7b\u578b\u8f6c\u6362\u6210Double\n                .mapToDouble(String::length)\n                .forEach(System.out::println);\n    }\n}\n\n\nflatMap -- \u8f6c\u6362\u540e\u751f\u6210\u591a\u4e8e\u539f\u96c6\u5408\u6570\u91cf\u7684\u65b0\u5143\u7d20\u6d41\npublic class FlatMap {\n\n    /**\n     * flatmap \u4f5c\u7528\u5c31\u662f\u5c06\u5143\u7d20\u62cd\u5e73\u62cd\u6241 \uff0c\u5c06\u62cd\u6241\u7684\u5143\u7d20\u91cd\u65b0\u7ec4\u6210Stream\uff0c\u5e76\u5c06\u8fd9\u4e9bStream \u4e32\u884c\u5408\u5e76\u6210\u4e00\u6761Stream\n     * flatmapToInt\u3001flatmapToLong\u3001flatmapToDouble \u8ddfflatMap \u90fd\u7c7b\u4f3c\u7684\uff0c\u53ea\u662f\u7c7b\u578b\u88ab\u9650\u5b9a\u4e86\n     */\n    public static void main(String[] args) {\n        Stream.of(&quot;a-b-c-d&quot;, &quot;e-f-i-g-h&quot;)\n                .flatMap(e -&gt; Stream.of(e.split(&quot;-&quot;)))\n                .forEach(System.out::println);\n\n    }\n}\n\n\nfilter -- \u8fc7\u6ee4\u53ea\u4fdd\u7559\u7b26\u5408\u6761\u4ef6\u7684\u5143\u7d20\npublic class Filter {\n\n    /**\n     * filter \u5bf9\u67d0\u4e9b\u5143\u7d20\u8fdb\u884c\u8fc7\u6ee4\uff0c\u4e0d\u7b26\u5408\u7b5b\u9009\u6761\u4ef6\u7684\u5c06\u65e0\u6cd5\u8fdb\u5165\u6d41\u7684\u4e0b\u6e38\n     */\n    public static void main(String[] args) {\n        Stream.of(1, 2, 3, 1, 2, 5, 6, 7, 8, 0, 0, 1, 2, 3, 1)\n                //\u8fc7\u6ee4\u5c0f\u4e8e5\u7684\n                .filter(e -&gt; e &gt;= 5)\n                .forEach(System.out::println);\n    }\n}\n\n\ndistinct -- \u53bb\u91cd\npublic class Distinct {\n\n    /**\n     * distinct \u5c06\u6839\u636eequals \u65b9\u6cd5\u8fdb\u884c\u5224\u65ad\uff0c\u5982\u679c\u8981\u5bf9\u81ea\u5df1\u81ea\u5b9a\u4e49\u7684bean\u53bb\u91cd\uff0c\u5219\u9700\u8981\u91cd\u5199equals\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u4e0d\u662f\u552f\u4e00\u7684\u65b9\u6cd5\u3002\n     */\n    public static void main(String[] args) {\n        Stream.of(1, 1, 2, 3, 1, 2, 5, 6, 7, 8, 0, 0, 1, 2, 3, 1)\n                //\u53bb\u91cd\n                .distinct()\n                .forEach(System.out::println);\n    }\n}\n\n\nsorted -- \u6392\u5e8f\npublic class Sorted {\n\n    /**\n     * sorted \u6392\u5e8f \u5e95\u5c42\u4f9d\u8d56Comparable \u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5b9a\u4e49\u6bd4\u8f83\u5668\n     */\n    public static void main(String[] args) {\n        Stream.of(2, 1, 3, 6, 4, 9, 6, 8, 0)\n                .sorted()\n                .forEach(System.out::println);\n\n        //\u8fd9\u91cc\u4f7f\u7528\u81ea\u5b9a\u4e49\u6bd4\u8f83\uff0c\u5f53\u7136User\u53ef\u4ee5\u5b9e\u73b0Comparable \u63a5\u53e3\n        User x = new User(&quot;x&quot;, 11);\n        User y = new User(&quot;y&quot;, 12);\n        User w = new User(&quot;w&quot;, 10);\n\n        Stream.of(w, x, y)\n                .sorted((e1, e2) -&gt; e1.age &gt; e2.age ? 1 : e1.age == e2.age ? 0 : -1)\n                .forEach(e -&gt; System.out.println(e.toString()));\n\n    }\n}\n\n\npeek -- \u6267\u884c\u4e00\u4e2a\u65e0\u8fd4\u56de\u7684\u64cd\u4f5c\uff0c\u4e0d\u5f71\u54cd\u539f\u6765\u7684\u6d41\npublic class Peek {\n\n    /**\n     * peek \u6311\u9009 \uff0c\u5c06\u5143\u7d20\u6311\u9009\u51fa\u6765\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u63d0\u524d\u6d88\u8d39\n     */\n    public static void main(String[] args) {\n        User w = new User(&quot;w&quot;, 10);\n        User x = new User(&quot;x&quot;, 11);\n        User y = new User(&quot;y&quot;, 12);\n\n        Stream.of(w, x, y)\n                //\u91cd\u65b0\u8bbe\u7f6e\u540d\u5b57 \u53d8\u6210 \u5e74\u9f84+\u540d\u5b57\n                .peek(e -&gt; e.setName(e.getAge() + e.getName()))\n                .forEach(e -&gt; System.out.println(e.toString()));\n    }\n\n}\n\n\nlimit -- \u4fdd\u7559\u6d41\u7684\u524d N \u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u9650\u5143\u7d20\u7684\u6d41\uff0c\u4f5c\u4e3a Short-circuiting \u64cd\u4f5c\npublic class Limit {\n\n    /**\n     * limit \u9650\u5236\u5143\u7d20\u7684\u4e2a\u6570\uff0c\u53ea\u9700\u4f20\u5165 long \u7c7b\u578b \u8868\u793a\u9650\u5236\u7684\u6700\u5927\u6570\n     */\n    public static void main(String[] args) {\n        Stream.of(1, 2, 3, 4, 5, 6)\n                //\u9650\u5236\u4e09\u4e2a\n                .limit(3)\n                //\u5c06\u8f93\u51fa \u524d\u4e09\u4e2a 1\uff0c2\uff0c3\n                .forEach(System.out::println);\n    }\n}\n\n\nskip -- \u8df3\u8fc7\u6d41\u7684\u524d N \u4e2a\u5143\u7d20\npublic class Skip {\n\n    /**\n     * skip \u8df3\u8fc7 \u5143\u7d20\n     */\n    public static void main(String[] args) {\n        Stream.of(1, 2, 3, 4, 5, 6, 7, 8, 9)\n                //\u8df3\u8fc7\u524d\u56db\u4e2a\n                .skip(4)\n                //\u8f93\u51fa\u7684\u7ed3\u679c\u5e94\u8be5\u53ea\u67095\uff0c6\uff0c7\uff0c8\uff0c9\n                .forEach(System.out::println);\n    }\n}\n\n\nparallel -- \u8ba9\u6d41\u5e76\u884c\u5316\n\nsequential -- \u8ba9\u6d41\u4e32\u884c\u5316\n\nunordered -- \u5220\u9664\u6d41\u7684\u6709\u5e8f\u6807\u8bb0\uff0c\u4e0d\u5f3a\u5236\u8ba9\u6d41\u6709\u5e8f\n\n\n3.2 Terminal \u64cd\u4f5c\n\u5728\u4e00\u7cfb\u5217 Intermediate \u64cd\u4f5c\u4e4b\u540e\uff0c\u4e00\u5b9a\u9700\u8981\u4e00\u4e2a\u7ec8\u6781\u64cd\u4f5c\uff0c\u6765\u5bf9\u6d41\u4e2d\u7684\u6570\u636e\u505a\u6700\u7ec8\u7684\u5904\u7406\uff0c\u8fd9\u4e2a\u201c\u7ec8\u6781\u64cd\u4f5c\u201d\u5c31\u662f Terminal \u64cd\u4f5c\uff0c\u5b83\u5305\u62ec\uff1a\n\nforEach -- \u5bf9\u6d41\u4e2d\u6bcf\u4e2a\u5143\u7d20\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\npublic class ForEach {\n\n    /**\n     * forEach \u5bf9\u6bcf\u4e2a\u6570\u636e\u904d\u5386\u8fed\u4ee3\n     * forEachOrdered \u9002\u7528\u7528\u4e8e\u5e76\u884c\u6d41\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u8fed\u4ee3\uff0c\u80fd\u4fdd\u8bc1\u8fed\u4ee3\u7684\u6709\u5e8f\u6027\n     */\n    public static void main(String[] args) {\n        Stream.of(0, 2, 6, 5, 4, 9, 8, -1)\n                //\u8ba9\u6d41\u5e76\u884c\u5316  || sequential -- \u8ba9\u6d41\u4e32\u884c\u5316 || unordered -- \u5220\u9664\u6d41\u7684\u6709\u5e8f\u6807\u8bb0\uff0c\u4e0d\u5f3a\u5236\u8ba9\u6d41\u6709\u5e8f\n                .parallel()\n                .forEachOrdered(e -&gt; {\n                    System.out.println(Thread.currentThread().getName() + &quot;: &quot; + e);\n                });\n    }\n}\n\n\nforEachOrdered -- \u5bf9\u6d41\u4e2d\u6bcf\u4e2a\u5143\u7d20\u6709\u5e8f\u5730\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\n\ntoArray -- \u5c06\u6d41\u8f6c\u6362\u4e3a\u6570\u7ec4\u8fd4\u56de\npublic class ToArray {\n\n    /**\n     * toArray \u8f6c\u6210\u6570\u7ec4\uff0c\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5b9a\u4e49\u6570\u7ec4\u751f\u6210\u5668\n     */\n    public static void main(String[] args) {\n        Object[] objects = Stream.of(0, 2, 6, 5, 4, 9, 8, -1)\n                .toArray();\n\n        for (Object object : objects) {\n            System.out.println(object);\n        }\n    }\n}\n\n\nreduce -- \u5c06\u6d41\u4e2d\u6240\u6709\u6570\u636e\u6c47\u603b\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u8fd4\u56de\u4e00\u4e2a\u503c\npublic class Reduce {\n\n    /**\n     * reduce \u662f\u4e00\u4e2a\u89c4\u7ea6\u64cd\u4f5c\uff0c\u6240\u6709\u7684\u5143\u7d20\u5f52\u7ea6\u6210\u4e00\u4e2a\uff0c\u6bd4\u5982\u5bf9\u6240\u6709\u5143\u7d20\u6c42\u548c\uff0c\u76f8\u4e58\u7b49\u3002\n     */\n    public static void main(String[] args) {\n        int sum = Stream.of(0, 9, 8, 4, 5, 6, -1)\n                //.reduce(0, (e1, e2) -&gt; e1 + e2);\n                .reduce(0, Integer::sum);\n        System.out.println(sum);\n    }\n}\n\n\ncollect -- \u5c06\u6d41\u4e2d\u6240\u6709\u53c2\u6570\u6c47\u603b\u4e3a\u4e00\u4e2a\u96c6\u5408\u5e76\u8fd4\u56de\npublic class Collect {\n\n    /**\n     * collect \u6536\u96c6\uff0c\u4f7f\u7528\u7cfb\u7edf\u63d0\u4f9b\u7684\u6536\u96c6\u5668\u53ef\u4ee5\u5c06\u6700\u7ec8\u7684\u6570\u636e\u6d41\u6536\u96c6\u5230List\uff0cSet\uff0cMap\u7b49\u5bb9\u5668\u4e2d\u3002\n     */\n    public static void main(String[] args) {\n        Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                //set \u5bb9\u5668\n                .collect(Collectors.toSet())\n                //forEach\u4e0d\u4ec5\u4ec5\u662f\u662fStream\u4e2d\u7684\u64cd\u4f5c\u7b26\u8fd8\u662f\u5404\u79cd\u96c6\u5408\u4e2d\u5f97\u4e00\u4e2a\u8bed\u6cd5\u7cd6\n                .forEach(System.out::println);\n\n        //\u6536\u96c6\u7684\u7ed3\u679c\u5c31\u662fset\n        Set&lt;String&gt; stringSet = Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                .collect(Collectors.toSet());\n        //set\u7684\u8bed\u6cd5\u7cd6forEach\n        stringSet.forEach(System.out::println);\n    }\n}\n\n\nmin -- \u6c42\u6d41\u4e2d\u6570\u636e\u6700\u5c0f\u503c\npublic class Min {\n\n    /**\n     * min \u6700\u5c0f\u7684\u4e00\u4e2a\uff0c\u4f20\u5165\u6bd4\u8f83\u5668\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709(\u5982\u679c\u6570\u636e\u6d41\u4e3a\u7a7a)\n     */\n    public static void main(String[] args) {\n        Optional&lt;Integer&gt; integerOptional = Stream.of(0, 9, 8, 4, 5, 6, -1)\n                //.min((e1, e2) -&gt; e1.compareTo(e2));\n                .min(Integer::compareTo);\n        integerOptional.ifPresent(System.out::println);\n    }\n}\n\n\nmax -- \u6c42\u6d41\u4e2d\u6570\u636e\u6700\u5927\u503c\npublic class Max {\n\n    /**\n     * max \u5143\u7d20\u4e2d\u6700\u5927\u7684\uff0c\u9700\u8981\u4f20\u5165\u6bd4\u8f83\u5668\uff0c\u4e5f\u53ef\u80fd\u6ca1\u6709(\u5982\u679c\u6570\u636e\u6d41\u4e3a\u7a7a)\n     */\n    public static void main(String[] args) {\n        Optional&lt;Integer&gt; integerOptional = Stream.of(0, 9, 8, 4, 5, 6, -1)\n                //.max((e1, e2) -&gt; e1.compareTo(e2));\n                .max(Integer::compareTo);\n        integerOptional.ifPresent(System.out::println);\n    }\n}\n\n\ncount -- \u8ba1\u7b97\u6d41\u4e2d\u7684\u6570\u636e\u91cf\npublic class Count {\n\n    /**\n     * count \u7edf\u8ba1\u6570\u636e\u6d41\u4e2d\u7684\u5143\u7d20\u4e2a\u6570\uff0c\u8fd4\u56de\u7684\u662flong \u7c7b\u578b\n     */\n    public static void main(String[] args) {\n\n        long count = Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                .count();\n\n        System.out.println(count);\n    }\n}\n\n\nanyMatch -- \u6709\u4efb\u4f55\u5143\u7d20\u547d\u4e2d\u89c4\u5219\u5219\u8fd4\u56de true\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u9650\u5143\u7d20\u7684\u6d41\uff0c\u4f5c\u4e3a Short-circuiting \u64cd\u4f5c\n\nallMatch -- \u5168\u90e8\u5143\u7d20\u5747\u547d\u4e2d\u89c4\u5219\u65f6\u8fd4\u56de true\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u9650\u5143\u7d20\u7684\u6d41\uff0c\u4f5c\u4e3a Short-circuiting \u64cd\u4f5c\n\nnoneMatch -- \u5168\u90e8\u5143\u7d20\u5747\u672a\u547d\u4e2d\u89c4\u5219\u65f6\u8fd4\u56de true\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u9650\u5143\u7d20\u7684\u6d41\uff0c\u4f5c\u4e3a Short-circuiting \u64cd\u4f5c\npublic class NoneMatch {\n\n    /**\n     * noneMatch \u6570\u636e\u6d41\u4e2d\u5f97\u6ca1\u6709\u4e00\u4e2a\u5143\u7d20\u4e0e\u6761\u4ef6\u5339\u914d\u7684\n     * allMatch\u548canyMatch\u4e00\u4e2a\u662f\u5168\u5339\u914d\uff0c\u4e00\u4e2a\u662f\u4efb\u610f\u5339\u914d\uff0c\u548cnoneMatch\u7c7b\u4f3c\n     */\n    public static void main(String[] args) {\n        boolean result = Stream.of(&quot;aa&quot;, &quot;bb&quot;, &quot;cc&quot;, &quot;aa&quot;)\n                //\u8fd9\u91cc\u7684\u4f5c\u7528\u662f\u662f\u5224\u65ad\u6570\u636e\u6d41\u4e2d \u4e00\u4e2a\u90fd\u6ca1\u6709\u4e0e &quot;aa&quot; \u76f8\u7b49\u5143\u7d20 \uff0c\u4f46\u662f\u6d41\u4e2d\u5b58\u5728 &quot;aa&quot; \uff0c\u6240\u4ee5\u6700\u7ec8\u7ed3\u679c\u5e94\u8be5\u662ffalse\n                .noneMatch(e -&gt; e.equals(&quot;aa&quot;));\n        System.out.println(result);\n    }\n}\n\n\nfindFirst -- \u8fd4\u56de\u9996\u4e2a\u547d\u4e2d\u89c4\u5219\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u9650\u5143\u7d20\u7684\u6d41\uff0c\u4f5c\u4e3a Short-circuiting \u64cd\u4f5c\npublic class FindFirst {\n\n    /**\n     * findFirst \u83b7\u53d6\u6d41\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\n     */\n    public static void main(String[] args) {\n        Optional&lt;String&gt; stringOptional = Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                .findFirst();\n        stringOptional.ifPresent(System.out::println);\n    }\n}\n\n\nfindAny -- \u8fd4\u56de\u6240\u6709\u547d\u4e2d\u89c4\u5219\u7684\u5143\u7d20\uff0c\u53ef\u4ee5\u7528\u4e8e\u65e0\u9650\u5143\u7d20\u7684\u6d41\uff0c\u4f5c\u4e3a Short-circuiting \u64cd\u4f5c\npublic class FindAny {\n\n    /**\n     * findAny \u83b7\u53d6\u6d41\u4e2d\u4efb\u610f\u4e00\u4e2a\u5143\u7d20\n     */\n    public static void main(String[] args) {\n        Optional&lt;String&gt; stringOptional = Stream.of(&quot;apple&quot;, &quot;banana&quot;, &quot;orange&quot;, &quot;waltermaleon&quot;, &quot;grape&quot;)\n                .parallel()\n                //\u5728\u5e76\u884c\u6d41\u4e0b\u6bcf\u6b21\u8fd4\u56de\u7684\u7ed3\u679c\u53ef\u80fd\u4e00\u6837\u4e5f\u53ef\u80fd\u4e0d\u4e00\u6837\n                .findAny();\n        stringOptional.ifPresent(System.out::println);\n    }\n}\n\n\niterator -- \u8fd4\u56de\u7531\u6d41\u6570\u636e\u6784\u9020\u7684\u8fed\u4ee3\u5668\n\n\n3.3 Short-circuiting \u64cd\u4f5c\n\u5f53\u4f60\u8981\u5904\u7406\u65e0\u9650\u6570\u636e\u7684\u96c6\u5408\u65f6\uff0c\u901a\u8fc7 short circuiting \u64cd\u4f5c\u8ba9\u7a0b\u5e8f\u80fd\u591f\u5728\u6709\u9650\u7684\u65f6\u95f4\u5185\u8fd4\u56de\u663e\u7136\u662f\u975e\u5e38\u5fc5\u8981\u7684\n\u5305\u62ec\u4e0a\u8ff0\u5df2\u7ecf\u6807\u8bb0\u8fc7\u53ef\u4ee5\u7528\u4f5c Short-circuiting \u64cd\u4f5c\u7684\uff1a\n\nanyMatch\nallMatch\nnoneMatch\nfindFirst\nfindAny\nlimit\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}]}, {"title": "Java\u4f7f\u7528Selenium\u5b9e\u73b0\u7b80\u5355\u722c\u866b", "date": "2020-12-29T21:25:00-00.00", "path": "/Xuxx_Blogs/archives/bj44/", "text": "\u5e8f\u8a00\n\u6700\u8fd1\u5de5\u4f5c\u65f6\u63a5\u5230\u4e00\u4e2a\u5904\u7406\u6570\u636e\u7684\u4efb\u52a1\uff0c\u7ed9\u6211\u7684\u6570\u636e\u53ea\u670913\u9879\uff0c\u4f46\u662f\u9879\u76ee\u4e2d\u9700\u8981\u7684\u6570\u636e\u670918\u9879\uff0c\u6240\u4ee5\u7f3a\u5c11\u7684\u6570\u636e\u9700\u8981\u624b\u5de5\u53bb\u67e5\u8be2\uff08\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\uff1f\u6211\u4e5f\u4e0d\u77e5\u9053\uff0c\u53cd\u6b63\u5de5\u4f5c\u5c31\u662f\u8fd9\u6837\u8981\u6c42\u4e86\uff0c\u6a2a\u7ad6\u90fd\u5f97\u5e72\uff09\u3002\u6211\u9700\u8981\u5904\u7406\u63a5\u8fd15000\u6761,\u4e00\u6761\u4e00\u6761\u67e5\u786e\u5b9e\u6709\u70b9\u592a\u67af\u71e5\u4e86\uff08\u81ea\u5df1\u624b\u52a8\u67e5\u4e86200\u591a\u6761~\uff09\uff0c\u4e8e\u662f\u5fc3\u4e00\u6a2a\uff0c\u6574\u4e2a\u7a0b\u5e8f\u6765\u5e2e\u6211\u5e72\u6d3b\u5427\u3002\u4f46\u662f\u6211\u6bd5\u7adf\u6ca1\u6709\u63a5\u89e6\u8fc7\u722c\u866b\uff0c\u4e8e\u662f\u5728\u4e00\u987fGoogle\u540e\uff0c\u6211\u9009\u62e9\u4e86Selenium\uff0c\u522b\u95ee\uff0c\u95ee\u5c31\u662f\u7b80\u5355\u597d\u4e0a\u624b\u3002\n1.Selenium\n\u56e0\u4e3a\u5bf9\u81ea\u52a8\u5316\u6d4b\u8bd5\u5353\u8d8a\u4f53\u9a8c\u7684\u8ffd\u6c42\uff0c\u4f17\u591a\u81ea\u52a8\u5316\u6d4b\u8bd5\u5de5\u5177\u5e94\u8fd0\u800c\u751f\uff0cSelenium\u5c31\u662f\u5176\u4e2d\u6700\u51fa\u8272\u7684\u4e00\u6b3e\u3002\nSelenium \u662f\u4e00\u4e2a\u7528\u4e8eWeb\u5e94\u7528\u7a0b\u5e8f\u6d4b\u8bd5\u7684\u5de5\u5177\u3002\u4ed6\u662f\u4e00\u6b3e\u6d4f\u89c8\u5668\u4eff\u771f\u7a0b\u5e8f \u53ef\u4ee5\u50cf\u771f\u6b63\u7684\u7528\u6237\u5728\u64cd\u4f5c\u4e00\u6837\u64cd\u4f5c\u6d4f\u89c8\u5668\u3002\nSelenium\u652f\u6301\u5168\u90e8\u4e3b\u6d41\u7684\u6d4f\u89c8\u5668\uff0c\u652f\u6301\u4e3b\u6d41\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec\uff1aJava\u3001Python\u3001C#\u3001PHP\u3001Ruby\u3001JavaScript\u7b49\uff0c\u57fa\u4e8e\u6807\u51c6\u7684 WebDriver \u8bed\u6cd5\u89c4\u8303\uff0c\u540c\u65f6\u652f\u6301\u6240\u6709\u57fa\u4e8eweb \u7684\u7ba1\u7406\u4efb\u52a1\u81ea\u52a8\u5316\u3002\nSelenium\u7531\u591a\u4e2a\u8f6f\u4ef6\u5de5\u5177\u7ec4\u6210\u3002\u6bcf\u4e2a\u5de5\u5177\u90fd\u6709\u4e00\u4e2a\u7279\u5b9a\u7684\u89d2\u8272\u3002\u4e3b\u8981\u5305\u542b\u4ee5\u4e0b\u5de5\u5177\uff1a\n\nSelenium IDE Selenium IDE\uff08\u96c6\u6210\u5f00\u53d1\u73af\u5883\uff09\u662f\u4e00\u4e2a\u6784\u5efa\u6d4b\u8bd5\u811a\u672c\u7684\u539f\u578b\u5de5\u5177\nSelenium RC \u662fSelenium\u7684\u8fdc\u7a0b\u63a7\u5236(\u53c8\u79f0Selenium1.0)\nSelenium Grid \u53ef\u4ee5\u6d4b\u8bd5\u96c6\u5206\u5e03\u5728\u591a\u4e2a\u73af\u5883\u4e2d\u5e76\u884c\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\u3002\n\n2.Java\u4e2d\u96c6\u6210Selenium\nSelenium\u652f\u6301\u4e3b\u6d41\u7684\u7f16\u7a0b\u8bed\u8a00\uff0c\u5305\u62ec\uff1aJava\u3001Python\u3001C#\u3001PHP\u3001Ruby\u3001JavaScript\uff1b\n2.1 maven\u6dfb\u52a0\u4f9d\u8d56\n\u5728java\u4e2d\u4f7f\u7528Selenium\u5f88\u7b80\u5355\uff0c\u4f60\u53ea\u9700\u8981\u6dfb\u52a0\u5982\u4e0b\u4f9d\u8d56\uff1a\n&lt;dependency&gt;\n    &lt;groupId&gt;org.Seleniumhq.Selenium&lt;/groupId&gt;\n    &lt;artifactId&gt;Selenium-java&lt;/artifactId&gt;\n    &lt;version&gt;3.141.59&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- \u4ee5\u4e0b\u975e\u5fc5\u8981 --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;com.google.guava&lt;/groupId&gt;\n    &lt;artifactId&gt;guava&lt;/artifactId&gt;\n    &lt;version&gt;23.0&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;\n    &lt;artifactId&gt;gson&lt;/artifactId&gt;\n    &lt;version&gt;2.8.2&lt;/version&gt;\n&lt;/dependency&gt;\n\n\u6ce8\uff1aguava\u4ecb\u7ecd\n2.2 \u6dfb\u52a0\u6d4f\u89c8\u5668\u9a71\u52a8\n\u5f53Selenium\u5347\u7ea7\u52303.0\u4e4b\u540e\uff0c\u5bf9\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u9a71\u52a8\u8fdb\u884c\u4e86\u89c4\u8303\u3002\u5982\u679c\u60f3\u4f7f\u7528Selenium\u9a71\u52a8\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\uff0c\u5fc5\u987b\u5355\u72ec\u4e0b\u8f7d\u5e76\u8bbe\u7f6e\u4e0d\u540c\u7684\u6d4f\u89c8\u5668\u9a71\u52a8\u3002\n\u6ce8\uff1aIE11\uff0c\u9700\u8981\u5728IE\u6d4f\u89c8\u5668\u4e2d\u628a\u4fdd\u62a4\u6a21\u5f0f\u53d6\u6d88\u6389\uff0cInternet\u3001\u672c\u5730Internet\u3001\u53d7\u4fe1\u4efb\u7684\u7ad9\u70b9\u3001\u53d7\u9650\u5236\u7684\u7ad9\u70b9\u4e2d\u7684\u542f\u52a8\u4fdd\u62a4\u6a21\u5f0f\u52fe\u9009\u5168\u90e8\u53d6\u6d88\u5e76\u4fdd\u5b58\u8bbe\u7f6e\uff08\u5176\u4f59\u6d4f\u89c8\u5668\u7684\u8bbe\u7f6e\u8bf7\u81ea\u884c\u767e\u5ea6\uff09\u3002\n\nFirefox\u6d4f\u89c8\u5668\u9a71\u52a8\uff1ageckodriver\nChrome\u6d4f\u89c8\u5668\u9a71\u52a8\uff1achromedriver\nIE\u6d4f\u89c8\u5668\u9a71\u52a8\uff1aIEDriverServer\nEdge\u6d4f\u89c8\u5668\u9a71\u52a8\uff1aMicrosoftWebDriver\nOpera\u6d4f\u89c8\u5668\u9a71\u52a8\uff1aoperadriver\nPhantomJS\u6d4f\u89c8\u5668\u9a71\u52a8\uff1aphantomjs\n\n\u5728java\u4e2d\u4f7f\u7528\u4e0d\u540c\u6d4f\u89c8\u5668\uff1a\n\u9996\u5148\u914d\u7f6e\u9a71\u52a8\u5c5e\u6027\uff0c\u6307\u5b9a\u9a71\u52a8\u6587\u4ef6\u8def\u5f84\nSystem.setProperty(&quot;webdriver.chrome.driver&quot;, &quot;E:\\\\chromedriver.exe&quot;);\n\n\u83b7\u53d6WebDriver\u5e76\u6253\u5f00\u4e00\u4e2a\u65b0\u7684\u6d4f\u89c8\u5668\u7a97\u53e3\n\nWebDriver driver = new ChromeDriver();    //Chrome\u6d4f\u89c8\u5668\nWebDriver driver = new FirefoxDriver();   //Firefox\u6d4f\u89c8\u5668\nWebDriver driver = new EdgeDriver();      //Edge\u6d4f\u89c8\u5668\nWebDriver driver = new InternetExplorerDriver();  // Internet Explorer\u6d4f\u89c8\u5668\nWebDriver driver = new OperaDriver();     //Opera\u6d4f\u89c8\u5668\nWebDriver driver = new PhantomJSDriver();   //PhantomJS\n\u6ce8\uff1a\u53ef\u4ee5\u5728linux\u4e2d\u4f7f\u7528\u65e0\u7a97\u53e3\u6a21\u5f0f\uff0c\u540e\u7eed\u4f1a\u8bb2\u5230\n\u7b80\u5355\u6837\u4f8b\npublic class Itest {\n    public static void main(String[] args) throws InterruptedException {\n        System.setProperty(&quot;webdriver.chrome.driver&quot;, &quot;E:\\\\chromedriver.exe&quot;);\n        WebDriver driver = new ChromeDriver();\n        driver.get(&quot;http://www.baidu.com&quot;);\n\n        Thread.sleep(10000);\n        driver.close();\n    }\n}\n\n2.2 Selenium\u5143\u7d20\u5b9a\u4f4d\n2.2.1 \u5b9a\u4f4d\u5143\u7d20\n\ndriver.findElement(By.id(\"\u5143\u7d20id\"))\ndriver.findElement(By.name(\"\u5143\u7d20name\"))\ndriver.findElement(By.className(\"\u5143\u7d20className\"))\ndriver.findElement(By.tagName(\"\u5143\u7d20tagName\"))\ndriver.findElement(By.linkText(\"\u6587\u672c\"))\ndriver.findElement(By.cssSelector(\"css\u9009\u62e9\u5668\")) \uff08\u6ce8\u610f\u7a7a\u683c\uff09\ndriver.findElement(By.xpath(\"xpath\u8868\u8fbe\u5f0f\"))\n...\n\n2.2.2 \u83b7\u53d6\u5143\u7d20\u5217\u8868\ndriver.findElements(By.cssSelector(&quot;.for.list td&quot;));\n\n\u83b7\u53d6\u5230\u7684\u5143\u7d20\u5217\u8868\u4e3a List \u5bf9\u8c61\uff0c\u4e0d\u5efa\u8bae\u76f4\u63a5\u5faa\u73af\u6765\u83b7\u53d6 \u5143\u7d20\u5bf9\u8c61\uff0c\u800c\u662f\u4ece\u6839\u4e2d\u91cd\u65b0\u83b7\u53d6\uff0c\u4ee5\u907f\u514d\u83b7\u53d6\u5143\u7d20\u5931\u8d25\nList&lt;WebElement&gt; heads = driver.findElements(By.cssSelector(&quot;.for.list td&quot;));\n\nfor (int i = 0; i &lt; heads.size(); i++) {\n    String href = driver.findElements(By.cssSelector(&quot;.for.list td&quot;)).get(i).getText();\n}\n\n2.2.3 \u4e0b\u62c9\u6846\u9009\u62e9\nWebElement el = driver.findElement(By.xpath(&quot;//select&quot;));\nSelect sel = new Select(el);\nsel.selectByValue(&quot;20&quot;);\n\n2.3 \u8bbe\u7f6e\u5143\u7d20\u7b49\u5f85\nWebDriver\u63d0\u4f9b\u4e86\u4e24\u79cd\u7c7b\u578b\u7684\u7b49\u5f85\uff1a\u663e\u5f0f\u7b49\u5f85\u548c\u9690\u5f0f\u7b49\u5f85\u3002\n2.3.1 \u663e\u5f0f\u7b49\u5f85\n\u663e\u5f0f\u7b49\u5f85\uff0c \u9488\u5bf9\u67d0\u4e2a\u5143\u7d20\u7b49\u5f85\nWebDriverWait wait = new WebDriverWait(driver,10,1);\nwait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(&quot;.for.list&quot;)));\n\n2.3.2 \u9690\u5f0f\u7b49\u5f85\n\u9690\u5f0f\u7b49\u5f85\uff0c \u9488\u5bf9\u67d0\u4e2a\u5143\u7d20\u7b49\u5f85\ndriver.manage().timeouts().pageLoadTimeout(5, TimeUnit.SECONDS);\n\n2.4 WebElement\u5e38\u7528\u65b9\u6cd5\n\nclear() \u6e05\u9664\u6587\u672c\n\nsendKeys(*value) \u6a21\u62df\u6309\u952e\u8f93\u5165\n\nclick() \u5355\u51fb\u5143\u7d20\n\ndriver.findElement(By.id(&quot;username&quot;)).sendKeys(&quot;\u7528\u6237\u540d&quot;);\ndriver.findElement(By.id(&quot;password&quot;))sendKeys(&quot;\u5bc6\u7801&quot;);\ndriver.findElement(By.id(&quot;commit&quot;)).click;\n\n2.5 \u952e\u9f20\u64cd\u4f5c\n2.5.1 Actions \u952e\u9f20\u64cd\u4f5c\n\ncontextClick() \u53f3\u51fb\nclickAndHold() \u9f20\u6807\u70b9\u51fb\u5e76\u63a7\u5236\ndoubleClick() \u53cc\u51fb\ndragAndDrop() \u62d6\u52a8\nrelease() \u91ca\u653e\u9f20\u6807\nperform() \u6267\u884c\u6240\u6709Actions\u4e2d\u5b58\u50a8\u7684\u884c\u4e3a\n\n// \u65b0\u5efa\u4e00\u4e2aaction   \nActions action = new Actions(driver);   \n// \u9f20\u6807\u5de6\u952e\u5355\u51fb\naction.click().perform();\n// \u9f20\u6807\u5de6\u952e\u53cc\u51fb\naction.doubleClick(WebElement).perform();\n// \u9f20\u6807\u5de6\u952e\u6309\u4e0b\naction.clickAndHold(WebElement).perform();\n// \u9f20\u6807\u79fb\u52a8\u5230\u5143\u7d20\naction.moveToElement(WebElement).perform();\n// \u5143\u7d20\u53f3\u952e\u70b9\u51fb\naction.contextClick(WebElement).perform();\n// \u5c06\u76ee\u6807\u5143\u7d20\u62d6\u62fd\u5230\u6307\u5b9a\u7684\u5143\u7d20\u4e0a\naction.dragAndDrop(webElement1,webElement2);\naction.dragAndDrop(webElement, xOffset, yOffset);\n\nActions action = new Actions(driver);\naction.keyDown(Keys.CONTROL);//\u6309\u4e0bcontrol\u952e\naction.keyUp(Keys.CONTROL);//\u677e\u5f00control\u952e\naction.keyDown(Keys.CONTROL).keyDown(Keys.ALT).keyDown(&quot;A&quot;).keyUp(Keys.CONTROL).keyUp(Keys.ALT).keyUp(&quot;A&quot;).perform();\naction.sendKeys(Keys.CONTROL+&quot;a&quot;).perform();\naction.sendKeys(Keys.CONTROL, Keys.ALT, &quot;A&quot;).perform();\n\n2.5.2 \u5143\u7d20sendKeys()\nsendKeys(Keys.BACK_SPACE) //\u56de\u683c\u952e\uff08BackSpace\uff09\nsendKeys(Keys.SPACE) //\u7a7a\u683c\u952e(Space)\nsendKeys(Keys.TAB) //\u5236\u8868\u952e(Tab)\n\n2.6 \u7a97\u53e3\u63a7\u5236\n2.6.1 \u7a97\u53e3\u5207\u6362\n\n\u4f7f\u7528 driver.getWindowHandles() \u83b7\u53d6\u6240\u6709\u7a97\u53e3\n\n\u4f7f\u7528 driver.switchTo().window(hand) \u5207\u6362\u7a97\u53e3\n\n\nSet&lt;String&gt; handles = driver.getWindowHandles();\nfor (String hand : handles) {\n    if (!StringUtils.equals(mainHand, hand)) {\n        driver.switchTo().window(hand);\n    }\n}\n\n3 linux\u65e0\u7a97\u53e3\u6a21\u5f0f\n3.1 linux\u5b89\u88c5chrome\u6d4f\u89c8\u5668\nwget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm \nyum install -y google-chrome-stable_current_x86_64.rpm\n\n3.2 \u4e0b\u8f7d\u5bf9\u5e94\u7248\u672c\u7684driver\n\u67e5\u8be2\u5f53\u524d\u6d4f\u89c8\u5668\u7248\u672c\ngoogle-chrome --version\n\n3.3 \u8bbe\u7f6eSelenium\u65e0\u5934\u6a21\u5f0f\n\n\u8bbe\u7f6e\u65e0\u5934\u6a21\u5f0f\n\noptions.setHeadless(Boolean.TRUE);\n\n\n\u914d\u7f6e\u5934\u4fe1\u606f\n\noptions.addArguments(&quot;--no-sandbox&quot;);\noptions.addArguments(&quot;--disable-dev-shm-usage&quot;);\n\n\n\u9700\u8981\u914d\u7f6e\u6d4f\u89c8\u5668\u7a97\u53e3\u5927\u5c0f\uff0c\u6765\u786e\u4fdd\u5143\u7d20\u53ef\u4ee5\u68c0\u7d22\n\nWebDriverWait wait = new WebDriverWait(driver, 60);\nDimension dimension = new Dimension(1920, 1080);\ndriver.manage().window().setSize(dimension);\n\n\n\u82e5\u9047\u5230\u5982\u4e0b\u63d0\u793a\n\n\nThe driver is not executable: /opt/code/news/chromedriver\n\u8fd0\u884c\u5982\u4e0b\u547d\u4ee4\u5373\u53ef\uff1a\nchmod 775 ./chromedriver\n\n3.4 \u8bbe\u7f6e\u5b8c\u6210\uff0c\u542f\u52a8\u8fd0\u884c\n\u53c2\u8003\uff1a\nJava\u4f7f\u7528Selenium\u5b9e\u73b0\u81ea\u52a8\u5316\u6d4b\u8bd5\u4ee5\u53ca\u5168\u529f\u80fd\u722c\u866b\nSelenium\u6559\u7a0b\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "\u722c\u866b", "slug": "\u722c\u866b", "permalink": "/Xuxx_Blogs/tag/\u722c\u866b/"}]}, {"title": "idea\u5e38\u7528\u5feb\u6377\u952e", "date": "2020-12-22T11:45:00-00.00", "path": "/Xuxx_Blogs/archives/bj42/", "text": "\u81ea\u52a8\u4ee3\u7801\nCtrl+Alt+O \u4f18\u5316\u5bfc\u5165\u7684\u7c7b\u548c\u5305\nAlt+Insert \u751f\u6210\u4ee3\u7801(\u5982get,set\u65b9\u6cd5,\u6784\u9020\u51fd\u6570\u7b49) \u6216\u8005\u53f3\u952e\uff08Generate\uff09\nfori/sout/psvm + Tab\nCtrl+Alt+T \u751f\u6210try catch \u6216\u8005 Alt+enter\nCTRL+ALT+T \u628a\u9009\u4e2d\u7684\u4ee3\u7801\u653e\u5728 TRY{} IF{} ELSE{} \u91cc\nCtrl + O \u91cd\u5199\u65b9\u6cd5\nCtrl + I \u5b9e\u73b0\u65b9\u6cd5\nCtr+Shift+U \u5927\u5c0f\u5199\u8f6c\u5316\nALT+\u56de\u8f66 \u5bfc\u5165\u5305,\u81ea\u52a8\u4fee\u6b63\nALT+/ \u4ee3\u7801\u63d0\u793a\nCTRL+J \u81ea\u52a8\u4ee3\u7801\nCtrl+Shift+J\uff0c\u6574\u5408\u4e24\u884c\u4e3a\u4e00\u884c\nCTRL+\u7a7a\u683c \u4ee3\u7801\u63d0\u793a\nCTRL+SHIFT+SPACE \u81ea\u52a8\u8865\u5168\u4ee3\u7801\nCTRL+ALT+L \u683c\u5f0f\u5316\u4ee3\u7801\nCTRL+ALT+I \u81ea\u52a8\u7f29\u8fdb\nCTRL+ALT+O \u4f18\u5316\u5bfc\u5165\u7684\u7c7b\u548c\u5305\nALT+INSERT \u751f\u6210\u4ee3\u7801(\u5982GET,SET\u65b9\u6cd5,\u6784\u9020\u51fd\u6570\u7b49)\nCTRL+E \u6700\u8fd1\u66f4\u6539\u7684\u4ee3\u7801\nCTRL+ALT+SPACE \u7c7b\u540d\u6216\u63a5\u53e3\u540d\u63d0\u793a\nCTRL+P \u65b9\u6cd5\u53c2\u6570\u63d0\u793a\nCTRL+Q\uff0c\u53ef\u4ee5\u770b\u5230\u5f53\u524d\u65b9\u6cd5\u7684\u58f0\u660e\nShift+F6 \u91cd\u6784-\u91cd\u547d\u540d (\u5305\u3001\u7c7b\u3001\u65b9\u6cd5\u3001\u53d8\u91cf\u3001\u751a\u81f3\u6ce8\u91ca\u7b49)\nCtrl+Alt+V \u63d0\u53d6\u53d8\u91cf\n\u67e5\u8be2\u7684\u5feb\u6377\u952e\nCtrl\uff0bShift\uff0bBackspace    \u53ef\u4ee5\u8df3\u8f6c\u5230\u4e0a\u6b21\u7f16\u8f91\u7684\u5730\nCTRL+ALT+ left/right    \u524d\u540e\u5bfc\u822a\u7f16\u8f91\u8fc7\u7684\u5730\u65b9\nALT+7   \u9760\u5de6\u7a97\u53e3\u663e\u793a\u5f53\u524d\u6587\u4ef6\u7684\u7ed3\u6784\nCtrl+F12    \u6d6e\u52a8\u663e\u793a\u5f53\u524d\u6587\u4ef6\u7684\u7ed3\u6784\nALT+F7  \u627e\u5230\u4f60\u7684\u51fd\u6570\u6216\u8005\u53d8\u91cf\u6216\u8005\u7c7b\u7684\u6240\u6709\u5f15\u7528\u5230\u7684\u5730\u65b9\uff08\u67e5\u770b\u7528\u6cd5\uff09\nCTRL+ALT+F7 \u627e\u5230\u4f60\u7684\u51fd\u6570\u6216\u8005\u53d8\u91cf\u6216\u8005\u7c7b\u7684\u6240\u6709\u5f15\u7528\u5230\u7684\u5730\u65b9\nCtrl+Shift+Alt+N \u67e5\u627e\u7c7b\u4e2d\u7684\u65b9\u6cd5\u6216\u53d8\u91cf\n\u53cc\u51fbSHIFT \u5728\u9879\u76ee\u7684\u6240\u6709\u76ee\u5f55\u67e5\u627e\u6587\u4ef6\nCtrl+N \u67e5\u627e\u7c7b\nCtrl+Shift+N \u67e5\u627e\u6587\u4ef6\nCTRL+G \u5b9a\u4f4d\u884c\nCTRL+F \u5728\u5f53\u524d\u7a97\u53e3\u67e5\u627e\u6587\u672c\nCTRL+SHIFT+F \u5728\u6307\u5b9a\u7a97\u53e3\u67e5\u627e\u6587\u672c\nCTRL+R \u5728 \u5f53\u524d\u7a97\u53e3\u66ff\u6362\u6587\u672c\nCTRL+SHIFT+R \u5728\u6307\u5b9a\u7a97\u53e3\u66ff\u6362\u6587\u672c\nALT+SHIFT+C \u67e5\u627e\u4fee\u6539\u7684\u6587\u4ef6\nCTRL+E \u6700\u8fd1\u6253\u5f00\u7684\u6587\u4ef6\nF3 \u5411\u4e0b\u67e5\u627e\u5173\u952e\u5b57\u51fa\u73b0\u4f4d\u7f6e\nSHIFT+F3 \u5411\u4e0a\u4e00\u4e2a\u5173\u952e\u5b57\u51fa\u73b0\u4f4d\u7f6e\n\u9009\u4e2d\u6587\u672c\uff0c\u6309Alt+F3 \uff0c\u9ad8\u4eae\u76f8\u540c\u6587\u672c\uff0cF3\u9010\u4e2a\u5f80\u4e0b\u67e5\u627e\u76f8\u540c\u6587\u672c\nF4 \u67e5\u627e\u53d8\u91cf\u6765\u6e90\nCTRL+SHIFT+O \u5f39\u51fa\u663e\u793a\u67e5\u627e\u5185\u5bb9\nCtrl+W \u9009\u4e2d\u4ee3\u7801\uff0c\u8fde\u7eed\u6309\u4f1a\u6709\u5176\u4ed6\u6548\u679c\nF2 \u6216Shift+F2 \u9ad8\u4eae\u9519\u8bef\u6216\u8b66\u544a\u5feb\u901f\u5b9a\u4f4d\nCtrl+Up/Down \u5149\u6807\u8df3\u8f6c\u5230\u7b2c\u4e00\u884c\u6216\u6700\u540e\u4e00\u884c\u4e0b\nCtrl+B \u5feb\u901f\u6253\u5f00\u5149\u6807\u5904\u7684\u7c7b\u6216\u65b9\u6cd5\nCTRL+ALT+B \u627e\u6240\u6709\u7684\u5b50\u7c7b\nCTRL+SHIFT+B \u627e\u53d8\u91cf\u7684\u7c7b\nCtrl+Shift+\u4e0a\u4e0b\u952e \u4e0a\u4e0b\u79fb\u52a8\u4ee3\u7801\nCtrl+Alt+ left/right \u8fd4\u56de\u81f3\u4e0a\u6b21\u6d4f\u89c8\u7684\u4f4d\u7f6e\nCtrl+X \u5220\u9664\u884c\nCtrl+D \u590d\u5236\u884c\nCtrl+/ \u6216 Ctrl+Shift+/ \u6ce8\u91ca\uff08// \u6216\u8005/\u2026/ \uff09\nCtrl+H \u663e\u793a\u7c7b\u7ed3\u6784\u56fe\nCtrl+Q \u663e\u793a\u6ce8\u91ca\u6587\u6863\nAlt+F1 \u67e5\u627e\u4ee3\u7801\u6240\u5728\u4f4d\u7f6e\nAlt+1 \u5feb\u901f\u6253\u5f00\u6216\u9690\u85cf\u5de5\u7a0b\u9762\u677f\nAlt+ left/right \u5207\u6362\u4ee3\u7801\u89c6\u56fe\nALT+ \u2191/\u2193 \u5728\u65b9\u6cd5\u95f4\u5feb\u901f\u79fb\u52a8\u5b9a\u4f4d\nCTRL+ALT+ left/right \u524d\u540e\u5bfc\u822a\u7f16\u8f91\u8fc7\u7684\u5730\u65b9\nCtrl\uff0bShift\uff0bBackspace\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e0a\u6b21\u7f16\u8f91\u7684\u5730\nAlt+6 \u67e5\u627eTODO\n\u5176\u4ed6\u5feb\u6377\u952e\nSHIFT+ENTER \u53e6\u8d77\u4e00\u884c\nCTRL+Z \u5012\u9000(\u64a4\u9500)\nCTRL+SHIFT+Z \u5411\u524d(\u53d6\u6d88\u64a4\u9500)\nCTRL+ALT+F12 \u8d44\u6e90\u7ba1\u7406\u5668\u6253\u5f00\u6587\u4ef6\u5939\nSHIFT+ALT+INSERT \u7ad6\u7f16\u8f91\u6a21\u5f0f\nCTRL+F4 \u5173\u95ed\u5f53\u524d\u7a97\u53e3\nCtrl+Alt+V\uff0c\u53ef\u4ee5\u5f15\u5165\u53d8\u91cf\u3002\u4f8b\u5982\uff1anew String(); \u81ea\u52a8\u5bfc\u5165\u53d8\u91cf\u5b9a\u4e49\nCtrl+~\uff0c\u5feb\u901f\u5207\u6362\u65b9\u6848\uff08\u754c\u9762\u5916\u89c2\u3001\u4ee3\u7801\u98ce\u683c\u3001\u5feb\u6377\u952e\u6620\u5c04\u7b49\u83dc\u5355\uff09\nAlt+Shift+F \u6536\u85cf\n\u8c03\u8bd5\u5feb\u6377\u952e\n\u5176\u5b9e\u5e38\u7528\u7684 \u5c31\u662fF8 F7 F9 \u6700\u503c\u5f97\u4e00\u63d0\u7684 \u5c31\u662fDrop Frame \u53ef\u4ee5\u8ba9\u8fd0\u884c\u8fc7\u7684\u4ee3\u7801\u4ece\u5934\u518d\u6765\nAlt+F8 debug\u65f6\u9009\u4e2d\u67e5\u770b\u503c\nAlt+Shift+F9\uff0c\u9009\u62e9 Debug\nAlt+Shift+F10\uff0c\u9009\u62e9 Run\nCtrl+Shift+F9\uff0c\u7f16\u8bd1\nCtrl+Shift+F8\uff0c\u67e5\u770b\u65ad\u70b9\nF7\uff0c\u6b65\u5165\nShift+F7\uff0c\u667a\u80fd\u6b65\u5165\nAlt+Shift+F7\uff0c\u5f3a\u5236\u6b65\u5165\nF8\uff0c\u6b65\u8fc7\nShift+F8\uff0c\u6b65\u51fa\nAlt+Shift+F8\uff0c\u5f3a\u5236\u6b65\u8fc7\nAlt+F9\uff0c\u8fd0\u884c\u81f3\u5149\u6807\u5904\nCtrl+Alt+F9\uff0c\u5f3a\u5236\u8fd0\u884c\u81f3\u5149\u6807\u5904\nF9\uff0c\u6062\u590d\u7a0b\u5e8f\nAlt+F10\uff0c\u5b9a\u4f4d\u5230\u65ad\u70b9\n\u91cd\u6784\nCtrl+Alt+Shift+T\uff0c\u5f39\u51fa\u91cd\u6784\u83dc\u5355\nShift+F6\uff0c\u91cd\u547d\u540d\nF6\uff0c\u79fb\u52a8\nF5\uff0c\u590d\u5236\nAlt+Delete\uff0c\u5b89\u5168\u5220\u9664\nCtrl+Alt+N\uff0c\u5185\u8054\n\u5341\u5927Intellij IDEA\u5feb\u6377\u952e\nIntellij IDEA\u4e2d\u6709\u5f88\u591a\u5feb\u6377\u952e\u8ba9\u4eba\u7231\u4e0d\u91ca\u624b\uff0cstackoverflow\u4e0a\u4e5f\u6709\u4e00\u4e9b\u6709\u8da3\u7684\u8ba8\u8bba\u3002\u6bcf\u4e2a\u4eba\u90fd\u6709\u81ea\u5df1\u7684\u6700\u7231\uff0c\u60f3\u6392\u51fa\u4e2a\u7406\u60f3\u7684\u699c\u5355\u8fd8\u771f\u662f\u56f0\u96be\u3002\n\u4ee5\u524d\u4e5f\u6574\u7406\u8fc7Intellij\u7684\u5feb\u6377\u952e\uff0c\u8fd9\u6b21\u5c31\u6309\u7167\u6211\u65e5\u5e38\u5f00\u53d1\u65f6\u7684\u4f7f\u7528\u9891\u7387\uff0c\u7b80\u5355\u5206\u7c7b\u5217\u4e00\u4e0b\u6211\u6700\u559c\u6b22\u7684\u5341\u5927\u5feb\u6377-\u795e-\u952e\u5427\u3002\n\u667a\u80fd\u63d0\u793a:\nIntellij\u9996\u5f53\u5176\u51b2\u7684\u5f53\u7136\u5c31\u662fIntelligence\u667a\u80fd\uff01\u57fa\u672c\u7684\u4ee3\u7801\u63d0\u793a\u7528Ctrl+Space\uff0c\u8fd8\u6709\u66f4\u667a\u80fd\u5730\u6309\u7c7b\u578b\u4fe1\u606f\u63d0\u793aCtrl+Shift+Space\uff0c\u4f46\u56e0\u4e3aIntellij\u603b\u662f\u968f\u7740\u6211\u4eec\u6572\u51fb\u800c\u81ea\u52a8\u63d0\u793a\uff0c\u6240\u4ee5\u5f88\u591a\u65f6\u5019\u90fd\u4e0d\u4f1a\u624b\u52a8\u6572\u8fd9\u4e24\u4e2a\u5feb\u6377\u952e(\u9664\u975e\u63d0\u793a\u6846\u6d88\u5931\u4e86)\u3002\u7528F2/ Shift+F2\u79fb\u52a8\u5230\u6709\u9519\u8bef\u7684\u4ee3\u7801\uff0cAlt+Enter\u5feb\u901f\u4fee\u590d(\u5373Eclipse\u4e2d\u7684Quick Fix\u529f\u80fd)\u3002\u5f53\u667a\u80fd\u63d0\u793a\u4e3a\u6211\u4eec\u81ea\u52a8\u8865\u5168\u65b9\u6cd5\u540d\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u8981\u81ea\u5df1\u8865\u4e0a\u884c\u5c3e\u7684\u53cd\u62ec\u53f7\u548c\u5206\u53f7\uff0c\u5f53\u62ec\u53f7\u5d4c\u5957\u5f88\u591a\u5c42\u65f6\u4f1a\u5f88\u9ebb\u70e6\uff0c\u8fd9\u65f6\u6211\u4eec\u53ea\u9700\u6572Ctrl+Shift+Enter\u5c31\u80fd\u81ea\u52a8\u8865\u5168\u672b\u5c3e\u7684\u5b57\u7b26\u3002\u800c\u4e14\u4e0d\u53ea\u662f\u62ec\u53f7\uff0c\u4f8b\u5982\u6572\u5b8cif/for\u65f6\u4e5f\u53ef\u4ee5\u81ea\u52a8\u8865\u4e0a{}\u82b1\u62ec\u53f7\u3002\n\u6700\u540e\u8981\u8bf4\u4e00\u70b9\uff0cIntellij\u80fd\u591f\u667a\u80fd\u611f\u77e5Spring\u3001Hibernate\u7b49\u4e3b\u6d41\u6846\u67b6\u7684\u914d\u7f6e\u6587\u4ef6\u548c\u7c7b\uff0c\u4ee5\u9759\u5236\u52a8\uff0c\u5728\u770b\u4f3c\u201c\u9759\u6001\u201d\u7684\u5916\u8868\u4e0b\uff0c\u667a\u80fd\u5730\u626b\u63cf\u7406\u89e3\u4f60\u7684\u9879\u76ee\u662f\u5982\u4f55\u6784\u9020\u548c\u914d\u7f6e\u7684\u3002\n\u91cd\u6784:\nIntellij\u91cd\u6784\u662f\u53e6\u4e00\u5b8c\u7206Eclipse\u7684\u529f\u80fd\uff0c\u5176\u667a\u80fd\u7a0b\u5ea6\u4ee4\u4eba\u77a0\u76ee\u7ed3\u820c\uff0c\u6bd4\u5982\u63d0\u53d6\u53d8\u91cf\u65f6\u81ea\u52a8\u68c0\u67e5\u5230\u6240\u6709\u5339\u914d\u540c\u65f6\u63d0\u53d6\u6210\u4e00\u4e2a\u53d8\u91cf\u7b49\u3002\u5c24\u5176\u770b\u8fc7\u300a\u91cd\u6784-\u6539\u5584\u65e2\u6709\u4ee3\u7801\u8bbe\u8ba1\u300b\u4e4b\u540e\uff0c\u6709\u4e86Intellij\u7684\u914d\u5408\u7b80\u76f4\u662f\u4ee4\u4eba\u5927\u547c\u8fc7\u763e\uff01\u4e5f\u6b63\u662f\u5f3a\u5927\u7684\u667a\u80fd\u548c\u91cd\u6784\u529f\u80fd\uff0c\u4f7fIntellij\u4e0b\u7684TDD\u5f00\u53d1\u975e\u5e38\u987a\u7545\u3002\n\u5207\u5165\u6b63\u9898\uff0c\u5148\u8bf4\u4e00\u4e2a\u65e0\u654c\u7684\u91cd\u6784\u529f\u80fd\u5927\u6c47\u603b\u5feb\u6377\u952eCtrl+Shift+Alt+T\uff0c\u53eb\u505aRefactor This\u3002\u6309\u6cd5\u6709\u70b9\u590d\u6742\uff0c\u4f46\u4e5f\u7b26\u5408Intellij\u7684\u98ce\u683c\uff0c\u5f88\u591a\u5feb\u6377\u952e\u90fd\u8981\u53cc\u624b\u5b8c\u6210\uff0c\u800c\u4e0d\u50cfEclipse\u4e0d\u5c11\u6700\u6709\u7528\u7684\u5feb\u6377\u952e\u53ef\u4ee5\u6f47\u6d12\u5730\u5355\u624b\u5b8c\u6210(\u4e0d\u77e5\u9053\u7b97\u4e0d\u7b97Eclipse\u7684\u4e00\u5927\u4f18\u70b9)\uff0c\u4f46\u5404\u4f4d\u7528\u8fc7Emacs\u7684\u8bdd\u5c31\u4f1a\u89c9\u5f97\u4e5f\u6ca1\u4ec0\u4e48\u4e86(\u975eEmacs\u9ed1)\u3002\u6b64\u5916\uff0c\u8fd8\u6709\u4e9b\u6700\u5e38\u7528\u7684\u91cd\u6784\u6280\u5de7\uff0c\u56e0\u4e3a\u592a\u5e38\u7528\u4e86\uff0c\u82e5\u6bcf\u6b21\u90fd\u5728Refactor This\u83dc\u5355\u91cc\u9009\u7684\u8bdd\u6548\u7387\u6709\u4e9b\u4f4e\u3002\u6bd4\u5982Shift+F6\u76f4\u63a5\u5c31\u662f\u6539\u540d\uff0cCtrl+Alt+V\u5219\u662f\u63d0\u53d6\u53d8\u91cf\u3002\n\u4ee3\u7801\u751f\u6210\uff1a\n\u8fd9\u4e00\u70b9\u7c7b\u4f3cEclipse\uff0c\u867d\u4e0d\u662f\u72ec\u5230\u4e4b\u5904\uff0c\u4f46\u56e0\u4e3a\u65e5\u5e38\u4f7f\u7528\u9891\u7387\u6781\u9ad8\uff0c\u6240\u4ee5\u8fd8\u662f\u7f57\u5217\u5728\u699c\u5355\u524d\u9762\u3002\u5e38\u7528\u7684\u6709fori/sout/psvm+Tab\u5373\u53ef\u751f\u6210\u5faa\u73af\u3001System.out\u3001main\u65b9\u6cd5\u7b49boilerplate\u6837\u677f\u4ee3\u7801\uff0c\u7528Ctrl+J\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u6a21\u677f\u3002\u540e\u9762\u201c\u8f85\u52a9\u201d\u4e00\u8282\u4e2d\u5c06\u4f1a\u8bb2\u5230Alt+Insert\uff0c\u5728\u7f16\u8f91\u7a97\u53e3\u4e2d\u70b9\u51fb\u53ef\u4ee5\u751f\u6210\u6784\u9020\u51fd\u6570\u3001toString\u3001getter/setter\u3001\u91cd\u5199\u7236\u7c7b\u65b9\u6cd5\u7b49\u3002\u8fd9\u4e24\u4e2a\u6280\u5de7\u5b9e\u5728\u592a\u5e38\u7528\u4e86\uff0c\u51e0\u4e4e\u6bcf\u5929\u90fd\u8981\u751f\u6210\u4e00\u5806main\u3001System.out\u548cgetter/setter\u3002\n\u53e6\u5916\uff0cIntellij IDEA 13\u4e2d\u52a0\u5165\u4e86\u540e\u7f00\u81ea\u52a8\u8865\u5168\u529f\u80fd(Postfix Completion)\uff0c\u6bd4\u6a21\u677f\u751f\u6210\u66f4\u52a0\u7075\u6d3b\u548c\u5f3a\u5927\u3002\u4f8b\u5982\u8981\u8f93\u5165for(User user : users)\u53ea\u9700\u8f93\u5165user.for+Tab\u3002\u518d\u6bd4\u5982\uff0c\u8981\u8f93\u5165Date birthday = user.getBirthday();\u53ea\u9700\u8f93\u5165user.getBirthday().var+Tab\u5373\u53ef\u3002\n\u7f16\u8f91\uff1a\n\u7f16\u8f91\u4e2d\u4e0d\u5f97\u4e0d\u8bf4\u7684\u4e00\u5927\u795e\u952e\u5c31\u662f\u80fd\u591f\u81ea\u52a8\u6309\u8bed\u6cd5\u9009\u4e2d\u4ee3\u7801\u7684Ctrl+W\u4ee5\u53ca\u53cd\u5411\u7684Ctrl+Shift+W\u4e86\u3002\u6b64\u5916\uff0cCtrl+Left/Right\u79fb\u52a8\u5149\u6807\u5230\u524d/\u540e\u5355\u8bcd\uff0cCtrl+[/]\u79fb\u52a8\u5230\u524d/\u540e\u4ee3\u7801\u5757\uff0c\u8fd9\u4e9b\u7c7bVim\u98ce\u683c\u7684\u5149\u6807\u79fb\u52a8\u4e5f\u662f\u4e00\u5927\u4eae\u70b9\u3002\u4ee5\u4e0aCtrl+Left/Right/[]\u52a0\u4e0aShift\u7684\u8bdd\u5c31\u80fd\u9009\u4e2d\u8df3\u8dc3\u8303\u56f4\u5185\u7684\u4ee3\u7801\u3002Alt+Forward/Backward\u79fb\u52a8\u5230\u524d/\u540e\u65b9\u6cd5\u3002\u8fd8\u6709\u4e9b\u975e\u5e38\u666e\u901a\u7684\u50cfCtrl+Y\u5220\u9664\u884c\u3001Ctrl+D\u590d\u5236\u884c\n\u67e5\u627e\u6253\u5f00\uff1a\n\u7c7b\u4f3cEclipse\uff0cIntellij\u7684Ctrl+N/Ctrl+Shift+N\u53ef\u4ee5\u6253\u5f00\u7c7b\u6216\u8d44\u6e90\uff0c\u4f46Intellij\u66f4\u52a0\u667a\u80fd\u4e00\u4e9b\uff0c\u6211\u4eec\u8f93\u5165\u7684\u4efb\u4f55\u5b57\u7b26\u90fd\u5c06\u770b\u4f5c\u6a21\u7cca\u5339\u914d\uff0c\u7701\u5374\u4e86Eclipse\u4e2d\u8fd8\u6709\u8f93\u5165*\u7684\u9ebb\u70e6\u3002\u6700\u65b0\u7248\u672c\u7684IDEA\u8fd8\u52a0\u5165\u4e86Search Everywhere\u529f\u80fd\uff0c\u53ea\u9700\u6309Shift+Shift\u5373\u53ef\u5728\u4e00\u4e2a\u5f39\u51fa\u6846\u4e2d\u641c\u7d22\u4efb\u4f55\u4e1c\u897f\uff0c\u5305\u62ec\u7c7b\u3001\u8d44\u6e90\u3001\u914d\u7f6e\u9879\u3001\u65b9\u6cd5\u7b49\u7b49\u3002\n\u7c7b\u7684\u7ee7\u627f\u5173\u7cfb\u5219\u53ef\u7528Ctrl+H\u6253\u5f00\u7c7b\u5c42\u6b21\u7a97\u53e3\uff0c\u5728\u7ee7\u627f\u5c42\u6b21\u4e0a\u8df3\u8f6c\u5219\u7528Ctrl+B/Ctrl+Alt+B\u5206\u522b\u5bf9\u5e94\u7236\u7c7b\u6216\u7236\u65b9\u6cd5\u5b9a\u4e49\u548c\u5b50\u7c7b\u6216\u5b50\u65b9\u6cd5\u5b9e\u73b0\uff0c\u67e5\u770b\u5f53\u524d\u7c7b\u7684\u6240\u6709\u65b9\u6cd5\u7528Ctrl+F12\u3002\n\u8981\u627e\u7c7b\u6216\u65b9\u6cd5\u7684\u4f7f\u7528\u4e5f\u5f88\u7b80\u5355\uff0cAlt+F7\u3002\u8981\u67e5\u627e\u6587\u672c\u7684\u51fa\u73b0\u4f4d\u7f6e\u5c31\u7528Ctrl+F/Ctrl+Shift+F\u5728\u5f53\u524d\u7a97\u53e3\u6216\u5168\u5de5\u7a0b\u4e2d\u67e5\u627e\uff0c\u518d\u914d\u5408F3/Shift+F3\u524d\u540e\u79fb\u52a8\u5230\u4e0b\u4e00\u5339\u914d\u5904\u3002\nIntellij\u66f4\u52a0\u667a\u80fd\u7684\u53c8\u4e00\u4f50\u8bc1\u662f\u5728\u4efb\u610f\u83dc\u5355\u6216\u663e\u793a\u7a97\u53e3\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u8f93\u5165\u4f60\u8981\u627e\u7684\u5355\u8bcd\uff0cIntellij\u5c31\u4f1a\u81ea\u52a8\u4e3a\u4f60\u8fc7\u6ee4\u3002\n\u5176\u4ed6\u8f85\u52a9\uff1a\n\u4ee5\u4e0a\u8fd9\u4e9b\u795e\u952e\u914d\u4e0a\u4e00\u4e9b\u8f85\u52a9\u5feb\u6377\u952e\uff0c\u5373\u53ef\u8ba9\u4f60\u7684\u53cc\u624b90%\u4ee5\u4e0a\u7684\u65f6\u95f4\u6446\u8131\u9f20\u6807\uff0c\u4e13\u6ce8\u4e8e\u952e\u76d8\u4eff\u4f5b\u5728\u8fdb\u884c\u94a2\u7434\u8868\u6f14\u3002\u8fd9\u4e9b\u4e0d\u8d77\u773c\u5374\u662f\u81f3\u5173\u91cd\u8981\u7684\u6700\u540e\u4e00\u5757\u62fc\u56fe\u6709\uff1a\n\u547d\u4ee4\uff1aCtrl+Shift+A \u53ef\u4ee5\u67e5\u627e\u6240\u6709Intellij\u7684\u547d\u4ee4\uff0c\u5e76\u4e14\u6bcf\u4e2a\u547d\u4ee4\u540e\u9762\u8fd8\u6709\u5176\u5feb\u6377\u952e\u3002\u6240\u4ee5\u5b83\u4e0d\u4ec5\u662f\u4e00\u5927\u795e\u952e\uff0c\u4e5f\u662f\u67e5\u627e\u5b66\u4e60\u5feb\u6377\u952e\u7684\u5de5\u5177\u3002\n\u65b0\u5efa\uff1aAlt+Insert\u53ef\u4ee5\u65b0\u5efa\u7c7b\u3001\u65b9\u6cd5\u7b49\u4efb\u4f55\u4e1c\u897f\u3002\n\u683c\u5f0f\u5316\u4ee3\u7801\uff1a\u683c\u5f0f\u5316import\u5217\u8868Ctrl+Alt+O\uff0c\u683c\u5f0f\u5316\u4ee3\u7801Ctrl+Alt+L\u3002\n\u5207\u6362\u7a97\u53e3\uff1aAlt+Num\uff0c\u5e38\u7528\u7684\u67091-\u9879\u76ee\u7ed3\u6784\uff0c3-\u641c\u7d22\u7ed3\u679c\uff0c4/5-\u8fd0\u884c\u8c03\u8bd5\u3002Ctrl+Tab\u5207\u6362\u6807\u7b7e\u9875\uff0cCtrl+E/Ctrl+Shift+E\u6253\u5f00\u6700\u8fd1\u6253\u5f00\u8fc7\u7684\u6216\u7f16\u8f91\u8fc7\u7684\u6587\u4ef6\u3002\n\u5355\u5143\u6d4b\u8bd5\uff1aCtrl+Alt+T\u521b\u5efa\u5355\u5143\u6d4b\u8bd5\u7528\u4f8b\u3002\n\u8fd0\u884c\uff1aAlt+Shift+F10\u8fd0\u884c\u7a0b\u5e8f\uff0cShift+F9\u542f\u52a8\u8c03\u8bd5\uff0cCtrl+F2\u505c\u6b62\u3002\n\u8c03\u8bd5\uff1aF7/F8/F9 \u5206\u522b\u5bf9\u5e94Step into\uff0cStep over\uff0cContinue\u3002\n\u6b64\u5916\u8fd8\u6709\u4e9b\u6211\u81ea\u5b9a\u4e49\u7684\uff0c\u4f8b\u5982\u6c34\u5e73\u5206\u5c4fCtrl+|\u7b49\uff0c\u548c\u4e00\u4e9b\u795e\u5947\u7684\u5c0f\u529f\u80fdCtrl+Shift+V\u7c98\u8d34\u5f88\u65e9\u4ee5\u524d\u62f7\u8d1d\u8fc7\u7684\uff0cAlt+Shift+Insert\u8fdb\u5165\u5230\u5217\u6a21\u5f0f\u8fdb\u884c\u6309\u5217\u9009\u4e2d\u3002\nTop #10\u5207\u6765\u5207\u53bb\uff1aCtrl+Tab\nTop #9\u9009\u4f60\u6240\u60f3\uff1aCtrl+W\nTop #8\u4ee3\u7801\u751f\u6210\uff1aTemplate/Postfix +Tab\nTop #7\u53d1\u53f7\u65bd\u4ee4\uff1aCtrl+Shift+A\nTop #6\u65e0\u5904\u85cf\u8eab\uff1aShift+Shift\nTop #5\u81ea\u52a8\u5b8c\u6210\uff1aCtrl+Shift+Enter\nTop #4\u521b\u9020\u4e07\u7269\uff1aAlt+Insert\n\u592a\u96be\u5272\u820d\uff0c\u524d\u4e09\u540d\u5e76\u5217\u5427\uff01\nTop #1\u667a\u80fd\u8865\u5168\uff1aCtrl+Shift+Space\nTop #1\u81ea\u6211\u4fee\u590d\uff1aAlt+Enter\nTop #1\u91cd\u6784\u4e00\u5207\uff1aCtrl+Shift+Alt+T\nCTRL+ALT+ left/right \u524d\u540e\u5bfc\u822a\u7f16\u8f91\u8fc7\u7684\u5730\u65b9\nCtrl\uff0bShift\uff0bBackspace\u53ef\u4ee5\u8df3\u8f6c\u5230\u4e0a\u6b21\u7f16\u8f91\u7684\u5730\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Linux", "slug": "Linux", "permalink": "/Xuxx_Blogs/tag/Linux/"}]}, {"title": "Liunx\u5e38\u7528\u547d\u4ee4\u5927\u5168", "date": "2020-12-19T22:55:00-00.00", "path": "/Xuxx_Blogs/archives/bj41/", "text": "\u7aef\u53e3\u76d1\u542c\u67e5\u770b\uff1a\nss -tln \u67e5\u770bTCP\u7684listen\u7684\u7aef\u53e3\nss -tlnp \u67e5\u770b\u54ea\u4e9b\u8fdb\u7a0b\u4f7f\u7528\u4e86\u76d1\u542c\u7aef\u53e3\n\u9632\u706b\u5899\nsystemctl status iptables (\u6216service iptables status) \u67e5\u770b\u9632\u706b\u5899\u72b6\u6001\nsystemctl stop iptables(\u6216service iptables stop) \u5173\u95ed\u9632\u706b\u5899\n\u7cfb\u7edf\u4fe1\u606f\ncurl ifconfig.me \u67e5\u627e\u672c\u673a\u516c\u7f51IP\narch \u663e\u793a\u673a\u5668\u7684\u5904\u7406\u5668\u67b6\u6784(1)\nuname -m \u663e\u793a\u673a\u5668\u7684\u5904\u7406\u5668\u67b6\u6784(2)\nuname -r \u663e\u793a\u6b63\u5728\u4f7f\u7528\u7684\u5185\u6838\u7248\u672c\ndmidecode -q \u663e\u793a\u786c\u4ef6\u7cfb\u7edf\u90e8\u4ef6 - (SMBIOS / DMI)\nhdparm -i /dev/hda \u7f57\u5217\u4e00\u4e2a\u78c1\u76d8\u7684\u67b6\u6784\u7279\u6027\nhdparm -tT /dev/sda \u5728\u78c1\u76d8\u4e0a\u6267\u884c\u6d4b\u8bd5\u6027\u8bfb\u53d6\u64cd\u4f5c\ncat /proc/cpuinfo \u663e\u793aCPU info\u7684\u4fe1\u606f\ncat /proc/interrupts \u663e\u793a\u4e2d\u65ad\ncat /proc/meminfo \u6821\u9a8c\u5185\u5b58\u4f7f\u7528\ncat /proc/swaps \u663e\u793a\u54ea\u4e9bswap\u88ab\u4f7f\u7528\ncat /proc/version \u663e\u793a\u5185\u6838\u7684\u7248\u672c\ncat /proc/net/dev \u663e\u793a\u7f51\u7edc\u9002\u914d\u5668\u53ca\u7edf\u8ba1\ncat /proc/mounts \u663e\u793a\u5df2\u52a0\u8f7d\u7684\u6587\u4ef6\u7cfb\u7edf\nlspci -tv \u7f57\u5217 PCI \u8bbe\u5907\nlsusb -tv \u663e\u793a USB \u8bbe\u5907\ndate \u663e\u793a\u7cfb\u7edf\u65e5\u671f\ncal 2007 \u663e\u793a2007\u5e74\u7684\u65e5\u5386\u8868\ndate 041217002007.00 \u8bbe\u7f6e\u65e5\u671f\u548c\u65f6\u95f4 - \u6708\u65e5\u65f6\u5206\u5e74.\u79d2\nclock -w \u5c06\u65f6\u95f4\u4fee\u6539\u4fdd\u5b58\u5230 BIOS\nps \u547d\u4ee4\u5e38\u7528\u7528\u6cd5\uff08\u65b9\u4fbf\u67e5\u770b\u7cfb\u7edf\u8fdb\u7a0b\uff09\n1\uff09ps a \u663e\u793a\u73b0\u884c\u7ec8\u7aef\u673a\u4e0b\u7684\u6240\u6709\u7a0b\u5e8f\uff0c\u5305\u62ec\u5176\u4ed6\u7528\u6237\u7684\u7a0b\u5e8f\u3002\n2\uff09ps -A \u663e\u793a\u6240\u6709\u8fdb\u7a0b\u3002\n3\uff09ps c \u5217\u51fa\u7a0b\u5e8f\u65f6\uff0c\u663e\u793a\u6bcf\u4e2a\u7a0b\u5e8f\u771f\u6b63\u7684\u6307\u4ee4\u540d\u79f0\uff0c\u800c\u4e0d\u5305\u542b\u8def\u5f84\uff0c\u53c2\u6570\u6216\u5e38\u9a7b\u670d\u52a1\u7684\u6807\u793a\u3002\n4\uff09ps -e \u6b64\u53c2\u6570\u7684\u6548\u679c\u548c\u6307\u5b9a\"A\"\u53c2\u6570\u76f8\u540c\u3002\n5\uff09ps e \u5217\u51fa\u7a0b\u5e8f\u65f6\uff0c\u663e\u793a\u6bcf\u4e2a\u7a0b\u5e8f\u6240\u4f7f\u7528\u7684\u73af\u5883\u53d8\u91cf\u3002\n6\uff09ps f \u7528ASCII\u5b57\u7b26\u663e\u793a\u6811\u72b6\u7ed3\u6784\uff0c\u8868\u8fbe\u7a0b\u5e8f\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u3002\n7\uff09ps -H \u663e\u793a\u6811\u72b6\u7ed3\u6784\uff0c\u8868\u793a\u7a0b\u5e8f\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\u3002\n8\uff09ps -N \u663e\u793a\u6240\u6709\u7684\u7a0b\u5e8f\uff0c\u9664\u4e86\u6267\u884cps\u6307\u4ee4\u7ec8\u7aef\u673a\u4e0b\u7684\u7a0b\u5e8f\u4e4b\u5916\u3002\n9\uff09ps s \u91c7\u7528\u7a0b\u5e8f\u4fe1\u53f7\u7684\u683c\u5f0f\u663e\u793a\u7a0b\u5e8f\u72b6\u51b5\u3002\n10\uff09ps S \u5217\u51fa\u7a0b\u5e8f\u65f6\uff0c\u5305\u62ec\u5df2\u4e2d\u65ad\u7684\u5b50\u7a0b\u5e8f\u8d44\u6599\u3002\n11\uff09ps -t \u3000\u6307\u5b9a\u7ec8\u7aef\u673a\u7f16\u53f7\uff0c\u5e76\u5217\u51fa\u5c5e\u4e8e\u8be5\u7ec8\u7aef\u673a\u7684\u7a0b\u5e8f\u7684\u72b6\u51b5\u3002\n12\uff09ps u \u3000\u4ee5\u7528\u6237\u4e3a\u4e3b\u7684\u683c\u5f0f\u6765\u663e\u793a\u7a0b\u5e8f\u72b6\u51b5\u3002\n13\uff09ps x \u3000\u663e\u793a\u6240\u6709\u7a0b\u5e8f\uff0c\u4e0d\u4ee5\u7ec8\u7aef\u673a\u6765\u533a\u5206\u3002\n\u5e38\u7528\u6307\u4ee4\u7ec4\u5408 \uff1aps aux,\u7136\u540e\u518d\u901a\u8fc7\u7ba1\u9053\u4f7f\u7528grep\u547d\u4ee4\u8fc7\u6ee4\u67e5\u627e\u7279\u5b9a\u7684\u8fdb\u7a0b,\u7136\u540e\u518d\u5bf9\u7279\u5b9a\u7684\u8fdb\u7a0b\u8fdb\u884c\u64cd\u4f5c\u3002\nps aux | grep program_filter_word,ps -ef |grep tomcat\nps -ef|grep java|grep -v grep \u663e\u793a\u51fa\u6240\u6709\u7684java\u8fdb\u7a0b\uff0c\u53bb\u5904\u6389\u5f53\u524d\u7684grep\u8fdb\u7a0b\u3002\n\u5173\u673a (\u7cfb\u7edf\u7684\u5173\u673a\u3001\u91cd\u542f\u4ee5\u53ca\u767b\u51fa )\nshutdown -h now \u5173\u95ed\u7cfb\u7edf(1)\ninit 0 \u5173\u95ed\u7cfb\u7edf(2)\ntelinit 0 \u5173\u95ed\u7cfb\u7edf(3)\nshutdown -h hours:minutes &amp; \u6309\u9884\u5b9a\u65f6\u95f4\u5173\u95ed\u7cfb\u7edf\nshutdown -c \u53d6\u6d88\u6309\u9884\u5b9a\u65f6\u95f4\u5173\u95ed\u7cfb\u7edf\nshutdown -r now \u91cd\u542f(1)\nreboot \u91cd\u542f(2)\nlogout \u6ce8\u9500\n\u6587\u4ef6\u548c\u76ee\u5f55\ncd /home \u8fdb\u5165 '/ home' \u76ee\u5f55'\ncd .. \u8fd4\u56de\u4e0a\u4e00\u7ea7\u76ee\u5f55\ncd ../.. \u8fd4\u56de\u4e0a\u4e24\u7ea7\u76ee\u5f55\ncd \u8fdb\u5165\u4e2a\u4eba\u7684\u4e3b\u76ee\u5f55\ncd ~user1 \u8fdb\u5165\u4e2a\u4eba\u7684\u4e3b\u76ee\u5f55\ncd - \u8fd4\u56de\u4e0a\u6b21\u6240\u5728\u7684\u76ee\u5f55\npwd \u663e\u793a\u5de5\u4f5c\u8def\u5f84\nls \u67e5\u770b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\nls -F \u67e5\u770b\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6\nls -l \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u8be6\u7ec6\u8d44\u6599\nls -a \u663e\u793a\u9690\u85cf\u6587\u4ef6\nls [0-9] \u663e\u793a\u5305\u542b\u6570\u5b57\u7684\u6587\u4ef6\u540d\u548c\u76ee\u5f55\u540d\ntree \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7531\u6839\u76ee\u5f55\u5f00\u59cb\u7684\u6811\u5f62\u7ed3\u6784(1)\nlstree \u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7531\u6839\u76ee\u5f55\u5f00\u59cb\u7684\u6811\u5f62\u7ed3\u6784(2)\nmkdir dir1 \u521b\u5efa\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55'\nmkdir dir1 dir2 \u540c\u65f6\u521b\u5efa\u4e24\u4e2a\u76ee\u5f55\nmkdir -p /tmp/dir1/dir2 \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u6811\nrm -f file1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'file1' \u7684\u6587\u4ef6'\nrmdir dir1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55'\nrm -rf dir1 \u5220\u9664\u4e00\u4e2a\u53eb\u505a 'dir1' \u7684\u76ee\u5f55\u5e76\u540c\u65f6\u5220\u9664\u5176\u5185\u5bb9\nrm -rf dir1 dir2 \u540c\u65f6\u5220\u9664\u4e24\u4e2a\u76ee\u5f55\u53ca\u5b83\u4eec\u7684\u5185\u5bb9\nmv dir1 new_dir \u91cd\u547d\u540d/\u79fb\u52a8 \u4e00\u4e2a\u76ee\u5f55\ncp file1 file2 \u590d\u5236\u4e00\u4e2a\u6587\u4ef6\ncp dir/* . \u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\ncp -a /tmp/dir1 . \u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u5230\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\ncp -a dir1 dir2 \u590d\u5236\u4e00\u4e2a\u76ee\u5f55\nln -s file1 lnk1 \u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u8f6f\u94fe\u63a5\nln file1 lnk1 \u521b\u5efa\u4e00\u4e2a\u6307\u5411\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u7269\u7406\u94fe\u63a5\ntouch -t 0712250000 file1 \u4fee\u6539\u4e00\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u65f6\u95f4\u6233 - (YYMMDDhhmm)\nfile file1 outputs the mime type of the file as text\niconv -l \u5217\u51fa\u5df2\u77e5\u7684\u7f16\u7801\niconv -f fromEncoding -t toEncoding inputFile &gt; outputFile creates a new from the given input file by assuming it is encoded in fromEncoding and converting it to toEncoding.\nfind . -maxdepth 1 -name *.jpg -print -exec convert \"{}\" -resize 80x60 \"thumbs/{}\" \\; batch resize files in the current directory and send them to a thumbnails directory (requires convert from Imagemagick)\n\u6587\u4ef6\u641c\u7d22\nfind / -name file1 \u4ece '/' \u5f00\u59cb\u8fdb\u5165\u6839\u6587\u4ef6\u7cfb\u7edf\u641c\u7d22\u6587\u4ef6\u548c\u76ee\u5f55\nfind / -user user1 \u641c\u7d22\u5c5e\u4e8e\u7528\u6237 'user1' \u7684\u6587\u4ef6\u548c\u76ee\u5f55\nfind /home/user1 -name *.bin \u5728\u76ee\u5f55 '/ home/user1' \u4e2d\u641c\u7d22\u5e26\u6709'.bin' \u7ed3\u5c3e\u7684\u6587\u4ef6\nfind /usr/bin -type f -atime +100 \u641c\u7d22\u5728\u8fc7\u53bb100\u5929\u5185\u672a\u88ab\u4f7f\u7528\u8fc7\u7684\u6267\u884c\u6587\u4ef6\nfind /usr/bin -type f -mtime -10 \u641c\u7d22\u572810\u5929\u5185\u88ab\u521b\u5efa\u6216\u8005\u4fee\u6539\u8fc7\u7684\u6587\u4ef6\nfind / -name *.rpm -exec chmod 755 '{}' \\; \u641c\u7d22\u4ee5 '.rpm' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5e76\u5b9a\u4e49\u5176\u6743\u9650\nfind / -xdev -name *.rpm \u641c\u7d22\u4ee5 '.rpm' \u7ed3\u5c3e\u7684\u6587\u4ef6\uff0c\u5ffd\u7565\u5149\u9a71\u3001\u6377\u76d8\u7b49\u53ef\u79fb\u52a8\u8bbe\u5907\nlocate *.ps \u5bfb\u627e\u4ee5 '.ps' \u7ed3\u5c3e\u7684\u6587\u4ef6 - \u5148\u8fd0\u884c 'updatedb' \u547d\u4ee4\nwhereis halt \u663e\u793a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u3001\u6e90\u7801\u6216man\u7684\u4f4d\u7f6e\nwhich halt \u663e\u793a\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u6216\u53ef\u6267\u884c\u6587\u4ef6\u7684\u5b8c\u6574\u8def\u5f84\n\u6302\u8f7d\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\nmount /dev/hda2 /mnt/hda2 \u6302\u8f7d\u4e00\u4e2a\u53eb\u505ahda2\u7684\u76d8 - \u786e\u5b9a\u76ee\u5f55 '/ mnt/hda2' \u5df2\u7ecf\u5b58\u5728\numount /dev/hda2 \u5378\u8f7d\u4e00\u4e2a\u53eb\u505ahda2\u7684\u76d8 - \u5148\u4ece\u6302\u8f7d\u70b9 '/ mnt/hda2' \u9000\u51fa\nfuser -km /mnt/hda2 \u5f53\u8bbe\u5907\u7e41\u5fd9\u65f6\u5f3a\u5236\u5378\u8f7d\numount -n /mnt/hda2 \u8fd0\u884c\u5378\u8f7d\u64cd\u4f5c\u800c\u4e0d\u5199\u5165 /etc/mtab \u6587\u4ef6- \u5f53\u6587\u4ef6\u4e3a\u53ea\u8bfb\u6216\u5f53\u78c1\u76d8\u5199\u6ee1\u65f6\u975e\u5e38\u6709\u7528\nmount /dev/fd0 /mnt/floppy \u6302\u8f7d\u4e00\u4e2a\u8f6f\u76d8\nmount /dev/cdrom /mnt/cdrom \u6302\u8f7d\u4e00\u4e2acdrom\u6216dvdrom\nmount /dev/hdc /mnt/cdrecorder \u6302\u8f7d\u4e00\u4e2acdrw\u6216dvdrom\nmount /dev/hdb /mnt/cdrecorder \u6302\u8f7d\u4e00\u4e2acdrw\u6216dvdrom\nmount -o loop file.iso /mnt/cdrom \u6302\u8f7d\u4e00\u4e2a\u6587\u4ef6\u6216ISO\u955c\u50cf\u6587\u4ef6\nmount -t vfat /dev/hda5 /mnt/hda5 \u6302\u8f7d\u4e00\u4e2aWindows FAT32\u6587\u4ef6\u7cfb\u7edf\nmount /dev/sda1 /mnt/usbdisk \u6302\u8f7d\u4e00\u4e2ausb \u6377\u76d8\u6216\u95ea\u5b58\u8bbe\u5907\nmount -t smbfs -o username=user,password=pass //WinClient/share /mnt/share \u6302\u8f7d\u4e00\u4e2awindows\u7f51\u7edc\u5171\u4eab\n\u78c1\u76d8\u7a7a\u95f4\ndf -h \u663e\u793a\u5df2\u7ecf\u6302\u8f7d\u7684\u5206\u533a\u5217\u8868\nls -lSr |more \u4ee5\u5c3a\u5bf8\u5927\u5c0f\u6392\u5217\u6587\u4ef6\u548c\u76ee\u5f55\ndu -sh dir1 \u4f30\u7b97\u76ee\u5f55 'dir1' \u5df2\u7ecf\u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4'\ndu -sk * | sort -rn \u4ee5\u5bb9\u91cf\u5927\u5c0f\u4e3a\u4f9d\u636e\u4f9d\u6b21\u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u7684\u5927\u5c0f\nrpm -q -a --qf '%10{SIZE}t%{NAME}n' | sort -k1,1n \u4ee5\u5927\u5c0f\u4e3a\u4f9d\u636e\u4f9d\u6b21\u663e\u793a\u5df2\u5b89\u88c5\u7684rpm\u5305\u6240\u4f7f\u7528\u7684\u7a7a\u95f4 (fedora, redhat\u7c7b\u7cfb\u7edf)\ndpkg-query -W -f='${Installed-Size;10}t${Package}n' | sort -k1,1n \u4ee5\u5927\u5c0f\u4e3a\u4f9d\u636e\u663e\u793a\u5df2\u5b89\u88c5\u7684deb\u5305\u6240\u4f7f\u7528\u7684\u7a7a\u95f4 (ubuntu, debian\u7c7b\u7cfb\u7edf)\n\u7528\u6237\u548c\u7fa4\u7ec4\ngroupadd group_name \u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237\u7ec4\ngroupdel group_name \u5220\u9664\u4e00\u4e2a\u7528\u6237\u7ec4\ngroupmod -n new_group_name old_group_name \u91cd\u547d\u540d\u4e00\u4e2a\u7528\u6237\u7ec4\nuseradd -c \"Name Surname \" -g admin -d /home/user1 -s /bin/bash user1 \u521b\u5efa\u4e00\u4e2a\u5c5e\u4e8e \"admin\" \u7528\u6237\u7ec4\u7684\u7528\u6237\nuseradd user1 \u521b\u5efa\u4e00\u4e2a\u65b0\u7528\u6237\nuserdel -r user1 \u5220\u9664\u4e00\u4e2a\u7528\u6237 ( '-r' \u6392\u9664\u4e3b\u76ee\u5f55)\nusermod -c \"User FTP\" -g system -d /ftp/user1 -s /bin/nologin user1 \u4fee\u6539\u7528\u6237\u5c5e\u6027\npasswd \u4fee\u6539\u53e3\u4ee4\npasswd user1 \u4fee\u6539\u4e00\u4e2a\u7528\u6237\u7684\u53e3\u4ee4 (\u53ea\u5141\u8bb8root\u6267\u884c)\nchage -E 2005-12-31 user1 \u8bbe\u7f6e\u7528\u6237\u53e3\u4ee4\u7684\u5931\u6548\u671f\u9650\npwck \u68c0\u67e5 '/etc/passwd' \u7684\u6587\u4ef6\u683c\u5f0f\u548c\u8bed\u6cd5\u4fee\u6b63\u4ee5\u53ca\u5b58\u5728\u7684\u7528\u6237\ngrpck \u68c0\u67e5 '/etc/passwd' \u7684\u6587\u4ef6\u683c\u5f0f\u548c\u8bed\u6cd5\u4fee\u6b63\u4ee5\u53ca\u5b58\u5728\u7684\u7fa4\u7ec4\nnewgrp group_name \u767b\u9646\u8fdb\u4e00\u4e2a\u65b0\u7684\u7fa4\u7ec4\u4ee5\u6539\u53d8\u65b0\u521b\u5efa\u6587\u4ef6\u7684\u9884\u8bbe\u7fa4\u7ec4\n\u6587\u4ef6\u7684\u6743\u9650 - \u4f7f\u7528 \"+\" \u8bbe\u7f6e\u6743\u9650\uff0c\u4f7f\u7528 \"-\" \u7528\u4e8e\u53d6\u6d88\nls -lh \u663e\u793a\u6743\u9650\nls /tmp | pr -T5 -W$COLUMNS \u5c06\u7ec8\u7aef\u5212\u5206\u62105\u680f\u663e\u793a\nchmod ugo+rwx directory1 \u8bbe\u7f6e\u76ee\u5f55\u7684\u6240\u6709\u4eba(u)\u3001\u7fa4\u7ec4(g)\u4ee5\u53ca\u5176\u4ed6\u4eba(o)\u4ee5\u8bfb\uff08r \uff09\u3001\u5199(w)\u548c\u6267\u884c(x)\u7684\u6743\u9650\nchmod go-rwx directory1 \u5220\u9664\u7fa4\u7ec4(g)\u4e0e\u5176\u4ed6\u4eba(o)\u5bf9\u76ee\u5f55\u7684\u8bfb\u5199\u6267\u884c\u6743\u9650\nchown user1 file1 \u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u4eba\u5c5e\u6027\nchown -R user1 directory1 \u6539\u53d8\u4e00\u4e2a\u76ee\u5f55\u7684\u6240\u6709\u4eba\u5c5e\u6027\u5e76\u540c\u65f6\u6539\u53d8\u6539\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u7684\u5c5e\u6027\nchgrp group1 file1 \u6539\u53d8\u6587\u4ef6\u7684\u7fa4\u7ec4\nchown user1:group1 file1 \u6539\u53d8\u4e00\u4e2a\u6587\u4ef6\u7684\u6240\u6709\u4eba\u548c\u7fa4\u7ec4\u5c5e\u6027\nfind / -perm -u+s \u7f57\u5217\u4e00\u4e2a\u7cfb\u7edf\u4e2d\u6240\u6709\u4f7f\u7528\u4e86SUID\u63a7\u5236\u7684\u6587\u4ef6\nchmod u+s /bin/file1 \u8bbe\u7f6e\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 SUID \u4f4d - \u8fd0\u884c\u8be5\u6587\u4ef6\u7684\u7528\u6237\u4e5f\u88ab\u8d4b\u4e88\u548c\u6240\u6709\u8005\u540c\u6837\u7684\u6743\u9650\nchmod u-s /bin/file1 \u7981\u7528\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684 SUID\u4f4d\nchmod g+s /home/public \u8bbe\u7f6e\u4e00\u4e2a\u76ee\u5f55\u7684SGID \u4f4d - \u7c7b\u4f3cSUID \uff0c\u4e0d\u8fc7\u8fd9\u662f\u9488\u5bf9\u76ee\u5f55\u7684\nchmod g-s /home/public \u7981\u7528\u4e00\u4e2a\u76ee\u5f55\u7684 SGID \u4f4d\nchmod o+t /home/public \u8bbe\u7f6e\u4e00\u4e2a\u6587\u4ef6\u7684 STIKY \u4f4d - \u53ea\u5141\u8bb8\u5408\u6cd5\u6240\u6709\u4eba\u5220\u9664\u6587\u4ef6\nchmod o-t /home/public \u7981\u7528\u4e00\u4e2a\u76ee\u5f55\u7684 STIKY \u4f4d\n\u6587\u4ef6\u7684\u7279\u6b8a\u5c5e\u6027 - \u4f7f\u7528 \"+\" \u8bbe\u7f6e\u6743\u9650\uff0c\u4f7f\u7528 \"-\" \u7528\u4e8e\u53d6\u6d88\nchattr +a file1 \u53ea\u5141\u8bb8\u4ee5\u8ffd\u52a0\u65b9\u5f0f\u8bfb\u5199\u6587\u4ef6\nchattr +c file1 \u5141\u8bb8\u8fd9\u4e2a\u6587\u4ef6\u80fd\u88ab\u5185\u6838\u81ea\u52a8\u538b\u7f29/\u89e3\u538b\nchattr +d file1 \u5728\u8fdb\u884c\u6587\u4ef6\u7cfb\u7edf\u5907\u4efd\u65f6\uff0cdump\u7a0b\u5e8f\u5c06\u5ffd\u7565\u8fd9\u4e2a\u6587\u4ef6\nchattr +i file1 \u8bbe\u7f6e\u6210\u4e0d\u53ef\u53d8\u7684\u6587\u4ef6\uff0c\u4e0d\u80fd\u88ab\u5220\u9664\u3001\u4fee\u6539\u3001\u91cd\u547d\u540d\u6216\u8005\u94fe\u63a5\nchattr +s file1 \u5141\u8bb8\u4e00\u4e2a\u6587\u4ef6\u88ab\u5b89\u5168\u5730\u5220\u9664\nchattr +S file1 \u4e00\u65e6\u5e94\u7528\u7a0b\u5e8f\u5bf9\u8fd9\u4e2a\u6587\u4ef6\u6267\u884c\u4e86\u5199\u64cd\u4f5c\uff0c\u4f7f\u7cfb\u7edf\u7acb\u523b\u628a\u4fee\u6539\u7684\u7ed3\u679c\u5199\u5230\u78c1\u76d8\nchattr +u file1 \u82e5\u6587\u4ef6\u88ab\u5220\u9664\uff0c\u7cfb\u7edf\u4f1a\u5141\u8bb8\u4f60\u5728\u4ee5\u540e\u6062\u590d\u8fd9\u4e2a\u88ab\u5220\u9664\u7684\u6587\u4ef6\nlsattr \u663e\u793a\u7279\u6b8a\u7684\u5c5e\u6027\n\u6253\u5305\u548c\u538b\u7f29\u6587\u4ef6\nbunzip2 file1.bz2 \u89e3\u538b\u4e00\u4e2a\u53eb\u505a 'file1.bz2'\u7684\u6587\u4ef6\nbzip2 file1 \u538b\u7f29\u4e00\u4e2a\u53eb\u505a 'file1' \u7684\u6587\u4ef6\ngunzip file1.gz \u89e3\u538b\u4e00\u4e2a\u53eb\u505a 'file1.gz'\u7684\u6587\u4ef6\ngzip file1 \u538b\u7f29\u4e00\u4e2a\u53eb\u505a 'file1'\u7684\u6587\u4ef6\ngzip -9 file1 \u6700\u5927\u7a0b\u5ea6\u538b\u7f29\nrar a file1.rar test_file \u521b\u5efa\u4e00\u4e2a\u53eb\u505a 'file1.rar' \u7684\u5305\nrar a file1.rar file1 file2 dir1 \u540c\u65f6\u538b\u7f29 'file1', 'file2' \u4ee5\u53ca\u76ee\u5f55 'dir1'\nrar x file1.rar \u89e3\u538brar\u5305\nunrar x file1.rar \u89e3\u538brar\u5305\ntar -cvf archive.tar file1 \u521b\u5efa\u4e00\u4e2a\u975e\u538b\u7f29\u7684 tarball\ntar -cvf archive.tar file1 file2 dir1 \u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e86 'file1', 'file2' \u4ee5\u53ca 'dir1'\u7684\u6863\u6848\u6587\u4ef6\ntar -tf archive.tar \u663e\u793a\u4e00\u4e2a\u5305\u4e2d\u7684\u5185\u5bb9\ntar -xvf archive.tar \u91ca\u653e\u4e00\u4e2a\u5305\ntar -xvf archive.tar -C /tmp \u5c06\u538b\u7f29\u5305\u91ca\u653e\u5230 /tmp\u76ee\u5f55\u4e0b\ntar -cvfj archive.tar.bz2 dir1 \u521b\u5efa\u4e00\u4e2abzip2\u683c\u5f0f\u7684\u538b\u7f29\u5305\ntar -xvfj archive.tar.bz2 \u89e3\u538b\u4e00\u4e2abzip2\u683c\u5f0f\u7684\u538b\u7f29\u5305\ntar -cvfz archive.tar.gz dir1 \u521b\u5efa\u4e00\u4e2agzip\u683c\u5f0f\u7684\u538b\u7f29\u5305\ntar -xvfz archive.tar.gz \u89e3\u538b\u4e00\u4e2agzip\u683c\u5f0f\u7684\u538b\u7f29\u5305\nzip file1.zip file1 \u521b\u5efa\u4e00\u4e2azip\u683c\u5f0f\u7684\u538b\u7f29\u5305\nzip -r file1.zip file1 file2 dir1 \u5c06\u51e0\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u540c\u65f6\u538b\u7f29\u6210\u4e00\u4e2azip\u683c\u5f0f\u7684\u538b\u7f29\u5305\nunzip file1.zip \u89e3\u538b\u4e00\u4e2azip\u683c\u5f0f\u538b\u7f29\u5305\nRPM \u5305 - \uff08Fedora, Redhat\u53ca\u7c7b\u4f3c\u7cfb\u7edf\uff09\nrpm -ivh package.rpm \u5b89\u88c5\u4e00\u4e2arpm\u5305\nrpm -ivh --nodeeps package.rpm \u5b89\u88c5\u4e00\u4e2arpm\u5305\u800c\u5ffd\u7565\u4f9d\u8d56\u5173\u7cfb\u8b66\u544a\nrpm -U package.rpm \u66f4\u65b0\u4e00\u4e2arpm\u5305\u4f46\u4e0d\u6539\u53d8\u5176\u914d\u7f6e\u6587\u4ef6\nrpm -F package.rpm \u66f4\u65b0\u4e00\u4e2a\u786e\u5b9a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\nrpm -e package_name.rpm \u5220\u9664\u4e00\u4e2arpm\u5305\nrpm -qa \u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\nrpm -qa | grep httpd \u663e\u793a\u6240\u6709\u540d\u79f0\u4e2d\u5305\u542b \"httpd\" \u5b57\u6837\u7684rpm\u5305\nrpm -qi package_name \u83b7\u53d6\u4e00\u4e2a\u5df2\u5b89\u88c5\u5305\u7684\u7279\u6b8a\u4fe1\u606f\nrpm -qg \"System Environment/Daemons\" \u663e\u793a\u4e00\u4e2a\u7ec4\u4ef6\u7684rpm\u5305\nrpm -ql package_name \u663e\u793a\u4e00\u4e2a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868\nrpm -qc package_name \u663e\u793a\u4e00\u4e2a\u5df2\u7ecf\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u914d\u7f6e\u6587\u4ef6\u5217\u8868\nrpm -q package_name --whatrequires \u663e\u793a\u4e0e\u4e00\u4e2arpm\u5305\u5b58\u5728\u4f9d\u8d56\u5173\u7cfb\u7684\u5217\u8868\nrpm -q package_name --whatprovides \u663e\u793a\u4e00\u4e2arpm\u5305\u6240\u5360\u7684\u4f53\u79ef\nrpm -q package_name --scripts \u663e\u793a\u5728\u5b89\u88c5/\u5220\u9664\u671f\u95f4\u6240\u6267\u884c\u7684\u811a\u672cl\nrpm -q package_name --changelog \u663e\u793a\u4e00\u4e2arpm\u5305\u7684\u4fee\u6539\u5386\u53f2\nrpm -qf /etc/httpd/conf/httpd.conf \u786e\u8ba4\u6240\u7ed9\u7684\u6587\u4ef6\u7531\u54ea\u4e2arpm\u5305\u6240\u63d0\u4f9b\nrpm -qp package.rpm -l \u663e\u793a\u7531\u4e00\u4e2a\u5c1a\u672a\u5b89\u88c5\u7684rpm\u5305\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868\nrpm --import /media/cdrom/RPM-GPG-KEY \u5bfc\u5165\u516c\u94a5\u6570\u5b57\u8bc1\u4e66\nrpm --checksig package.rpm \u786e\u8ba4\u4e00\u4e2arpm\u5305\u7684\u5b8c\u6574\u6027\nrpm -qa gpg-pubkey \u786e\u8ba4\u5df2\u5b89\u88c5\u7684\u6240\u6709rpm\u5305\u7684\u5b8c\u6574\u6027\nrpm -V package_name \u68c0\u67e5\u6587\u4ef6\u5c3a\u5bf8\u3001 \u8bb8\u53ef\u3001\u7c7b\u578b\u3001\u6240\u6709\u8005\u3001\u7fa4\u7ec4\u3001MD5\u68c0\u67e5\u4ee5\u53ca\u6700\u540e\u4fee\u6539\u65f6\u95f4\nrpm -Va \u68c0\u67e5\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u5b89\u88c5\u7684rpm\u5305- \u5c0f\u5fc3\u4f7f\u7528\nrpm -Vp package.rpm \u786e\u8ba4\u4e00\u4e2arpm\u5305\u8fd8\u672a\u5b89\u88c5\nrpm2cpio package.rpm | cpio --extract --make-directories bin \u4ece\u4e00\u4e2arpm\u5305\u8fd0\u884c\u53ef\u6267\u884c\u6587\u4ef6\nrpm -ivh /usr/src/redhat/RPMS/arch/package.rpm \u4ece\u4e00\u4e2arpm\u6e90\u7801\u5b89\u88c5\u4e00\u4e2a\u6784\u5efa\u597d\u7684\u5305\nrpmbuild --rebuild package_name.src.rpm \u4ece\u4e00\u4e2arpm\u6e90\u7801\u6784\u5efa\u4e00\u4e2a rpm \u5305\nYUM \u8f6f\u4ef6\u5305\u5347\u7ea7\u5668 - \uff08Fedora, RedHat\u53ca\u7c7b\u4f3c\u7cfb\u7edf\uff09\nyum install package_name \u4e0b\u8f7d\u5e76\u5b89\u88c5\u4e00\u4e2arpm\u5305\nyum localinstall package_name.rpm \u5c06\u5b89\u88c5\u4e00\u4e2arpm\u5305\uff0c\u4f7f\u7528\u4f60\u81ea\u5df1\u7684\u8f6f\u4ef6\u4ed3\u5e93\u4e3a\u4f60\u89e3\u51b3\u6240\u6709\u4f9d\u8d56\u5173\u7cfb\nyum update package_name.rpm \u66f4\u65b0\u5f53\u524d\u7cfb\u7edf\u4e2d\u6240\u6709\u5b89\u88c5\u7684rpm\u5305\nyum update package_name \u66f4\u65b0\u4e00\u4e2arpm\u5305\nyum remove package_name \u5220\u9664\u4e00\u4e2arpm\u5305\nyum list \u5217\u51fa\u5f53\u524d\u7cfb\u7edf\u4e2d\u5b89\u88c5\u7684\u6240\u6709\u5305\nyum search package_name \u5728rpm\u4ed3\u5e93\u4e2d\u641c\u5bfb\u8f6f\u4ef6\u5305\nyum clean packages \u6e05\u7406rpm\u7f13\u5b58\u5220\u9664\u4e0b\u8f7d\u7684\u5305\nyum clean headers \u5220\u9664\u6240\u6709\u5934\u6587\u4ef6\nyum clean all \u5220\u9664\u6240\u6709\u7f13\u5b58\u7684\u5305\u548c\u5934\u6587\u4ef6\nDEB \u5305 (Debian, Ubuntu \u4ee5\u53ca\u7c7b\u4f3c\u7cfb\u7edf)\ndpkg -i package.deb \u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305\ndpkg -r package_name \u4ece\u7cfb\u7edf\u5220\u9664\u4e00\u4e2a deb \u5305\ndpkg -l \u663e\u793a\u7cfb\u7edf\u4e2d\u6240\u6709\u5df2\u7ecf\u5b89\u88c5\u7684 deb \u5305\ndpkg -l | grep httpd \u663e\u793a\u6240\u6709\u540d\u79f0\u4e2d\u5305\u542b \"httpd\" \u5b57\u6837\u7684deb\u5305\ndpkg -s package_name \u83b7\u5f97\u5df2\u7ecf\u5b89\u88c5\u5728\u7cfb\u7edf\u4e2d\u4e00\u4e2a\u7279\u6b8a\u5305\u7684\u4fe1\u606f\ndpkg -L package_name \u663e\u793a\u7cfb\u7edf\u4e2d\u5df2\u7ecf\u5b89\u88c5\u7684\u4e00\u4e2adeb\u5305\u6240\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868\ndpkg --contents package.deb \u663e\u793a\u5c1a\u672a\u5b89\u88c5\u7684\u4e00\u4e2a\u5305\u6240\u63d0\u4f9b\u7684\u6587\u4ef6\u5217\u8868\ndpkg -S /bin/ping \u786e\u8ba4\u6240\u7ed9\u7684\u6587\u4ef6\u7531\u54ea\u4e2adeb\u5305\u63d0\u4f9b\nAPT \u8f6f\u4ef6\u5de5\u5177 (Debian, Ubuntu \u4ee5\u53ca\u7c7b\u4f3c\u7cfb\u7edf)\napt-get install package_name \u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305\napt-cdrom install package_name \u4ece\u5149\u76d8\u5b89\u88c5/\u66f4\u65b0\u4e00\u4e2a deb \u5305\napt-get update \u5347\u7ea7\u5217\u8868\u4e2d\u7684\u8f6f\u4ef6\u5305\napt-get upgrade \u5347\u7ea7\u6240\u6709\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\napt-get remove package_name \u4ece\u7cfb\u7edf\u5220\u9664\u4e00\u4e2adeb\u5305\napt-get check \u786e\u8ba4\u4f9d\u8d56\u7684\u8f6f\u4ef6\u4ed3\u5e93\u6b63\u786e\napt-get clean \u4ece\u4e0b\u8f7d\u7684\u8f6f\u4ef6\u5305\u4e2d\u6e05\u7406\u7f13\u5b58\napt-cache search searched-package \u8fd4\u56de\u5305\u542b\u6240\u8981\u641c\u7d22\u5b57\u7b26\u4e32\u7684\u8f6f\u4ef6\u5305\u540d\u79f0\n\u67e5\u770b\u6587\u4ef6\u5185\u5bb9\ncat file1 \u4ece\u7b2c\u4e00\u4e2a\u5b57\u8282\u5f00\u59cb\u6b63\u5411\u67e5\u770b\u6587\u4ef6\u7684\u5185\u5bb9\ntac file1 \u4ece\u6700\u540e\u4e00\u884c\u5f00\u59cb\u53cd\u5411\u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\nmore file1 \u67e5\u770b\u4e00\u4e2a\u957f\u6587\u4ef6\u7684\u5185\u5bb9\nless file1 \u7c7b\u4f3c\u4e8e 'more' \u547d\u4ee4\uff0c\u4f46\u662f\u5b83\u5141\u8bb8\u5728\u6587\u4ef6\u4e2d\u548c\u6b63\u5411\u64cd\u4f5c\u4e00\u6837\u7684\u53cd\u5411\u64cd\u4f5c\nhead -2 file1 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u524d\u4e24\u884c\ntail -2 file1 \u67e5\u770b\u4e00\u4e2a\u6587\u4ef6\u7684\u6700\u540e\u4e24\u884c\ntail -f /var/log/messages \u5b9e\u65f6\u67e5\u770b\u88ab\u6dfb\u52a0\u5230\u4e00\u4e2a\u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\n\u6587\u672c\u5904\u7406\ncat file1 file2 ... | command &lt;&gt; file1_in.txt_or_file1_out.txt general syntax for text manipulation using PIPE, STDIN and STDOUT\ncat file1 | command( sed, grep, awk, grep, etc...) &gt; result.txt \u5408\u5e76\u4e00\u4e2a\u6587\u4ef6\u7684\u8be6\u7ec6\u8bf4\u660e\u6587\u672c\uff0c\u5e76\u5c06\u7b80\u4ecb\u5199\u5165\u4e00\u4e2a\u65b0\u6587\u4ef6\u4e2d\ncat file1 | command( sed, grep, awk, grep, etc...) &gt;&gt; result.txt \u5408\u5e76\u4e00\u4e2a\u6587\u4ef6\u7684\u8be6\u7ec6\u8bf4\u660e\u6587\u672c\uff0c\u5e76\u5c06\u7b80\u4ecb\u5199\u5165\u4e00\u4e2a\u5df2\u6709\u7684\u6587\u4ef6\u4e2d\ngrep Aug /var/log/messages \u5728\u6587\u4ef6 '/var/log/messages'\u4e2d\u67e5\u627e\u5173\u952e\u8bcd\"Aug\"\ngrep ^Aug /var/log/messages \u5728\u6587\u4ef6 '/var/log/messages'\u4e2d\u67e5\u627e\u4ee5\"Aug\"\u5f00\u59cb\u7684\u8bcd\u6c47\ngrep [0-9] /var/log/messages \u9009\u62e9 '/var/log/messages' \u6587\u4ef6\u4e2d\u6240\u6709\u5305\u542b\u6570\u5b57\u7684\u884c\ngrep Aug -R /var/log/* \u5728\u76ee\u5f55 '/var/log' \u53ca\u968f\u540e\u7684\u76ee\u5f55\u4e2d\u641c\u7d22\u5b57\u7b26\u4e32\"Aug\"\nsed 's/stringa1/stringa2/g' example.txt \u5c06example.txt\u6587\u4ef6\u4e2d\u7684 \"string1\" \u66ff\u6362\u6210 \"string2\"\nsed '/^$/d' example.txt \u4eceexample.txt\u6587\u4ef6\u4e2d\u5220\u9664\u6240\u6709\u7a7a\u767d\u884c\nsed '/ *#/d; /^$/d' example.txt \u4eceexample.txt\u6587\u4ef6\u4e2d\u5220\u9664\u6240\u6709\u6ce8\u91ca\u548c\u7a7a\u767d\u884c\necho 'esempio' | tr '[:lower:]' '[:upper:]' \u5408\u5e76\u4e0a\u4e0b\u5355\u5143\u683c\u5185\u5bb9\nsed -e '1d' result.txt \u4ece\u6587\u4ef6example.txt \u4e2d\u6392\u9664\u7b2c\u4e00\u884c\nsed -n '/stringa1/p' \u67e5\u770b\u53ea\u5305\u542b\u8bcd\u6c47 \"string1\"\u7684\u884c\nsed -e 's/ *$//' example.txt \u5220\u9664\u6bcf\u4e00\u884c\u6700\u540e\u7684\u7a7a\u767d\u5b57\u7b26\nsed -e 's/stringa1//g' example.txt \u4ece\u6587\u6863\u4e2d\u53ea\u5220\u9664\u8bcd\u6c47 \"string1\" \u5e76\u4fdd\u7559\u5269\u4f59\u5168\u90e8\nsed -n '1,5p;5q' example.txt \u67e5\u770b\u4ece\u7b2c\u4e00\u884c\u5230\u7b2c5\u884c\u5185\u5bb9\nsed -n '5p;5q' example.txt \u67e5\u770b\u7b2c5\u884c\nsed -e 's/00*/0/g' example.txt \u7528\u5355\u4e2a\u96f6\u66ff\u6362\u591a\u4e2a\u96f6\ncat -n file1 \u6807\u793a\u6587\u4ef6\u7684\u884c\u6570\ncat example.txt | awk 'NR%2==1' \u5220\u9664example.txt\u6587\u4ef6\u4e2d\u7684\u6240\u6709\u5076\u6570\u884c\necho a b c | awk '{print $1}' \u67e5\u770b\u4e00\u884c\u7b2c\u4e00\u680f\necho a b c | awk '{print $1,$3}' \u67e5\u770b\u4e00\u884c\u7684\u7b2c\u4e00\u548c\u7b2c\u4e09\u680f\npaste file1 file2 \u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u6216\u4e24\u680f\u7684\u5185\u5bb9\npaste -d '+' file1 file2 \u5408\u5e76\u4e24\u4e2a\u6587\u4ef6\u6216\u4e24\u680f\u7684\u5185\u5bb9\uff0c\u4e2d\u95f4\u7528\"+\"\u533a\u5206\nsort file1 file2 \u6392\u5e8f\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\nsort file1 file2 | uniq \u53d6\u51fa\u4e24\u4e2a\u6587\u4ef6\u7684\u5e76\u96c6(\u91cd\u590d\u7684\u884c\u53ea\u4fdd\u7559\u4e00\u4efd)\nsort file1 file2 | uniq -u \u5220\u9664\u4ea4\u96c6\uff0c\u7559\u4e0b\u5176\u4ed6\u7684\u884c\nsort file1 file2 | uniq -d \u53d6\u51fa\u4e24\u4e2a\u6587\u4ef6\u7684\u4ea4\u96c6(\u53ea\u7559\u4e0b\u540c\u65f6\u5b58\u5728\u4e8e\u4e24\u4e2a\u6587\u4ef6\u4e2d\u7684\u6587\u4ef6)\ncomm -1 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664 'file1' \u6240\u5305\u542b\u7684\u5185\u5bb9\ncomm -2 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664 'file2' \u6240\u5305\u542b\u7684\u5185\u5bb9\ncomm -3 file1 file2 \u6bd4\u8f83\u4e24\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u53ea\u5220\u9664\u4e24\u4e2a\u6587\u4ef6\u5171\u6709\u7684\u90e8\u5206\n\u5b57\u7b26\u8bbe\u7f6e\u548c\u6587\u4ef6\u683c\u5f0f\u8f6c\u6362\ndos2unix filedos.txt fileunix.txt \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u683c\u5f0f\u4eceMSDOS\u8f6c\u6362\u6210UNIX\nunix2dos fileunix.txt filedos.txt \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u7684\u683c\u5f0f\u4eceUNIX\u8f6c\u6362\u6210MSDOS\nrecode ..HTML &lt; page.txt &gt; page.html \u5c06\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\u8f6c\u6362\u6210html\nrecode -l | more \u663e\u793a\u6240\u6709\u5141\u8bb8\u7684\u8f6c\u6362\u683c\u5f0f\n\u6587\u4ef6\u7cfb\u7edf\u5206\u6790\nbadblocks -v /dev/hda1 \u68c0\u67e5\u78c1\u76d8hda1\u4e0a\u7684\u574f\u78c1\u5757\nfsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0alinux\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\nfsck.ext2 /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext2\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\ne2fsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext2\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\ne2fsck -j /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext3\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\nfsck.ext3 /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0aext3\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\nfsck.vfat /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0afat\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\nfsck.msdos /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0ados\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\ndosfsck /dev/hda1 \u4fee\u590d/\u68c0\u67e5hda1\u78c1\u76d8\u4e0ados\u6587\u4ef6\u7cfb\u7edf\u7684\u5b8c\u6574\u6027\n\u521d\u59cb\u5316\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\nmkfs /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\nmke2fs /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2alinux ext2\u7684\u6587\u4ef6\u7cfb\u7edf\nmke2fs -j /dev/hda1 \u5728hda1\u5206\u533a\u521b\u5efa\u4e00\u4e2alinux ext3(\u65e5\u5fd7\u578b)\u7684\u6587\u4ef6\u7cfb\u7edf\nmkfs -t vfat 32 -F /dev/hda1 \u521b\u5efa\u4e00\u4e2a FAT32 \u6587\u4ef6\u7cfb\u7edf\nfdformat -n /dev/fd0 \u683c\u5f0f\u5316\u4e00\u4e2a\u8f6f\u76d8\nmkswap /dev/hda3 \u521b\u5efa\u4e00\u4e2aswap\u6587\u4ef6\u7cfb\u7edf\nSWAP\u6587\u4ef6\u7cfb\u7edf\nmkswap /dev/hda3 \u521b\u5efa\u4e00\u4e2aswap\u6587\u4ef6\u7cfb\u7edf\nswapon /dev/hda3 \u542f\u7528\u4e00\u4e2a\u65b0\u7684swap\u6587\u4ef6\u7cfb\u7edf\nswapon /dev/hda2 /dev/hdb3 \u542f\u7528\u4e24\u4e2aswap\u5206\u533a\n\u5907\u4efd\ndump -0aj -f /tmp/home0.bak /home \u5236\u4f5c\u4e00\u4e2a '/home' \u76ee\u5f55\u7684\u5b8c\u6574\u5907\u4efd\ndump -1aj -f /tmp/home0.bak /home \u5236\u4f5c\u4e00\u4e2a '/home' \u76ee\u5f55\u7684\u4ea4\u4e92\u5f0f\u5907\u4efd\nrestore -if /tmp/home0.bak \u8fd8\u539f\u4e00\u4e2a\u4ea4\u4e92\u5f0f\u5907\u4efd\nrsync -rogpav --delete /home /tmp \u540c\u6b65\u4e24\u8fb9\u7684\u76ee\u5f55\nrsync -rogpav -e ssh --delete /home ip_address:/tmp \u901a\u8fc7SSH\u901a\u9053rsync\nrsync -az -e ssh --delete ip_addr:/home/public /home/local \u901a\u8fc7ssh\u548c\u538b\u7f29\u5c06\u4e00\u4e2a\u8fdc\u7a0b\u76ee\u5f55\u540c\u6b65\u5230\u672c\u5730\u76ee\u5f55\nrsync -az -e ssh --delete /home/local ip_addr:/home/public \u901a\u8fc7ssh\u548c\u538b\u7f29\u5c06\u672c\u5730\u76ee\u5f55\u540c\u6b65\u5230\u8fdc\u7a0b\u76ee\u5f55\ndd bs=1M if=/dev/hda | gzip | ssh user@ip_addr 'dd of=hda.gz' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u6267\u884c\u4e00\u6b21\u5907\u4efd\u672c\u5730\u78c1\u76d8\u7684\u64cd\u4f5c\ndd if=/dev/sda of=/tmp/file1 \u5907\u4efd\u78c1\u76d8\u5185\u5bb9\u5230\u4e00\u4e2a\u6587\u4ef6\ntar -Puf backup.tar /home/user \u6267\u884c\u4e00\u6b21\u5bf9 '/home/user' \u76ee\u5f55\u7684\u4ea4\u4e92\u5f0f\u5907\u4efd\u64cd\u4f5c\n( cd /tmp/local/ &amp;&amp; tar c . ) | ssh -C user@ip_addr 'cd /home/share/ &amp;&amp; tar x -p' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u76ee\u5f55\u4e2d\u590d\u5236\u4e00\u4e2a\u76ee\u5f55\u5185\u5bb9\n( tar c /home ) | ssh -C user@ip_addr 'cd /home/backup-home &amp;&amp; tar x -p' \u901a\u8fc7ssh\u5728\u8fdc\u7a0b\u76ee\u5f55\u4e2d\u590d\u5236\u4e00\u4e2a\u672c\u5730\u76ee\u5f55\ntar cf - . | (cd /tmp/backup ; tar xf - ) \u672c\u5730\u5c06\u4e00\u4e2a\u76ee\u5f55\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5730\u65b9\uff0c\u4fdd\u7559\u539f\u6709\u6743\u9650\u53ca\u94fe\u63a5\nfind /home/user1 -name '*.txt' | xargs cp -av --target-directory=/home/backup/ --parents \u4ece\u4e00\u4e2a\u76ee\u5f55\u67e5\u627e\u5e76\u590d\u5236\u6240\u6709\u4ee5 '.txt' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\nfind /var/log -name '*.log' | tar cv --files-from=- | bzip2 &gt; log.tar.bz2 \u67e5\u627e\u6240\u6709\u4ee5 '.log' \u7ed3\u5c3e\u7684\u6587\u4ef6\u5e76\u505a\u6210\u4e00\u4e2abzip\u5305\ndd if=/dev/hda of=/dev/fd0 bs=512 count=1 \u505a\u4e00\u4e2a\u5c06 MBR (Master Boot Record)\u5185\u5bb9\u590d\u5236\u5230\u8f6f\u76d8\u7684\u52a8\u4f5c\ndd if=/dev/fd0 of=/dev/hda bs=512 count=1 \u4ece\u5df2\u7ecf\u4fdd\u5b58\u5230\u8f6f\u76d8\u7684\u5907\u4efd\u4e2d\u6062\u590dMBR\u5185\u5bb9\n\u5149\u76d8\ncdrecord -v gracetime=2 dev=/dev/cdrom -eject blank=fast -force \u6e05\u7a7a\u4e00\u4e2a\u53ef\u590d\u5199\u7684\u5149\u76d8\u5185\u5bb9\nmkisofs /dev/cdrom &gt; cd.iso \u5728\u78c1\u76d8\u4e0a\u521b\u5efa\u4e00\u4e2a\u5149\u76d8\u7684iso\u955c\u50cf\u6587\u4ef6\nmkisofs /dev/cdrom | gzip &gt; cd_iso.gz \u5728\u78c1\u76d8\u4e0a\u521b\u5efa\u4e00\u4e2a\u538b\u7f29\u4e86\u7684\u5149\u76d8iso\u955c\u50cf\u6587\u4ef6\nmkisofs -J -allow-leading-dots -R -V \"Label CD\" -iso-level 4 -o ./cd.iso data_cd \u521b\u5efa\u4e00\u4e2a\u76ee\u5f55\u7684iso\u955c\u50cf\u6587\u4ef6\ncdrecord -v dev=/dev/cdrom cd.iso \u523b\u5f55\u4e00\u4e2aISO\u955c\u50cf\u6587\u4ef6\ngzip -dc cd_iso.gz | cdrecord dev=/dev/cdrom - \u523b\u5f55\u4e00\u4e2a\u538b\u7f29\u4e86\u7684ISO\u955c\u50cf\u6587\u4ef6\nmount -o loop cd.iso /mnt/iso \u6302\u8f7d\u4e00\u4e2aISO\u955c\u50cf\u6587\u4ef6\ncd-paranoia -B \u4ece\u4e00\u4e2aCD\u5149\u76d8\u8f6c\u5f55\u97f3\u8f68\u5230 wav \u6587\u4ef6\u4e2d\ncd-paranoia -- \"-3\" \u4ece\u4e00\u4e2aCD\u5149\u76d8\u8f6c\u5f55\u97f3\u8f68\u5230 wav \u6587\u4ef6\u4e2d\uff08\u53c2\u6570-3\uff09\ncdrecord --scanbus \u626b\u63cf\u603b\u7ebf\u4ee5\u8bc6\u522bscsi\u901a\u9053\ndd if=/dev/hdc | md5sum \u6821\u9a8c\u4e00\u4e2a\u8bbe\u5907\u7684md5sum\u7f16\u7801\uff0c\u4f8b\u5982\u4e00\u5f20 CD\n\u7f51\u7edc - \uff08\u4ee5\u592a\u7f51\u548cWIFI\u65e0\u7ebf\uff09\nifconfig eth0 \u663e\u793a\u4e00\u4e2a\u4ee5\u592a\u7f51\u5361\u7684\u914d\u7f6e\nifup eth0 \u542f\u7528\u4e00\u4e2a 'eth0' \u7f51\u7edc\u8bbe\u5907\nifdown eth0 \u7981\u7528\u4e00\u4e2a 'eth0' \u7f51\u7edc\u8bbe\u5907\nifconfig eth0 192.168.1.1 netmask 255.255.255.0 \u63a7\u5236IP\u5730\u5740\nifconfig eth0 promisc \u8bbe\u7f6e 'eth0' \u6210\u6df7\u6742\u6a21\u5f0f\u4ee5\u55c5\u63a2\u6570\u636e\u5305 (sniffing)\ndhclient eth0 \u4ee5dhcp\u6a21\u5f0f\u542f\u7528 'eth0'\nroute -n show routing table\nroute add -net 0/0 gw IP_Gateway configura default gateway\nroute add -net 192.168.0.0 netmask 255.255.0.0 gw 192.168.1.1 configure static route to reach network '192.168.0.0/16'\nroute del 0/0 gw IP_gateway remove static route\necho \"1\" &gt; /proc/sys/net/ipv4/ip_forward activate ip routing\nhostname show hostname of system\nhost Example Domain lookup hostname to resolve name to ip address and viceversa(1)\nnslookup Example Domain lookup hostname to resolve name to ip address and viceversa(2)\nip link show show link status of all interfaces\nmii-tool eth0 show link status of 'eth0'\nethtool eth0 show statistics of network card 'eth0'\nnetstat -tup show all active network connections and their PID\nnetstat -tupl show all network services listening on the system and their PID\ntcpdump tcp port 80 show all HTTP traffic\niwlist scan show wireless networks\niwconfig eth1 show configuration of a wireless network card\nhostname show hostname\nhost Example Domain lookup hostname to resolve name to ip address and viceversa\nnslookup Example Domain lookup hostname to resolve name to ip address and viceversa\nwhois Example Domain lookup on Whois database\nJPS\u5de5\u5177\njps(Java Virtual Machine Process Status Tool)\u662fJDK 1.5\u63d0\u4f9b\u7684\u4e00\u4e2a\u663e\u793a\u5f53\u524d\u6240\u6709java\u8fdb\u7a0bpid\u7684\u547d\u4ee4\uff0c\u7b80\u5355\u5b9e\u7528\uff0c\u975e\u5e38\u9002\u5408\u5728linux/unix\u5e73\u53f0\u4e0a\u7b80\u5355\u5bdf\u770b\u5f53\u524djava\u8fdb\u7a0b\u7684\u4e00\u4e9b\u7b80\u5355\u60c5\u51b5\u3002\n\u6211\u60f3\u5f88\u591a\u4eba\u90fd\u662f\u7528\u8fc7unix\u7cfb\u7edf\u91cc\u7684ps\u547d\u4ee4\uff0c\u8fd9\u4e2a\u547d\u4ee4\u4e3b\u8981\u662f\u7528\u6765\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u7684\u8fdb\u7a0b\u60c5\u51b5\uff0c\u6709\u54ea\u4e9b\u8fdb\u7a0b\uff0c\u53ca\u5176 id\u3002 jps \u4e5f\u662f\u4e00\u6837\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u7684java\u8fdb\u7a0b\u60c5\u51b5\uff0c\u53ca\u5176id\u53f7\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5b83\u6765\u67e5\u770b\u6211\u4eec\u5230\u5e95\u542f\u52a8\u4e86\u51e0\u4e2ajava\u8fdb\u7a0b\uff08\u56e0\u4e3a\u6bcf\u4e00\u4e2ajava\u7a0b\u5e8f\u90fd\u4f1a\u72ec\u5360\u4e00\u4e2ajava\u865a\u62df\u673a\u5b9e\u4f8b\uff09\uff0c\u548c\u4ed6\u4eec\u7684\u8fdb\u7a0b\u53f7\uff08\u4e3a\u4e0b\u9762\u51e0\u4e2a\u7a0b\u5e8f\u505a\u51c6\u5907\uff09\uff0c\u5e76\u53ef\u901a\u8fc7opt\u6765\u67e5\u770b\u8fd9\u4e9b\u8fdb\u7a0b\u7684\u8be6\u7ec6\u542f\u52a8\u53c2\u6570\u3002\n\u4f7f\u7528\u65b9\u6cd5\uff1a\u5728\u5f53\u524d\u547d\u4ee4\u884c\u4e0b\u6253 jps(\u9700\u8981JAVA_HOME\uff0c\u6ca1\u6709\u7684\u8bdd\uff0c\u5230\u6539\u7a0b\u5e8f\u7684\u76ee\u5f55\u4e0b\u6253) \u3002\njps\u5b58\u653e\u5728JAVA_HOME/bin/jps\uff0c\u4f7f\u7528\u65f6\u4e3a\u4e86\u65b9\u4fbf\u8bf7\u5c06JAVA_HOME/bin/\u52a0\u5165\u5230Path.\n$&gt; jps\n23991 Jps\n23789 BossMain\n23651 Resin\n\u6bd4\u8f83\u5e38\u7528\u7684\u53c2\u6570\uff1a\n-q \u53ea\u663e\u793apid\uff0c\u4e0d\u663e\u793aclass\u540d\u79f0,jar\u6587\u4ef6\u540d\u548c\u4f20\u9012\u7ed9main \u65b9\u6cd5\u7684\u53c2\u6570\n$&gt; jps -q\n28680\n23789\n23651\n-m \u8f93\u51fa\u4f20\u9012\u7ed9main \u65b9\u6cd5\u7684\u53c2\u6570\uff0c\u5728\u5d4c\u5165\u5f0fjvm\u4e0a\u53ef\u80fd\u662fnull\n$&gt; jps -m\n28715 Jps -m\n23789 BossMain\n23651 Resin -socketwait 32768 -stdout /data/aoxj/resin/log/stdout.log -stderr /data/aoxj/resin/log/stderr.log\n-l \u8f93\u51fa\u5e94\u7528\u7a0b\u5e8fmain class\u7684\u5b8c\u6574package\u540d \u6216\u8005 \u5e94\u7528\u7a0b\u5e8f\u7684jar\u6587\u4ef6\u5b8c\u6574\u8def\u5f84\u540d\n$&gt; jps -l\n28729 sun.tools.jps.Jps\n23789 com.asiainfo.aimc.bossbi.BossMain\n23651 com.caucho.server.resin.Resin\n-v \u8f93\u51fa\u4f20\u9012\u7ed9JVM\u7684\u53c2\u6570\n$&gt; jps -v\n23789 BossMain\n28802 Jps -Denv.class.path=/data/aoxj/bossbi/twsecurity/java/trustwork140.jar:/data/aoxj/bossbi/twsecurity/java/:/data/aoxj/bossbi/twsecurity/java/twcmcc.jar:/data/aoxj/jdk15/lib/rt.jar:/data/aoxj/jd\nk15/lib/tools.jar -Dapplication.home=/data/aoxj/jdk15 -Xms8m\n23651 Resin -Xss1m -Dresin.home=/data/aoxj/resin -Dserver.root=/data/aoxj/resin -Djava.util.logging.manager=com.caucho.log.LogManagerImpl -\nDjavax.management.builder.initial=com.caucho.jmx.MBeanServerBuilderImpl\nsudo jps\u770b\u5230\u7684\u8fdb\u7a0b\u6570\u91cf\u6700\u5168\njps 192.168.0.77\n\u5217\u51fa\u8fdc\u7a0b\u670d\u52a1\u5668192.168.0.77\u673a\u5668\u6240\u6709\u7684jvm\u5b9e\u4f8b\uff0c\u91c7\u7528rmi\u534f\u8bae\uff0c\u9ed8\u8ba4\u8fde\u63a5\u7aef\u53e3\u4e3a1099\n\uff08\u524d\u63d0\u662f\u8fdc\u7a0b\u670d\u52a1\u5668\u63d0\u4f9bjstatd\u670d\u52a1\uff09\n\u6ce8\uff1ajps\u547d\u4ee4\u6709\u4e2a\u5730\u65b9\u5f88\u4e0d\u597d\uff0c\u4f3c\u4e4e\u53ea\u80fd\u663e\u793a\u5f53\u524d\u7528\u6237\u7684java\u8fdb\u7a0b\uff0c\u8981\u663e\u793a\u5176\u4ed6\u7528\u6237\u7684\u8fd8\u662f\u53ea\u80fd\u7528unix/linux\u7684ps\u547d\u4ee4\u3002\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Linux", "slug": "Linux", "permalink": "/Xuxx_Blogs/tag/Linux/"}]}, {"title": "POI\u76f8\u5173", "date": "2020-12-09T12:55:00-00.00", "path": "/Xuxx_Blogs/archives/bj40/", "text": "\u4f7f\u7528apache poi\u5c06\u5355\u5143\u683c\u5185\u5bb9\u7684\u4e00\u90e8\u5206\u8bbe\u7f6e\u4e3a\u4e0b\u5212\u7ebf\uff1f\nPOI \u5b98\u65b9\u6587\u6863\n\u89e3\u51b3\u65b9\u6848:\npublic static void differentFontTypeInSameCell(){\n    Workbook wb = new HSSFWorkbook();\n    Sheet sheet = wb.createSheet(&quot;TestSheet&quot;);\n    Cell cell = sheet.createRow(0).createCell(0);\n    Font underlineFont = wb.createFont();\n    underlineFont.setUnderline(HSSFFont.U_DOUBLE);\n    Font boldFont = wb.createFont();\n    boldFont.setBoldweight(Font.BOLDWEIGHT_BOLD);\n    Font italicFont = wb.createFont();\n    italicFont.setItalic(true);\n    CellStyle style = wb.createCellStyle();\n    style.setFont(underlineFont);\n    cell.setCellStyle(style);\n    RichTextString richString = new HSSFRichTextString(&quot;Underline, Bold, Italic&quot;);\n    richString.applyFont(11, 15, boldFont);\n    richString.applyFont(17, 23, italicFont);\n    cell.setCellValue(richString);\n}\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "POI", "slug": "POI", "permalink": "/Xuxx_Blogs/tag/POI/"}]}, {"title": "SQL\u8bed\u8a00\u5206\u7c7b", "date": "2020-12-04T12:53:00-00.00", "path": "/Xuxx_Blogs/archives/bj39/", "text": "SQL\u8bed\u8a00\u5171\u5206\u4e3a\u4e94\u5927\u7c7b\uff1a\n\n\u6570\u636e\u67e5\u8be2\u8bed\u8a00 DQL(Data Query Language)\n# \u6570\u636e\u64cd\u7eb5\u8bed\u8a00DML(Data Manipulation Language)\n\u6570\u636e\u5b9a\u4e49\u8bed\u8a00DDL(Data Definition Language)\n\u6570\u636e\u63a7\u5236\u8bed\u8a00DCL(Data Control Language)\n\u6570\u636e\u4e8b\u52a1\u8bed\u8a00DTL(Data Transaction Language)\n\nDQL\n\u6570\u636e\u67e5\u8be2\u8bed\u8a00DQL\u57fa\u672c\u7ed3\u6784\u662f\u7531SELECT\u5b50\u53e5\uff0cFROM\u5b50\u53e5\uff0cWHERE\u5b50\u53e5\u7ec4\u6210\u7684\u67e5\u8be2\u5757\uff1a\n\nSELECT FROM WHERE \n\nDML\n\u6570\u636e\u64cd\u7eb5\u8bed\u8a00DML\u6570\u636e\u64cd\u7eb5\u8bed\u8a00DML\u4e3b\u8981\u6709\u4e09\u79cd\u5f62\u5f0f\uff1a\n\n\u63d2\u5165\uff1aINSERT\n\u66f4\u65b0\uff1aUPDATE\n\u5220\u9664\uff1aDELETE\uff08\u5220\u9664\u8868\u4e2d\u7684\u6570\u636e\u4e0d\u5220\u9664\u8868\u7ed3\u6784\uff0c\u53ef\u4ee5\u56de\u6eda\uff09\n\nDDL\n\u6570\u636e\u5b9a\u4e49\u8bed\u8a00 DDL\n\nCREATE\uff1a\u521b\u5efa\nALTER\uff1a\u4fee\u6539\u8868\u7ed3\u6784\nRENAME\uff1a\u4fee\u6539\u8868\u540d\u6216\u5217\u540d\nDROP\uff1a\u5220\u9664\u8868\u4e2d\u7684\u6570\u636e\u548c\u7ed3\u6784\uff0c\u5220\u9664\u540e\u4e0d\u80fd\u56de\u6eda\nTRUNCATE\uff1a\u5220\u9664\u8868\u4e2d\u7684\u6570\u636e\u4e0d\u5220\u9664\u8868\u7ed3\u6784\uff0c\u5220\u9664\u540e\u4e0d\u80fd\u56de\u6eda\uff0c\u6548\u7387\u6bd4DELETE\u9ad8\n\nDCL\n\u6570\u636e\u63a7\u5236\u8bed\u8a00 DCL\n\nGRANT\uff1a\u6388\u6743\nREVOKE \uff1a\u56de\u6536\u6743\u9650\n\nDTL\n\u6570\u636e\u4e8b\u52a1\u8bed\u8a00 DTL\uff1a\n\nSAVEPOINT\uff1a\u4fdd\u5b58\u70b9\nROLLBACK\uff1a\u56de\u9000\u5230\u67d0\u70b9\nCOMMIT\uff1a\u63d0\u4ea4\u4e8b\u52a1\n\n\u6ce8\uff1a\u8fd8\u6709\u5176\u4ed6\u7684\u5206\u7c7b\u65b9\u5f0f~~~\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "SQL", "slug": "SQL", "permalink": "/Xuxx_Blogs/tag/SQL/"}]}, {"title": "JSON\u3001String\u3001Map\u4e4b\u95f4\u7684\u4e92\u8f6c", "date": "2020-12-02T12:48:00-00.00", "path": "/Xuxx_Blogs/archives/bj38/", "text": "1.\u4f7f\u7528\u524d\u7f6e\n\u672c\u6b21\u6f14\u793a\u4f7f\u7528\u4e09\u4e2a\u5e38\u7528\u7684\u5de5\u5177\u7c7b,\u6bcf\u4e2a\u5de5\u5177\u7c7b\u5bf9\u5e94\u7684\u4f9d\u8d56\u5982\u4e0b\n\nFastJson\n&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n    &lt;version&gt;1.2.58&lt;/version&gt;\n&lt;/dependency&gt;\n\n\nGson\n&lt;dependency&gt;\n  &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;\n  &lt;artifactId&gt;gson&lt;/artifactId&gt;\n  &lt;version&gt;2.2.4&lt;/version&gt;\n&lt;/dependency&gt;\n\n\nJackson\n&lt;!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind --&gt;\n&lt;dependency&gt;\n  &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-databind&lt;/artifactId&gt;\n  &lt;version&gt;2.10.0&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n  &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-annotations&lt;/artifactId&gt;\n  &lt;version&gt;2.10.0&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n  &lt;groupId&gt;com.fasterxml.jackson.core&lt;/groupId&gt;\n  &lt;artifactId&gt;jackson-core&lt;/artifactId&gt;\n  &lt;version&gt;2.10.0&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n\u7c7b\u5b9a\u4e49\n```java\npublic class User {\n\nprivate String userid;\nprivate String username;\nprivate String usersex;\n...\n\n}\n//\u5bf9\u8c61User\nUser user = new User(\"001\",\"\u5f20\u4e09\",\"\u7537\");\n//Json\u5bf9\u8c61\nString jsonData = \"{\\\"userid\\\":\\\"001\\\",\\\"username\\\":\\\"\u5f20\u4e09\\\",\\\"usersex\\\":\\\"\u7537\\\"}\";\n\n\n//Json\u5bf9\u8c61(\u96c6\u5408)\n  String strList = \"{ \\\"data$\\\":\" +\n      \"[{\\\"userid\\\":\\\"001\\\",\\\"username\\\":\\\"\u5f20\u4e09\\\",\\\"usersex\\\":\\\"\u7537\\\"},\" +\n      \"{\\\"userid\\\":\\\"002\\\",\\\"username\\\":\\\"\u674e\u56db\\\",\\\"usersex\\\":\\\"\u5973\\\"},\" +\n      \"{\\\"userid\\\":\\\"003\\\",\\\"username\\\":\\\"\u738b\u4e94\\\",\\\"usersex\\\":\\\"\u7537\\\"}]\" +\n                \"}\";\n//list\u5bf9\u8c61\n  User user1 = new User(\"001\",\"\u5f20\u4e09\",\"\u7537\");\n  User user2 = new User(\"002\",\"\u674e\u56db\",\"\u5973\");\n  User user3 = new User(\"003\",\"\u738b\u4e94\",\"\u7537\");\n  List userList = new ArrayList&lt;&gt;();\n  userList.add(user1);\n  userList.add(user2);\n  userList.add(user3);\n//map\u5bf9\u8c61\n  Map map = new HashMap();\n  map.put(\"data$\",userList);\n\n\n## 2.\u5bf9\u8c61\u4e0e\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u4e92\u8f6c\n\n- FastJson\n\n  ```java\n//\u5bf9\u8c61--&gt;\u5b57\u7b26\u4e32\n  String str = JSON.toJSONString(user);\n  //\u5b57\u7b26\u4e32--&gt;\u5bf9\u8c61\n  User user_2 = JSON.parseObject(jsonData, User.class);\n\nGson\n//\u5bf9\u8c61 --&gt; \u5b57\u7b26\u4e32\nGson gson = new Gson();\nString str = gson.toJson(user);\n//\u5b57\u7b26\u4e32 --&gt; \u5bf9\u8c61\nGson gson = new Gson();\nUser user_2 = gson.fromJson(jsonData, User.class);\n\n\nJackson\n//\u5bf9\u8c61--&gt;String\nObjectMapper objectMapper = new ObjectMapper();\nString str_3 = objectMapper.writeValueAsString(user);\n//String--&gt;\u5bf9\u8c61\nUser user_3 = objectMapper.readValue(jsonData, User.class);\n\n\n\n3.\u5bf9\u8c61\u96c6\u5408\u4e0e\u5b57\u7b26\u4e32\u4e4b\u95f4\u7684\u4e92\u8f6c\n\nFastJson\n//\u5bf9\u8c61\u96c6\u5408--&gt;\u5b57\u7b26\u4e32\nString users = JSON.toJSONString(userList);\n//\u5b57\u7b26\u4e32--&gt;\u5bf9\u8c61\u96c6\u5408\nList&lt;User&gt; userList = JSON.parseArray(userList, User.class);\n\n\nGson\n//\u5bf9\u8c61\u96c6\u5408 --&gt; \u5b57\u7b26\u4e32\nGson gson=new Gson();\nString users=gson.toJson(list);\n//\u5b57\u7b26\u4e32 --&gt; \u5bf9\u8c61\u96c6\u5408\nGson gson = new Gson();\nList&lt;User&gt; list = gson1.fromJson(userList, \n                                 new TypeToken&lt;List&lt;User&gt;&gt;(){}.getType());\n\n\nJackson\n//\u5bf9\u8c61\u96c6\u5408 --&gt; \u5b57\u7b26\u4e32\nObjectMapper objectMapper = new ObjectMapper();\nString users_3 = objectMapper.writeValueAsString(userList);\n//\u5b57\u7b26\u4e32 --&gt; \u5bf9\u8c61\u96c6\u5408\nList&lt;User&gt; userList_3 = objectMapper.readValue(strList, new TypeReference&lt;List&lt;User&gt;&gt;() {});\n\n\n\n4.\u5b57\u7b26\u4e32\u4e92\u8f6cJSON\u5bf9\u8c61\n\nFastjson\n//String --&gt; Json\u5bf9\u8c61\nJSONObject jsonObject = JSONObject.parseObject(jsonData);\n//Json --&gt; String\nString jsonString = jsonObject.toJSONString();\n\n\nGson\n//String --&gt; Json\u5bf9\u8c61\nJsonObject jsonObject = new JsonParser().parse(jsonData).getAsJsonObject();\n//JsonObject jsonObject_2 = gson.fromJson(jsonString_2, JsonObject.class); \u9519\u8bef\u65b9\u6cd5 \u8fd4\u56de\u4e3a\u7a7a(\u975enull)\n//Json\u5bf9\u8c61 --&gt; String\nGson gson = new Gson();\nString jsonString = gson.toJson(jsonObject);\n\n\nJackson\n//jackson\n//String --&gt; Json\u5bf9\u8c61\n//\u6682\u672a\u77e5,\u6709\u77e5\u9053\u7684\u5927\u4f6c\u8bf7\u544a\u77e5\n\n//Json\u5bf9\u8c61 --&gt; String\n//\u7528\u5230fastJson\u683c\u5f0f\u7684JSONObject\nObjectMapper objectMapper = new ObjectMapper();\nString jsonString_3 = objectMapper.writeValueAsString(jsonObject_1);\n\n\n\n5.Map\u4e0e\u5b57\u7b26\u4e32\u4e4b\u95f4\u4e92\u8f6c\n\nFastjson\n//\u5b57\u7b26\u4e32 --&gt; map\nMap map = JSONObject.parseObject(strList, Map.class);\n//map --&gt; \u5b57\u7b26\u4e32\nString jsonString = JSON.toJSONString(map);\n\n\nGson\n//\u5b57\u7b26\u4e32--&gt;map\nGson gson = new Gson();\nMap map_2 = gson.fromJson(strList, Map.class);\n//map--&gt;\u5b57\u7b26\u4e32\nGson gson = new Gson();\nString jsonString_2 = gson.toJson(map);\n\n\nJackson\n//\u5b57\u7b26\u4e32 --&gt; map\nObjectMapper objectMapper = new ObjectMapper();\nMap map_3 = objectMapper.readValue(strList, Map.class);\n//map --&gt; \u5b57\u7b26\u4e32\nString jsonString_3 = objectMapper.writeValueAsString(map);\n\n\n\n6.Map \u8f6c JSON\u5bf9\u8c61\n\nFastjson\n//map\u8f6cjson\u5bf9\u8c61\nJSONObject json = new JSONObject(map);\n//json\u5bf9\u8c61\u8f6cMap \nMap map_1 = JSONObject.parseObject(strList, Map.class);\n//Map&lt;String,Object&gt; map_1 = (Map&lt;String,Object&gt;)jsonObject_1; \u6b64\u65b9\u6cd5\u4e5f\u884c\n\n\nGson\n//map\u8f6cjson\u5bf9\u8c61\nGson gson = new Gson();\nString jsonString_2 = gson.toJson(map);\n//JsonObject jsonObject_2 = gson.fromJson(jsonString_2, JsonObject.class); \u9519\u8bef\u65b9\u6cd5 \u8fd4\u56de\u4e3a\u7a7a(\u975enull)\nJsonObject jsonObject_2 = new JsonParser().parse(jsonString_2).getAsJsonObject();\n//json\u5bf9\u8c61\u8f6cMap\nMap map_2 = gson.fromJson(strList, Map.class);\nSystem.out.println(&quot;\u65ad\u70b9&quot;);\n\n\nJackson\n//map\u8f6cjson\u5bf9\u8c61\n//\u6682\u672a\u77e5,\u6709\u77e5\u9053\u7684\u5927\u4f6c\u8bf7\u544a\u77e5\n\n//json\u5bf9\u8c61\u8f6cMap\nObjectMapper objectMapper = new ObjectMapper();\nMap map_3 = objectMapper.readValue(strList, Map.class);\n\n\n\n7.\u6d4b\u8bd5\u4ee3\u7801\nUser.class\n\npublic class User {\n    private String userid;\n    private String username;\n    private String usersex;\n\n    public User() {\n    }\n\n    @Override\n    public String toString() {\n        return &quot;User{&quot; +\n                &quot;userid=&#39;&quot; + userid + &#39;\\&#39;&#39; +\n                &quot;, username=&#39;&quot; + username + &#39;\\&#39;&#39; +\n                &quot;, usersex=&#39;&quot; + usersex + &#39;\\&#39;&#39; +\n                &#39;}&#39;;\n    }\n\n    public User(String userid, String username, String usersex) {\n        this.userid = userid;\n        this.username = username;\n        this.usersex = usersex;\n    }\n\n    public String getUserid() {\n        return userid;\n    }\n\n    public void setUserid(String userid) {\n        this.userid = userid;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getUsersex() {\n        return usersex;\n    }\n\n    public void setUsersex(String usersex) {\n        this.usersex = usersex;\n    }\n}\n\nTest.class\n\nimport com.alibaba.fastjson.JSON;\nimport com.alibaba.fastjson.JSONObject;\nimport com.google.gson.Gson;\nimport com.google.gson.JsonObject;\nimport com.google.gson.JsonParser;\nimport com.google.gson.reflect.TypeToken;\nimport com.rosellete.iescp.cshop.entity.User;\nimport org.codehaus.jackson.map.ObjectMapper;\nimport org.codehaus.jackson.type.TypeReference;\nimport org.junit.Test;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport static org.junit.Assert.assertTrue;\n\n/**\n * Unit test for simple App.\n */\npublic class AppTest \n{\n\n    @Test\n    public void StringAndJson() throws IOException {\n        String jsonData = &quot;{\\&quot;userid\\&quot;:\\&quot;001\\&quot;,\\&quot;username\\&quot;:\\&quot;\u5f20\u4e09\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;}&quot;;\n        //fastJson\n            //String --&gt; Json\u5bf9\u8c61\n        JSONObject jsonObject_1 = JSONObject.parseObject(jsonData);\n            //Json\u5bf9\u8c61 --&gt; String\n        String jsonString_1 = jsonObject_1.toJSONString();\n\n        //Gson\n            //String --&gt; Json\u5bf9\u8c61\n        JsonObject jsonObject_2 = new JsonParser().parse(jsonData).getAsJsonObject();\n            //Json\u5bf9\u8c61 --&gt; String\n        Gson gson = new Gson();\n        String jsonString_2 = gson.toJson(jsonObject_2);\n\n        //jackson\n            //String --&gt; Json\u5bf9\u8c61\n            //\u6682\u672a\u77e5,\u6709\u77e5\u9053\u7684\u5927\u4f6c\u8bf7\u544a\u77e5\n\n        //Json\u5bf9\u8c61 --&gt; String\n            //\u7528\u5230fastJson\u683c\u5f0f\u7684JSONObject\n        ObjectMapper objectMapper = new ObjectMapper();\n        String jsonString_3 = objectMapper.writeValueAsString(jsonObject_1);\n\n        System.out.println(&quot;\u65ad\u70b9&quot;);\n    }\n\n    @Test\n    public void StringAndBean() throws IOException {\n        User user = new User(&quot;001&quot;,&quot;\u5f20\u4e09&quot;,&quot;\u7537&quot;);\n        String jsonData = &quot;{\\&quot;userid\\&quot;:\\&quot;001\\&quot;,\\&quot;username\\&quot;:\\&quot;\u5f20\u4e09\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;}&quot;;\n\n        //fastjson\n            //\u5bf9\u8c61--&gt;String\n        String str_1 = JSON.toJSONString(user);\n            //String --&gt; \u5bf9\u8c61\n        User user_1 = JSON.parseObject(jsonData, User.class);\n\n        //Gson\n            //\u5bf9\u8c61--&gt;String\n        Gson gson = new Gson();\n        String str_2 = gson.toJson(user);\n            //String --&gt;\u5bf9\u8c61\n        User user_2 = gson.fromJson(jsonData, User.class);\n\n        //jackson\n            //\u5bf9\u8c61--&gt;String\n        ObjectMapper objectMapper = new ObjectMapper();\n        String str_3 = objectMapper.writeValueAsString(user);\n            //String--&gt;\u5bf9\u8c61\n        User user_3 = objectMapper.readValue(jsonData, User.class);\n\n        System.out.println(&quot;\u65ad\u70b9&quot;);\n    }\n\n    @Test\n    public void StringAndBeanlist() throws IOException {\n        User user1 = new User(&quot;001&quot;,&quot;\u5f20\u4e09&quot;,&quot;\u7537&quot;);\n        User user2 = new User(&quot;002&quot;,&quot;\u674e\u56db&quot;,&quot;\u5973&quot;);\n        User user3 = new User(&quot;003&quot;,&quot;\u738b\u4e94&quot;,&quot;\u7537&quot;);\n        List&lt;User&gt; userList = new ArrayList&lt;&gt;();\n        userList.add(user1);\n        userList.add(user2);\n        userList.add(user3);\n        String strList = &quot;[{\\&quot;userid\\&quot;:\\&quot;001\\&quot;,\\&quot;username\\&quot;:\\&quot;\u5f20\u4e09\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;},&quot; +\n                         &quot;{\\&quot;userid\\&quot;:\\&quot;002\\&quot;,\\&quot;username\\&quot;:\\&quot;\u674e\u56db\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u5973\\&quot;},&quot; +\n                         &quot;{\\&quot;userid\\&quot;:\\&quot;003\\&quot;,\\&quot;username\\&quot;:\\&quot;\u738b\u4e94\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;}]&quot;;\n        //fastjson\n            //\u5bf9\u8c61\u96c6\u5408--&gt;String\n        String users_1 = JSON.toJSONString(userList);\n            //String--&gt;\u5bf9\u8c61\u96c6\u5408\n        List&lt;User&gt; userList_1 = JSON.parseArray(strList, User.class);\n\n        //Gson\n            //\u5bf9\u8c61\u96c6\u5408 --&gt; \u5b57\u7b26\u4e32\n        Gson gson=new Gson();\n        String users_2 =gson.toJson(userList);\n            //\u5b57\u7b26\u4e32 --&gt; \u5bf9\u8c61\u96c6\u5408\n        List&lt;User&gt; userList_2 = gson.fromJson(strList,\n                new TypeToken&lt;List&lt;User&gt;&gt;(){}.getType());\n\n        //jackson\n            //\u5bf9\u8c61\u96c6\u5408 --&gt; \u5b57\u7b26\u4e32\n        ObjectMapper objectMapper = new ObjectMapper();\n        String users_3 = objectMapper.writeValueAsString(userList);\n            //\u5b57\u7b26\u4e32 --&gt; \u5bf9\u8c61\u96c6\u5408\n        List&lt;User&gt; userList_3 = objectMapper.readValue(strList, new TypeReference&lt;List&lt;User&gt;&gt;() {});\n\n        System.out.println(&quot;\u65ad\u70b9&quot;);\n    }\n\n    @Test\n    public void MapAndString() throws IOException {\n        String strList = &quot;{ \\&quot;data$\\&quot;:&quot; +\n                &quot;[{\\&quot;userid\\&quot;:\\&quot;001\\&quot;,\\&quot;username\\&quot;:\\&quot;\u5f20\u4e09\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;},&quot; +\n                &quot;{\\&quot;userid\\&quot;:\\&quot;002\\&quot;,\\&quot;username\\&quot;:\\&quot;\u674e\u56db\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u5973\\&quot;},&quot; +\n                &quot;{\\&quot;userid\\&quot;:\\&quot;003\\&quot;,\\&quot;username\\&quot;:\\&quot;\u738b\u4e94\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;}]&quot; +\n                &quot;}&quot;;\n        User user1 = new User(&quot;001&quot;,&quot;\u5f20\u4e09&quot;,&quot;\u7537&quot;);\n        User user2 = new User(&quot;002&quot;,&quot;\u674e\u56db&quot;,&quot;\u5973&quot;);\n        User user3 = new User(&quot;003&quot;,&quot;\u738b\u4e94&quot;,&quot;\u7537&quot;);\n        List&lt;User&gt; userList = new ArrayList&lt;&gt;();\n        userList.add(user1);\n        userList.add(user2);\n        userList.add(user3);\n\n        Map map = new HashMap();\n        map.put(&quot;data$&quot;,userList);\n\n        //fastjson\n            //\u5b57\u7b26\u4e32--&gt;map\n        Map map_1 = JSONObject.parseObject(strList, Map.class);\n            //map--&gt;\u5b57\u7b26\u4e32\n        String jsonString_1 = JSON.toJSONString(map);\n\n        //Gson\n            //\u5b57\u7b26\u4e32--&gt;map\n        Gson gson = new Gson();\n        Map map_2 = gson.fromJson(strList, Map.class);\n            //map--&gt;\u5b57\u7b26\u4e32\n        String jsonString_2 = gson.toJson(map);\n\n        //jackson\n            //\u5b57\u7b26\u4e32 --&gt; map\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map map_3 = objectMapper.readValue(strList, Map.class);\n            //map --&gt; \u5b57\u7b26\u4e32\n        String jsonString_3 = objectMapper.writeValueAsString(map);\n\n        System.out.println(&quot;\u65ad\u70b9&quot;);\n    }\n\n    @Test\n    public void MapAndJson() throws IOException {\n        User user1 = new User(&quot;001&quot;,&quot;\u5f20\u4e09&quot;,&quot;\u7537&quot;);\n        User user2 = new User(&quot;002&quot;,&quot;\u674e\u56db&quot;,&quot;\u5973&quot;);\n        User user3 = new User(&quot;003&quot;,&quot;\u738b\u4e94&quot;,&quot;\u7537&quot;);\n        List&lt;User&gt; userList = new ArrayList&lt;&gt;();\n        userList.add(user1);\n        userList.add(user2);\n        userList.add(user3);\n        Map map = new HashMap();\n        map.put(&quot;data$&quot;,userList);\n\n        String strList = &quot;{ \\&quot;data$\\&quot;:&quot; +\n                &quot;[{\\&quot;userid\\&quot;:\\&quot;001\\&quot;,\\&quot;username\\&quot;:\\&quot;\u5f20\u4e09\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;},&quot; +\n                &quot;{\\&quot;userid\\&quot;:\\&quot;002\\&quot;,\\&quot;username\\&quot;:\\&quot;\u674e\u56db\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u5973\\&quot;},&quot; +\n                &quot;{\\&quot;userid\\&quot;:\\&quot;003\\&quot;,\\&quot;username\\&quot;:\\&quot;\u738b\u4e94\\&quot;,\\&quot;usersex\\&quot;:\\&quot;\u7537\\&quot;}]&quot; +\n                &quot;}&quot;;\n\n        //fastjson\n            //map\u8f6cjson\u5bf9\u8c61\n        JSONObject jsonObject_1 = new JSONObject(map);\n            //json\u5bf9\u8c61\u8f6cMap\n        Map map_1 = JSONObject.parseObject(strList, Map.class);\n        //Map&lt;String,Object&gt; map_1 = (Map&lt;String,Object&gt;)jsonObject_1; \u6b64\u65b9\u6cd5\u4e5f\u884c\n\n        //Gson\n            //map\u8f6cjson\u5bf9\u8c61\n        Gson gson = new Gson();\n        String jsonString_2 = gson.toJson(map);\n        //JsonObject jsonObject_2 = gson.fromJson(jsonString_2, JsonObject.class); \u662f\u9519\u8bef\u65b9\u6cd5 \u8fd4\u56de\u4e3a\u7a7a(\u975enull)\n        JsonObject jsonObject_2 = new JsonParser().parse(jsonString_2).getAsJsonObject();\n            //json\u5bf9\u8c61\u8f6cMap\n        Map map_2 = gson.fromJson(strList, Map.class);\n\n        //jackson\n            //map\u8f6cjson\u5bf9\u8c61\n            //\u6682\u672a\u77e5,\u6709\u77e5\u9053\u7684\u5927\u4f6c\u8bf7\u544a\u77e5\n\n            //json\u5bf9\u8c61\u8f6cMap\n        ObjectMapper objectMapper = new ObjectMapper();\n        Map map_3 = objectMapper.readValue(strList, Map.class);\n\n        System.out.println(&quot;\u65ad\u70b9&quot;);\n\n    }\n}\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "JSON", "slug": "JSON", "permalink": "/Xuxx_Blogs/tag/JSON/"}]}, {"title": "MySql\u83b7\u53d6\u6700\u8fd1\u65e5\u671f", "date": "2020-12-01T12:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj37/", "text": "\u4e00\u3001 DATE_ADD()\u51fd\u6570\nDATE_ADD() \u51fd\u6570\u5411\u65e5\u671f\u6dfb\u52a0\u6307\u5b9a\u7684\u65f6\u95f4\u95f4\u9694\u3002\n\u8bed\u6cd5\nDATE_ADD(date,INTERVAL expr type)\n\ndate \u53c2\u6570\u662f\u5408\u6cd5\u7684\u65e5\u671f\u8868\u8fbe\u5f0f\u3002expr \u53c2\u6570\u662f\u60a8\u5e0c\u671b\u6dfb\u52a0\u7684\u65f6\u95f4\u95f4\u9694\u3002\ntype \u53c2\u6570\u53ef\u4ee5\u662f\u4e0b\u5217\u503c\uff1a\n\n\nType \u503c\n\n\n\n\nMICROSECOND\n\n\nSECOND\n\n\nMINUTE\n\n\nHOUR\n\n\nDAY\n\n\nWEEK\n\n\nMONTH\n\n\nQUARTER\n\n\nYEAR\n\n\nSECOND_MICROSECOND\n\n\nMINUTE_MICROSECOND\n\n\nMINUTE_SECOND\n\n\nHOUR_MICROSECOND\n\n\nHOUR_SECOND\n\n\nHOUR_MINUTE\n\n\nDAY_MICROSECOND\n\n\nDAY_SECOND\n\n\nDAY_MINUTE\n\n\nDAY_HOUR\n\n\nYEAR_MONTH\n\n\n\n\u5b9e\u4f8b\n\u5f53\u5929\u7684\u65e5\u671f\nDATE_SUB(curdate(),INTERVAL 0 DAY)\n\n\u4e8c\u3001\u67e5\u8be2\u8f93\u51fa\u5f53\u5929\u7684\u65e5\u671f\nSELECT DATE_SUB(curdate(),INTERVAL 0 DAY) from dual;\n\n\u6211\u6240\u7528\u5230\u7684\u573a\u666f\uff1a\n\u67e5\u8be2\u8fd110\u5929\u67d0\u5b57\u6bb5\u7684\u65b0\u589e\u60c5\u51b5\uff1a\nSELECT \n\u5b57\u6bb5\u540d1,COUNT(*) AS num \nFROM \u8868\u540d \nWHERE \uff08\u65e5\u671f\uff09\u5b57\u6bb5\u540d2 &gt; (SELECT DATE_SUB(curdate(),INTERVAL 10 DAY) from dual) \nGROUP BY \u5b57\u6bb5\u540d1;\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "MySQL", "slug": "MySQL", "permalink": "/Xuxx_Blogs/tag/MySQL/"}]}, {"title": "VMware 16\u5b89\u88c5CentOS 7 \u914d\u7f6e\u9759\u6001IP", "date": "2020-11-23T11:35:00-00.00", "path": "/Xuxx_Blogs/archives/bj36/", "text": "\u4e00.\u5b89\u88c5VMware 16\n\u5b89\u88c5VMware 16\n\u4e8c.\u521b\u5efa\u865a\u62df\u673a\n\n\u521b\u5efa\u65b0\u7684\u865a\u62df\u673a -&gt; \u81ea\u5b9a\u4e49\u914d\u7f6e\uff0c\u4e0b\u4e00\u6b65\n\n\n\u9009\u62e9\u865a\u62df\u673a\u786c\u4ef6\u517c\u5bb9\u6027 -&gt; \u9ed8\u8ba4\uff0c\u4e0b\u4e00\u6b65\n\n\u5b89\u88c5\u5ba2\u6237\u673a\u64cd\u4f5c\u7cfb\u7edf -&gt; \u7a0d\u540e\u5b89\u88c5\u64cd\u4f5c\u7cfb\u7edf\uff0c\u4e0b\u4e00\u6b65\n\n\n\u9009\u62e9\u5ba2\u6237\u673a\u64cd\u4f5c\u7cfb\u7edf -&gt; Linux+CentOS7 64 \u4f4d\uff0c\u4e0b\u4e00\u6b65\n\n\n\u547d\u540d\u865a\u62df\u673a -&gt; \u6309\u9700\u914d\u7f6e\uff0c\u4e0b\u4e00\u6b65\n\n\u5904\u7406\u5668\u3001\u5185\u5b58\u914d\u7f6e -&gt; \u6309\u9700\u5206\u914d\uff0c\u4e0b\u4e00\u6b65\n\n\u7f51\u7edc\u7c7b\u578b -&gt; \u9009\u62e9NAT\u7c7b\u578b\uff0c\u4e0b\u4e00\u6b65\n\n\u9009\u62e9I/O\u63a7\u5236\u5668\u7c7b\u578b\u3001\u9009\u62e9\u78c1\u76d8\u7c7b\u578b -&gt; \u9ed8\u8ba4\uff0c\u4e0b\u4e00\u6b65\n\n\u9009\u62e9\u78c1\u76d8\u3001\u6307\u5b9a\u78c1\u76d8\u5bb9\u91cf -&gt; \u521b\u5efa\u65b0\u865a\u62df\u78c1\u76d8\uff0c\u6309\u9700\u5206\u914d\u78c1\u76d8\u5927\u5c0f\uff0c\u4e0b\u4e00\u6b65\n\n\u70b9\u51fb\u5b8c\u6210\n\n\n\u4e09.\u5b89\u88c5\u865a\u62df\u673a\u64cd\u4f5c\u7cfb\u7edf\n\n\u70b9\u51fb\u7f16\u8f91\u865a\u62df\u673a\u8bbe\u7f6e\uff0c\u9009\u62e9ISO\u6620\u50cf\u6587\u4ef6\n\u70b9\u51fb\u5f00\u542f\u6b64\u865a\u62df\u673a\uff0c\u8fdb\u5165\u5b89\u88c5\u6b65\u9aa4\n\u9009\u62e9\u5b89\u88c5\u8bed\u8a00\n\u70b9\u51fb\u5b89\u88c5\u4f4d\u7f6e\uff0c\u70b9\u51fb\u9009\u62e9\u521a\u624d\u521b\u5efa\u768420g\u7684\u865a\u62df\u786c\u76d8\u5b58\u50a8\uff0c\u6700\u540e\u70b9\u51fb\u5b8c\u6210\u3002\n\u70b9\u51fb\u5f00\u59cb\u5b89\u88c5\uff0cCentos7\u6b63\u5728\u5b89\u88c5\u4e2d\u3002\n\u8bbe\u7f6eROOT\u8d26\u6237\u5bc6\u7801\uff0c\u70b9\u51fb\u5b8c\u6210\uff08\u63d0\u793a\uff1a\u5bc6\u7801\u7b80\u5355\u65f6\u9700\u8981\u591a\u70b9\uff09\uff0c\u6700\u540e\u70b9\u51fb\u5b8c\u6210\u914d\u7f6e\u3002\n\u91cd\u542f\uff0c\u7531\u4e8e\u662f\u5b89\u88c5Minimal\u7248\uff08\u6700\u5c0f\u5b89\u88c5\uff09\uff0c\u662f\u547d\u4ee4\u884c\u5f62\u5f0f\u7684\uff0c\u4e0d\u662f\u5b89\u88c5\u7684\u684c\u9762\u7248\u7684\uff0c\u53ea\u80fd\u5728\u9ed1\u7a97\u53e3\u8f93\u5165\u547d\u4ee4\u64cd\u4f5c\u3002\n\u8f93\u5165\u7528\u6237\u540d/\u5bc6\u7801\u8fde\u63a5CentOS 7\uff0c\u8f93\u5165\u5bc6\u7801\u4e0d\u663e\u793a\uff0c\u6240\u4ee5\u8981\u7ec6\u5fc3\u8f93\u5165\uff0c\u4ee5\u8bbf\u51fa\u9519\u3002\n\n\u56db.\u914d\u7f6e\u7f51\u7edc\n\n\u786e\u8ba4\u865a\u62df\u673a\u4e0e\u4e3b\u673a\u7684\u8fde\u63a5\u65b9\u5f0f\uff0c\u7f16\u8f91 -&gt; \u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\n \u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\uff1a\u53bb\u9664\u4e86DHCP\u7684\u52fe\u9009\uff0c\u7136\u540e\u914d\u7f6e\u5b50\u7f51\u548c\u5b50\u7f51\u63a9\u7801\u3002\u56e0\u4e3a\u4f7f\u7528\u7684\u5b50\u7f51\u63a9\u7801\u662f 255.255.255.0 \uff0c\u6240\u4ee5\u5b50\u7f51IP\u524d\u4e24\u4f4d\u8981\u4e0e\u672c\u673a\u7684IP\u4e00\u81f4\uff08win\u67e5\u770bip -&gt; ipconfig \uff09,\u7b2c\u4e09\u4f4d\u968f\u610f\uff08\u522b\u548c\u672c\u673a\u4e00\u6837\uff09\uff0c\u7b2c\u56db\u4f4d\u65e0\u8111\u586b 0 \u5c31\u884c\u3002\n NAT\u8bbe\u7f6e\uff1a\u7f51\u5173IP \u524d\u4e09\u4f4d\u8981\u548c\u5b50\u7f51IP \u4e00\u6837\uff0c\u7b2c\u56db\u4f4d\u968f\u610f\u5c31\u884c\u3002\n\n\u914d\u7f6eCentos 7 \u9759\u6001IP \u76f8\u5173\u914d\u7f6e\u6587\u4ef6\n \u914d\u7f6e\u7f51\u5361\u914d\u7f6e\u6587\u4ef6\uff1avi /etc/sysconfig/network-scripts/ifcfg-ens33\n \u6ce8\u610f\u8fd9\u513f\u7684 IPASSR \u4e0d\u662f\u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\u7684\u5b50\u7f51 IP\uff01\uff01\uff01\uff08\u5403\u8fc7\u5927\u4e8f(\uff1b\u00b4\u0434\uff40)\u309e....\uff09\n#\u4fee\u6539\u548c\u6dfb\u52a0\u7684\u5185\u5bb9\u5982\u4e0b\uff1a\n...\nBOOTPROTO=&quot;static&quot;\n...\nONBOOT=&quot;yes&quot;\n#\u6ce8\u610f\u8fd9\u513f\u7684 IP \u4e0d\u662f\u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\u7684\u5b50\u7f51 IP\uff01\uff01\uff01\n#\u5c31\u662f\u865a\u62df\u7f51\u7edc\u7f16\u8f91\u5668\u4e2d\u7684 \u5b50\u7f51ip\u7f51\u6bb5\uff08\u524d\u4e09\u4f4d\uff09+ \u4e3b\u673a\u53f7 \nIPADDR=&quot;192.168.123.128&quot;\n#\u5b50\u7f51\u63a9\u7801\uff0c\u4e5f\u53ef\u6362\u6210\uff1aNETMASK=&quot;255.255.255.0&quot;\nPREFIX=&quot;24&quot;\nGATEWAY=&quot;192.168.123.2&quot;\nIPV6_PRIVACY=&quot;no&quot;\nDNS1=8.8.8.8\nDNS2=8.8.4.4\n\n\u914d\u7f6e\u57df\u540d\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\uff1avi /etc/resolv.conf\n#Generated by NetworkManager\nnameserver 8.8.8.8\nnameserver 8.8.4.4\n\n\u7136\u540e\u5c31\u53ef\u4ee5\u91cd\u542f\u7f51\u7edc\u4e86, \u547d\u4ee4\uff1asystemctl restart network\n\u8865\u5145 \u9632\u706b\u5899\u547d\u4ee4\uff1a\n#\u5173\u95ed\u9632\u706b\u5899\u5e76\u8bbe\u7f6e\u5f00\u673a\u4e0d\u542f\u52a8\n#\u67e5\u770b\u9632\u706b\u5899\u72b6\u6001\uff1a\nsystemctl status firewalld.service\n#\u5173\u95ed\uff1a\nsystemctl stop firewalld\n#\u5f00\u542f\uff1a\nsystemctl start firewalld\n#\u5f00\u673a\u81ea\u52a8\u5173\u95ed\uff1a\nsystemctl disable firewalld\n#\u5f00\u673a\u81ea\u52a8\u542f\u52a8\uff1a\nsystemctl enable firewalld\n\n\n\u540c\u6b65\u4fee\u6539\u4e3b\u673a\u7684\u7f51\u7edc\u9002\u914d\u5668ip\n\u7f16\u8f91vmnet8\u5982\u4e0b\uff1a\n\u5b8c\u6574\u7684\u914d\u7f6e\u5df2\u7ecf\u7ed3\u675f\u3002\u4e0b\u8f7d ssh \u5ba2\u6237\u7aef\u8fde\u63a5\u5c31\u597d\u4e86\u3002\nFinalShell\uff1ahttps://www.hostbuf.com/\n\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Vmware", "slug": "Vmware", "permalink": "/Xuxx_Blogs/tag/Vmware/"}, {"name": "CentOS", "slug": "CentOS", "permalink": "/Xuxx_Blogs/tag/CentOS/"}]}, {"title": "\u52a8\u6001\u89c4\u5212\u7b97\u6cd5", "date": "2020-09-22T03:10:00-00.00", "path": "/Xuxx_Blogs/archives/bj35/", "text": "\u52a8\u6001\u89c4\u5212\u9898\u76ee\u7279\u70b9\n1.\u8ba1\u6570\n\n\u6709\u591a\u5c11\u79cd\u65b9\u5f0f\u8d70\u5230\u53f3\u4e0b\u89d2\n\u6709\u591a\u5c11\u79cd\u65b9\u6cd5\u9009\u51fak\u4e2a\u6570\u4f7f\u5f97\u548c\u662fSum\n\n2.\u6c42\u6700\u5927\u6700\u5c0f\u503c\n\n\u4ece\u5de6\u4e0a\u89d2\u8d70\u5230\u53f3\u4e0b\u89d2\u8def\u5f84\u7684\u6700\u5927\u6570\u5b57\u548c\n\u6700\u957f\u4e0a\u5347\u5b50\u5e8f\u5217\u957f\u5ea6\n\n3.\u6c42\u5b58\u5728\u6027\n\n\u53d6\u77f3\u5b50\u6e38\u620f\uff0c\u5148\u624b\u662f\u5426\u5fc5\u80dc\n\u80fd\u4e0d\u80fd\u9009\u51fak\u4e2a\u6570\u4f7f\u5f97\u548c\u662fSum\n\n\u4f8b\u98981\uff1a\n\u4f8b\u9898\n\u52a8\u6001\u89c4\u5212\u56db\u5927\u6b65\u9aa4\n1.\u786e\u5b9a\u72b6\u6001\n\n\u72b6\u6001\u5728\u52a8\u6001\u89c4\u5212\u4e2d\u7684\u4f5c\u7528\u5c5e\u4e8e\u5b9a\u6d77\u795e\u9488\n\n\u7b80\u5355\u7684\u8bf4\uff0c\u89e3\u52a8\u6001\u89c4\u5212\u7684\u65f6\u5019\u9700\u8981\u5f00\u4e00\u4e2a\u6570\u7ec4\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u5143\u7d20 f [i] \u6216\u8005 f [i] [j] \u4ee3\u8868\u4ec0\u4e48\n\n\u7c7b\u4f3c\u6570\u5b66\u9898\u4e2d\uff0cX , Y , Z\u4ee3\u8868\u4ec0\u4e48\n\n\n\u786e\u5b9a\u72b6\u6001\u9700\u8981\u4e24\u4e2a\u610f\u8bc6\uff1a\n\n\u6700\u540e\u4e00\u6b65\n\u5b50\u95ee\u9898\n\n\n\n\u4f8b\u98981\uff1a\u6700\u540e\u4e00\u6b65\u7684\u5206\u6790\n\u4f8b\u98981_\u6700\u540e\u4e00\u6b65\u7684\u5206\u6790\n\u4f8b\u98981_\u6700\u540e\u4e00\u6b65\u7684\u5206\u6790\n\u4f8b\u9898\uff1a\u5b50\u95ee\u9898\u7684\u5206\u6790\n\u4f8b\u98981_\u5b50\u95ee\u9898\u7684\u5206\u6790\n\u4f8b\u98981_\u5b50\u95ee\u9898\u7684\u5206\u6790\n2.\u8f6c\u79fb\u65b9\u7a0b\n\u4f8b\u98981_\u8f6c\u79fb\u65b9\u7a0b\n3.\u521d\u59cb\u6761\u4ef6\u548c\u8fb9\u754c\u60c5\u51b5\n\u4f8b\u98981_\u521d\u59cb\u6761\u4ef6\u548c\u8fb9\u754c\u60c5\u51b5\n4.\u8ba1\u7b97\u987a\u5e8f\n\u4f8b\u98981_\u8ba1\u7b97\u987a\u5e8f\n\u4f8b\u98981_\u5c0f\u7ed3\n\u4f8b\u98981_\u5c0f\u7ed3\n\u4f8b\u98982\uff1aUnique Paths\n\u4f8b\u98982\n\u786e\u5b9a\u72b6\u6001\n\u4f8b\u98982_\u5206\u6790\n\u4f8b\u98982_\u5206\u6790\n\u8f6c\u79fb\u65b9\u7a0b\n\u4f8b\u98982_\u5206\u6790\n\u521d\u59cb\u6761\u4ef6\u548c\u8fb9\u754c\u60c5\u51b5\n\u4f8b\u98982_\u5206\u6790\n\u8ba1\u7b97\u987a\u5e8f\n\u4f8b\u98982_\u5206\u6790\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "\u7b97\u6cd5", "slug": "\u7b97\u6cd5", "permalink": "/Xuxx_Blogs/tag/\u7b97\u6cd5/"}]}, {"title": "Docker Compose\u90e8\u7f72GitLab", "date": "2020-09-22T00:05:00-00.00", "path": "/Xuxx_Blogs/archives/bj34/", "text": "\u4ec0\u4e48\u662fGitLab\nGitLab\u662f\u5229\u7528 Ruby on Rails \u7684\u4e00\u4e2a\u5f00\u6e90\u7684\u7248\u672c\u7ba1\u7406\u7cfb\u7edf\uff0c\u5b9e\u73b0\u4e00\u4e2a\u81ea\u6258\u7ba1\u7684Git\u9879\u76ee\u4ed3\u5e93\uff0c\u53ef\u901a\u8fc7Web\u754c\u9762\u8fdb\u884c\u8bbf\u95ee\u516c\u5f00\u7684\u6216\u8005\u79c1\u4eba\u9879\u76ee\u3002\u5b83\u62e5\u6709\u4e0e Github \u7c7b\u4f3c\u7684\u529f\u80fd\uff0c\u80fd\u591f\u6d4f\u89c8\u6e90\u4ee3\u7801\uff0c\u7ba1\u7406\u7f3a\u9677\u548c\u6ce8\u91ca\u3002\u53ef\u4ee5\u7ba1\u7406\u56e2\u961f\u5bf9\u4ed3\u5e93\u7684\u8bbf\u95ee\uff0c\u5b83\u975e\u5e38\u6613\u4e8e\u6d4f\u89c8\u63d0\u4ea4\u8fc7\u7684\u7248\u672c\u5e76\u63d0\u4f9b\u4e00\u4e2a\u6587\u4ef6\u5386\u53f2\u5e93\u3002\u56e2\u961f\u6210\u5458\u53ef\u4ee5\u5229\u7528\u5185\u7f6e\u7684\u7b80\u5355\u804a\u5929\u7a0b\u5e8f(Wall)\u8fdb\u884c\u4ea4\u6d41\u3002\u5b83\u8fd8\u63d0\u4f9b\u4e00\u4e2a\u4ee3\u7801\u7247\u6bb5\u6536\u96c6\u529f\u80fd\u53ef\u4ee5\u8f7b\u677e\u5b9e\u73b0\u4ee3\u7801\u590d\u7528\uff0c\u4fbf\u4e8e\u65e5\u540e\u6709\u9700\u8981\u7684\u65f6\u5019\u8fdb\u884c\u67e5\u627e\u3002\n\u90e8\u7f72GitLab\n\u4f7f\u7528Docker\u6765\u5b89\u88c5\u548c\u8fd0\u884cGitLab\u4e2d\u6587\u7248\uff0cdocker-compose.yml\u914d\u7f6e\u5982\u4e0b:\nversion: &#39;3&#39;\nservices:\n    web:\n        image: &#39;twang2218/gitlab-ce-zh&#39;\n        restart: always\n        hostname: &#39;192.168.123.128&#39;\n        environment:\n            TZ: &#39;Asia/Shanghai&#39;\n            GITLAB_OMNIBUS_CONFIG: |\n                external_url = &#39;http://192.168.123.128&#39;\n                gitlab_rails[&#39;gitlab_shell_ssh_port&#39;] = 2222\n                unicorn[&#39;port&#39;] = 8888\n                nginx[&#39;listen_port&#39;] = 80\n        ports:\n            - &#39;80:80&#39;\n            - &#39;443:443&#39;\n            - &#39;2222:22&#39;\n        volumes:\n        - ./config:/etc/gitlab\n        - ./data:/var/opt/gitlab\n        - ./logs:/var/log/gitlab\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Docker", "slug": "Docker", "permalink": "/Xuxx_Blogs/tag/Docker/"}, {"name": "Docker Compose", "slug": "Docker Compose", "permalink": "/Xuxx_Blogs/tag/Docker Compose/"}]}, {"title": "Docker Compose\u7b14\u8bb0", "date": "2020-09-21T01:10:00-00.00", "path": "/Xuxx_Blogs/archives/bj33/", "text": "\u7b80\u4ecb\nCompose \u9879\u76ee\u662f Docker \u5b98\u65b9\u7684\u5f00\u6e90\u9879\u76ee\uff0c\u8d1f\u8d23\u5b9e\u73b0\u5bf9 Docker \u5bb9\u5668\u96c6\u7fa4\u7684\u5feb\u901f\u7f16\u6392\u3002\u4ece\u529f\u80fd\u4e0a\u770b\uff0c\u8ddf OpenStack \u4e2d\u7684 Heat \u5341\u5206\u7c7b\u4f3c\u3002\nCompose \u5b9a\u4f4d\u662f \u300c\u5b9a\u4e49\u548c\u8fd0\u884c\u591a\u4e2a Docker \u5bb9\u5668\u7684\u5e94\u7528\uff08Defining and running multi-container Docker applications\uff09\u300d\uff0c\u5176\u524d\u8eab\u662f\u5f00\u6e90\u9879\u76ee Fig\u3002\n\u901a\u8fc7\u7b2c\u4e00\u90e8\u5206\u4e2d\u7684\u4ecb\u7ecd\uff0c\u77e5\u9053\u4f7f\u7528\u4e00\u4e2a Dockerfile \u6a21\u677f\u6587\u4ef6\uff0c\u53ef\u4ee5\u8ba9\u7528\u6237\u5f88\u65b9\u4fbf\u7684\u5b9a\u4e49\u4e00\u4e2a\u5355\u72ec\u7684\u5e94\u7528\u5bb9\u5668\u3002\u7136\u800c\uff0c\u5728\u65e5\u5e38\u5de5\u4f5c\u4e2d\uff0c\u7ecf\u5e38\u4f1a\u78b0\u5230\u9700\u8981\u591a\u4e2a\u5bb9\u5668\u76f8\u4e92\u914d\u5408\u6765\u5b8c\u6210\u67d0\u9879\u4efb\u52a1\u7684\u60c5\u51b5\u3002\u4f8b\u5982\u8981\u5b9e\u73b0\u4e00\u4e2a Web \u9879\u76ee\uff0c\u9664\u4e86 Web \u670d\u52a1\u5bb9\u5668\u672c\u8eab\uff0c\u5f80\u5f80\u8fd8\u9700\u8981\u518d\u52a0\u4e0a\u540e\u7aef\u7684\u6570\u636e\u5e93\u670d\u52a1\u5bb9\u5668\uff0c\u751a\u81f3\u8fd8\u5305\u62ec\u8d1f\u8f7d\u5747\u8861\u5bb9\u5668\u7b49\u3002\nCompose \u6070\u597d\u6ee1\u8db3\u4e86\u8fd9\u6837\u7684\u9700\u6c42\u3002\u5b83\u5141\u8bb8\u7528\u6237\u901a\u8fc7\u4e00\u4e2a\u5355\u72ec\u7684 docker-compose.yml \u6a21\u677f\u6587\u4ef6\uff08YAML \u683c\u5f0f\uff09\u6765\u5b9a\u4e49\u4e00\u7ec4\u76f8\u5173\u8054\u7684\u5e94\u7528\u5bb9\u5668\u4e3a\u4e00\u4e2a\u9879\u76ee\uff08project\uff09\u3002\nCompose \u4e2d\u6709\u4e24\u4e2a\u91cd\u8981\u7684\u6982\u5ff5\uff1a\n\n\u670d\u52a1 (service)\uff1a\u4e00\u4e2a\u5e94\u7528\u7684\u5bb9\u5668\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u5305\u62ec\u82e5\u5e72\u8fd0\u884c\u76f8\u540c\u955c\u50cf\u7684\u5bb9\u5668\u5b9e\u4f8b\u3002\n\u9879\u76ee (project)\uff1a\u7531\u4e00\u7ec4\u5173\u8054\u7684\u5e94\u7528\u5bb9\u5668\u7ec4\u6210\u7684\u4e00\u4e2a\u5b8c\u6574\u4e1a\u52a1\u5355\u5143\uff0c\u5728 docker-compose.yml \u6587\u4ef6\u4e2d\u5b9a\u4e49\u3002\n\nCompose \u7684\u9ed8\u8ba4\u7ba1\u7406\u5bf9\u8c61\u662f\u9879\u76ee\uff0c\u901a\u8fc7\u5b50\u547d\u4ee4\u5bf9\u9879\u76ee\u4e2d\u7684\u4e00\u7ec4\u5bb9\u5668\u8fdb\u884c\u4fbf\u6377\u5730\u751f\u547d\u5468\u671f\u7ba1\u7406\u3002\nCompose \u9879\u76ee\u7531 Python \u7f16\u5199\uff0c\u5b9e\u73b0\u4e0a\u8c03\u7528\u4e86 Docker \u670d\u52a1\u63d0\u4f9b\u7684 API \u6765\u5bf9\u5bb9\u5668\u8fdb\u884c\u7ba1\u7406\u3002\u56e0\u6b64\uff0c\u53ea\u8981\u6240\u64cd\u4f5c\u7684\u5e73\u53f0\u652f\u6301 Docker API\uff0c\u5c31\u53ef\u4ee5\u5728\u5176\u4e0a\u5229\u7528 Compose \u6765\u8fdb\u884c\u7f16\u6392\u7ba1\u7406\u3002\n\u5b89\u88c5\u4e0e\u5378\u8f7d\nCompose \u652f\u6301 Linux\u3001macOS\u3001Windows 10 \u4e09\u5927\u5e73\u53f0\u3002\nCompose \u53ef\u4ee5\u901a\u8fc7 Python \u7684\u5305\u7ba1\u7406\u5de5\u5177 pip \u8fdb\u884c\u5b89\u88c5\uff0c\u4e5f\u53ef\u4ee5\u76f4\u63a5\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u4f7f\u7528\uff0c\u751a\u81f3\u80fd\u591f\u76f4\u63a5\u5728 Docker \u5bb9\u5668\u4e2d\u8fd0\u884c\u3002\nDocker Desktop for Mac/Windows \u81ea\u5e26 docker-compose \u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5b89\u88c5 Docker \u4e4b\u540e\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u3002\n\n$ docker-compose --versiondocker-compose version 1.25.5, build 4667896b\nLinux \u7cfb\u7edf\u8bf7\u4f7f\u7528\u4ee5\u4e0b\u4ecb\u7ecd\u7684\u65b9\u6cd5\u5b89\u88c5\u3002\n\u4e8c\u8fdb\u5236\u5305\u5b89\u88c5\n\u5728 Linux \u4e0a\u7684\u4e5f\u5b89\u88c5\u5341\u5206\u7b80\u5355\uff0c\u4ece \u5b98\u65b9 GitHub Release \u5904\u76f4\u63a5\u4e0b\u8f7d\u7f16\u8bd1\u597d\u7684\u4e8c\u8fdb\u5236\u6587\u4ef6\u5373\u53ef\u3002\n\u4f8b\u5982\uff0c\u5728 Linux 64 \u4f4d\u7cfb\u7edf\u4e0a\u76f4\u63a5\u4e0b\u8f7d\u5bf9\u5e94\u7684\u4e8c\u8fdb\u5236\u5305\u3002\n$ sudo curl -L https://github.com/docker/compose/releases/download/1.25.5/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose\n\n$ sudo chmod +x /usr/local/bin/docker-compose\n\nPIP \u5b89\u88c5\n\u6ce8\uff1a x86_64 \u67b6\u6784\u7684 Linux \u5efa\u8bae\u6309\u7167\u4e0a\u8fb9\u7684\u65b9\u6cd5\u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5305\u8fdb\u884c\u5b89\u88c5\uff0c\u5982\u679c\u60a8\u8ba1\u7b97\u673a\u7684\u67b6\u6784\u662f ARM (\u4f8b\u5982\uff0c\u6811\u8393\u6d3e)\uff0c\u518d\u4f7f\u7528 pip \u5b89\u88c5\u3002\n\u8fd9\u79cd\u65b9\u5f0f\u662f\u5c06 Compose \u5f53\u4f5c\u4e00\u4e2a Python \u5e94\u7528\u6765\u4ece pip \u6e90\u4e2d\u5b89\u88c5\u3002\n\u6267\u884c\u5b89\u88c5\u547d\u4ee4\uff1a\n$ sudo pip install -U docker-compose\n\n\u53ef\u4ee5\u770b\u5230\u7c7b\u4f3c\u5982\u4e0b\u8f93\u51fa\uff0c\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002\nCollecting docker-compose\n  Downloading docker-compose-1.25.5.tar.gz (149kB): 149kB downloaded\n...\nSuccessfully installed docker-compose cached-property requests texttable websocket-client docker-py dockerpty six enum34 backports.ssl-match-hostname ipaddress\n\nbash \u8865\u5168\u547d\u4ee4\n$ curl -L https://raw.githubusercontent.com/docker/compose/1.25.5/contrib/completion/bash/docker-compose &gt; /etc/bash_completion.d/docker-compose\n\n\u5378\u8f7d\n\u5982\u679c\u662f\u4e8c\u8fdb\u5236\u5305\u65b9\u5f0f\u5b89\u88c5\u7684\uff0c\u5220\u9664\u4e8c\u8fdb\u5236\u6587\u4ef6\u5373\u53ef\u3002\n$ sudo rm /usr/local/bin/docker-compose\n\n\u5982\u679c\u662f\u901a\u8fc7 pip \u5b89\u88c5\u7684\uff0c\u5219\u6267\u884c\u5982\u4e0b\u547d\u4ee4\u5373\u53ef\u5220\u9664\u3002\n$ sudo pip uninstall docker-compose\n\n\u4f7f\u7528\n\u672f\u8bed\n\u9996\u5148\u4ecb\u7ecd\u51e0\u4e2a\u672f\u8bed\u3002\n\n\u670d\u52a1 (service)\uff1a\u4e00\u4e2a\u5e94\u7528\u5bb9\u5668\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u8fd0\u884c\u591a\u4e2a\u76f8\u540c\u955c\u50cf\u7684\u5b9e\u4f8b\u3002\n\u9879\u76ee (project)\uff1a\u7531\u4e00\u7ec4\u5173\u8054\u7684\u5e94\u7528\u5bb9\u5668\u7ec4\u6210\u7684\u4e00\u4e2a\u5b8c\u6574\u4e1a\u52a1\u5355\u5143\u3002\n\n\u53ef\u89c1\uff0c\u4e00\u4e2a\u9879\u76ee\u53ef\u4ee5\u7531\u591a\u4e2a\u670d\u52a1\uff08\u5bb9\u5668\uff09\u5173\u8054\u800c\u6210\uff0cCompose \u9762\u5411\u9879\u76ee\u8fdb\u884c\u7ba1\u7406\u3002\n\u573a\u666f\n\u6700\u5e38\u89c1\u7684\u9879\u76ee\u662f web \u7f51\u7ad9\uff0c\u8be5\u9879\u76ee\u5e94\u8be5\u5305\u542b web \u5e94\u7528\u548c\u7f13\u5b58\u3002\n\u4e0b\u9762\u7528 Python \u6765\u5efa\u7acb\u4e00\u4e2a\u80fd\u591f\u8bb0\u5f55\u9875\u9762\u8bbf\u95ee\u6b21\u6570\u7684 web \u7f51\u7ad9\u3002\nweb \u5e94\u7528\n\u65b0\u5efa\u6587\u4ef6\u5939\uff0c\u5728\u8be5\u76ee\u5f55\u4e2d\u7f16\u5199 app.py \u6587\u4ef6\nfrom flask import Flask\nfrom redis import Redis\n\napp = Flask(__name__)\nredis = Redis(host=&#39;redis&#39;, port=6379)\n\n@app.route(&#39;/&#39;)\ndef hello():\n    count = redis.incr(&#39;hits&#39;)\n    return &#39;Hello World! \u8be5\u9875\u9762\u5df2\u88ab\u8bbf\u95ee {} \u6b21\u3002\\n&#39;.format(count)\n\nif __name__ == &quot;__main__&quot;:\n    app.run(host=&quot;0.0.0.0&quot;, debug=True)\n\nDockerfile\n\u7f16\u5199 Dockerfile \u6587\u4ef6\uff0c\u5185\u5bb9\u4e3a\nFROM python:3.6-alpine\nADD . /code\nWORKDIR /code\nRUN pip install redis flask\nCMD [&quot;python&quot;, &quot;app.py&quot;]\n\ndocker-compose.yml\n\u7f16\u5199 docker-compose.yml \u6587\u4ef6\uff0c\u8fd9\u4e2a\u662f Compose \u4f7f\u7528\u7684\u4e3b\u6a21\u677f\u6587\u4ef6\u3002\nversion: &#39;3&#39;\nservices:\n  web:\n    build: .\n    ports:\n     - &quot;5000:5000&quot;\n  redis:\n    image: &quot;redis:alpine&quot;\n\n\u8fd0\u884c compose \u9879\u76ee\n$ docker-compose up\n\n\u6b64\u65f6\u8bbf\u95ee\u672c\u5730 5000 \u7aef\u53e3\uff0c\u6bcf\u6b21\u5237\u65b0\u9875\u9762\uff0c\u8ba1\u6570\u5c31\u4f1a\u52a0 1\u3002\n\u547d\u4ee4\u8bf4\u660e\n\u547d\u4ee4\u5bf9\u8c61\u4e0e\u683c\u5f0f\n\u5bf9\u4e8e Compose \u6765\u8bf4\uff0c\u5927\u90e8\u5206\u547d\u4ee4\u7684\u5bf9\u8c61\u65e2\u53ef\u4ee5\u662f\u9879\u76ee\u672c\u8eab\uff0c\u4e5f\u53ef\u4ee5\u6307\u5b9a\u4e3a\u9879\u76ee\u4e2d\u7684\u670d\u52a1\u6216\u8005\u5bb9\u5668\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u7684\u8bf4\u660e\uff0c\u547d\u4ee4\u5bf9\u8c61\u5c06\u662f\u9879\u76ee\uff0c\u8fd9\u610f\u5473\u7740\u9879\u76ee\u4e2d\u6240\u6709\u7684\u670d\u52a1\u90fd\u4f1a\u53d7\u5230\u547d\u4ee4\u5f71\u54cd\u3002\n\u6267\u884c docker-compose [COMMAND] --help \u6216\u8005 docker-compose help [COMMAND] \u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u67d0\u4e2a\u547d\u4ee4\u7684\u4f7f\u7528\u683c\u5f0f\u3002\ndocker-compose \u547d\u4ee4\u7684\u57fa\u672c\u7684\u4f7f\u7528\u683c\u5f0f\u662f\ndocker-compose [-f=&lt;arg&gt;...] [options] [COMMAND] [ARGS...]\n\n\u547d\u4ee4\u9009\u9879\n\n-f, --file FILE \u6307\u5b9a\u4f7f\u7528\u7684 Compose \u6a21\u677f\u6587\u4ef6\uff0c\u9ed8\u8ba4\u4e3a docker-compose.yml\uff0c\u53ef\u4ee5\u591a\u6b21\u6307\u5b9a\u3002\n-p, --project-name NAME \u6307\u5b9a\u9879\u76ee\u540d\u79f0\uff0c\u9ed8\u8ba4\u5c06\u4f7f\u7528\u6240\u5728\u76ee\u5f55\u540d\u79f0\u4f5c\u4e3a\u9879\u76ee\u540d\u3002\n--x-networking \u4f7f\u7528 Docker \u7684\u53ef\u62d4\u63d2\u7f51\u7edc\u540e\u7aef\u7279\u6027\n--x-network-driver DRIVER \u6307\u5b9a\u7f51\u7edc\u540e\u7aef\u7684\u9a71\u52a8\uff0c\u9ed8\u8ba4\u4e3a bridge\n--verbose \u8f93\u51fa\u66f4\u591a\u8c03\u8bd5\u4fe1\u606f\u3002\n-v, --version \u6253\u5370\u7248\u672c\u5e76\u9000\u51fa\u3002\n\n\u547d\u4ee4\u4f7f\u7528\u8bf4\u660e\nbuild\n\u683c\u5f0f\u4e3a docker-compose build [options] [SERVICE...]\u3002\n\u6784\u5efa\uff08\u91cd\u65b0\u6784\u5efa\uff09\u9879\u76ee\u4e2d\u7684\u670d\u52a1\u5bb9\u5668\u3002\n\u670d\u52a1\u5bb9\u5668\u4e00\u65e6\u6784\u5efa\u540e\uff0c\u5c06\u4f1a\u5e26\u4e0a\u4e00\u4e2a\u6807\u8bb0\u540d\uff0c\u4f8b\u5982\u5bf9\u4e8e web \u9879\u76ee\u4e2d\u7684\u4e00\u4e2a db \u5bb9\u5668\uff0c\u53ef\u80fd\u662f web_db\u3002\n\u53ef\u4ee5\u968f\u65f6\u5728\u9879\u76ee\u76ee\u5f55\u4e0b\u8fd0\u884c docker-compose build \u6765\u91cd\u65b0\u6784\u5efa\u670d\u52a1\u3002\n\u9009\u9879\u5305\u62ec\uff1a\n\n--force-rm \u5220\u9664\u6784\u5efa\u8fc7\u7a0b\u4e2d\u7684\u4e34\u65f6\u5bb9\u5668\u3002\n--no-cache \u6784\u5efa\u955c\u50cf\u8fc7\u7a0b\u4e2d\u4e0d\u4f7f\u7528 cache\uff08\u8fd9\u5c06\u52a0\u957f\u6784\u5efa\u8fc7\u7a0b\uff09\u3002\n--pull \u59cb\u7ec8\u5c1d\u8bd5\u901a\u8fc7 pull \u6765\u83b7\u53d6\u66f4\u65b0\u7248\u672c\u7684\u955c\u50cf\u3002\n\nconfig\n\u9a8c\u8bc1 Compose \u6587\u4ef6\u683c\u5f0f\u662f\u5426\u6b63\u786e\uff0c\u82e5\u6b63\u786e\u5219\u663e\u793a\u914d\u7f6e\uff0c\u82e5\u683c\u5f0f\u9519\u8bef\u663e\u793a\u9519\u8bef\u539f\u56e0\u3002\ndown\n\u6b64\u547d\u4ee4\u5c06\u4f1a\u505c\u6b62 up \u547d\u4ee4\u6240\u542f\u52a8\u7684\u5bb9\u5668\uff0c\u5e76\u79fb\u9664\u7f51\u7edc\nexec\n\u8fdb\u5165\u6307\u5b9a\u7684\u5bb9\u5668\u3002\nhelp\n\u83b7\u5f97\u4e00\u4e2a\u547d\u4ee4\u7684\u5e2e\u52a9\u3002\nimages\n\u5217\u51fa Compose \u6587\u4ef6\u4e2d\u5305\u542b\u7684\u955c\u50cf\u3002\nkill\n\u683c\u5f0f\u4e3a docker-compose kill [options] [SERVICE...]\u3002\n\u901a\u8fc7\u53d1\u9001 SIGKILL(\u7ec8\u6b62\u8fdb\u7a0b) \u4fe1\u53f7\u6765\u5f3a\u5236\u505c\u6b62\u670d\u52a1\u5bb9\u5668\u3002\n\u652f\u6301\u901a\u8fc7 -s \u53c2\u6570\u6765\u6307\u5b9a\u53d1\u9001\u7684\u4fe1\u53f7\uff0c\u4f8b\u5982\u901a\u8fc7\u5982\u4e0b\u6307\u4ee4\u53d1\u9001 SIGINT \u4fe1\u53f7\u3002\n\n$ docker-compose kill -s SIGINT\nlogs\n\u683c\u5f0f\u4e3a docker-compose logs [options] [SERVICE...]\u3002\n\u67e5\u770b\u670d\u52a1\u5bb9\u5668\u7684\u8f93\u51fa\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cdocker-compose \u5c06\u5bf9\u4e0d\u540c\u7684\u670d\u52a1\u8f93\u51fa\u4f7f\u7528\u4e0d\u540c\u7684\u989c\u8272\u6765\u533a\u5206\u3002\u53ef\u4ee5\u901a\u8fc7 --no-color \u6765\u5173\u95ed\u989c\u8272\u3002\n\u8be5\u547d\u4ee4\u5728\u8c03\u8bd5\u95ee\u9898\u7684\u65f6\u5019\u5341\u5206\u6709\u7528\u3002\npause\n\u683c\u5f0f\u4e3a docker-compose pause [SERVICE...]\u3002\n\u6682\u505c\u4e00\u4e2a\u670d\u52a1\u5bb9\u5668\u3002\nport\n\u683c\u5f0f\u4e3a docker-compose port [options] SERVICE PRIVATE_PORT\u3002\n\u6253\u5370\u67d0\u4e2a\u5bb9\u5668\u7aef\u53e3\u6240\u6620\u5c04\u7684\u516c\u5171\u7aef\u53e3\u3002\n\u9009\u9879\uff1a\n\n--protocol=proto \u6307\u5b9a\u7aef\u53e3\u534f\u8bae\uff0ctcp\uff08\u9ed8\u8ba4\u503c\uff09\u6216\u8005 udp\u3002\n--index=index \u5982\u679c\u540c\u4e00\u670d\u52a1\u5b58\u5728\u591a\u4e2a\u5bb9\u5668\uff0c\u6307\u5b9a\u547d\u4ee4\u5bf9\u8c61\u5bb9\u5668\u7684\u5e8f\u53f7\uff08\u9ed8\u8ba4\u4e3a 1\uff09\u3002\n\nps\n\u683c\u5f0f\u4e3a docker-compose ps [options] [SERVICE...]\u3002\n\u5217\u51fa\u9879\u76ee\u4e2d\u76ee\u524d\u7684\u6240\u6709\u5bb9\u5668\u3002\n\u9009\u9879\uff1a\n\n-q \u53ea\u6253\u5370\u5bb9\u5668\u7684 ID \u4fe1\u606f\u3002\n\npull\n\u683c\u5f0f\u4e3a docker-compose pull [options] [SERVICE...]\u3002\n\u62c9\u53d6\u670d\u52a1\u4f9d\u8d56\u7684\u955c\u50cf\u3002\n\u9009\u9879\uff1a\n\n--ignore-pull-failures \u5ffd\u7565\u62c9\u53d6\u955c\u50cf\u8fc7\u7a0b\u4e2d\u7684\u9519\u8bef\u3002\n\npush\n\u63a8\u9001\u670d\u52a1\u4f9d\u8d56\u7684\u955c\u50cf\u5230 Docker \u955c\u50cf\u4ed3\u5e93\u3002\nrestart\n\u683c\u5f0f\u4e3a docker-compose restart [options] [SERVICE...]\u3002\n\u91cd\u542f\u9879\u76ee\u4e2d\u7684\u670d\u52a1\u3002\n\u9009\u9879\uff1a\n\n-t, --timeout TIMEOUT \u6307\u5b9a\u91cd\u542f\u524d\u505c\u6b62\u5bb9\u5668\u7684\u8d85\u65f6\uff08\u9ed8\u8ba4\u4e3a 10 \u79d2\uff09\u3002\n\nrm\n\u683c\u5f0f\u4e3a docker-compose rm [options] [SERVICE...]\u3002\n\u5220\u9664\u6240\u6709\uff08\u505c\u6b62\u72b6\u6001\u7684\uff09\u670d\u52a1\u5bb9\u5668\u3002\u63a8\u8350\u5148\u6267\u884c docker-compose stop \u547d\u4ee4\u6765\u505c\u6b62\u5bb9\u5668\u3002\n\u9009\u9879\uff1a\n\n-f, --force \u5f3a\u5236\u76f4\u63a5\u5220\u9664\uff0c\u5305\u62ec\u975e\u505c\u6b62\u72b6\u6001\u7684\u5bb9\u5668\u3002\u4e00\u822c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528\u8be5\u9009\u9879\u3002\n-v \u5220\u9664\u5bb9\u5668\u6240\u6302\u8f7d\u7684\u6570\u636e\u5377\u3002\n\nrun\n\u683c\u5f0f\u4e3a docker-compose run [options] [-p PORT...] [-e KEY=VAL...] SERVICE [COMMAND] [ARGS...]\u3002\n\u5728\u6307\u5b9a\u670d\u52a1\u4e0a\u6267\u884c\u4e00\u4e2a\u547d\u4ee4\u3002\n\u4f8b\u5982\uff1a\n$ docker-compose run ubuntu ping docker.com\n\n\u5c06\u4f1a\u542f\u52a8\u4e00\u4e2a ubuntu \u670d\u52a1\u5bb9\u5668\uff0c\u5e76\u6267\u884c ping docker.com \u547d\u4ee4\u3002\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u5b58\u5728\u5173\u8054\uff0c\u5219\u6240\u6709\u5173\u8054\u7684\u670d\u52a1\u5c06\u4f1a\u81ea\u52a8\u88ab\u542f\u52a8\uff0c\u9664\u975e\u8fd9\u4e9b\u670d\u52a1\u5df2\u7ecf\u5728\u8fd0\u884c\u4e2d\u3002\n\u8be5\u547d\u4ee4\u7c7b\u4f3c\u542f\u52a8\u5bb9\u5668\u540e\u8fd0\u884c\u6307\u5b9a\u7684\u547d\u4ee4\uff0c\u76f8\u5173\u5377\u3001\u94fe\u63a5\u7b49\u7b49\u90fd\u5c06\u4f1a\u6309\u7167\u914d\u7f6e\u81ea\u52a8\u521b\u5efa\u3002\n\u4e24\u4e2a\u4e0d\u540c\u70b9\uff1a\n\n\u7ed9\u5b9a\u547d\u4ee4\u5c06\u4f1a\u8986\u76d6\u539f\u6709\u7684\u81ea\u52a8\u8fd0\u884c\u547d\u4ee4\uff1b\n\u4e0d\u4f1a\u81ea\u52a8\u521b\u5efa\u7aef\u53e3\uff0c\u4ee5\u907f\u514d\u51b2\u7a81\u3002\n\n\u5982\u679c\u4e0d\u5e0c\u671b\u81ea\u52a8\u542f\u52a8\u5173\u8054\u7684\u5bb9\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528 --no-deps \u9009\u9879\uff0c\u4f8b\u5982\n$ docker-compose run --no-deps web python manage.py shell\n\n\u5c06\u4e0d\u4f1a\u542f\u52a8 web \u5bb9\u5668\u6240\u5173\u8054\u7684\u5176\u5b83\u5bb9\u5668\u3002\n\u9009\u9879\uff1a\n\n-d \u540e\u53f0\u8fd0\u884c\u5bb9\u5668\u3002\n--name NAME \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u5b57\u3002\n--entrypoint CMD \u8986\u76d6\u9ed8\u8ba4\u7684\u5bb9\u5668\u542f\u52a8\u6307\u4ee4\u3002\n-e KEY=VAL \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u503c\uff0c\u53ef\u591a\u6b21\u4f7f\u7528\u9009\u9879\u6765\u8bbe\u7f6e\u591a\u4e2a\u73af\u5883\u53d8\u91cf\u3002\n-u, --user=\"\" \u6307\u5b9a\u8fd0\u884c\u5bb9\u5668\u7684\u7528\u6237\u540d\u6216\u8005 uid\u3002\n--no-deps \u4e0d\u81ea\u52a8\u542f\u52a8\u5173\u8054\u7684\u670d\u52a1\u5bb9\u5668\u3002\n--rm \u8fd0\u884c\u547d\u4ee4\u540e\u81ea\u52a8\u5220\u9664\u5bb9\u5668\uff0cd \u6a21\u5f0f\u4e0b\u5c06\u5ffd\u7565\u3002\n-p, --publish=[] \u6620\u5c04\u5bb9\u5668\u7aef\u53e3\u5230\u672c\u5730\u4e3b\u673a\u3002\n--service-ports \u914d\u7f6e\u670d\u52a1\u7aef\u53e3\u5e76\u6620\u5c04\u5230\u672c\u5730\u4e3b\u673a\u3002\n-T \u4e0d\u5206\u914d\u4f2a tty\uff0c\u610f\u5473\u7740\u4f9d\u8d56 tty \u7684\u6307\u4ee4\u5c06\u65e0\u6cd5\u8fd0\u884c\u3002\n\nscale\n\u683c\u5f0f\u4e3a docker-compose scale [options] [SERVICE=NUM...]\u3002\n\u8bbe\u7f6e\u6307\u5b9a\u670d\u52a1\u8fd0\u884c\u7684\u5bb9\u5668\u4e2a\u6570\u3002\n\u901a\u8fc7 service=num \u7684\u53c2\u6570\u6765\u8bbe\u7f6e\u6570\u91cf\u3002\u4f8b\u5982\uff1a\n$ docker-compose scale web=3 db=2\n\n\u5c06\u542f\u52a8 3 \u4e2a\u5bb9\u5668\u8fd0\u884c web \u670d\u52a1\uff0c2 \u4e2a\u5bb9\u5668\u8fd0\u884c db \u670d\u52a1\u3002\n\u4e00\u822c\u7684\uff0c\u5f53\u6307\u5b9a\u6570\u76ee\u591a\u4e8e\u8be5\u670d\u52a1\u5f53\u524d\u5b9e\u9645\u8fd0\u884c\u5bb9\u5668\uff0c\u5c06\u65b0\u521b\u5efa\u5e76\u542f\u52a8\u5bb9\u5668\uff1b\u53cd\u4e4b\uff0c\u5c06\u505c\u6b62\u5bb9\u5668\u3002\n\u9009\u9879\uff1a\n\n-t, --timeout TIMEOUT \u505c\u6b62\u5bb9\u5668\u65f6\u5019\u7684\u8d85\u65f6\uff08\u9ed8\u8ba4\u4e3a 10 \u79d2\uff09\u3002\n\nstart\n\u683c\u5f0f\u4e3a docker-compose start [SERVICE...]\u3002\n\u542f\u52a8\u5df2\u7ecf\u5b58\u5728\u7684\u670d\u52a1\u5bb9\u5668\u3002\nstop\n\u683c\u5f0f\u4e3a docker-compose stop [options] [SERVICE...]\u3002\n\u505c\u6b62\u5df2\u7ecf\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u7684\u5bb9\u5668\uff0c\u4f46\u4e0d\u5220\u9664\u5b83\u3002\u901a\u8fc7 docker-compose start \u53ef\u4ee5\u518d\u6b21\u542f\u52a8\u8fd9\u4e9b\u5bb9\u5668\u3002\n\u9009\u9879\uff1a\n\n-t, --timeout TIMEOUT \u505c\u6b62\u5bb9\u5668\u65f6\u5019\u7684\u8d85\u65f6\uff08\u9ed8\u8ba4\u4e3a 10 \u79d2\uff09\u3002\n\ntop\n\u67e5\u770b\u5404\u4e2a\u670d\u52a1\u5bb9\u5668\u5185\u8fd0\u884c\u7684\u8fdb\u7a0b\u3002\nunpause\n\u683c\u5f0f\u4e3a docker-compose unpause [SERVICE...]\u3002\n\u6062\u590d\u5904\u4e8e\u6682\u505c\u72b6\u6001\u4e2d\u7684\u670d\u52a1\u3002\nup\n\u683c\u5f0f\u4e3a docker-compose up [options] [SERVICE...]\u3002\n\u8be5\u547d\u4ee4\u5341\u5206\u5f3a\u5927\uff0c\u5b83\u5c06\u5c1d\u8bd5\u81ea\u52a8\u5b8c\u6210\u5305\u62ec\u6784\u5efa\u955c\u50cf\uff0c\uff08\u91cd\u65b0\uff09\u521b\u5efa\u670d\u52a1\uff0c\u542f\u52a8\u670d\u52a1\uff0c\u5e76\u5173\u8054\u670d\u52a1\u76f8\u5173\u5bb9\u5668\u7684\u4e00\u7cfb\u5217\u64cd\u4f5c\u3002\n\u94fe\u63a5\u7684\u670d\u52a1\u90fd\u5c06\u4f1a\u88ab\u81ea\u52a8\u542f\u52a8\uff0c\u9664\u975e\u5df2\u7ecf\u5904\u4e8e\u8fd0\u884c\u72b6\u6001\u3002\n\u53ef\u4ee5\u8bf4\uff0c\u5927\u90e8\u5206\u65f6\u5019\u90fd\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\u8be5\u547d\u4ee4\u6765\u542f\u52a8\u4e00\u4e2a\u9879\u76ee\u3002\n\u9ed8\u8ba4\u60c5\u51b5\uff0cdocker-compose up \u542f\u52a8\u7684\u5bb9\u5668\u90fd\u5728\u524d\u53f0\uff0c\u63a7\u5236\u53f0\u5c06\u4f1a\u540c\u65f6\u6253\u5370\u6240\u6709\u5bb9\u5668\u7684\u8f93\u51fa\u4fe1\u606f\uff0c\u53ef\u4ee5\u5f88\u65b9\u4fbf\u8fdb\u884c\u8c03\u8bd5\u3002\n\u5f53\u901a\u8fc7 Ctrl-C \u505c\u6b62\u547d\u4ee4\u65f6\uff0c\u6240\u6709\u5bb9\u5668\u5c06\u4f1a\u505c\u6b62\u3002\n\u5982\u679c\u4f7f\u7528 docker-compose up -d\uff0c\u5c06\u4f1a\u5728\u540e\u53f0\u542f\u52a8\u5e76\u8fd0\u884c\u6240\u6709\u7684\u5bb9\u5668\u3002\u4e00\u822c\u63a8\u8350\u751f\u4ea7\u73af\u5883\u4e0b\u4f7f\u7528\u8be5\u9009\u9879\u3002\n\u9ed8\u8ba4\u60c5\u51b5\uff0c\u5982\u679c\u670d\u52a1\u5bb9\u5668\u5df2\u7ecf\u5b58\u5728\uff0cdocker-compose up \u5c06\u4f1a\u5c1d\u8bd5\u505c\u6b62\u5bb9\u5668\uff0c\u7136\u540e\u91cd\u65b0\u521b\u5efa\uff08\u4fdd\u6301\u4f7f\u7528 volumes-from \u6302\u8f7d\u7684\u5377\uff09\uff0c\u4ee5\u4fdd\u8bc1\u65b0\u542f\u52a8\u7684\u670d\u52a1\u5339\u914d docker-compose.yml \u6587\u4ef6\u7684\u6700\u65b0\u5185\u5bb9\u3002\u5982\u679c\u7528\u6237\u4e0d\u5e0c\u671b\u5bb9\u5668\u88ab\u505c\u6b62\u5e76\u91cd\u65b0\u521b\u5efa\uff0c\u53ef\u4ee5\u4f7f\u7528 docker-compose up --no-recreate\u3002\u8fd9\u6837\u5c06\u53ea\u4f1a\u542f\u52a8\u5904\u4e8e\u505c\u6b62\u72b6\u6001\u7684\u5bb9\u5668\uff0c\u800c\u5ffd\u7565\u5df2\u7ecf\u8fd0\u884c\u7684\u670d\u52a1\u3002\u5982\u679c\u7528\u6237\u53ea\u60f3\u91cd\u65b0\u90e8\u7f72\u67d0\u4e2a\u670d\u52a1\uff0c\u53ef\u4ee5\u4f7f\u7528 docker-compose up --no-deps -d &lt;SERVICE_NAME&gt; \u6765\u91cd\u65b0\u521b\u5efa\u670d\u52a1\u5e76\u540e\u53f0\u505c\u6b62\u65e7\u670d\u52a1\uff0c\u542f\u52a8\u65b0\u670d\u52a1\uff0c\u5e76\u4e0d\u4f1a\u5f71\u54cd\u5230\u5176\u6240\u4f9d\u8d56\u7684\u670d\u52a1\u3002\n\u9009\u9879\uff1a\n\n-d \u5728\u540e\u53f0\u8fd0\u884c\u670d\u52a1\u5bb9\u5668\u3002\n--no-color \u4e0d\u4f7f\u7528\u989c\u8272\u6765\u533a\u5206\u4e0d\u540c\u7684\u670d\u52a1\u7684\u63a7\u5236\u53f0\u8f93\u51fa\u3002\n--no-deps \u4e0d\u542f\u52a8\u670d\u52a1\u6240\u94fe\u63a5\u7684\u5bb9\u5668\u3002\n--force-recreate \u5f3a\u5236\u91cd\u65b0\u521b\u5efa\u5bb9\u5668\uff0c\u4e0d\u80fd\u4e0e --no-recreate \u540c\u65f6\u4f7f\u7528\u3002\n--no-recreate \u5982\u679c\u5bb9\u5668\u5df2\u7ecf\u5b58\u5728\u4e86\uff0c\u5219\u4e0d\u91cd\u65b0\u521b\u5efa\uff0c\u4e0d\u80fd\u4e0e --force-recreate \u540c\u65f6\u4f7f\u7528\u3002\n--no-build \u4e0d\u81ea\u52a8\u6784\u5efa\u7f3a\u5931\u7684\u670d\u52a1\u955c\u50cf\u3002\n-t, --timeout TIMEOUT \u505c\u6b62\u5bb9\u5668\u65f6\u5019\u7684\u8d85\u65f6\uff08\u9ed8\u8ba4\u4e3a 10 \u79d2\uff09\u3002\n\nversion\n\u683c\u5f0f\u4e3a docker-compose version\u3002\n\u6253\u5370\u7248\u672c\u4fe1\u606f\u3002\nCompose \u6a21\u677f\u6587\u4ef6\n\u6a21\u677f\u6587\u4ef6\u662f\u4f7f\u7528 Compose \u7684\u6838\u5fc3\uff0c\u6d89\u53ca\u5230\u7684\u6307\u4ee4\u5173\u952e\u5b57\u4e5f\u6bd4\u8f83\u591a\u3002\u4f46\u8fd9\u91cc\u9762\u5927\u90e8\u5206\u6307\u4ee4\u8ddf docker run \u76f8\u5173\u53c2\u6570\u7684\u542b\u4e49\u90fd\u662f\u7c7b\u4f3c\u7684\u3002\n\u9ed8\u8ba4\u7684\u6a21\u677f\u6587\u4ef6\u540d\u79f0\u4e3a docker-compose.yml\uff0c\u683c\u5f0f\u4e3a YAML \u683c\u5f0f\u3002\n\nversion: \"3\"\n\nservices:\n  webapp:\n    image: examples/web\n    ports:\n      - \"80:80\"\n    volumes:\n      - \"/data\"\n\u6ce8\u610f\u6bcf\u4e2a\u670d\u52a1\u90fd\u5fc5\u987b\u901a\u8fc7 image \u6307\u4ee4\u6307\u5b9a\u955c\u50cf\u6216 build \u6307\u4ee4\uff08\u9700\u8981 Dockerfile\uff09\u7b49\u6765\u81ea\u52a8\u6784\u5efa\u751f\u6210\u955c\u50cf\u3002\n\u5982\u679c\u4f7f\u7528 build \u6307\u4ee4\uff0c\u5728 Dockerfile \u4e2d\u8bbe\u7f6e\u7684\u9009\u9879(\u4f8b\u5982\uff1aCMD, EXPOSE, VOLUME, ENV \u7b49) \u5c06\u4f1a\u81ea\u52a8\u88ab\u83b7\u53d6\uff0c\u65e0\u9700\u5728 docker-compose.yml \u4e2d\u91cd\u590d\u8bbe\u7f6e\u3002\n\u4e0b\u9762\u5206\u522b\u4ecb\u7ecd\u5404\u4e2a\u6307\u4ee4\u7684\u7528\u6cd5\u3002\nbuild\n\u6307\u5b9a Dockerfile \u6240\u5728\u6587\u4ef6\u5939\u7684\u8def\u5f84\uff08\u53ef\u4ee5\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u6216\u8005\u76f8\u5bf9 docker-compose.yml \u6587\u4ef6\u7684\u8def\u5f84\uff09\u3002 Compose \u5c06\u4f1a\u5229\u7528\u5b83\u81ea\u52a8\u6784\u5efa\u8fd9\u4e2a\u955c\u50cf\uff0c\u7136\u540e\u4f7f\u7528\u8fd9\u4e2a\u955c\u50cf\u3002\n\nversion: '3'\nservices:\n  webapp:\n    build: ./dir\n\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 context \u6307\u4ee4\u6307\u5b9a Dockerfile \u6240\u5728\u6587\u4ef6\u5939\u7684\u8def\u5f84\u3002\n\u4f7f\u7528 dockerfile \u6307\u4ee4\u6307\u5b9a Dockerfile \u6587\u4ef6\u540d\u3002\n\u4f7f\u7528 arg \u6307\u4ee4\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u65f6\u7684\u53d8\u91cf\u3002\n\nversion: '3'\nservices:\n  webapp:\n    build:\n      context: ./dir\n      dockerfile: Dockerfile-alternate\n      args:\n        buildno: 1\n\u4f7f\u7528 cache_from \u6307\u5b9a\u6784\u5efa\u955c\u50cf\u7684\u7f13\u5b58\n\nbuild:\n  context: .\n  cache_from:\n    - alpine:latest\n    - corp/web_app:3.14\ncap_add, cap_drop\n\u6307\u5b9a\u5bb9\u5668\u7684\u5185\u6838\u80fd\u529b\uff08capacity\uff09\u5206\u914d\u3002\n\u4f8b\u5982\uff0c\u8ba9\u5bb9\u5668\u62e5\u6709\u6240\u6709\u80fd\u529b\u53ef\u4ee5\u6307\u5b9a\u4e3a\uff1a\n\ncap_add:\n  - ALL\n\u53bb\u6389 NET_ADMIN \u80fd\u529b\u53ef\u4ee5\u6307\u5b9a\u4e3a\uff1a\n\ncap_drop:\n  - NET_ADMIN\ncommand\n\u8986\u76d6\u5bb9\u5668\u542f\u52a8\u540e\u9ed8\u8ba4\u6267\u884c\u7684\u547d\u4ee4\u3002\n\ncommand: echo \"hello world\"\ncgroup_parent\n\u6307\u5b9a\u7236 cgroup \u7ec4\uff0c\u610f\u5473\u7740\u5c06\u7ee7\u627f\u8be5\u7ec4\u7684\u8d44\u6e90\u9650\u5236\u3002\n\u4f8b\u5982\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a cgroup \u7ec4\u540d\u79f0\u4e3a cgroups_1\u3002\n\ncgroup_parent: cgroups_1\ncontainer_name\n\u6307\u5b9a\u5bb9\u5668\u540d\u79f0\u3002\u9ed8\u8ba4\u5c06\u4f1a\u4f7f\u7528 \u9879\u76ee\u540d\u79f0_\u670d\u52a1\u540d\u79f0_\u5e8f\u53f7 \u8fd9\u6837\u7684\u683c\u5f0f\u3002\n\ncontainer_name: docker-web-container\n\u6ce8\u610f: \u6307\u5b9a\u5bb9\u5668\u540d\u79f0\u540e\uff0c\u8be5\u670d\u52a1\u5c06\u65e0\u6cd5\u8fdb\u884c\u6269\u5c55\uff08scale\uff09\uff0c\u56e0\u4e3a Docker \u4e0d\u5141\u8bb8\u591a\u4e2a\u5bb9\u5668\u5177\u6709\u76f8\u540c\u7684\u540d\u79f0\u3002\n\ndevices\n\u6307\u5b9a\u8bbe\u5907\u6620\u5c04\u5173\u7cfb\u3002\n\ndevices:\n  - \"/dev/ttyUSB1:/dev/ttyUSB0\"\ndepends_on\n\u89e3\u51b3\u5bb9\u5668\u7684\u4f9d\u8d56\u3001\u542f\u52a8\u5148\u540e\u7684\u95ee\u9898\u3002\u4ee5\u4e0b\u4f8b\u5b50\u4e2d\u4f1a\u5148\u542f\u52a8 redis db \u518d\u542f\u52a8 web\n\nversion: '3'\n\nservices:\n  web:\n    build: .\n    depends_on:\n      - db\n      - redis\n\n  redis:\n    image: redis\n\n  db:\n    image: postgres\n\u6ce8\u610f\uff1aweb \u670d\u52a1\u4e0d\u4f1a\u7b49\u5f85 redis db \u300c\u5b8c\u5168\u542f\u52a8\u300d\u4e4b\u540e\u624d\u542f\u52a8\u3002\n\ndns\n\u81ea\u5b9a\u4e49 DNS \u670d\u52a1\u5668\u3002\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u3002\n\ndns: 8.8.8.8\n\ndns:\n  - 8.8.8.8\n  - 114.114.114.114\ndns_search\n\u914d\u7f6e DNS \u641c\u7d22\u57df\u3002\u53ef\u4ee5\u662f\u4e00\u4e2a\u503c\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u5217\u8868\u3002\n\ndns_search: example.com\n\ndns_search:\n  - domain1.example.com\n  - domain2.example.com\ntmpfs\n\u6302\u8f7d\u4e00\u4e2a tmpfs \u6587\u4ef6\u7cfb\u7edf\u5230\u5bb9\u5668\u3002\n\ntmpfs: /run\ntmpfs:\n  - /run\n  - /tmp\nenv_file\n\u4ece\u6587\u4ef6\u4e2d\u83b7\u53d6\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u4e3a\u5355\u72ec\u7684\u6587\u4ef6\u8def\u5f84\u6216\u5217\u8868\u3002\n\u5982\u679c\u901a\u8fc7 docker-compose -f FILE \u65b9\u5f0f\u6765\u6307\u5b9a Compose \u6a21\u677f\u6587\u4ef6\uff0c\u5219 env_file \u4e2d\u53d8\u91cf\u7684\u8def\u5f84\u4f1a\u57fa\u4e8e\u6a21\u677f\u6587\u4ef6\u8def\u5f84\u3002\n\u5982\u679c\u6709\u53d8\u91cf\u540d\u79f0\u4e0e environment \u6307\u4ee4\u51b2\u7a81\uff0c\u5219\u6309\u7167\u60ef\u4f8b\uff0c\u4ee5\u540e\u8005\u4e3a\u51c6\u3002\n\nenv_file: .env\n\nenv_file:\n  - ./common.env\n  - ./apps/web.env\n  - /opt/secrets.env\n\u73af\u5883\u53d8\u91cf\u6587\u4ef6\u4e2d\u6bcf\u4e00\u884c\u5fc5\u987b\u7b26\u5408\u683c\u5f0f\uff0c\u652f\u6301 # \u5f00\u5934\u7684\u6ce8\u91ca\u884c\u3002\n\n# common.env: Set development environment\nPROG_ENV=development\nenvironment\n\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528\u6570\u7ec4\u6216\u5b57\u5178\u4e24\u79cd\u683c\u5f0f\u3002\n\u53ea\u7ed9\u5b9a\u540d\u79f0\u7684\u53d8\u91cf\u4f1a\u81ea\u52a8\u83b7\u53d6\u8fd0\u884c Compose \u4e3b\u673a\u4e0a\u5bf9\u5e94\u53d8\u91cf\u7684\u503c\uff0c\u53ef\u4ee5\u7528\u6765\u9632\u6b62\u6cc4\u9732\u4e0d\u5fc5\u8981\u7684\u6570\u636e\u3002\n\nenvironment:\n  RACK_ENV: development\n  SESSION_SECRET:\n\nenvironment:\n  - RACK_ENV=development\n  - SESSION_SECRET\n\u5982\u679c\u53d8\u91cf\u540d\u79f0\u6216\u8005\u503c\u4e2d\u7528\u5230 true|false\uff0cyes|no \u7b49\u8868\u8fbe \u5e03\u5c14 \u542b\u4e49\u7684\u8bcd\u6c47\uff0c\u6700\u597d\u653e\u5230\u5f15\u53f7\u91cc\uff0c\u907f\u514d YAML \u81ea\u52a8\u89e3\u6790\u67d0\u4e9b\u5185\u5bb9\u4e3a\u5bf9\u5e94\u7684\u5e03\u5c14\u8bed\u4e49\u3002\u8fd9\u4e9b\u7279\u5b9a\u8bcd\u6c47\uff0c\u5305\u62ec\n\ny|Y|yes|Yes|YES|n|N|no|No|NO|true|True|TRUE|false|False|FALSE|on|On|ON|off|Off|OFF\nexpose\n\u66b4\u9732\u7aef\u53e3\uff0c\u4f46\u4e0d\u6620\u5c04\u5230\u5bbf\u4e3b\u673a\uff0c\u53ea\u88ab\u8fde\u63a5\u7684\u670d\u52a1\u8bbf\u95ee\u3002\n\u4ec5\u53ef\u4ee5\u6307\u5b9a\u5185\u90e8\u7aef\u53e3\u4e3a\u53c2\u6570\n\nexpose:\n - \"3000\"\n - \"8000\"\nexternal_links\n\u6ce8\u610f\uff1a\u4e0d\u5efa\u8bae\u4f7f\u7528\u8be5\u6307\u4ee4\u3002\n\n\u94fe\u63a5\u5230 docker-compose.yml \u5916\u90e8\u7684\u5bb9\u5668\uff0c\u751a\u81f3\u5e76\u975e Compose \u7ba1\u7406\u7684\u5916\u90e8\u5bb9\u5668\u3002\n\nexternal_links:\n - redis_1\n - project_db_1:mysql\n - project_db_1:postgresql\nextra_hosts\n\u7c7b\u4f3c Docker \u4e2d\u7684 --add-host \u53c2\u6570\uff0c\u6307\u5b9a\u989d\u5916\u7684 host \u540d\u79f0\u6620\u5c04\u4fe1\u606f\u3002\n\nextra_hosts:\n - \"googledns:8.8.8.8\"\n - \"dockerhub:52.1.157.61\"\n\u4f1a\u5728\u542f\u52a8\u540e\u7684\u670d\u52a1\u5bb9\u5668\u4e2d /etc/hosts \u6587\u4ef6\u4e2d\u6dfb\u52a0\u5982\u4e0b\u4e24\u6761\u6761\u76ee\u3002\n\n8.8.8.8 googledns\n52.1.157.61 dockerhub\nhealthcheck\n\u901a\u8fc7\u547d\u4ee4\u68c0\u67e5\u5bb9\u5668\u662f\u5426\u5065\u5eb7\u8fd0\u884c\u3002\n\nhealthcheck:\n  test: [\"CMD\", \"curl\", \"-f\", \"http://localhost\"]\n  interval: 1m30s\n  timeout: 10s\n  retries: 3\nimage\n\u6307\u5b9a\u4e3a\u955c\u50cf\u540d\u79f0\u6216\u955c\u50cf ID\u3002\u5982\u679c\u955c\u50cf\u5728\u672c\u5730\u4e0d\u5b58\u5728\uff0cCompose \u5c06\u4f1a\u5c1d\u8bd5\u62c9\u53d6\u8fd9\u4e2a\u955c\u50cf\u3002\n\nimage: ubuntu\nimage: orchardup/postgresql\nimage: a4bc65fd\nlabels\n\u4e3a\u5bb9\u5668\u6dfb\u52a0 Docker \u5143\u6570\u636e\uff08metadata\uff09\u4fe1\u606f\u3002\u4f8b\u5982\u53ef\u4ee5\u4e3a\u5bb9\u5668\u6dfb\u52a0\u8f85\u52a9\u8bf4\u660e\u4fe1\u606f\u3002\n\nlabels:\n  com.startupteam.description: \"webapp for a startup team\"\n  com.startupteam.department: \"devops department\"\n  com.startupteam.release: \"rc3 for v1.0\"\nlinks\n\u6ce8\u610f\uff1a\u4e0d\u63a8\u8350\u4f7f\u7528\u8be5\u6307\u4ee4\u3002\n\nlogging\n\u914d\u7f6e\u65e5\u5fd7\u9009\u9879\u3002\n\nlogging:\n  driver: syslog\n  options:\n    syslog-address: \"tcp://192.168.0.42:123\"\n\u76ee\u524d\u652f\u6301\u4e09\u79cd\u65e5\u5fd7\u9a71\u52a8\u7c7b\u578b\u3002\n\ndriver: \"json-file\"\ndriver: \"syslog\"\ndriver: \"none\"\noptions \u914d\u7f6e\u65e5\u5fd7\u9a71\u52a8\u7684\u76f8\u5173\u53c2\u6570\u3002\n\noptions:\n  max-size: \"200k\"\n  max-file: \"10\"\nnetwork_mode\n\u8bbe\u7f6e\u7f51\u7edc\u6a21\u5f0f\u3002\u4f7f\u7528\u548c docker run \u7684 --network \u53c2\u6570\u4e00\u6837\u7684\u503c\u3002\n\nnetwork_mode: \"bridge\"\nnetwork_mode: \"host\"\nnetwork_mode: \"none\"\nnetwork_mode: \"service:[service name]\"\nnetwork_mode: \"container:[container name/id]\"\nnetworks\n\u914d\u7f6e\u5bb9\u5668\u8fde\u63a5\u7684\u7f51\u7edc\u3002\n\nversion: \"3\"\nservices:\n\n  some-service:\n    networks:\n     - some-network\n     - other-network\n\nnetworks:\n  some-network:\n  other-network:\npid\n\u8ddf\u4e3b\u673a\u7cfb\u7edf\u5171\u4eab\u8fdb\u7a0b\u547d\u540d\u7a7a\u95f4\u3002\u6253\u5f00\u8be5\u9009\u9879\u7684\u5bb9\u5668\u4e4b\u95f4\uff0c\u4ee5\u53ca\u5bb9\u5668\u548c\u5bbf\u4e3b\u673a\u7cfb\u7edf\u4e4b\u95f4\u53ef\u4ee5\u901a\u8fc7\u8fdb\u7a0b ID \u6765\u76f8\u4e92\u8bbf\u95ee\u548c\u64cd\u4f5c\u3002\n\npid: \"host\"\nports\n\u66b4\u9732\u7aef\u53e3\u4fe1\u606f\u3002\n\u4f7f\u7528\u5bbf\u4e3b\u7aef\u53e3\uff1a\u5bb9\u5668\u7aef\u53e3 (HOST:CONTAINER) \u683c\u5f0f\uff0c\u6216\u8005\u4ec5\u4ec5\u6307\u5b9a\u5bb9\u5668\u7684\u7aef\u53e3\uff08\u5bbf\u4e3b\u5c06\u4f1a\u968f\u673a\u9009\u62e9\u7aef\u53e3\uff09\u90fd\u53ef\u4ee5\u3002\n\nports:\n - \"3000\"\n - \"8000:8000\"\n - \"49100:22\"\n - \"127.0.0.1:8001:8001\"\n\u6ce8\u610f\uff1a\u5f53\u4f7f\u7528 HOST:CONTAINER \u683c\u5f0f\u6765\u6620\u5c04\u7aef\u53e3\u65f6\uff0c\u5982\u679c\u4f60\u4f7f\u7528\u7684\u5bb9\u5668\u7aef\u53e3\u5c0f\u4e8e 60 \u5e76\u4e14\u6ca1\u653e\u5230\u5f15\u53f7\u91cc\uff0c\u53ef\u80fd\u4f1a\u5f97\u5230\u9519\u8bef\u7ed3\u679c\uff0c\u56e0\u4e3a YAML \u4f1a\u81ea\u52a8\u89e3\u6790 xx:yy \u8fd9\u79cd\u6570\u5b57\u683c\u5f0f\u4e3a 60 \u8fdb\u5236\u3002\u4e3a\u907f\u514d\u51fa\u73b0\u8fd9\u79cd\u95ee\u9898\uff0c\u5efa\u8bae\u6570\u5b57\u4e32\u90fd\u91c7\u7528\u5f15\u53f7\u5305\u62ec\u8d77\u6765\u7684\u5b57\u7b26\u4e32\u683c\u5f0f\u3002\nsecrets\n\u5b58\u50a8\u654f\u611f\u6570\u636e\uff0c\u4f8b\u5982 mysql \u670d\u52a1\u5bc6\u7801\u3002\n\nversion: \"3.1\"\nservices:\n\nmysql:\n  image: mysql\n  environment:\n    MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password\n  secrets:\n    - db_root_password\n    - my_other_secret\n\nsecrets:\n  my_secret:\n    file: ./my_secret.txt\n  my_other_secret:\n    external: true\nsecurity_opt\n\u6307\u5b9a\u5bb9\u5668\u6a21\u677f\u6807\u7b7e\uff08label\uff09\u673a\u5236\u7684\u9ed8\u8ba4\u5c5e\u6027\uff08\u7528\u6237\u3001\u89d2\u8272\u3001\u7c7b\u578b\u3001\u7ea7\u522b\u7b49\uff09\u3002\u4f8b\u5982\u914d\u7f6e\u6807\u7b7e\u7684\u7528\u6237\u540d\u548c\u89d2\u8272\u540d\u3002\n\nsecurity_opt:\n    - label:user:USER\n    - label:role:ROLE\nstop_signal\n\u8bbe\u7f6e\u53e6\u4e00\u4e2a\u4fe1\u53f7\u6765\u505c\u6b62\u5bb9\u5668\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4f7f\u7528\u7684\u662f SIGTERM \u505c\u6b62\u5bb9\u5668\u3002\n\nstop_signal: SIGUSR1\nsysctls\n\u914d\u7f6e\u5bb9\u5668\u5185\u6838\u53c2\u6570\u3002\n\nsysctls:\n  net.core.somaxconn: 1024\n  net.ipv4.tcp_syncookies: 0\n\nsysctls:\n  - net.core.somaxconn=1024\n  - net.ipv4.tcp_syncookies=0\nulimits\n\u6307\u5b9a\u5bb9\u5668\u7684 ulimits \u9650\u5236\u503c\u3002\n\u4f8b\u5982\uff0c\u6307\u5b9a\u6700\u5927\u8fdb\u7a0b\u6570\u4e3a 65535\uff0c\u6307\u5b9a\u6587\u4ef6\u53e5\u67c4\u6570\u4e3a 20000\uff08\u8f6f\u9650\u5236\uff0c\u5e94\u7528\u53ef\u4ee5\u968f\u65f6\u4fee\u6539\uff0c\u4e0d\u80fd\u8d85\u8fc7\u786c\u9650\u5236\uff09 \u548c 40000\uff08\u7cfb\u7edf\u786c\u9650\u5236\uff0c\u53ea\u80fd root \u7528\u6237\u63d0\u9ad8\uff09\u3002\n\nulimits:\n    nproc: 65535\n    nofile:\n      soft: 20000\n      hard: 40000\nvolumes\n\u6570\u636e\u5377\u6240\u6302\u8f7d\u8def\u5f84\u8bbe\u7f6e\u3002\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u5bbf\u4e3b\u673a\u8def\u5f84(HOST:CONTAINER)\u6216\u8005\u6570\u636e\u5377\u540d\u79f0(VOLUME:CONTAINER)\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u8bbf\u95ee\u6a21\u5f0f \uff08HOST:CONTAINER:ro\uff09\u3002\n\u8be5\u6307\u4ee4\u4e2d\u8def\u5f84\u652f\u6301\u76f8\u5bf9\u8def\u5f84\u3002\n\nvolumes:\n - /var/lib/mysql\n - cache/:/tmp/cache\n - ~/configs:/etc/configs/:ro\n\u5982\u679c\u8def\u5f84\u4e3a\u6570\u636e\u5377\u540d\u79f0\uff0c\u5fc5\u987b\u5728\u6587\u4ef6\u4e2d\u914d\u7f6e\u6570\u636e\u5377\u3002\n\nversion: \"3\"\n\nservices:\n  my_src:\n    image: mysql:8.0\n    volumes:\n      - mysql_data:/var/lib/mysql\n\nvolumes:\n  mysql_data:\n\u5176\u5b83\u6307\u4ee4\n\u6b64\u5916\uff0c\u8fd8\u6709\u5305\u62ec domainname, entrypoint, hostname, ipc, mac_address, privileged, read_only, shm_size, restart, stdin_open, tty, user, working_dir \u7b49\u6307\u4ee4\uff0c\u57fa\u672c\u8ddf docker run \u4e2d\u5bf9\u5e94\u53c2\u6570\u7684\u529f\u80fd\u4e00\u81f4\u3002\n\u6307\u5b9a\u670d\u52a1\u5bb9\u5668\u542f\u52a8\u540e\u6267\u884c\u7684\u5165\u53e3\u6587\u4ef6\u3002\n\nentrypoint: /code/entrypoint.sh\n\u6307\u5b9a\u5bb9\u5668\u4e2d\u8fd0\u884c\u5e94\u7528\u7684\u7528\u6237\u540d\u3002\n\nuser: nginx\n\u6307\u5b9a\u5bb9\u5668\u4e2d\u5de5\u4f5c\u76ee\u5f55\u3002\n\nworking_dir: /code\n\u6307\u5b9a\u5bb9\u5668\u4e2d\u641c\u7d22\u57df\u540d\u3001\u4e3b\u673a\u540d\u3001mac \u5730\u5740\u7b49\u3002\n\ndomainname: your_website.comhostname: testmac_address: 08-00-27-00-0C-0A\n\u5141\u8bb8\u5bb9\u5668\u4e2d\u8fd0\u884c\u4e00\u4e9b\u7279\u6743\u547d\u4ee4\u3002\n\nprivileged: true\n\u6307\u5b9a\u5bb9\u5668\u9000\u51fa\u540e\u7684\u91cd\u542f\u7b56\u7565\u4e3a\u59cb\u7ec8\u91cd\u542f\u3002\u8be5\u547d\u4ee4\u5bf9\u4fdd\u6301\u670d\u52a1\u59cb\u7ec8\u8fd0\u884c\u5341\u5206\u6709\u6548\uff0c\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u63a8\u8350\u914d\u7f6e\u4e3a always \u6216\u8005 unless-stopped\u3002\n\nrestart: always\n\u4ee5\u53ea\u8bfb\u6a21\u5f0f\u6302\u8f7d\u5bb9\u5668\u7684 root \u6587\u4ef6\u7cfb\u7edf\uff0c\u610f\u5473\u7740\u4e0d\u80fd\u5bf9\u5bb9\u5668\u5185\u5bb9\u8fdb\u884c\u4fee\u6539\u3002\n\nread_only: true\n\u6253\u5f00\u6807\u51c6\u8f93\u5165\uff0c\u53ef\u4ee5\u63a5\u53d7\u5916\u90e8\u8f93\u5165\u3002\n\nstdin_open: true\n\u6a21\u62df\u4e00\u4e2a\u4f2a\u7ec8\u7aef\u3002\n\ntty: true\n\u8bfb\u53d6\u53d8\u91cf\nCompose \u6a21\u677f\u6587\u4ef6\u652f\u6301\u52a8\u6001\u8bfb\u53d6\u4e3b\u673a\u7684\u7cfb\u7edf\u73af\u5883\u53d8\u91cf\u548c\u5f53\u524d\u76ee\u5f55\u4e0b\u7684 .env \u6587\u4ef6\u4e2d\u7684\u53d8\u91cf\u3002\n\u4f8b\u5982\uff0c\u4e0b\u9762\u7684 Compose \u6587\u4ef6\u5c06\u4ece\u8fd0\u884c\u5b83\u7684\u73af\u5883\u4e2d\u8bfb\u53d6\u53d8\u91cf ${MONGO_VERSION} \u7684\u503c\uff0c\u5e76\u5199\u5165\u6267\u884c\u7684\u6307\u4ee4\u4e2d\u3002\n\nversion: \"3\"\nservices:\n\ndb:\n  image: \"mongo:${MONGO_VERSION}\"\n\u5982\u679c\u6267\u884c MONGO_VERSION=3.2 docker-compose up \u5219\u4f1a\u542f\u52a8\u4e00\u4e2a mongo:3.2 \u955c\u50cf\u7684\u5bb9\u5668\uff1b\u5982\u679c\u6267\u884c MONGO_VERSION=2.8 docker-compose up \u5219\u4f1a\u542f\u52a8\u4e00\u4e2a mongo:2.8 \u955c\u50cf\u7684\u5bb9\u5668\u3002\n\u82e5\u5f53\u524d\u76ee\u5f55\u5b58\u5728 .env \u6587\u4ef6\uff0c\u6267\u884c docker-compose \u547d\u4ee4\u65f6\u5c06\u4ece\u8be5\u6587\u4ef6\u4e2d\u8bfb\u53d6\u53d8\u91cf\u3002\n\u5728\u5f53\u524d\u76ee\u5f55\u65b0\u5efa .env \u6587\u4ef6\u5e76\u5199\u5165\u4ee5\u4e0b\u5185\u5bb9\u3002\n\n# \u652f\u6301 # \u53f7\u6ce8\u91caMONGO_VERSION=3.6\n\u6267\u884c docker-compose up \u5219\u4f1a\u542f\u52a8\u4e00\u4e2a mongo:3.6 \u955c\u50cf\u7684\u5bb9\u5668\u3002\nDocker Compose\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\n\u90e8\u7f72Tomcat\nversion: &#39;3.1&#39;\nservices: \n    tomcat:\n        restart: always\n        image: tomcat\n        container_name: tomcat\n        ports:\n          - 8080:8080\n        volumes:\n          - ./webapps:/usr/local/tomcat/webapps\n        environment:\n          #\u65f6\u533a\n          TZ: Asia/Shanghai\n\n\u90e8\u7f72MySQL_1\nversion: &#39;3.1&#39;\nservices: \n    db:\n        image: mysql\n        restart: always\n        environment:\n            MYSQL_ROOT_PASSWORD: 123456\n        command:\n            #\u9ed8\u8ba4\u7684\u8eab\u4efd\u9a8c\u8bc1\u63d2\u4ef6\n            --default-authentication-plugin=mysql_native_password\n            #\u5b57\u7b26\u96c6\n            --character-set-server=utf8mb4\n            #\u5b57\u7b26\u96c6\u7f16\u7801\u89c4\u5219\n            --collation-server=utf8mb4_general_ci\n            #\u6570\u636e\u884c\u66f4\u65b0\u65f6\uff0ctimestamp\u7c7b\u578b\u5b57\u6bb5\u4e0d\u66f4\u65b0\u4e3a\u5f53\u524d\u65f6\u95f4\n            --explicit_defaults_for_timestamp=true\n            #\u8868\u540d\u5c0f\u5199,\u4e0d\u533a\u5206\u5927\u5c0f\u5199\n            --lower_case_table_names=1\n        container_name: tomcat\n        ports:\n          - 3306:3306\n        volumes:\n          - ./data:/var/lib/mysql/data\n    #MySQL \u7684Web\u5ba2\u6237\u7aef\n    adminer:\n        image: adminer\n        restart: always\n        ports:\n          - 8080:8080\n\n\u90e8\u7f72MySQL_2\nversion: &quot;3.1&quot;\nservices: \n db:\n  restart: always\n  container_name: mysql\n  image: mysql\n  command: \n   --lower_case_table_names=1\n   --character-set-server=utf8mb4\n   --collation-server=utf8mb4_unicode_ci\n   --explicit_defaults_for_timestamp=true\n  environment:\n   TZ: Asia/Shanghai\n   MYSQL_ROOT_PASSWORD: root@123456\n  ports:\n   - 3306:3306\n  volumes:\n   - ./mysql/data:/var/lib/mysql\n   - ./mysql/config:/etc/mysql/conf.d\n   - ./mysql/log:/var/log/mysql\n\n\u90e8\u7f72RabbitMQ\nversion: &#39;3&#39;\nservices:\n  rabbitmq:\n    image: rabbitmq:3.8.3-management\n    container_name: rabbitmq\n    restart: always\n    hostname: myRabbitmq\n    ports:\n      - 15672:15672\n      - 5672:5672\n    volumes:\n      - ./data:/var/lib/rabbitmq\n    environment:\n      - RABBITMQ_DEFAULT_USER=root\n      - RABBITMQ_DEFAULT_PASS=root\n\nRABBITMQ_DEFAULT_USER  \u548c  RABBITMQ_DEFAULT_PASS \u7528\u6765\u8bbe\u7f6e\u8d85\u7ea7\u7ba1\u7406\u5458\u7684\u8d26\u53f7\u548c\u5bc6\u7801\uff0c\u5982\u679c\u4e0d\u8bbe\u7f6e\uff0c\u9ed8\u8ba4\u90fd\u662f guest \u3002\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Docker", "slug": "Docker", "permalink": "/Xuxx_Blogs/tag/Docker/"}, {"name": "Docker Compose", "slug": "Docker Compose", "permalink": "/Xuxx_Blogs/tag/Docker Compose/"}]}, {"title": "Dockerfile\u7b14\u8bb0", "date": "2020-09-20T13:30:00-00.00", "path": "/Xuxx_Blogs/archives/bj32/", "text": "\u6982\u8ff0\n\u4ece docker commit \u7684\u5b66\u4e60\u4e2d\uff0c\u53ef\u4ee5\u4e86\u89e3\u5230\uff0c\u955c\u50cf\u7684\u5b9a\u5236\u5b9e\u9645\u4e0a\u5c31\u662f\u5b9a\u5236\u6bcf\u4e00\u5c42\u6240\u6dfb\u52a0\u7684\u914d\u7f6e\u3001\u6587\u4ef6\u3002\u5982\u679c\u53ef\u4ee5\u628a\u6bcf\u4e00\u5c42\u4fee\u6539\u3001\u5b89\u88c5\u3001\u6784\u5efa\u3001\u64cd\u4f5c\u7684\u547d\u4ee4\u90fd\u5199\u5165\u4e00\u4e2a\u811a\u672c\uff0c\u7528\u8fd9\u4e2a\u811a\u672c\u6765\u6784\u5efa\u3001\u5b9a\u5236\u955c\u50cf\uff0c\u90a3\u4e48\u4e4b\u524d\u63d0\u53ca\u7684\u65e0\u6cd5\u91cd\u590d\u7684\u95ee\u9898\u3001\u955c\u50cf\u6784\u5efa\u900f\u660e\u6027\u7684\u95ee\u9898\u3001\u4f53\u79ef\u7684\u95ee\u9898\u5c31\u90fd\u4f1a\u89e3\u51b3\u3002\u8fd9\u4e2a\u811a\u672c\u5c31\u662f Dockerfile\u3002\nDockerfile \u662f\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5176\u5185\u5305\u542b\u4e86\u4e00\u6761\u6761\u7684\u6307\u4ee4(Instruction)\uff0c\u6bcf\u4e00\u6761\u6307\u4ee4\u6784\u5efa\u4e00\u5c42\uff0c\u56e0\u6b64\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u5185\u5bb9\uff0c\u5c31\u662f\u63cf\u8ff0\u8be5\u5c42\u5e94\u5f53\u5982\u4f55\u6784\u5efa\u3002\n\u4ee5 tomcat \u955c\u50cf\u4e3a\u4f8b\uff0c\u8fd9\u6b21\u4f7f\u7528 Dockerfile \u6765\u5b9a\u5236\u3002\u5728\u4e00\u4e2a\u7a7a\u767d\u76ee\u5f55\u4e2d\uff0c\u5efa\u7acb\u4e00\u4e2a\u6587\u672c\u6587\u4ef6\uff0c\u5e76\u547d\u540d\u4e3aDockerfile\nmkdir myshop\ncd myshop\ntouch Dockerfile\n\n\u5176\u5185\u5bb9\u4e3a\uff1a\nFROM tomcat\nRUN echo Hello,Docker! &gt; /usr/local/tomcat/webapps/ROOT/index.jsp\n\nFROM-\u6307\u5b9a\u57fa\u7840\u955c\u50cf\n\u6240\u8c13\u5b9a\u5236\u955c\u50cf\uff0c\u90a3\u4e00\u5b9a\u662f\u4ee5\u4e00\u4e2a\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u5728\u5176\u4e0a\u8fdb\u884c\u5b9a\u5236\u3002\u800cFROM\u5c31\u662f\u6307\u5b9a\u57fa\u7840\u955c\u50cf\uff0c\u56e0\u6b64\u4e00\u4e2a Dockerfile \u4e2d FROM\u662f\u5fc5\u5907\u7684\u6307\u4ee4\uff0c\u5e76\u4e14\u5fc5\u987b\u662f\u7b2c\u4e00\u6761\u6307\u4ee4\u3002\n\u9664\u4e86\u9009\u62e9(\u5728Docker Hub\u4e0a)\u73b0\u6709\u955c\u50cf\u4e3a\u57fa\u7840\u955c\u50cf\u5916\uff0cDocker \u8fd8\u5b58\u5728\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u540d\u4e3ascratch\u3002\u8fd9\u4e2a\u955c\u50cf\u662f\u865a\u62df\u7684\u6982\u5ff5\uff0c\u5e76\u4e0d\u5b9e\u9645\u5b58\u5728\uff0c\u5b83\u8868\u793a\u4e00\u4e2a\u7a7a\u767d\u7684\u955c\u50cf\u3002\n\u5982\u679c\u4f60\u4ee5 scratch \u4e3a\u57fa\u7840\u955c\u50cf\u7684\u8bdd\uff0c\u610f\u5473\u7740\u4f60\u4e0d\u4ee5\u4efb\u4f55\u955c\u50cf\u4e3a\u57fa\u7840\uff0c\u63a5\u4e0b\u6765\u6240\u5199\u7684\u6307\u4ee4\u5c06\u4f5c\u4e3a\u955c\u50cf\u7b2c\u4e00\u5c42\u5f00\u59cb\u5b58\u5728\u3002\nRUN \u6267\u884c\u547d\u4ee4\nRUN \u6307\u4ee4\u662f\u7528\u6765\u6267\u884c\u547d\u4ee4\u884c\u547d\u4ee4\u7684\u3002\u7531\u4e8e\u547d\u4ee4\u884c\u7684\u5f3a\u5927\u80fd\u529b\uff0cRUN \u6307\u4ee4\u5728\u5b9a\u5236\u955c\u50cf\u65f6\u662f\u6700\u5e38\u7528\u7684\u6307\u4ee4\u4e4b\u4e00\u3002\u5176\u683c\u5f0f\u6709\u4e24\u79cd\uff1a\n\nshell \u683c\u5f0f\uff1aRUN &lt;\u547d\u4ee4&gt;\uff0c\u5c31\u50cf\u76f4\u63a5\u5728\u547d\u4ee4\u884c\u4e2d\u8f93\u5165\u7684\u547d\u4ee4\u4e00\u6837\u3002\u521a\u624d\u5199\u7684 Dockerfile \u4e2d\u7684 RUN \u6307\u4ee4\u5c31\u662f\u8fd9\u79cd\u683c\u5f0f\u3002\n\nRUN echo Hello,Docker! &gt; /usr/local/tomcat/webapps/ROOT/index.jsp\n\n\nexec \u683c\u5f0f\uff1aRUN [\"\u53ef\u6267\u884c\u6587\u4ef6\", \"\u53c2\u65701\", \"\u53c2\u65702\"]\uff0c\u8fd9\u66f4\u50cf\u662f\u51fd\u6570\u8c03\u7528\u4e2d\u7684\u683c\u5f0f\u3002\n\n\u65e2\u7136 RUN \u5c31\u50cf Shell \u811a\u672c\u4e00\u6837\u53ef\u4ee5\u6267\u884c\u547d\u4ee4\uff0c\u90a3\u4e48\u662f\u5426\u5c31\u53ef\u4ee5\u50cf Shell \u811a\u672c\u4e00\u6837\u628a\u6bcf\u4e2a\u547d\u4ee4\u5bf9\u5e94\u4e00\u4e2a RUN \u5462\uff1f\u6bd4\u5982\u8fd9\u6837\uff1a\nFROM debian:stretch\n\nRUN apt-get update\nRUN apt-get install -y gcc libc6-dev make wget\nRUN wget -O redis.tar.gz &quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot;\nRUN mkdir -p /usr/src/redis\nRUN tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1\nRUN make -C /usr/src/redis\nRUN make -C /usr/src/redis install\n\n\u4e4b\u524d\u8bf4\u8fc7\uff0cDockerfile \u4e2d\u6bcf\u4e00\u4e2a\u6307\u4ee4\u90fd\u4f1a\u5efa\u7acb\u4e00\u5c42\uff0cRUN \u4e5f\u4e0d\u4f8b\u5916\u3002\u6bcf\u4e00\u4e2a RUN \u7684\u884c\u4e3a\uff0c\u5c31\u548c\u624b\u52a8\u5efa\u7acb\u955c\u50cf\u7684\u8fc7\u7a0b\u4e00\u6837\uff1a\u65b0\u5efa\u7acb\u4e00\u5c42\uff0c\u5728\u5176\u4e0a\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\uff0c\u6267\u884c\u7ed3\u675f\u540e\uff0ccommit \u8fd9\u4e00\u5c42\u7684\u4fee\u6539\uff0c\u6784\u6210\u65b0\u7684\u955c\u50cf\u3002\n\u800c\u4e0a\u9762\u7684\u8fd9\u79cd\u5199\u6cd5\uff0c\u521b\u5efa\u4e86 7 \u5c42\u955c\u50cf\u3002\u8fd9\u662f\u5b8c\u5168\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u800c\u4e14\u5f88\u591a\u8fd0\u884c\u65f6\u4e0d\u9700\u8981\u7684\u4e1c\u897f\uff0c\u90fd\u88ab\u88c5\u8fdb\u4e86\u955c\u50cf\u91cc\uff0c\u6bd4\u5982\u7f16\u8bd1\u73af\u5883\u3001\u66f4\u65b0\u7684\u8f6f\u4ef6\u5305\u7b49\u7b49\u3002\u7ed3\u679c\u5c31\u662f\u4ea7\u751f\u975e\u5e38\u81c3\u80bf\u3001\u975e\u5e38\u591a\u5c42\u7684\u955c\u50cf\uff0c\u4e0d\u4ec5\u4ec5\u589e\u52a0\u4e86\u6784\u5efa\u90e8\u7f72\u7684\u65f6\u95f4\uff0c\u4e5f\u5f88\u5bb9\u6613\u51fa\u9519\u3002 \u8fd9\u662f\u5f88\u591a\u521d\u5b66 Docker \u7684\u4eba\u5e38\u72af\u7684\u4e00\u4e2a\u9519\u8bef\u3002\nUnion FS \u662f\u6709\u6700\u5927\u5c42\u6570\u9650\u5236\u7684\uff0c\u6bd4\u5982 AUFS\uff0c\u66fe\u7ecf\u662f\u6700\u5927\u4e0d\u5f97\u8d85\u8fc7 42 \u5c42\uff0c\u73b0\u5728\u662f\u4e0d\u5f97\u8d85\u8fc7 127 \u5c42\u3002\n\u4e0a\u9762\u7684 Dockerfile \u6b63\u786e\u7684\u5199\u6cd5\u5e94\u8be5\u662f\u8fd9\u6837\uff1a\nFROM debian:stretch\n\nRUN set -x; buildDeps=&#39;gcc libc6-dev make wget&#39; \\\n    &amp;&amp; apt-get update \\\n    &amp;&amp; apt-get install -y $buildDeps \\\n    &amp;&amp; wget -O redis.tar.gz &quot;http://download.redis.io/releases/redis-5.0.3.tar.gz&quot; \\\n    &amp;&amp; mkdir -p /usr/src/redis \\\n    &amp;&amp; tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \\\n    &amp;&amp; make -C /usr/src/redis \\\n    &amp;&amp; make -C /usr/src/redis install \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/* \\\n    &amp;&amp; rm redis.tar.gz \\\n    &amp;&amp; rm -r /usr/src/redis \\\n    &amp;&amp; apt-get purge -y --auto-remove $buildDeps\n\n\u9996\u5148\uff0c\u4e4b\u524d\u6240\u6709\u7684\u547d\u4ee4\u53ea\u6709\u4e00\u4e2a\u76ee\u7684\uff0c\u5c31\u662f\u7f16\u8bd1\u3001\u5b89\u88c5 redis \u53ef\u6267\u884c\u6587\u4ef6\u3002\u56e0\u6b64\u6ca1\u6709\u5fc5\u8981\u5efa\u7acb\u5f88\u591a\u5c42\uff0c\u8fd9\u53ea\u662f\u4e00\u5c42\u7684\u4e8b\u60c5\u3002\u56e0\u6b64\uff0c\u8fd9\u91cc\u6ca1\u6709\u4f7f\u7528\u5f88\u591a\u4e2a RUN \u4e00\u4e00\u5bf9\u5e94\u4e0d\u540c\u7684\u547d\u4ee4\uff0c\u800c\u662f\u4ec5\u4ec5\u4f7f\u7528\u4e00\u4e2a RUN \u6307\u4ee4\uff0c\u5e76\u4f7f\u7528 &amp;&amp; \u5c06\u5404\u4e2a\u6240\u9700\u547d\u4ee4\u4e32\u8054\u8d77\u6765\u3002\u5c06\u4e4b\u524d\u7684 7 \u5c42\uff0c\u7b80\u5316\u4e3a\u4e86 1 \u5c42\u3002\u5728\u64b0\u5199 Dockerfile \u7684\u65f6\u5019\uff0c\u8981\u7ecf\u5e38\u63d0\u9192\u81ea\u5df1\uff0c\u8fd9\u5e76\u4e0d\u662f\u5728\u5199 Shell \u811a\u672c\uff0c\u800c\u662f\u5728\u5b9a\u4e49\u6bcf\u4e00\u5c42\u8be5\u5982\u4f55\u6784\u5efa\n\u5e76\u4e14\uff0c\u8fd9\u91cc\u4e3a\u4e86\u683c\u5f0f\u5316\u8fd8\u8fdb\u884c\u4e86\u6362\u884c\u3002Dockerfile \u652f\u6301 Shell \u7c7b\u7684\u884c\u5c3e\u6dfb\u52a0 \\ \u7684\u547d\u4ee4\u6362\u884c\u65b9\u5f0f\uff0c\u4ee5\u53ca\u884c\u9996 # \u8fdb\u884c\u6ce8\u91ca\u7684\u683c\u5f0f\u3002\u826f\u597d\u7684\u683c\u5f0f\uff0c\u6bd4\u5982\u6362\u884c\u3001\u7f29\u8fdb\u3001\u6ce8\u91ca\u7b49\uff0c\u4f1a\u8ba9\u7ef4\u62a4\u3001\u6392\u969c\u66f4\u4e3a\u5bb9\u6613\uff0c\u8fd9\u662f\u4e00\u4e2a\u6bd4\u8f83\u597d\u7684\u4e60\u60ef\u3002\n\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u770b\u5230\u8fd9\u4e00\u7ec4\u547d\u4ee4\u7684\u6700\u540e\u6dfb\u52a0\u4e86\u6e05\u7406\u5de5\u4f5c\u7684\u547d\u4ee4\uff0c\u5220\u9664\u4e86\u4e3a\u4e86\u7f16\u8bd1\u6784\u5efa\u6240\u9700\u8981\u7684\u8f6f\u4ef6\uff0c\u6e05\u7406\u4e86\u6240\u6709\u4e0b\u8f7d\u3001\u5c55\u5f00\u7684\u6587\u4ef6\uff0c\u5e76\u4e14\u8fd8\u6e05\u7406\u4e86 apt \u7f13\u5b58\u6587\u4ef6\u3002\u8fd9\u662f\u5f88\u91cd\u8981\u7684\u4e00\u6b65\uff0c\u4e4b\u524d\u8bf4\u8fc7\uff0c\u955c\u50cf\u662f\u591a\u5c42\u5b58\u50a8\uff0c\u6bcf\u4e00\u5c42\u7684\u4e1c\u897f\u5e76\u4e0d\u4f1a\u5728\u4e0b\u4e00\u5c42\u88ab\u5220\u9664\uff0c\u4f1a\u4e00\u76f4\u8ddf\u968f\u7740\u955c\u50cf\u3002\u56e0\u6b64\u955c\u50cf\u6784\u5efa\u65f6\uff0c\u4e00\u5b9a\u8981\u786e\u4fdd\u6bcf\u4e00\u5c42\u53ea\u6dfb\u52a0\u771f\u6b63\u9700\u8981\u6dfb\u52a0\u7684\u4e1c\u897f\uff0c\u4efb\u4f55\u65e0\u5173\u7684\u4e1c\u897f\u90fd\u5e94\u8be5\u6e05\u7406\u6389\u3002\n\u6784\u5efa\u955c\u50cf\ndocker build \u547d\u4ee4\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u3002\u5176\u8bed\u6cd5\u4e3a\uff1a\ndocker build [\u9009\u9879] &lt;\u4e0a\u4e0b\u6587\u8def\u5f84/URL/-&gt;\n\n\u5728 Dockerfile \u6587\u4ef6\u6240\u5728\u76ee\u5f55\u6267\u884c\uff1a\n[root@localhost myshop]# docker build -t myshop .\nSending build context to Docker daemon  3.072kB\nStep 1/2 : FROM tomcat:latest\n ---&gt; 2eb5a120304e\nStep 2/2 : COPY index.jsp /usr/local/tomcat/webapps/ROOT\n ---&gt; f44b1d0d1366\nSuccessfully built f44b1d0d1366\nSuccessfully tagged myshop:latest\n\n\u955c\u50cf\u6784\u5efa\u4e0a\u4e0b\u6587\uff08Context\uff09\n\u5982\u679c\u6ce8\u610f\uff0c\u4f1a\u770b\u5230 docker build \u547d\u4ee4\u6700\u540e\u6709\u4e00\u4e2a .\u3002. \u8868\u793a\u5f53\u524d\u76ee\u5f55\uff0c\u800c Dockerfile \u5c31\u5728\u5f53\u524d\u76ee\u5f55\uff0c\u56e0\u6b64\u4e0d\u5c11\u521d\u5b66\u8005\u4ee5\u4e3a\u8fd9\u4e2a\u8def\u5f84\u662f\u5728\u6307\u5b9a Dockerfile \u6240\u5728\u8def\u5f84\uff0c\u8fd9\u4e48\u7406\u89e3\u5176\u5b9e\u662f\u4e0d\u51c6\u786e\u7684\u3002\u5982\u679c\u5bf9\u5e94\u4e0a\u9762\u7684\u547d\u4ee4\u683c\u5f0f\uff0c\u4f60\u53ef\u80fd\u4f1a\u53d1\u73b0\uff0c\u8fd9\u662f\u5728\u6307\u5b9a \u4e0a\u4e0b\u6587\u8def\u5f84\u3002\u90a3\u4e48\u4ec0\u4e48\u662f\u4e0a\u4e0b\u6587\u5462\uff1f\n\u5f53\u8fdb\u884c\u955c\u50cf\u6784\u5efa\u7684\u65f6\u5019\uff0c\u5e76\u975e\u6240\u6709\u5b9a\u5236\u90fd\u4f1a\u901a\u8fc7 RUN \u6307\u4ee4\u5b8c\u6210\uff0c\u7ecf\u5e38\u4f1a\u9700\u8981\u5c06\u4e00\u4e9b\u672c\u5730\u6587\u4ef6\u590d\u5236\u8fdb\u955c\u50cf\uff0c\u6bd4\u5982\u901a\u8fc7 COPY \u6307\u4ee4\u3001ADD \u6307\u4ee4\u7b49\u3002\u800c docker build \u547d\u4ee4\u6784\u5efa\u955c\u50cf\uff0c\u5176\u5b9e\u5e76\u975e\u5728\u672c\u5730\u6784\u5efa\uff0c\u800c\u662f\u5728\u670d\u52a1\u7aef\uff0c\u4e5f\u5c31\u662f Docker \u5f15\u64ce\u4e2d\u6784\u5efa\u7684\u3002\u90a3\u4e48\u5728\u8fd9\u79cd\u5ba2\u6237\u7aef/\u670d\u52a1\u7aef\u7684\u67b6\u6784\u4e2d\uff0c\u5982\u4f55\u624d\u80fd\u8ba9\u670d\u52a1\u7aef\u83b7\u5f97\u672c\u5730\u6587\u4ef6\u5462\uff1f\n\u8fd9\u5c31\u5f15\u5165\u4e86\u4e0a\u4e0b\u6587\u7684\u6982\u5ff5\u3002\u5f53\u6784\u5efa\u7684\u65f6\u5019\uff0c\u7528\u6237\u4f1a\u6307\u5b9a\u6784\u5efa\u955c\u50cf\u4e0a\u4e0b\u6587\u7684\u8def\u5f84\uff0cdocker build \u547d\u4ee4\u5f97\u77e5\u8fd9\u4e2a\u8def\u5f84\u540e\uff0c\u4f1a\u5c06\u8def\u5f84\u4e0b\u7684\u6240\u6709\u5185\u5bb9\u6253\u5305\uff0c\u7136\u540e\u4e0a\u4f20\u7ed9 Docker \u5f15\u64ce\u3002\u8fd9\u6837 Docker \u5f15\u64ce\u6536\u5230\u8fd9\u4e2a\u4e0a\u4e0b\u6587\u5305\u540e\uff0c\u5c55\u5f00\u5c31\u4f1a\u83b7\u5f97\u6784\u5efa\u955c\u50cf\u6240\u9700\u7684\u4e00\u5207\u6587\u4ef6\u3002\n\u5982\u679c\u5728 Dockerfile \u4e2d\u8fd9\u4e48\u5199\uff1a\n\nCOPY ./package.json /app/\n\u8fd9\u5e76\u4e0d\u662f\u8981\u590d\u5236\u6267\u884c docker build \u547d\u4ee4\u6240\u5728\u7684\u76ee\u5f55\u4e0b\u7684 package.json\uff0c\u4e5f\u4e0d\u662f\u590d\u5236 Dockerfile \u6240\u5728\u76ee\u5f55\u4e0b\u7684 package.json\uff0c\u800c\u662f\u590d\u5236 \u4e0a\u4e0b\u6587\uff08context\uff09 \u76ee\u5f55\u4e0b\u7684 package.json\u3002\n\u5176\u5b83 docker build \u7684\u7528\u6cd5\n\n\u76f4\u63a5\u7528 Git repo \u8fdb\u884c\u6784\u5efa\n\ndocker build -t hello-world https://github.com/docker-library/hello-world.git#master:amd64/hello-world\n\u8fd9\u884c\u547d\u4ee4\u6307\u5b9a\u4e86\u6784\u5efa\u6240\u9700\u7684 Git repo\uff0c\u5e76\u4e14\u6307\u5b9a\u5206\u652f\u4e3a master\uff0c\u6784\u5efa\u76ee\u5f55\u4e3a /amd64/hello-world/\uff0c\u7136\u540e Docker \u5c31\u4f1a\u81ea\u5df1\u53bb git clone \u8fd9\u4e2a\u9879\u76ee\u3001\u5207\u6362\u5230\u6307\u5b9a\u5206\u652f\u3001\u5e76\u8fdb\u5165\u5230\u6307\u5b9a\u76ee\u5f55\u540e\u5f00\u59cb\u6784\u5efa\u3002\n\n\u7528\u7ed9\u5b9a\u7684 tar \u538b\u7f29\u5305\u6784\u5efa\n\n$ docker build http://server/context.tar.gz\n\u5982\u679c\u6240\u7ed9\u51fa\u7684 URL \u4e0d\u662f\u4e2a Git repo\uff0c\u800c\u662f\u4e2a tar \u538b\u7f29\u5305\uff0c\u90a3\u4e48 Docker \u5f15\u64ce\u4f1a\u4e0b\u8f7d\u8fd9\u4e2a\u5305\uff0c\u5e76\u81ea\u52a8\u89e3\u538b\u7f29\uff0c\u4ee5\u5176\u4f5c\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5f00\u59cb\u6784\u5efa\u3002\n\n\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u8fdb\u884c\u6784\u5efa\n\ndocker build - &lt; Dockerfile\n\u6216\n\ncat Dockerfile | docker build -\n\u5982\u679c\u6807\u51c6\u8f93\u5165\u4f20\u5165\u7684\u662f\u6587\u672c\u6587\u4ef6\uff0c\u5219\u5c06\u5176\u89c6\u4e3a Dockerfile\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002\u8fd9\u79cd\u5f62\u5f0f\u7531\u4e8e\u76f4\u63a5\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6 Dockerfile \u7684\u5185\u5bb9\uff0c\u5b83\u6ca1\u6709\u4e0a\u4e0b\u6587\uff0c\u56e0\u6b64\u4e0d\u53ef\u4ee5\u50cf\u5176\u4ed6\u65b9\u6cd5\u90a3\u6837\u53ef\u4ee5\u5c06\u672c\u5730\u6587\u4ef6 COPY \u8fdb\u955c\u50cf\u4e4b\u7c7b\u7684\u4e8b\u60c5\u3002\n\n\u4ece\u6807\u51c6\u8f93\u5165\u4e2d\u8bfb\u53d6\u4e0a\u4e0b\u6587\u538b\u7f29\u5305\u8fdb\u884c\u6784\u5efa\n\n$ docker build - &lt; context.tar.gz\n\u5982\u679c\u53d1\u73b0\u6807\u51c6\u8f93\u5165\u7684\u6587\u4ef6\u683c\u5f0f\u662f gzip\u3001bzip2 \u4ee5\u53ca xz \u7684\u8bdd\uff0c\u5c06\u4f1a\u4f7f\u5176\u4e3a\u4e0a\u4e0b\u6587\u538b\u7f29\u5305\uff0c\u76f4\u63a5\u5c06\u5176\u5c55\u5f00\uff0c\u5c06\u91cc\u9762\u89c6\u4e3a\u4e0a\u4e0b\u6587\uff0c\u5e76\u5f00\u59cb\u6784\u5efa\u3002\n\n\nDockerfile \u6307\u4ee4\u8be6\u89e3\nCOPY \u590d\u5236\u6587\u4ef6\n\u683c\u5f0f\uff1a\n\nCOPY [--chown=&lt;user&gt;:&lt;group&gt;] &lt;\u6e90\u8def\u5f84&gt;... &lt;\u76ee\u6807\u8def\u5f84&gt;\nCOPY [--chown=&lt;user&gt;:&lt;group&gt;] [\"&lt;\u6e90\u8def\u5f841&gt;\",... \"&lt;\u76ee\u6807\u8def\u5f84&gt;\"]\n\n\u548c RUN \u6307\u4ee4\u4e00\u6837\uff0c\u4e5f\u6709\u4e24\u79cd\u683c\u5f0f\uff0c\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u547d\u4ee4\u884c\uff0c\u4e00\u79cd\u7c7b\u4f3c\u4e8e\u51fd\u6570\u8c03\u7528\u3002\nCOPY \u6307\u4ee4\u5c06\u4ece\u6784\u5efa\u4e0a\u4e0b\u6587\u76ee\u5f55\u4e2d &lt;\u6e90\u8def\u5f84&gt; \u7684\u6587\u4ef6/\u76ee\u5f55\u590d\u5236\u5230\u65b0\u7684\u4e00\u5c42\u7684\u955c\u50cf\u5185\u7684 &lt;\u76ee\u6807\u8def\u5f84&gt; \u4f4d\u7f6e\u3002\u6bd4\u5982\uff1a\n\nCOPY package.json /usr/src/app/\n&lt;\u6e90\u8def\u5f84&gt; \u53ef\u4ee5\u662f\u591a\u4e2a\uff0c\u751a\u81f3\u53ef\u4ee5\u662f\u901a\u914d\u7b26\uff0c\u5176\u901a\u914d\u7b26\u89c4\u5219\u8981\u6ee1\u8db3 Go \u7684 filepath.Match \u89c4\u5219\uff0c\u5982\uff1a\n\nCOPY hom* /mydir/COPY hom?.txt /mydir/\n&lt;\u76ee\u6807\u8def\u5f84&gt; \u53ef\u4ee5\u662f\u5bb9\u5668\u5185\u7684\u7edd\u5bf9\u8def\u5f84\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u4e8e\u5de5\u4f5c\u76ee\u5f55\u7684\u76f8\u5bf9\u8def\u5f84\uff08\u5de5\u4f5c\u76ee\u5f55\u53ef\u4ee5\u7528 WORKDIR \u6307\u4ee4\u6765\u6307\u5b9a\uff09\u3002\u76ee\u6807\u8def\u5f84\u4e0d\u9700\u8981\u4e8b\u5148\u521b\u5efa\uff0c\u5982\u679c\u76ee\u5f55\u4e0d\u5b58\u5728\u4f1a\u5728\u590d\u5236\u6587\u4ef6\u524d\u5148\u884c\u521b\u5efa\u7f3a\u5931\u76ee\u5f55\u3002\n\u6b64\u5916\uff0c\u8fd8\u9700\u8981\u6ce8\u610f\u4e00\u70b9\uff0c\u4f7f\u7528 COPY \u6307\u4ee4\uff0c\u6e90\u6587\u4ef6\u7684\u5404\u79cd\u5143\u6570\u636e\u90fd\u4f1a\u4fdd\u7559\u3002\u6bd4\u5982\u8bfb\u3001\u5199\u3001\u6267\u884c\u6743\u9650\u3001\u6587\u4ef6\u53d8\u66f4\u65f6\u95f4\u7b49\u3002\u8fd9\u4e2a\u7279\u6027\u5bf9\u4e8e\u955c\u50cf\u5b9a\u5236\u5f88\u6709\u7528\u3002\u7279\u522b\u662f\u6784\u5efa\u76f8\u5173\u6587\u4ef6\u90fd\u5728\u4f7f\u7528 Git \u8fdb\u884c\u7ba1\u7406\u7684\u65f6\u5019\u3002\n\u5728\u4f7f\u7528\u8be5\u6307\u4ee4\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u52a0\u4e0a --chown=&lt;user&gt;:&lt;group&gt; \u9009\u9879\u6765\u6539\u53d8\u6587\u4ef6\u7684\u6240\u5c5e\u7528\u6237\u53ca\u6240\u5c5e\u7ec4\u3002\n\nCOPY --chown=55:mygroup files* /mydir/\nCOPY --chown=bin files* /mydir/\nCOPY --chown=1 files* /mydir/\nCOPY --chown=10:11 files* /mydir/\n\u5982\u679c\u6e90\u8def\u5f84\u4e3a\u6587\u4ef6\u5939\uff0c\u590d\u5236\u7684\u65f6\u5019\u4e0d\u662f\u76f4\u63a5\u590d\u5236\u8be5\u6587\u4ef6\u5939\uff0c\u800c\u662f\u5c06\u6587\u4ef6\u5939\u4e2d\u7684\u5185\u5bb9\u590d\u5236\u5230\u76ee\u6807\u8def\u5f84\u3002\nADD \u66f4\u9ad8\u7ea7\u7684\u590d\u5236\u6587\u4ef6\nADD \u6307\u4ee4\u548c COPY \u7684\u683c\u5f0f\u548c\u6027\u8d28\u57fa\u672c\u4e00\u81f4\u3002\u4f46\u662f\u5728 COPY \u57fa\u7840\u4e0a\u589e\u52a0\u4e86\u4e00\u4e9b\u529f\u80fd\u3002\n\u6bd4\u5982 &lt;\u6e90\u8def\u5f84&gt; \u53ef\u4ee5\u662f\u4e00\u4e2a URL\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0cDocker \u5f15\u64ce\u4f1a\u8bd5\u56fe\u53bb\u4e0b\u8f7d\u8fd9\u4e2a\u94fe\u63a5\u7684\u6587\u4ef6\u653e\u5230 &lt;\u76ee\u6807\u8def\u5f84&gt; \u53bb\u3002\u4e0b\u8f7d\u540e\u7684\u6587\u4ef6\u6743\u9650\u81ea\u52a8\u8bbe\u7f6e\u4e3a 600\uff0c\u5982\u679c\u8fd9\u5e76\u4e0d\u662f\u60f3\u8981\u7684\u6743\u9650\uff0c\u90a3\u4e48\u8fd8\u9700\u8981\u589e\u52a0\u989d\u5916\u7684\u4e00\u5c42 RUN \u8fdb\u884c\u6743\u9650\u8c03\u6574\uff0c\u53e6\u5916\uff0c\u5982\u679c\u4e0b\u8f7d\u7684\u662f\u4e2a\u538b\u7f29\u5305\uff0c\u9700\u8981\u89e3\u538b\u7f29\uff0c\u4e5f\u4e00\u6837\u8fd8\u9700\u8981\u989d\u5916\u7684\u4e00\u5c42 RUN \u6307\u4ee4\u8fdb\u884c\u89e3\u538b\u7f29\u3002\u6240\u4ee5\u4e0d\u5982\u76f4\u63a5\u4f7f\u7528 RUN \u6307\u4ee4\uff0c\u7136\u540e\u4f7f\u7528 wget \u6216\u8005 curl \u5de5\u5177\u4e0b\u8f7d\uff0c\u5904\u7406\u6743\u9650\u3001\u89e3\u538b\u7f29\u3001\u7136\u540e\u6e05\u7406\u65e0\u7528\u6587\u4ef6\u66f4\u5408\u7406\u3002\u56e0\u6b64\uff0c\u8fd9\u4e2a\u529f\u80fd\u5176\u5b9e\u5e76\u4e0d\u5b9e\u7528\uff0c\u800c\u4e14\u4e0d\u63a8\u8350\u4f7f\u7528\u3002\n\u5982\u679c &lt;\u6e90\u8def\u5f84&gt; \u4e3a\u4e00\u4e2a tar \u538b\u7f29\u6587\u4ef6\u7684\u8bdd\uff0c\u538b\u7f29\u683c\u5f0f\u4e3a gzip, bzip2 \u4ee5\u53ca xz \u7684\u60c5\u51b5\u4e0b\uff0cADD \u6307\u4ee4\u5c06\u4f1a\u81ea\u52a8\u89e3\u538b\u7f29\u8fd9\u4e2a\u538b\u7f29\u6587\u4ef6\u5230 &lt;\u76ee\u6807\u8def\u5f84&gt; \u53bb\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u81ea\u52a8\u89e3\u538b\u7f29\u7684\u529f\u80fd\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982\u5b98\u65b9\u955c\u50cf ubuntu \u4e2d\uff1a\n\nFROM scratchADD ubuntu-xenial-core-cloudimg-amd64-root.tar.gz /...\n\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u771f\u7684\u662f\u5e0c\u671b\u590d\u5236\u4e2a\u538b\u7f29\u6587\u4ef6\u8fdb\u53bb\uff0c\u800c\u4e0d\u89e3\u538b\u7f29\uff0c\u8fd9\u65f6\u5c31\u4e0d\u53ef\u4ee5\u4f7f\u7528 ADD \u547d\u4ee4\u4e86\u3002\n\u5728 Docker \u5b98\u65b9\u7684 Dockerfile \u6700\u4f73\u5b9e\u8df5\u6587\u6863 \u4e2d\u8981\u6c42\uff0c\u5c3d\u53ef\u80fd\u7684\u4f7f\u7528 COPY\uff0c\u56e0\u4e3a COPY \u7684\u8bed\u4e49\u5f88\u660e\u786e\uff0c\u5c31\u662f\u590d\u5236\u6587\u4ef6\u800c\u5df2\uff0c\u800c ADD \u5219\u5305\u542b\u4e86\u66f4\u590d\u6742\u7684\u529f\u80fd\uff0c\u5176\u884c\u4e3a\u4e5f\u4e0d\u4e00\u5b9a\u5f88\u6e05\u6670\u3002\u6700\u9002\u5408\u4f7f\u7528 ADD \u7684\u573a\u5408\uff0c\u5c31\u662f\u6240\u63d0\u53ca\u7684\u9700\u8981\u81ea\u52a8\u89e3\u538b\u7f29\u7684\u573a\u5408\u3002\n\u53e6\u5916\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cADD \u6307\u4ee4\u4f1a\u4ee4\u955c\u50cf\u6784\u5efa\u7f13\u5b58\u5931\u6548\uff0c\u4ece\u800c\u53ef\u80fd\u4f1a\u4ee4\u955c\u50cf\u6784\u5efa\u53d8\u5f97\u6bd4\u8f83\u7f13\u6162\u3002\n\u56e0\u6b64\u5728 COPY \u548c ADD \u6307\u4ee4\u4e2d\u9009\u62e9\u7684\u65f6\u5019\uff0c\u53ef\u4ee5\u9075\u5faa\u8fd9\u6837\u7684\u539f\u5219\uff0c\u6240\u6709\u7684\u6587\u4ef6\u590d\u5236\u5747\u4f7f\u7528 COPY \u6307\u4ee4\uff0c\u4ec5\u5728\u9700\u8981\u81ea\u52a8\u89e3\u538b\u7f29\u7684\u573a\u5408\u4f7f\u7528 ADD\u3002\n\u5728\u4f7f\u7528\u8be5\u6307\u4ee4\u7684\u65f6\u5019\u8fd8\u53ef\u4ee5\u52a0\u4e0a --chown=&lt;user&gt;:&lt;group&gt; \u9009\u9879\u6765\u6539\u53d8\u6587\u4ef6\u7684\u6240\u5c5e\u7528\u6237\u53ca\u6240\u5c5e\u7ec4\u3002\nCMD \u5bb9\u5668\u542f\u52a8\u547d\u4ee4\nCMD \u6307\u4ee4\u7684\u683c\u5f0f\u548c RUN \u76f8\u4f3c\uff0c\u4e5f\u662f\u4e24\u79cd\u683c\u5f0f\uff1a\n\nshell \u683c\u5f0f\uff1aCMD &lt;\u547d\u4ee4&gt;\nexec \u683c\u5f0f\uff1aCMD [\"\u53ef\u6267\u884c\u6587\u4ef6\", \"\u53c2\u65701\", \"\u53c2\u65702\"...]\n\u53c2\u6570\u5217\u8868\u683c\u5f0f\uff1aCMD [\"\u53c2\u65701\", \"\u53c2\u65702\"...]\u3002\u5728\u6307\u5b9a\u4e86 ENTRYPOINT \u6307\u4ee4\u540e\uff0c\u7528 CMD \u6307\u5b9a\u5177\u4f53\u7684\u53c2\u6570\u3002\n\n\u4e4b\u524d\u4ecb\u7ecd\u5bb9\u5668\u7684\u65f6\u5019\u66fe\u7ecf\u8bf4\u8fc7\uff0cDocker \u4e0d\u662f\u865a\u62df\u673a\uff0c\u5bb9\u5668\u5c31\u662f\u8fdb\u7a0b\u3002\u65e2\u7136\u662f\u8fdb\u7a0b\uff0c\u90a3\u4e48\u5728\u542f\u52a8\u5bb9\u5668\u7684\u65f6\u5019\uff0c\u9700\u8981\u6307\u5b9a\u6240\u8fd0\u884c\u7684\u7a0b\u5e8f\u53ca\u53c2\u6570\u3002CMD \u6307\u4ee4\u5c31\u662f\u7528\u4e8e\u6307\u5b9a\u9ed8\u8ba4\u7684\u5bb9\u5668\u4e3b\u8fdb\u7a0b\u7684\u542f\u52a8\u547d\u4ee4\u7684\u3002\n\u5728\u8fd0\u884c\u65f6\u53ef\u4ee5\u6307\u5b9a\u65b0\u7684\u547d\u4ee4\u6765\u66ff\u4ee3\u955c\u50cf\u8bbe\u7f6e\u4e2d\u7684\u8fd9\u4e2a\u9ed8\u8ba4\u547d\u4ee4\uff0c\u6bd4\u5982\uff0cubuntu \u955c\u50cf\u9ed8\u8ba4\u7684 CMD \u662f /bin/bash\uff0c\u5982\u679c\u76f4\u63a5 docker run -it ubuntu \u7684\u8bdd\uff0c\u4f1a\u76f4\u63a5\u8fdb\u5165 bash\u3002\u4e5f\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6307\u5b9a\u8fd0\u884c\u522b\u7684\u547d\u4ee4\uff0c\u5982 docker run -it ubuntu cat /etc/os-release\u3002\u8fd9\u5c31\u662f\u7528 cat /etc/os-release \u547d\u4ee4\u66ff\u6362\u4e86\u9ed8\u8ba4\u7684 /bin/bash \u547d\u4ee4\u4e86\uff0c\u8f93\u51fa\u4e86\u7cfb\u7edf\u7248\u672c\u4fe1\u606f\u3002\n\u5728\u6307\u4ee4\u683c\u5f0f\u4e0a\uff0c\u4e00\u822c\u63a8\u8350\u4f7f\u7528 exec \u683c\u5f0f\uff0c\u8fd9\u7c7b\u683c\u5f0f\u5728\u89e3\u6790\u65f6\u4f1a\u88ab\u89e3\u6790\u4e3a JSON \u6570\u7ec4\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u4f7f\u7528\u53cc\u5f15\u53f7 \"\uff0c\u800c\u4e0d\u8981\u4f7f\u7528\u5355\u5f15\u53f7\u3002\n\u5982\u679c\u4f7f\u7528 shell \u683c\u5f0f\u7684\u8bdd\uff0c\u5b9e\u9645\u7684\u547d\u4ee4\u4f1a\u88ab\u5305\u88c5\u4e3a sh -c \u7684\u53c2\u6570\u7684\u5f62\u5f0f\u8fdb\u884c\u6267\u884c\u3002\u6bd4\u5982\uff1a\n\nCMD echo $HOME\n\u5728\u5b9e\u9645\u6267\u884c\u4e2d\uff0c\u4f1a\u5c06\u5176\u53d8\u66f4\u4e3a\uff1a\n\nCMD [ \"sh\", \"-c\", \"echo $HOME\" ]\n\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48\u53ef\u4ee5\u4f7f\u7528\u73af\u5883\u53d8\u91cf\u7684\u539f\u56e0\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u73af\u5883\u53d8\u91cf\u4f1a\u88ab shell \u8fdb\u884c\u89e3\u6790\u5904\u7406\u3002\n\u63d0\u5230 CMD \u5c31\u4e0d\u5f97\u4e0d\u63d0\u5bb9\u5668\u4e2d\u5e94\u7528\u5728\u524d\u53f0\u6267\u884c\u548c\u540e\u53f0\u6267\u884c\u7684\u95ee\u9898\u3002\u8fd9\u662f\u521d\u5b66\u8005\u5e38\u51fa\u73b0\u7684\u4e00\u4e2a\u6df7\u6dc6\u3002\nDocker \u4e0d\u662f\u865a\u62df\u673a\uff0c\u5bb9\u5668\u4e2d\u7684\u5e94\u7528\u90fd\u5e94\u8be5\u4ee5\u524d\u53f0\u6267\u884c\uff0c\u800c\u4e0d\u662f\u50cf\u865a\u62df\u673a\u3001\u7269\u7406\u673a\u91cc\u9762\u90a3\u6837\uff0c\u7528 systemd \u53bb\u542f\u52a8\u540e\u53f0\u670d\u52a1\uff0c\u5bb9\u5668\u5185\u6ca1\u6709\u540e\u53f0\u670d\u52a1\u7684\u6982\u5ff5\u3002\n\u4e00\u4e9b\u521d\u5b66\u8005\u5c06 CMD \u5199\u4e3a\uff1a\n\nCMD service nginx start\n\u7136\u540e\u53d1\u73b0\u5bb9\u5668\u6267\u884c\u540e\u5c31\u7acb\u5373\u9000\u51fa\u4e86\u3002\u751a\u81f3\u5728\u5bb9\u5668\u5185\u53bb\u4f7f\u7528 systemctl \u547d\u4ee4\u7ed3\u679c\u5374\u53d1\u73b0\u6839\u672c\u6267\u884c\u4e0d\u4e86\u3002\u8fd9\u5c31\u662f\u56e0\u4e3a\u6ca1\u6709\u641e\u660e\u767d\u524d\u53f0\u3001\u540e\u53f0\u7684\u6982\u5ff5\uff0c\u6ca1\u6709\u533a\u5206\u5bb9\u5668\u548c\u865a\u62df\u673a\u7684\u5dee\u5f02\uff0c\u4f9d\u65e7\u5728\u4ee5\u4f20\u7edf\u865a\u62df\u673a\u7684\u89d2\u5ea6\u53bb\u7406\u89e3\u5bb9\u5668\u3002\n\u5bf9\u4e8e\u5bb9\u5668\u800c\u8a00\uff0c\u5176\u542f\u52a8\u7a0b\u5e8f\u5c31\u662f\u5bb9\u5668\u5e94\u7528\u8fdb\u7a0b\uff0c\u5bb9\u5668\u5c31\u662f\u4e3a\u4e86\u4e3b\u8fdb\u7a0b\u800c\u5b58\u5728\u7684\uff0c\u4e3b\u8fdb\u7a0b\u9000\u51fa\uff0c\u5bb9\u5668\u5c31\u5931\u53bb\u4e86\u5b58\u5728\u7684\u610f\u4e49\uff0c\u4ece\u800c\u9000\u51fa\uff0c\u5176\u5b83\u8f85\u52a9\u8fdb\u7a0b\u4e0d\u662f\u5b83\u9700\u8981\u5173\u5fc3\u7684\u4e1c\u897f\u3002\n\u800c\u4f7f\u7528 service nginx start \u547d\u4ee4\uff0c\u5219\u662f\u5e0c\u671b upstart \u6765\u4ee5\u540e\u53f0\u5b88\u62a4\u8fdb\u7a0b\u5f62\u5f0f\u542f\u52a8 nginx \u670d\u52a1\u3002\u800c\u521a\u624d\u8bf4\u4e86 CMD service nginx start \u4f1a\u88ab\u7406\u89e3\u4e3a CMD [ \"sh\", \"-c\", \"service nginx start\"]\uff0c\u56e0\u6b64\u4e3b\u8fdb\u7a0b\u5b9e\u9645\u4e0a\u662f sh\u3002\u90a3\u4e48\u5f53 service nginx start \u547d\u4ee4\u7ed3\u675f\u540e\uff0csh \u4e5f\u5c31\u7ed3\u675f\u4e86\uff0csh \u4f5c\u4e3a\u4e3b\u8fdb\u7a0b\u9000\u51fa\u4e86\uff0c\u81ea\u7136\u5c31\u4f1a\u4ee4\u5bb9\u5668\u9000\u51fa\u3002\n\u6b63\u786e\u7684\u505a\u6cd5\u662f\u76f4\u63a5\u6267\u884c nginx \u53ef\u6267\u884c\u6587\u4ef6\uff0c\u5e76\u4e14\u8981\u6c42\u4ee5\u524d\u53f0\u5f62\u5f0f\u8fd0\u884c\u3002\u6bd4\u5982\uff1a\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\nENTRYPOINT \u5165\u53e3\u70b9\nENTRYPOINT \u7684\u683c\u5f0f\u548c RUN \u6307\u4ee4\u683c\u5f0f\u4e00\u6837\uff0c\u5206\u4e3a exec \u683c\u5f0f\u548c shell \u683c\u5f0f\u3002\nENTRYPOINT \u7684\u76ee\u7684\u548c CMD \u4e00\u6837\uff0c\u90fd\u662f\u5728\u6307\u5b9a\u5bb9\u5668\u542f\u52a8\u7a0b\u5e8f\u53ca\u53c2\u6570\u3002ENTRYPOINT \u5728\u8fd0\u884c\u65f6\u4e5f\u53ef\u4ee5\u66ff\u4ee3\uff0c\u4e0d\u8fc7\u6bd4 CMD \u8981\u7565\u663e\u7e41\u7410\uff0c\u9700\u8981\u901a\u8fc7 docker run \u7684\u53c2\u6570 --entrypoint \u6765\u6307\u5b9a\u3002\n\u5f53\u6307\u5b9a\u4e86 ENTRYPOINT \u540e\uff0cCMD \u7684\u542b\u4e49\u5c31\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u4e0d\u518d\u662f\u76f4\u63a5\u7684\u8fd0\u884c\u5176\u547d\u4ee4\uff0c\u800c\u662f\u5c06 CMD \u7684\u5185\u5bb9\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 ENTRYPOINT \u6307\u4ee4\uff0c\u6362\u53e5\u8bdd\u8bf4\u5b9e\u9645\u6267\u884c\u65f6\uff0c\u5c06\u53d8\u4e3a\uff1a\n\n&lt;ENTRYPOINT&gt; \"&lt;CMD&gt;\"\n\u90a3\u4e48\u6709\u4e86 CMD \u540e\uff0c\u4e3a\u4ec0\u4e48\u8fd8\u8981\u6709 ENTRYPOINT \u5462\uff1f\u8fd9\u79cd &lt;ENTRYPOINT&gt; \"&lt;CMD&gt;\" \u6709\u4ec0\u4e48\u597d\u5904\u4e48\uff1f\u8ba9\u6765\u770b\u51e0\u4e2a\u573a\u666f\u3002\n\u573a\u666f\u4e00\uff1a\u8ba9\u955c\u50cf\u53d8\u6210\u50cf\u547d\u4ee4\u4e00\u6837\u4f7f\u7528\n\u5047\u8bbe\u9700\u8981\u4e00\u4e2a\u5f97\u77e5\u81ea\u5df1\u5f53\u524d\u516c\u7f51 IP \u7684\u955c\u50cf\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u7528 CMD \u6765\u5b9e\u73b0\uff1a\nFROM ubuntu:18.04\nRUN apt-get update \\\n    &amp;&amp; apt-get install -y curl \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\nCMD [ &quot;curl&quot;, &quot;-s&quot;, &quot;http://myip.ipip.net&quot; ]\n\n\u5047\u5982\u4f7f\u7528 docker build -t myip . \u6765\u6784\u5efa\u955c\u50cf\u7684\u8bdd\uff0c\u5982\u679c\u9700\u8981\u67e5\u8be2\u5f53\u524d\u516c\u7f51 IP\uff0c\u53ea\u9700\u8981\u6267\u884c\uff1a\n$ docker run myip\n\u5f53\u524d IP\uff1a61.148.226.66 \u6765\u81ea\uff1a\u5317\u4eac\u5e02 \u8054\u901a\n\n\u55ef\uff0c\u8fd9\u4e48\u770b\u8d77\u6765\u597d\u50cf\u53ef\u4ee5\u76f4\u63a5\u628a\u955c\u50cf\u5f53\u505a\u547d\u4ee4\u4f7f\u7528\u4e86\uff0c\u4e0d\u8fc7\u547d\u4ee4\u603b\u6709\u53c2\u6570\uff0c\u5982\u679c\u5e0c\u671b\u52a0\u53c2\u6570\u5462\uff1f\u6bd4\u5982\u4ece\u4e0a\u9762\u7684 CMD \u4e2d\u53ef\u4ee5\u770b\u5230\u5b9e\u8d28\u7684\u547d\u4ee4\u662f curl\uff0c\u90a3\u4e48\u5982\u679c\u5e0c\u671b\u663e\u793a HTTP \u5934\u4fe1\u606f\uff0c\u5c31\u9700\u8981\u52a0\u4e0a -i \u53c2\u6570\u3002\u90a3\u4e48\u53ef\u4ee5\u76f4\u63a5\u52a0 -i \u53c2\u6570\u7ed9 docker run myip \u4e48\uff1f\n$ docker run myip -i\ndocker: Error response from daemon: invalid header field value &quot;oci runtime error: container_linux.go:247: starting container process caused \\&quot;exec: \\\\\\&quot;-i\\\\\\&quot;: executable file not found in $PATH\\&quot;\\n&quot;.\n\n\u53ef\u4ee5\u770b\u5230\u53ef\u6267\u884c\u6587\u4ef6\u627e\u4e0d\u5230\u7684\u62a5\u9519\uff0cexecutable file not found\u3002\u4e4b\u524d\u8bf4\u8fc7\uff0c\u8ddf\u5728\u955c\u50cf\u540d\u540e\u9762\u7684\u662f command\uff0c\u8fd0\u884c\u65f6\u4f1a\u66ff\u6362 CMD \u7684\u9ed8\u8ba4\u503c\u3002\u56e0\u6b64\u8fd9\u91cc\u7684 -i \u66ff\u6362\u4e86\u539f\u6765\u7684 CMD\uff0c\u800c\u4e0d\u662f\u6dfb\u52a0\u5728\u539f\u6765\u7684 curl -s http://myip.ipip.net \u540e\u9762\u3002\u800c -i \u6839\u672c\u4e0d\u662f\u547d\u4ee4\uff0c\u6240\u4ee5\u81ea\u7136\u627e\u4e0d\u5230\u3002\n\u90a3\u4e48\u5982\u679c\u5e0c\u671b\u52a0\u5165 -i \u8fd9\u53c2\u6570\uff0c\u5c31\u5fc5\u987b\u91cd\u65b0\u5b8c\u6574\u7684\u8f93\u5165\u8fd9\u4e2a\u547d\u4ee4\uff1a\n$ docker run myip curl -s http://myip.ipip.net -i\n\n\u8fd9\u663e\u7136\u4e0d\u662f\u5f88\u597d\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u800c\u4f7f\u7528 ENTRYPOINT \u5c31\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002\u73b0\u5728\u91cd\u65b0\u7528 ENTRYPOINT \u6765\u5b9e\u73b0\u8fd9\u4e2a\u955c\u50cf\uff1a\nFROM ubuntu:18.04\nRUN apt-get update \\\n    &amp;&amp; apt-get install -y curl \\\n    &amp;&amp; rm -rf /var/lib/apt/lists/*\nENTRYPOINT [ &quot;curl&quot;, &quot;-s&quot;, &quot;http://myip.ipip.net&quot; ]\n\n\u8fd9\u6b21\u518d\u6765\u5c1d\u8bd5\u76f4\u63a5\u4f7f\u7528 docker run myip -i\uff1a\n$ docker run myip\n\u5f53\u524d IP\uff1a61.148.226.66 \u6765\u81ea\uff1a\u5317\u4eac\u5e02 \u8054\u901a\n\n$ docker run myip -i\nHTTP/1.1 200 OK\nServer: nginx/1.8.0\nDate: Tue, 22 Nov 2016 05:12:40 GMT\nContent-Type: text/html; charset=UTF-8\nVary: Accept-Encoding\nX-Powered-By: PHP/5.6.24-1~dotdeb+7.1\nX-Cache: MISS from cache-2\nX-Cache-Lookup: MISS from cache-2:80\nX-Cache: MISS from proxy-2_6\nTransfer-Encoding: chunked\nVia: 1.1 cache-2:80, 1.1 proxy-2_6:8006\nConnection: keep-alive\n\u200b\n\u5f53\u524d IP\uff1a61.148.226.66 \u6765\u81ea\uff1a\u5317\u4eac\u5e02 \u8054\u901a\n\n\u53ef\u4ee5\u770b\u5230\uff0c\u8fd9\u6b21\u6210\u529f\u4e86\u3002\u8fd9\u662f\u56e0\u4e3a\u5f53\u5b58\u5728 ENTRYPOINT \u540e\uff0cCMD \u7684\u5185\u5bb9\u5c06\u4f1a\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 ENTRYPOINT\uff0c\u800c\u8fd9\u91cc -i \u5c31\u662f\u65b0\u7684 CMD\uff0c\u56e0\u6b64\u4f1a\u4f5c\u4e3a\u53c2\u6570\u4f20\u7ed9 curl\uff0c\u4ece\u800c\u8fbe\u5230\u4e86\u9884\u671f\u7684\u6548\u679c\u3002\n\u573a\u666f\u4e8c\uff1a\u5e94\u7528\u8fd0\u884c\u524d\u7684\u51c6\u5907\u5de5\u4f5c\n\u542f\u52a8\u5bb9\u5668\u5c31\u662f\u542f\u52a8\u4e3b\u8fdb\u7a0b\uff0c\u4f46\u6709\u4e9b\u65f6\u5019\uff0c\u542f\u52a8\u4e3b\u8fdb\u7a0b\u524d\uff0c\u9700\u8981\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c\u3002\n\u6bd4\u5982 mysql \u7c7b\u7684\u6570\u636e\u5e93\uff0c\u53ef\u80fd\u9700\u8981\u4e00\u4e9b\u6570\u636e\u5e93\u914d\u7f6e\u3001\u521d\u59cb\u5316\u7684\u5de5\u4f5c\uff0c\u8fd9\u4e9b\u5de5\u4f5c\u8981\u5728\u6700\u7ec8\u7684 mysql \u670d\u52a1\u5668\u8fd0\u884c\u4e4b\u524d\u89e3\u51b3\u3002\n\u6b64\u5916\uff0c\u53ef\u80fd\u5e0c\u671b\u907f\u514d\u4f7f\u7528 root \u7528\u6237\u53bb\u542f\u52a8\u670d\u52a1\uff0c\u4ece\u800c\u63d0\u9ad8\u5b89\u5168\u6027\uff0c\u800c\u5728\u542f\u52a8\u670d\u52a1\u524d\u8fd8\u9700\u8981\u4ee5 root \u8eab\u4efd\u6267\u884c\u4e00\u4e9b\u5fc5\u8981\u7684\u51c6\u5907\u5de5\u4f5c\uff0c\u6700\u540e\u5207\u6362\u5230\u670d\u52a1\u7528\u6237\u8eab\u4efd\u542f\u52a8\u670d\u52a1\u3002\u6216\u8005\u9664\u4e86\u670d\u52a1\u5916\uff0c\u5176\u5b83\u547d\u4ee4\u4f9d\u65e7\u53ef\u4ee5\u4f7f\u7528 root \u8eab\u4efd\u6267\u884c\uff0c\u65b9\u4fbf\u8c03\u8bd5\u7b49\u3002\n\u8fd9\u4e9b\u51c6\u5907\u5de5\u4f5c\u662f\u548c\u5bb9\u5668 CMD \u65e0\u5173\u7684\uff0c\u65e0\u8bba CMD \u4e3a\u4ec0\u4e48\uff0c\u90fd\u9700\u8981\u4e8b\u5148\u8fdb\u884c\u4e00\u4e2a\u9884\u5904\u7406\u7684\u5de5\u4f5c\u3002\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u5199\u4e00\u4e2a\u811a\u672c\uff0c\u7136\u540e\u653e\u5165 ENTRYPOINT \u4e2d\u53bb\u6267\u884c\uff0c\u800c\u8fd9\u4e2a\u811a\u672c\u4f1a\u5c06\u63a5\u5230\u7684\u53c2\u6570\uff08\u4e5f\u5c31\u662f &lt;CMD&gt;\uff09\u4f5c\u4e3a\u547d\u4ee4\uff0c\u5728\u811a\u672c\u6700\u540e\u6267\u884c\u3002\u6bd4\u5982\u5b98\u65b9\u955c\u50cf redis \u4e2d\u5c31\u662f\u8fd9\u4e48\u505a\u7684\uff1a\nFROM alpine:3.4\n...\nRUN addgroup -S redis &amp;&amp; adduser -S -G redis redis\n...\nENTRYPOINT [&quot;docker-entrypoint.sh&quot;]\n\nEXPOSE 6379\nCMD [ &quot;redis-server&quot; ]\n\n\u53ef\u4ee5\u770b\u5230\u5176\u4e2d\u4e3a\u4e86 redis \u670d\u52a1\u521b\u5efa\u4e86 redis \u7528\u6237\uff0c\u5e76\u5728\u6700\u540e\u6307\u5b9a\u4e86 ENTRYPOINT \u4e3a docker-entrypoint.sh \u811a\u672c\u3002\n#!/bin/sh\n...\n# allow the container to be started with `--user`\nif [ &quot;$1&quot; = &#39;redis-server&#39; -a &quot;$(id -u)&quot; = &#39;0&#39; ]; then\n    find . \\! -user redis -exec chown redis &#39;{}&#39; +\n    exec gosu redis &quot;$0&quot; &quot;$@&quot;\nfi\n\nexec &quot;$@&quot;\n\n\u8be5\u811a\u672c\u7684\u5185\u5bb9\u5c31\u662f\u6839\u636e CMD \u7684\u5185\u5bb9\u6765\u5224\u65ad\uff0c\u5982\u679c\u662f redis-server \u7684\u8bdd\uff0c\u5219\u5207\u6362\u5230 redis \u7528\u6237\u8eab\u4efd\u542f\u52a8\u670d\u52a1\u5668\uff0c\u5426\u5219\u4f9d\u65e7\u4f7f\u7528 root \u8eab\u4efd\u6267\u884c\u3002\u6bd4\u5982\uff1a\n$ docker run -it redis id\nuid=0(root) gid=0(root) groups=0(root)\n\nENV \u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\n\u683c\u5f0f\u6709\u4e24\u79cd\uff1a\n\nENV &lt;key&gt; &lt;value&gt;\nENV &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...\n\n\u8fd9\u4e2a\u6307\u4ee4\u5f88\u7b80\u5355\uff0c\u5c31\u662f\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u800c\u5df2\uff0c\u65e0\u8bba\u662f\u540e\u9762\u7684\u5176\u5b83\u6307\u4ee4\uff0c\u5982 RUN\uff0c\u8fd8\u662f\u8fd0\u884c\u65f6\u7684\u5e94\u7528\uff0c\u90fd\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u8fd9\u91cc\u5b9a\u4e49\u7684\u73af\u5883\u53d8\u91cf\u3002\nENV VERSION=1.0 DEBUG=on \\\n    NAME=&quot;Happy Feet&quot;\n\n\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u6f14\u793a\u4e86\u5982\u4f55\u6362\u884c\uff0c\u4ee5\u53ca\u5bf9\u542b\u6709\u7a7a\u683c\u7684\u503c\u7528\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u529e\u6cd5\uff0c\u8fd9\u548c Shell \u4e0b\u7684\u884c\u4e3a\u662f\u4e00\u81f4\u7684\u3002\n\u5b9a\u4e49\u4e86\u73af\u5883\u53d8\u91cf\uff0c\u90a3\u4e48\u5728\u540e\u7eed\u7684\u6307\u4ee4\u4e2d\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u73af\u5883\u53d8\u91cf\u3002\u6bd4\u5982\u5728\u5b98\u65b9 node \u955c\u50cf Dockerfile \u4e2d\uff0c\u5c31\u6709\u7c7b\u4f3c\u8fd9\u6837\u7684\u4ee3\u7801\uff1a\nENV NODE_VERSION 7.2.0\n\nRUN curl -SLO &quot;https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz&quot; \\\n  &amp;&amp; curl -SLO &quot;https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc&quot; \\\n  &amp;&amp; gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \\\n  &amp;&amp; grep &quot; node-v$NODE_VERSION-linux-x64.tar.xz\\$&quot; SHASUMS256.txt | sha256sum -c - \\\n  &amp;&amp; tar -xJf &quot;node-v$NODE_VERSION-linux-x64.tar.xz&quot; -C /usr/local --strip-components=1 \\\n  &amp;&amp; rm &quot;node-v$NODE_VERSION-linux-x64.tar.xz&quot; SHASUMS256.txt.asc SHASUMS256.txt \\\n  &amp;&amp; ln -s /usr/local/bin/node /usr/local/bin/nodejs\n\n\u5728\u8fd9\u91cc\u5148\u5b9a\u4e49\u4e86\u73af\u5883\u53d8\u91cf NODE_VERSION\uff0c\u5176\u540e\u7684 RUN \u8fd9\u5c42\u91cc\uff0c\u591a\u6b21\u4f7f\u7528 $NODE_VERSION \u6765\u8fdb\u884c\u64cd\u4f5c\u5b9a\u5236\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5c06\u6765\u5347\u7ea7\u955c\u50cf\u6784\u5efa\u7248\u672c\u7684\u65f6\u5019\uff0c\u53ea\u9700\u8981\u66f4\u65b0 7.2.0 \u5373\u53ef\uff0cDockerfile \u6784\u5efa\u7ef4\u62a4\u53d8\u5f97\u66f4\u8f7b\u677e\u4e86\u3002\n\u4e0b\u5217\u6307\u4ee4\u53ef\u4ee5\u652f\u6301\u73af\u5883\u53d8\u91cf\u5c55\u5f00\uff1a ADD\u3001COPY\u3001ENV\u3001EXPOSE\u3001FROM\u3001LABEL\u3001USER\u3001WORKDIR\u3001VOLUME\u3001STOPSIGNAL\u3001ONBUILD\u3001RUN\u3002\n\u53ef\u4ee5\u4ece\u8fd9\u4e2a\u6307\u4ee4\u5217\u8868\u91cc\u611f\u89c9\u5230\uff0c\u73af\u5883\u53d8\u91cf\u53ef\u4ee5\u4f7f\u7528\u7684\u5730\u65b9\u5f88\u591a\uff0c\u5f88\u5f3a\u5927\u3002\u901a\u8fc7\u73af\u5883\u53d8\u91cf\uff0c\u53ef\u4ee5\u8ba9\u4e00\u4efd Dockerfile \u5236\u4f5c\u66f4\u591a\u7684\u955c\u50cf\uff0c\u53ea\u9700\u4f7f\u7528\u4e0d\u540c\u7684\u73af\u5883\u53d8\u91cf\u5373\u53ef\u3002\nVOLUME \u5b9a\u4e49\u533f\u540d\u5377\n\u683c\u5f0f\u4e3a\uff1a\n\nVOLUME [\"&lt;\u8def\u5f841&gt;\", \"&lt;\u8def\u5f842&gt;\"...]\nVOLUME &lt;\u8def\u5f84&gt;\n\n\u4e4b\u524d\u8bf4\u8fc7\uff0c\u5bb9\u5668\u8fd0\u884c\u65f6\u5e94\u8be5\u5c3d\u91cf\u4fdd\u6301\u5bb9\u5668\u5b58\u50a8\u5c42\u4e0d\u53d1\u751f\u5199\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6570\u636e\u5e93\u7c7b\u9700\u8981\u4fdd\u5b58\u52a8\u6001\u6570\u636e\u7684\u5e94\u7528\uff0c\u5176\u6570\u636e\u5e93\u6587\u4ef6\u5e94\u8be5\u4fdd\u5b58\u4e8e\u5377(volume)\u4e2d\uff0c\u540e\u9762\u7684\u7ae0\u8282\u4f1a\u8fdb\u4e00\u6b65\u4ecb\u7ecd Docker \u5377\u7684\u6982\u5ff5\u3002\u4e3a\u4e86\u9632\u6b62\u8fd0\u884c\u65f6\u7528\u6237\u5fd8\u8bb0\u5c06\u52a8\u6001\u6587\u4ef6\u6240\u4fdd\u5b58\u76ee\u5f55\u6302\u8f7d\u4e3a\u5377\uff0c\u5728 Dockerfile \u4e2d\uff0c\u53ef\u4ee5\u4e8b\u5148\u6307\u5b9a\u67d0\u4e9b\u76ee\u5f55\u6302\u8f7d\u4e3a\u533f\u540d\u5377\uff0c\u8fd9\u6837\u5728\u8fd0\u884c\u65f6\u5982\u679c\u7528\u6237\u4e0d\u6307\u5b9a\u6302\u8f7d\uff0c\u5176\u5e94\u7528\u4e5f\u53ef\u4ee5\u6b63\u5e38\u8fd0\u884c\uff0c\u4e0d\u4f1a\u5411\u5bb9\u5668\u5b58\u50a8\u5c42\u5199\u5165\u5927\u91cf\u6570\u636e\u3002\nVOLUME /data\n\n\u8fd9\u91cc\u7684 /data \u76ee\u5f55\u5c31\u4f1a\u5728\u8fd0\u884c\u65f6\u81ea\u52a8\u6302\u8f7d\u4e3a\u533f\u540d\u5377\uff0c\u4efb\u4f55\u5411 /data \u4e2d\u5199\u5165\u7684\u4fe1\u606f\u90fd\u4e0d\u4f1a\u8bb0\u5f55\u8fdb\u5bb9\u5668\u5b58\u50a8\u5c42\uff0c\u4ece\u800c\u4fdd\u8bc1\u4e86\u5bb9\u5668\u5b58\u50a8\u5c42\u7684\u65e0\u72b6\u6001\u5316\u3002\u5f53\u7136\uff0c\u8fd0\u884c\u65f6\u53ef\u4ee5\u8986\u76d6\u8fd9\u4e2a\u6302\u8f7d\u8bbe\u7f6e\u3002\u6bd4\u5982\uff1a\ndocker run -d -v mydata:/data xxxx\n\n\u5728\u8fd9\u884c\u547d\u4ee4\u4e2d\uff0c\u5c31\u4f7f\u7528\u4e86 mydata \u8fd9\u4e2a\u547d\u540d\u5377\u6302\u8f7d\u5230\u4e86 /data \u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u66ff\u4ee3\u4e86 Dockerfile \u4e2d\u5b9a\u4e49\u7684\u533f\u540d\u5377\u7684\u6302\u8f7d\u914d\u7f6e\u3002\nEXPOSE \u66b4\u9732\u7aef\u53e3\n\u683c\u5f0f\u4e3a EXPOSE &lt;\u7aef\u53e31&gt; [&lt;\u7aef\u53e32&gt;...]\u3002\nEXPOSE \u6307\u4ee4\u662f\u58f0\u660e\u8fd0\u884c\u65f6\u5bb9\u5668\u63d0\u4f9b\u670d\u52a1\u7aef\u53e3\uff0c\u8fd9\u53ea\u662f\u4e00\u4e2a\u58f0\u660e\uff0c\u5728\u8fd0\u884c\u65f6\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u8fd9\u4e2a\u58f0\u660e\u5e94\u7528\u5c31\u4f1a\u5f00\u542f\u8fd9\u4e2a\u7aef\u53e3\u7684\u670d\u52a1\u3002\u5728 Dockerfile \u4e2d\u5199\u5165\u8fd9\u6837\u7684\u58f0\u660e\u6709\u4e24\u4e2a\u597d\u5904\uff0c\u4e00\u4e2a\u662f\u5e2e\u52a9\u955c\u50cf\u4f7f\u7528\u8005\u7406\u89e3\u8fd9\u4e2a\u955c\u50cf\u670d\u52a1\u7684\u5b88\u62a4\u7aef\u53e3\uff0c\u4ee5\u65b9\u4fbf\u914d\u7f6e\u6620\u5c04\uff1b\u53e6\u4e00\u4e2a\u7528\u5904\u5219\u662f\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u968f\u673a\u7aef\u53e3\u6620\u5c04\u65f6\uff0c\u4e5f\u5c31\u662f docker run -P \u65f6\uff0c\u4f1a\u81ea\u52a8\u968f\u673a\u6620\u5c04 EXPOSE \u7684\u7aef\u53e3\u3002\n\u8981\u5c06 EXPOSE \u548c\u5728\u8fd0\u884c\u65f6\u4f7f\u7528 -p &lt;\u5bbf\u4e3b\u7aef\u53e3&gt;:&lt;\u5bb9\u5668\u7aef\u53e3&gt; \u533a\u5206\u5f00\u6765\u3002-p\uff0c\u662f\u6620\u5c04\u5bbf\u4e3b\u7aef\u53e3\u548c\u5bb9\u5668\u7aef\u53e3\uff0c\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u5c06\u5bb9\u5668\u7684\u5bf9\u5e94\u7aef\u53e3\u670d\u52a1\u516c\u5f00\u7ed9\u5916\u754c\u8bbf\u95ee\uff0c\u800c EXPOSE \u4ec5\u4ec5\u662f\u58f0\u660e\u5bb9\u5668\u6253\u7b97\u4f7f\u7528\u4ec0\u4e48\u7aef\u53e3\u800c\u5df2\uff0c\u5e76\u4e0d\u4f1a\u81ea\u52a8\u5728\u5bbf\u4e3b\u8fdb\u884c\u7aef\u53e3\u6620\u5c04\u3002\nWORKDIR \u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\n\u683c\u5f0f\u4e3a WORKDIR &lt;\u5de5\u4f5c\u76ee\u5f55\u8def\u5f84&gt;\u3002\n\u4f7f\u7528 WORKDIR \u6307\u4ee4\u53ef\u4ee5\u6765\u6307\u5b9a\u5de5\u4f5c\u76ee\u5f55\uff08\u6216\u8005\u79f0\u4e3a\u5f53\u524d\u76ee\u5f55\uff09\uff0c\u4ee5\u540e\u5404\u5c42\u7684\u5f53\u524d\u76ee\u5f55\u5c31\u88ab\u6539\u4e3a\u6307\u5b9a\u7684\u76ee\u5f55\uff0c\u5982\u8be5\u76ee\u5f55\u4e0d\u5b58\u5728\uff0cWORKDIR \u4f1a\u5e2e\u4f60\u5efa\u7acb\u76ee\u5f55\u3002\n\u4e4b\u524d\u63d0\u5230\u4e00\u4e9b\u521d\u5b66\u8005\u5e38\u72af\u7684\u9519\u8bef\u662f\u628a Dockerfile \u7b49\u540c\u4e8e Shell \u811a\u672c\u6765\u4e66\u5199\uff0c\u8fd9\u79cd\u9519\u8bef\u7684\u7406\u89e3\u8fd8\u53ef\u80fd\u4f1a\u5bfc\u81f4\u51fa\u73b0\u4e0b\u9762\u8fd9\u6837\u7684\u9519\u8bef\uff1a\nRUN cd /app\nRUN echo &quot;hello&quot; &gt; world.txt\n\n\u5982\u679c\u5c06\u8fd9\u4e2a Dockerfile \u8fdb\u884c\u6784\u5efa\u955c\u50cf\u8fd0\u884c\u540e\uff0c\u4f1a\u53d1\u73b0\u627e\u4e0d\u5230 /app/world.txt \u6587\u4ef6\uff0c\u6216\u8005\u5176\u5185\u5bb9\u4e0d\u662f hello\u3002\u539f\u56e0\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5728 Shell \u4e2d\uff0c\u8fde\u7eed\u4e24\u884c\u662f\u540c\u4e00\u4e2a\u8fdb\u7a0b\u6267\u884c\u73af\u5883\uff0c\u56e0\u6b64\u524d\u4e00\u4e2a\u547d\u4ee4\u4fee\u6539\u7684\u5185\u5b58\u72b6\u6001\uff0c\u4f1a\u76f4\u63a5\u5f71\u54cd\u540e\u4e00\u4e2a\u547d\u4ee4\uff1b\u800c\u5728 Dockerfile \u4e2d\uff0c\u8fd9\u4e24\u884c RUN \u547d\u4ee4\u7684\u6267\u884c\u73af\u5883\u6839\u672c\u4e0d\u540c\uff0c\u662f\u4e24\u4e2a\u5b8c\u5168\u4e0d\u540c\u7684\u5bb9\u5668\u3002\u8fd9\u5c31\u662f\u5bf9 Dockerfile \u6784\u5efa\u5206\u5c42\u5b58\u50a8\u7684\u6982\u5ff5\u4e0d\u4e86\u89e3\u6240\u5bfc\u81f4\u7684\u9519\u8bef\u3002\n\u4e4b\u524d\u8bf4\u8fc7\u6bcf\u4e00\u4e2a RUN \u90fd\u662f\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\u3001\u6267\u884c\u547d\u4ee4\u3001\u7136\u540e\u63d0\u4ea4\u5b58\u50a8\u5c42\u6587\u4ef6\u53d8\u66f4\u3002\u7b2c\u4e00\u5c42 RUN cd /app \u7684\u6267\u884c\u4ec5\u4ec5\u662f\u5f53\u524d\u8fdb\u7a0b\u7684\u5de5\u4f5c\u76ee\u5f55\u53d8\u66f4\uff0c\u4e00\u4e2a\u5185\u5b58\u4e0a\u7684\u53d8\u5316\u800c\u5df2\uff0c\u5176\u7ed3\u679c\u4e0d\u4f1a\u9020\u6210\u4efb\u4f55\u6587\u4ef6\u53d8\u66f4\u3002\u800c\u5230\u7b2c\u4e8c\u5c42\u7684\u65f6\u5019\uff0c\u542f\u52a8\u7684\u662f\u4e00\u4e2a\u5168\u65b0\u7684\u5bb9\u5668\uff0c\u8ddf\u7b2c\u4e00\u5c42\u7684\u5bb9\u5668\u66f4\u5b8c\u5168\u6ca1\u5173\u7cfb\uff0c\u81ea\u7136\u4e0d\u53ef\u80fd\u7ee7\u627f\u524d\u4e00\u5c42\u6784\u5efa\u8fc7\u7a0b\u4e2d\u7684\u5185\u5b58\u53d8\u5316\u3002\n\u56e0\u6b64\u5982\u679c\u9700\u8981\u6539\u53d8\u4ee5\u540e\u5404\u5c42\u7684\u5de5\u4f5c\u76ee\u5f55\u7684\u4f4d\u7f6e\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528 WORKDIR \u6307\u4ee4\u3002\nWORKDIR /app\n\nRUN echo &quot;hello&quot; &gt; world.txt\n\n\u5982\u679c\u4f60\u7684 WORKDIR \u6307\u4ee4\u4f7f\u7528\u7684\u76f8\u5bf9\u8def\u5f84\uff0c\u90a3\u4e48\u6240\u5207\u6362\u7684\u8def\u5f84\u4e0e\u4e4b\u524d\u7684 WORKDIR \u6709\u5173\uff1a\nWORKDIR /a\nWORKDIR b\nWORKDIR c\n\nRUN pwd\n\npwd \u8f93\u51fa\u7684\u7ed3\u679c\u4e3a /a/b/c\u3002\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Docker", "slug": "Docker", "permalink": "/Xuxx_Blogs/tag/Docker/"}, {"name": "Dockerfile", "slug": "Dockerfile", "permalink": "/Xuxx_Blogs/tag/Dockerfile/"}]}, {"title": "Docker\u7b14\u8bb0", "date": "2020-09-17T13:30:00-00.00", "path": "/Xuxx_Blogs/archives/bj31/", "text": "Docker\u5f15\u64ce\nDocker\u5f15\u64ce\u662f\u4e00\u4e2a\u5305\u542b\u4ee5\u4e0b\u4e3b\u8981\u7ec4\u4ef6\u7684\u5ba2\u6237\u7aef\u670d\u52a1\u5668\u5e94\u7528\u7a0b\u5e8f\u3002\n\n\u2014\u79cd\u670d\u52a1\u5668\uff0c\u5b83\u662f\u4e00\u79cd\u88ab\u79f0\u4e3a\u5b88\u62a4\u8fdb\u7a0b\uff08deamon\uff09\u5e76\u4e14\u957f\u65f6\u95f4\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002\nREST API \u7528\u4e8e\u6307\u5b9a\u7a0b\u5e8f\u53ef\u4ee5\u7528\u6765\u4e0e\u5b88\u62a4\u8fdb\u7a0b\u901a\u4fe1\u7684\u63a5\u53e3\uff0c\u5e76\u6307\u793a\u5b83\u505a\u4ec0\u4e48\u3002\n\u4e00\u4e2a\u6709\u547d\u4ee4\u884c\u754c\u9762( CLI )\u5de5\u5177\u7684\u5ba2\u6237\u7aef\u3002\n\n\nDocker\u67b6\u6784\n\nDocker \u4f7f\u7528\u5ba2\u6237\u7aef-\u670d\u52a1\u5668 ( C/S ) \u67b6\u6784\u6a21\u5f0f\uff0c\u4f7f\u7528\u8fdc\u7a0b API \u6765\u7ba1\u7406\u548c\u521b\u5efa Docker \u5bb9\u5668\u3002\nDocker \u5bb9\u5668\u901a\u8fc7 Docker \u955c\u50cf\u6765\u521b\u5efa\u3002\n\u5bb9\u5668\u4e0e\u955c\u50cf\u7684\u5173\u7cfb\u7c7b\u4f3c\u4e8e\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u7684\u5bf9\u8c61\u4e0e\u7c7b\u3002---\u901a\u8fc7\u955c\u50cf\u751f\u6210\u5bb9\u5668\u3002\n\n\n\n\n\u6807\u9898\n\u8bf4\u660e\n\n\n\n\n\u955c\u50cf(Images)\nDocker\u955c\u50cf\u662f\u7528\u4e8e\u521b\u5efaDocker\u5bb9\u5668\u7684\u6a21\u677f\u3002\n\n\n\u5bb9\u5668(Container)\n\u5bb9\u5668\u662f\u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528\u3002\n\n\n\u5ba2\u6237\u7aef(Client)\nDocker\u5ba2\u6237\u7aef\u901a\u8fc7\u547d\u4ee4\u884c\u6216\u8005\u5176\u4ed6\u5de5\u5177\u4f7f\u7528Docker API\u4e0eDocker\u7684\u5b88\u62a4\u8fdb\u7a0b\u901a\u4fe1\u3002\n\n\n\u4e3b\u673a(Host)\n\u4e00\u4e2a\u7269\u7406\u6216\u8005\u865a\u62df\u7684\u673a\u5668\u7528\u4e8e\u6267\u884cDocker\u5b88\u62a4\u8fdb\u7a0b\u548c\u5bb9\u5668\u3002\n\n\n\u4ed3\u5e93(Registry)\nDocker\u4ed3\u5e93\u7528\u6765\u4fdd\u5b58\u955c\u50cf\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u4ee3\u7801\u63a7\u5236\u4e2d\u7684\u4ee3\u7801\u4ed3\u5e93\u3002Docker Hub (https://hub.docker.com\uff09\u63d0\u4f9b\u4e86\u5e9e\u5927\u7684\u955c\u50cf\u96c6\u5408\u4f9b\u4f7f\u7528\u3002\n\n\nDocker Machine\nDocker Machine\u662f\u4e00\u4e2a\u7b80\u5316Docker\u5b89\u88c5\u7684\u547d\u4ee4\u884c\u5de5\u5177\uff0c\u901a\u8fc7\u4e00\u4e2a\u7b80\u5355\u7684\u547d\u4ee4\u884c\u5373\u53ef\u5728\u76f8\u5e94\u7684\u5e73\u53f0\u4e0a\u5b89\u88c5Docker\uff0c\u6bd4\u5982VirtualBox\u3001Digital Ocean\u3001Microsoft Azure\u3002\n\n\n\nDocker \u64cd\u4f5c\u955c\u50cf\n\u83b7\u53d6\u955c\u50cf\n\u4eceDocker\u955c\u50cf\u4ed3\u5e93\u83b7\u53d6\u955c\u50cf\u7684\u547d\u4ee4\u662f docker pull \u3002\u5176\u547d\u4ee4\u683c\u5f0f\u4e3a:\ndocker pull [\u9009\u9879] [Docker Registry \u5730\u5740[:\u7aef\u53e3\u53f7]/\u4ed3\u5e93\u540d[:\u6807\u7b7e]\n\n\u5177\u4f53\u7684\u9009\u9879\u53ef\u4ee5\u901a\u8fc7 docker pull --help\u547d\u4ee4\u770b\u5230\uff0c\u8fd9\u91cc\u8bf4\u4e00\u4e0b\u955c\u50cf\u540d\u79f0\u7684\u683c\u5f0f\u3002\n\n\u955c\u50cf\u4ed3\u5e93\u5730\u5740\uff1a\u5730\u5740\u7684\u683c\u5f0f\u4e00\u822c\u662f&lt;\u57df\u540d/IP&gt;[\uff1a\u7aef\u53e3\u53f7]\u3002\u9ed8\u8ba4\u5730\u5740\u662fDocker Hub\u3002\n\u4ed3\u5e93\u540d\uff1a\u5982\u4e4b\u524d\u6240\u8bf4\uff0c\u8fd9\u91cc\u7684\u4ed3\u5e93\u540d\u662f\u4e24\u6bb5\u5f0f\u540d\u79f0\uff0c\u5373&lt;\u7528\u6237\u540d&gt;/&lt;\u8f6f\u4ef6\u540d&gt;\u3002\u5bf9\u4e8eDocker Hub\uff0c\u5982\u679c\u4e0d\u7ed9\u51fa\u7528\u6237\u540d\uff0c\u5219\u9ed8\u8ba4\u4e3a library\uff0c\u4e5f\u5c31\u662f\u5b98\u65b9\u955c\u50cf\u3002\n\n\u5217\u51fa\u955c\u50cf\n\u60f3\u8981\u5217\u51fa\u5df2\u7ecf\u4e0b\u8f7d\u7684\u955c\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528 docker images\u6216\u8005docker image ls\u547d\u4ee4\u3002\n[root@localhost ~]# docker images\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nmydemo1             latest              3b239960848d        2 months ago        647MB\n&lt;none&gt;              &lt;none&gt;              54300df71941        2 months ago        647MB\n&lt;none&gt;              &lt;none&gt;              e7e0ba36be39        2 months ago        647MB\ntomcat              latest              2eb5a120304e        3 months ago        647MB\nhello-world         latest              bf756fb1ae65        8 months ago        13.3kB\nrabbitmq            3.7.3-management    2f415b0e9a6e        2 years ago         151MB\n\n\u5217\u8868\u5305\u542b\u4e86\u4ed3\u5e93\u540d\u3001\u6807\u7b7e\u3001\u955c\u50cfID\u3001\u521b\u5efa\u65f6\u95f4\u4ee5\u53ca\u6240\u5360\u7528\u7684\u7a7a\u95f4\u3002\u955c\u50cfID\u5219\u662f\u955c\u50cf\u7684\u552f\u4e00\u6807\u8bc6\uff0c\u4e00\u4e2a\u955c\u50cf\u53ef\u4ee5\u5bf9\u5e94\u591a\u4e2a\u6807\u7b7e\u3002\n\u865a\u60ac\u955c\u50cf\n\u6709\u65f6\u5728\u955c\u50cf\u5217\u8868\u4e2d\uff0c\u8fd8\u53ef\u4ee5\u770b\u5230\u4e00\u4e2a\u7279\u6b8a\u7684\u955c\u50cf\uff0c\u8fd9\u4e2a\u955c\u50cf\u65e2\u6ca1\u6709\u4ed3\u5e93\u540d\uff0c\u4e5f\u6ca1\u6709\u6807\u7b7e\uff0c\u5747\u4e3a&lt;none&gt;\u3002\n&lt;none&gt;              &lt;none&gt;              54300df71941        2 months ago        647MB\n\n\u8fd9\u4e2a\u955c\u50cf\u539f\u672c\u662f\u6709\u955c\u50cf\u540d\u548c\u6807\u7b7e\u7684\uff0c\u539f\u6765\u4e3a\uff08\u4f8b\u5982\uff09mongo: 3.2\uff0c\u968f\u7740\u5b98\u65b9\u955c\u50cf\u7ef4\u62a4\uff0c\u53d1\u5e03\u4e86\u65b0\u7248\u672c\u540e\uff0c\u91cd\u65b0docker pull mongo:3.2\u65f6\uff0cmongo:3.2\u8fd9\u4e2a\u955c\u50cf\u540d\u88ab\u8f6c\u79fb\u5230\u4e86\u65b0\u4e0b\u8f7d\u7684\u955c\u50cf\u8eab\u4e0a\uff0c\u800c\u65e7\u7684\u955c\u50cf\u4e0a\u7684\u8fd9\u4e2a\u540d\u79f0\u5219\u88ab\u53d6\u6d88\uff0c\u4ece\u800c\u6210\u4e3a\u4e86&lt;none&gt;\u3002\u9664\u4e86docker pull\u53ef\u80fd\u5bfc\u81f4\u8fd9\u79cd\u60c5\u51b5\uff0cdocker build\u4e5f\u540c\u6837\u53ef\u4ee5\u5bfc\u81f4\u8fd9\u79cd\u73b0\u8c61\u3002\u7531\u4e8e\u65b0\u65e7\u955c\u50cf\u540c\u540d\uff0c\u65e7\u955c\u50cf\u540d\u79f0\u88ab\u53d6\u6d88\uff0c\u4ece\u800c\u51fa\u73b0\u4ed3\u5e93\u540d\u3001\u6807\u7b7e\u5747\u4e3a&lt;none&gt;\u7684\u955c\u50cf\u3002\u8fd9\u7c7b\u65e0\u6807\u7b7e\u955c\u50cf\u4e5f\u88ab\u79f0\u4e3a\u865a\u60ac\u955c\u50cf(dangling image)\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u4e13\u95e8\u663e\u793a\u8fd9\u7c7b\u955c\u50cf:\n[root@localhost ~]# docker images -f dangling=true\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n&lt;none&gt;              &lt;none&gt;              54300df71941        2 months ago        647MB\n&lt;none&gt;              &lt;none&gt;              e7e0ba36be39        2 months ago        647MB\n\n\u4e00\u822c\u6765\u8bf4\uff0c\u865a\u60ac\u955c\u50cf\u5df2\u7ecf\u5931\u53bb\u4e86\u5b58\u5728\u7684\u4ef7\u503c\uff0c\u662f\u53ef\u4ee5\u968f\u610f\u5220\u9664\u7684\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u5220\u9664\u3002\n[root@localhost ~]# docker image prune\nWARNING! This will remove all dangling images.\nAre you sure you want to continue? [y/N] (\u8f93\u5165)y\nDeleted Images:\ndeleted: sha256:e7e0ba36be3927af3f1d7a0b99263d4aa6e6af1d93b9d3455c0a045d4f4a477a\ndeleted: sha256:05ff87569ed6bfdc38621112bea7aafffed7895538490748e85fdf00da19d3b6\n\nTotal reclaimed space: 12B\n\n\u4e2d\u95f4\u5c42\u955c\u50cf\n\u4e3a\u4e86\u52a0\u901f\u955c\u50cf\u6784\u5efa\u3001\u91cd\u590d\u5229\u7528\u8d44\u6e90,Docker\u4f1a\u5229\u7528\u4e2d\u95f4\u5c42\u955c\u50cf\u3002\u6240\u4ee5\u5728\u4f7f\u7528\u4e00\u6bb5\u65f6\u95f4\u540e\uff0c\u53ef\u80fd\u4f1a\u770b\u5230\u4e00\u4e9b\u4f9d\u8d56\u7684\u4e2d\u95f4\u5c42\u955c\u50cf\u3002\u9ed8\u8ba4\u7684docker image ls\u8868\u4e2d\u53ea\u4f1a\u663e\u793a\u9876\u5c42\u955c\u50cf\uff0c\u5982\u679c\u5e0c\u671b\u663e\u793a\u5305\u62ec\u4e2d\u95f4\u5c42\u955c\u50cf\u5728\u5185\u7684\u6240\u6709\u955c\u50cf\u7684\u8bdd\uff0c\u9700\u8981\u52a0-a\u53c2\u6570\u3002\n[root@localhost ~]# docker images -a\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n&lt;none&gt;              &lt;none&gt;              9e5197c9a0e5        2 months ago        647MB\nmydemo1             latest              3b239960848d        2 months ago        647MB\n&lt;none&gt;              &lt;none&gt;              660dfcd0a262        2 months ago        647MB\n&lt;none&gt;              &lt;none&gt;              1b63db1e38f7        2 months ago        647MB\n&lt;none&gt;              &lt;none&gt;              f1343ffd435c        2 months ago        647MB\n&lt;none&gt;              &lt;none&gt;              54300df71941        2 months ago        647MB\ntomcat              latest              2eb5a120304e        3 months ago        647MB\nhello-world         latest              bf756fb1ae65        8 months ago        13.3kB\nrabbitmq            3.7.3-management    2f415b0e9a6e        2 years ago         151MB\n\n\u8fd9\u6837\u4f1a\u770b\u5230\u5f88\u591a\u65e0\u6807\u7b7e\u7684\u955c\u50cf\uff0c\u4e0e\u4e4b\u524d\u7684\u865a\u60ac\u955c\u50cf\u4e0d\u540c\uff0c\u8fd9\u4e9b\u65e0\u6807\u7b7e\u7684\u955c\u50cf\u5f88\u591a\u90fd\u662f\u4e2d\u95f4\u5c42\u955c\u50cf\uff0c\u662f\u5176\u5b83\u955c\u50cf\u6240\u4f9d\u8d56\u7684\u955c\u50cf\u3002\u8fd9\u4e9b\u65e0\u6807\u7b7e\u955c\u50cf\u4e0d\u5e94\u8be5\u5220\u9664\uff0c\u5426\u5219\u4f1a\u5bfc\u81f4\u4e0a\u5c42\u955c\u50cf\u56e0\u4e3a\u4f9d\u8d56\u4e22\u5931\u800c\u51fa\u9519\u3002\u5b9e\u9645\u4e0a\uff0c\u8fd9\u4e9b\u955c\u50cf\u4e5f\u6ca1\u5fc5\u8981\u5220\u9664\uff0c\u56e0\u4e3a\u4e4b\u524d\u8bf4\u8fc7\uff0c\u76f8\u540c\u7684\u5c42\u53ea\u4f1a\u5b58\u4e00\u904d\uff0c\u800c\u8fd9\u4e9b\u955c\u50cf\u662f\u522b\u7684\u955c\u50cf\u7684\u4f9d\u8d56\uff0c\u56e0\u6b64\u5e76\u4e0d\u4f1a\u56e0\u4e3a\u5b83\u4eec\u88ab\u5217\u51fa\u6765\u800c\u591a\u5b58\u4e86\u4e00\u4efd\uff0c\u65e0\u8bba\u5982\u4f55\u4f60\u4e5f\u4f1a\u9700\u8981\u5b83\u4eec\u3002\u53ea\u8981\u5220\u9664\u90a3\u4e9b\u4f9d\u8d56\u5b83\u4eec\u7684\u955c\u50cf\u540e\uff0c\u8fd9\u4e9b\u4f9d\u8d56\u7684\u4e2d\u95f4\u5c42\u955c\u50cf\u4e5f\u4f1a\u88ab\u8fde\u5e26\u5220\u9664\u3002\n\u955c\u50cf\u4f53\u79ef\n\u5982\u679c\u4ed4\u7ec6\u89c2\u5bdf\uff0c\u4f1a\u6ce8\u610f\u5230\uff0c\u8fd9\u91cc\u6807\u8bc6\u7684\u6240\u5360\u7528\u7a7a\u95f4\u548c\u5728Docker Hub\u4e0a\u770b\u5230\u7684\u955c\u50cf\u5927\u5c0f\u4e0d\u540c\u3002\u6bd4\u5982,ubuntu:16.04\u955c\u50cf\u5927\u5c0f\uff0c\u5728\u8fd9\u91cc\u662f127 MB\uff0c\u4f46\u662f\u5728Docker Hub\u663e\u793a\u7684\u5374\u662f50 MB\u3002\u8fd9\u662f\u56e0\u4e3a Docker Hub \u4e2d\u663e\u793a\u7684\u4f53\u79ef\u662f\u538b\u7f29\u540e\u7684\u4f53\u79ef\u3002\u5728\u955c\u50cf\u4e0b\u8f7d\u548c\u4e0a\u4f20\u8fc7\u7a0b\u4e2d\u955c\u50cf\u662f\u4fdd\u6301\u7740\u538b\u7f29\u72b6\u6001\u7684\uff0c\u56e0\u6b64 Docker Hub \u6240\u663e\u793a\u7684\u5927\u5c0f\u662f\u7f51\u7edc\u4f20\u8f93\u4e2d\u66f4\u5173\u5fc3\u7684\u6d41\u91cf\u5927\u5c0f\u3002\u800c docker images\u663e\u793a\u7684\u662f\u955c\u50cf\u4e0b\u8f7d\u5230\u672c\u5730\u540e\uff0c\u5c55\u5f00\u7684\u5927\u5c0f\uff0c\u51c6\u786e\u8bf4\uff0c\u662f\u5c55\u5f00\u540e\u7684\u5404\u5c42\u6240\u5360\u7a7a\u95f4\u7684\u603b\u548c\uff0c\u56e0\u4e3a\u955c\u50cf\u5230\u672c\u5730\u540e\uff0c\u67e5\u770b\u7a7a\u95f4\u7684\u65f6\u5019\uff0c\u66f4\u5173\u5fc3\u7684\u662f\u672c\u5730\u78c1\u76d8\u7a7a\u95f4\u5360\u7528\u7684\u5927\u5c0f\u3002\n\u53e6\u5916\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\u662f\uff0cdocker images\u5217\u8868\u4e2d\u7684\u955c\u50cf\u4f53\u79ef\u603b\u548c\u5e76\u975e\u662f\u6240\u6709\u955c\u50cf\u5b9e\u9645\u786c\u76d8\u6d88\u8017\u3002\u7531\u4e8eDocker\u955c\u50cf\u662f\u591a\u5c42\u5b58\u50a8\u7ed3\u6784\uff0c\u5e76\u4e14\u53ef\u4ee5\u7ee7\u627f\u3001\u590d\u7528\uff0c\u56e0\u6b64\u4e0d\u540c\u955c\u50cf\u53ef\u80fd\u4f1a\u56e0\u4e3a\u4f7f\u7528\u76f8\u540c\u7684\u57fa\u7840\u955c\u50cf\uff0c\u4ece\u800c\u62e5\u6709\u5171\u540c\u7684\u5c42\u3002\u7531\u4e8eDocker\u4f7f\u7528Union FS\uff0c\u76f8\u540c\u7684\u5c42\u53ea\u9700\u8981\u4fdd\u5b58\u4e00\u4efd\u5373\u53ef\uff0c\u56e0\u6b64\u5b9e\u9645\u955c\u50cf\u786c\u76d8\u5360\u7528\u7a7a\u95f4\u5f88\u53ef\u80fd\u8981\u6bd4\u8fd9\u4e2a\u5217\u8868\u955c\u50cf\u5927\u5c0f\u7684\u603b\u548c\u8981\u5c0f\u7684\u591a\u3002\n\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u547d\u4ee4\u6765\u4fbf\u6377\u7684\u67e5\u770b\u955c\u50cf\u3001\u5bb9\u5668\u3001\u6570\u636e\u5377\u6240\u5360\u7528\u7684\u7a7a\u95f4\u3002\n[root@localhost ~]# docker system df\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              6                   5                   798.4MB             647.3MB (81%)\nContainers          6                   0                   4.806MB             4.806MB (100%)\nLocal Volumes       7                   1                   30.6MB              26.49MB (86%)\nBuild Cache         0                   0                   0B                  0B\n\n\u5220\u9664\u955c\u50cf\n\u5982\u679c\u8981\u5220\u9664\u672c\u5730\u7684\u955c\u50cf\uff0c\u53ef\u4ee5\u4f7f\u7528docker image rm\u6216\u8005docker rmi\u547d\u4ee4\uff0c\u5176\u683c\u5f0f\u4e3a:\n[root@localhost ~]# docker image rm [\u9009\u9879]  &lt;\u955c\u50cf1&gt; [&lt;\u955c\u50cf2&gt; &lt;\u955c\u50cf3&gt;...]\n\n[root@localhost ~]# docker rmi [\u9009\u9879]  &lt;\u955c\u50cf1&gt; [&lt;\u955c\u50cf2&gt; &lt;\u955c\u50cf3&gt;...]\n\n\u5176\u4e2d\uff0c&lt;\u955c\u50cf&gt;\u53ef\u4ee5\u662f\u955c\u50cf\u77edID \u3001\u955c\u50cf\u957fID\u3001\u955c\u50cf\u540d\u6216\u8005\u955c\u50cf\u6458\u8981\u3002\nDocker\u64cd\u4f5c\u5bb9\u5668\n\u542f\u52a8\u5bb9\u5668\n\u6240\u9700\u8981\u7684\u547d\u4ee4\u4e3b\u8981\u4e3adocker run\u3002\n\u53c2\u6570\uff1a\n\n-i  \u4ee5\u4ea4\u4e92\u6a21\u5f0f\u8fd0\u884c\u5bb9\u5668\uff0c\u901a\u5e38\u4e0e -t \u540c\u65f6\u4f7f\u7528\uff1b\n-t  \u4e3a\u5bb9\u5668\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u4f2a\u8f93\u5165\u7ec8\u7aef\uff1b\n--name \u4e3a\u5bb9\u5668\u6307\u5b9a\u4e00\u4e2a\u540d\u79f0\uff1b\n-d  \u5df2\u5b88\u62a4\u65b9\u5f0f\u542f\u52a8\u5bb9\u5668\n-p \u6307\u5b9a\u7aef\u53e3\u6620\u5c04\uff0c\u683c\u5f0f\u4e3a\uff1a\u4e3b\u673a(\u5bbf\u4e3b\u673a)\u7aef\u53e3:\u5bb9\u5668\u7aef\u53e3\n-P \u968f\u673a\u7aef\u53e3\u6620\u5c04\uff0c\u5bb9\u5668\u5185\u90e8\u7aef\u53e3\u968f\u673a\u6620\u5c04\u5230\u4e3b\u673a\u7684\u7aef\u53e3\n--volume , -v \u7ed1\u5b9a\u4e00\u4e2a\u6570\u636e\u5377\n--expose=[] \u5f00\u653e\u4e00\u4e2a\u7aef\u53e3\u6216\u4e00\u7ec4\u7aef\u53e3\uff1b\n\n\u5b9e\u4f8b\n\u4f7f\u7528docker\u955c\u50cf nginx:latest \u4ee5\u540e\u53f0\u6a21\u5f0f\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668,\u5e76\u5c06\u5bb9\u5668\u547d\u540d\u4e3amynginx\u3002\n\ndocker run --name mynginx -d nginx:latest\n\u4f7f\u7528\u955c\u50cf nginx:latest \u4ee5\u540e\u53f0\u6a21\u5f0f\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668,\u5e76\u5c06\u5bb9\u5668\u768480\u7aef\u53e3\u6620\u5c04\u5230\u4e3b\u673a\u968f\u673a\u7aef\u53e3\u3002\n\ndocker run -P -d nginx:latest\n\u4f7f\u7528\u955c\u50cf nginx:latest\uff0c\u4ee5\u540e\u53f0\u6a21\u5f0f\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668,\u5c06\u5bb9\u5668\u7684 80 \u7aef\u53e3\u6620\u5c04\u5230\u4e3b\u673a\u7684 80 \u7aef\u53e3,\u4e3b\u673a\u7684\u76ee\u5f55 /data \u6620\u5c04\u5230\u5bb9\u5668\u7684 /data\u3002\n\ndocker run -p 80:80 -v /data:/data -d nginx:latest\n\u7ed1\u5b9a\u5bb9\u5668\u7684 8080 \u7aef\u53e3\uff0c\u5e76\u5c06\u5176\u6620\u5c04\u5230\u672c\u5730\u4e3b\u673a 127.0.0.1 \u7684 80 \u7aef\u53e3\u4e0a\u3002\n\ndocker run -p 127.0.0.1:80:8080/tcp ubuntu bash\n\u4f7f\u7528\u955c\u50cf nginx:latest \u4ee5\u4ea4\u4e92\u6a21\u5f0f\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668,\u5728\u5bb9\u5668\u5185\u6267\u884c /bin/bash \u547d\u4ee4\u3002\n\ndocker run -it nginx:latest /bin/bash\nroot@b8573233d675:/#\n\u5f53\u5229\u7528 docker run \u6765\u521b\u5efa\u5bb9\u5668\u65f6\uff0cDocker\u5728\u540e\u53f0\u8fd0\u884c\u7684\u6807\u51c6\u64cd\u4f5c\u5305\u62ec:\n\n\u68c0\u67e5\u672c\u5730\u662f\u5426\u5b58\u5728\u6307\u5b9a\u7684\u955c\u50cf\uff0c\u4e0d\u5b58\u5728\u5c31\u4ece\u516c\u6709\u4ed3\u5e93\u4e0b\u8f7d\n\n\u5229\u7528\u955c\u50cf\u521b\u5efa\u5e76\u542f\u52a8\u4e00\u4e2a\u5bb9\u5668\n\n\u5206\u914d\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u5e76\u5728\u53ea\u8bfb\u7684\u955c\u50cf\u5c42\u5916\u9762\u6302\u8f7d\u4e00\u5c42\u53ef\u8bfb\u5199\u5c42\n\n\u4ece\u5bbf\u4e3b\u4e3b\u673a\u914d\u7f6e\u7684\u7f51\u6865\u63a5\u53e3\u4e2d\u6865\u63a5\u4e00\u4e2a\u865a\u62df\u63a5\u53e3\u5230\u5bb9\u5668\u4e2d\u53bb\n\n\u4ece\u5730\u5740\u6c60\u914d\u7f6e\u4e00\u4e2aip \u5730\u5740\u7ed9\u5bb9\u5668\n\n\u6267\u884c\u7528\u6237\u6307\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\n\n\u6267\u884c\u5b8c\u6bd5\u540e\u5bb9\u5668\u88ab\u7ec8\u6b62\n\n\nstart/stop/restart \u547d\u4ee4\ndocker start :\u542f\u52a8\u4e00\u4e2a\u6216\u591a\u4e2a\u5df2\u7ecf\u88ab\u505c\u6b62\u7684\u5bb9\u5668\ndocker stop :\u505c\u6b62\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\ndocker restart :\u91cd\u542f\u5bb9\u5668\n\u8bed\u6cd5\n[root@localhost ~]# docker start [\u9009\u9879] &lt;\u955c\u50cf1&gt; [&lt;\u955c\u50cf2&gt; &lt;\u955c\u50cf3&gt;...]\n[root@localhost ~]# docker stop [\u9009\u9879] &lt;\u955c\u50cf&gt; [&lt;\u955c\u50cf2&gt; &lt;\u955c\u50cf3&gt;...]\n[root@localhost ~]# docker restart [\u9009\u9879] &lt;\u955c\u50cf1&gt; [&lt;\u955c\u50cf2&gt; &lt;\u955c\u50cf3&gt;...]\n\n\u5b9e\u4f8b\n\u542f\u52a8\u5df2\u88ab\u505c\u6b62\u7684\u5bb9\u5668 myrunoob\n\ndocker start myrunoob\n\u505c\u6b62\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668 myrunoob\n\ndocker stop myrunoob\n\u91cd\u542f\u5bb9\u5668 myrunoob\n\ndocker restart myrunoob\n\u67e5\u770b\u5bb9\u5668\n\u4f7f\u7528docker ps\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6b63\u5728\u8fd0\u884c\u7684\u5bb9\u5668\uff0c\u683c\u5f0f\u4e3a\uff1a\n[root@localhost ~]# docker ps [\u9009\u9879]\n\n\u9009\u9879\uff1a\n\n-a :\u663e\u793a\u6240\u6709\u7684\u5bb9\u5668\uff0c\u5305\u62ec\u672a\u8fd0\u884c\u7684\u3002\n-f :\u6839\u636e\u6761\u4ef6\u8fc7\u6ee4\u663e\u793a\u7684\u5185\u5bb9\u3002\n-l :\u663e\u793a\u6700\u8fd1\u521b\u5efa\u7684\u5bb9\u5668\u3002\n-n :\u5217\u51fa\u6700\u8fd1\u521b\u5efa\u7684n\u4e2a\u5bb9\u5668\u3002\n--no-trunc :\u4e0d\u622a\u65ad\u8f93\u51fa(\u6253\u5370\u5b8c\u6574\u7684\u5bb9\u5668 ID)\u3002\n-s :\u663e\u793a\u603b\u7684\u6587\u4ef6\u5927\u5c0f\u3002\n\n[root@localhost ~]# docker run -p 8080:8080 -d tomcat\ned8b228b1e55845241c26e8ede042bae4132700d7334ae44438ce0e60282ff3c\n\n[root@localhost ~]# docker ps\nCONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES\ned8b228b1e55        tomcat              &quot;catalina.sh run&quot;   8 seconds ago       Up 3 seconds        0.0.0.0:8080-&gt;8080/tcp   elastic_gauss\n\n\u8f93\u51fa\u8be6\u60c5\u4ecb\u7ecd\uff1a\nCONTAINER ID: \u5bb9\u5668 ID\u3002\nIMAGE: \u4f7f\u7528\u7684\u955c\u50cf\u3002\nCOMMAND: \u542f\u52a8\u5bb9\u5668\u65f6\u8fd0\u884c\u7684\u547d\u4ee4\u3002\nCREATED: \u5bb9\u5668\u7684\u521b\u5efa\u65f6\u95f4\u3002\nSTATUS: \u5bb9\u5668\u72b6\u6001\u3002\n\u72b6\u6001\u67097\u79cd\uff1a\n\ncreated\uff08\u5df2\u521b\u5efa\uff09\nrestarting\uff08\u91cd\u542f\u4e2d\uff09\nrunning\uff08\u8fd0\u884c\u4e2d\uff09\nremoving\uff08\u8fc1\u79fb\u4e2d\uff09\npaused\uff08\u6682\u505c\uff09\nexited\uff08\u505c\u6b62\uff09\ndead\uff08\u6b7b\u4ea1\uff09\n\nPORTS: \u5bb9\u5668\u7684\u7aef\u53e3\u4fe1\u606f\u548c\u4f7f\u7528\u7684\u8fde\u63a5\u7c7b\u578b\uff08tcp\\udp\uff09\u3002\nNAMES: \u81ea\u52a8\u5206\u914d\u7684\u5bb9\u5668\u540d\u79f0\u3002\n\u8fdb\u5165\u5bb9\u5668\ndocker exec \uff1a\u5728\u8fd0\u884c\u7684\u5bb9\u5668\u4e2d\u6267\u884c\u547d\u4ee4\n\u8bed\u6cd5\n[root@localhost ~]# docker exec [OPTIONS] CONTAINER COMMAND [ARG...]\n\nOPTIONS\u8bf4\u660e\uff1a\n\n-d :\u5206\u79bb\u6a21\u5f0f(\u5b88\u62a4\u6001): \u5728\u540e\u53f0\u8fd0\u884c\n-i :\u5373\u4f7f\u6ca1\u6709\u9644\u52a0\u4e5f\u4fdd\u6301STDIN \u6253\u5f00\n-t :\u5206\u914d\u4e00\u4e2a\u4f2a\u7ec8\u7aef\n\n\u5b9e\u4f8b\n\u5728\u5bb9\u5668 tomcat \u4e2d\u5f00\u542f\u4e00\u4e2a\u4ea4\u4e92\u6a21\u5f0f\u7684\u7ec8\u7aef:\n[root@localhost ~]# docker exec -it tomcat  /bin/bash\nroot@99da97385e5f:/usr/local/tomcat#\n\n\u5220\u9664\u5bb9\u5668\n\u53ef\u4ee5\u4f7f\u7528docker container rm\u6765\u5220\u9664\u4e00\u4e2a\u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\u3002\u4f8b\u5982\n[root@localhost ~]# docker container rm 99da97385e5f\n\n\u5982\u679c\u8981\u5220\u9664\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u5bb9\u5668\uff0c\u53ef\u4ee5\u6dfb\u52a0-f\u53c2\u6570\u3002Docker \u4f1a\u53d1\u9001 SIGKILL( \u7ec8\u6b62\u8fdb\u7a0b)\u4fe1\u53f7\u7ed9\u5bb9\u5668\u3002\n\u5220\u9664\u6240\u6709\u5bb9\u5668\n\ndocker rm $(docker ps -a -q)\n\u6e05\u7406\u6240\u6709\u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\n\u7528docker container ls -a\u547d\u4ee4\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u5df2\u7ecf\u521b\u5efa\u7684\u5305\u62ec\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\uff0c\u5982\u679c\u6570\u91cf\u592a\u591a\u8981\u4e00\u4e2a\u4e2a\u5220\u9664\u53ef\u80fd\u4f1a\u5f88\u9ebb\u70e6\uff0c\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u53ef\u4ee5\u6e05\u7406\u6389\u6240\u6709\u5904\u4e8e\u7ec8\u6b62\u72b6\u6001\u7684\u5bb9\u5668\u3002\n[root@localhost ~]# docker container prune\nWARNING! This will remove all stopped containers.\nAre you sure you want to continue? [y/N] (\u8f93\u5165)y\nDeleted Containers:\n82ab3ce8fee74e258d90ab6984ec5dc3e5cdf453e8a3c92a1b18ce054b6a5a56\ned8b228b1e55845241c26e8ede042bae4132700d7334ae44438ce0e60282ff3c\n...\nTotal reclaimed space: 4.818MB\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Docker", "slug": "Docker", "permalink": "/Xuxx_Blogs/tag/Docker/"}]}, {"title": "Docker\u57fa\u7840", "date": "2020-09-16T00:30:00-00.00", "path": "/Xuxx_Blogs/archives/bj30/", "text": "Docker\u6982\u8ff0\nDocker\u662f\u4ec0\u4e48\uff1f\nDocker\u662fDocker.Lnc\u516c\u53f8\u5f00\u6e90\u7684\u4e00\u4e2a\u57fa\u4e8eLXC\u6280\u672f\u4e4b\u4e0a\u642d\u5efa\u7684 Container \u5bb9\u5668\u5f15\u64ce\uff0c\u6e90\u4ee3\u7801\u6258\u7ba1\u5728Github\u4e0a\uff0c\u4f7f\u7528 Google \u516c\u53f8\u7684 Go \u8bed\u8a00\uff0c\u57fa\u4e8eGo\u8bed\u8a00\u5e76\u9075\u4eceApache2.0\u534f\u8bae\u5f00\u6e90\u3002Docker\u5c06\u5e94\u7528\u7a0b\u5e8f\u4e0e\u8be5\u7a0b\u5e8f\u7684\u4f9d\u8d56\uff0c\u6253\u5305\u5728\u4e00\u4e2a\u6587\u4ef6\u91cc\u9762\u3002\u8fd0\u884c\u8fd9\u4e2a\u6587\u4ef6\uff0c\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u865a\u62df\u5bb9\u5668\u3002\u7a0b\u5e8f\u5728\u8fd9\u4e2a\u865a\u62df\u5bb9\u5668\u91cc\u8fd0\u884c\uff0c\u5c31\u597d\u50cf\u5728\u771f\u5b9e\u7684\u7269\u7406\u673a\u4e0a\u8fd0\u884c\u4e00\u6837\u3002\u6709\u4e86Docker\uff0c\u5c31\u4e0d\u7528\u62c5\u5fc3\u73af\u5883\u95ee\u9898\u3002\n\u603b\u4f53\u6765\u8bf4\uff0cDocker\u7684\u63a5\u53e3\u76f8\u5f53\u7b80\u5355\uff0c\u7528\u6237\u53ef\u4ee5\u65b9\u4fbf\u5730\u521b\u5efa\u548c\u4f7f\u7528\u5bb9\u5668\uff0c\u628a\u81ea\u5df1\u7684\u5e94\u7528\u653e\u5165\u5bb9\u5668\u3002\u5bb9\u5668\u8fd8\u53ef\u4ee5\u8fdb\u884c\u7248\u672c\u7ba1\u7406\u3001\u590d\u5236\u3001\u5206\u4eab\u3001\u4fee\u6539\uff0c\u5c31\u50cf\u7ba1\u7406\u666e\u901a\u7684\u4ee3\u7801\u4e00\u6837\u3002\n\u5bb9\u5668\u662f\u5b8c\u5168\u4f7f\u7528\u6c99\u7bb1\u673a\u5236\uff0c\u76f8\u4e92\u4e4b\u95f4\u4e0d\u4f1a\u6709\u4efb\u4f55\u63a5\u53e3\uff08\u7c7b\u4f3c iPhone \u7684 app\uff09,\u66f4\u91cd\u8981\u7684\u662f\u5bb9\u5668\u6027\u80fd\u5f00\u9500\u6781\u4f4e\u3002\n\u7b80\u5355\u6765\u8bf4\uff1aDocker\u662f\u4e00\u4e2a\u865a\u62df\u73af\u5883\u5bb9\u5668\uff0c\u53ef\u4ee5\u5c06\u4f60\u7684\u5f00\u53d1\u73af\u5883\u3001\u4ee3\u7801\u3001\u914d\u7f6e\u6587\u4ef6\u7b49\u4e00\u5e76\u6253\u5305\u5230\u8fd9\u4e2a\u5bb9\u5668\u4e2d\uff0c\u5e76\u53d1\u5e03\u548c\u5e94\u7528\u5230\u4efb\u610f\u5e73\u53f0\u4e2d\u3002\nDocker\u7684\u8bbe\u8ba1\u7406\u5ff5\u548c\u6982\u5ff5\ndocker\u8bbe\u60f3\u662f\u4ea4\u4ed8\u8fd0\u884c\u73af\u5883\u5982\u540c\u6d77\u8fd0\uff0cOS\u5982\u540c\u4e00\u4e2a\u8d27\u8f6e\uff0c\u6bcf\u4e00\u4e2a\u5728OS\u57fa\u7840\u4e0a\u7684\u8f6f\u4ef6\u90fd\u5982\u540c\u4e00\u4e2a\u96c6\u88c5\u7bb1\uff0c\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u5316\u624b\u6bb5\u81ea\u7531\u7ec4\u88c5\u8fd0\u884c\u73af\u5883\uff0c\u540c\u65f6\u96c6\u88c5\u7bb1\u7684\u5185\u5bb9\u53ef\u4ee5\u7531\u7528\u6237\u81ea\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u7531\u4e13\u4e1a\u4eba\u5458\u5236\u9020\u3002\u8fd9\u6837\uff0c\u4ea4\u4ed8\u4e00\u4e2a\u8f6f\u4ef6\uff0c\u5c31\u662f\u4e00\u7cfb\u5217\u6807\u51c6\u5316\u7ec4\u4ef6\u7684\u96c6\u5408\u7684\u4ea4\u4ed8\uff0c\u5982\u540c\u4e50\u9ad8\u79ef\u6728\uff0c\u7528\u6237\u53ea\u9700\u8981\u9009\u62e9\u5408\u9002\u7684\u79ef\u6728\u7ec4\u5408\uff0c\u5e76\u4e14\u5728\u6700\u9876\u7aef\u7f72\u4e0a\u81ea\u5df1\u7684\u540d\u5b57(\u6700\u540e\u4e00\u4e2a\u6807\u51c6\u5316\u7ec4\u4ef6\u662f\u7528\u6237\u7684app)\u3002\u8fd9\u4e5f\u5c31\u662f\u57fa\u4e8e docker \u7684 PaaS \u4ea7\u54c1\u7684\u539f\u578b\u3002\n\u6240\u4ee5Docker\u7684\u4e3b\u8981\u76ee\u6807\u662f\u201cBuild\uff0cShip and Run Any App,Anywhere(\u5728\u4efb\u4f55\u5730\u65b9\u6784\u5efa\u3001\u53d1\u5e03\u548c\u8fd0\u884c\u4efb\u4f55\u5e94\u7528\u7a0b\u5e8f)\u201d\uff0c\u4e5f\u5c31\u662f\u901a\u8fc7\u5bf9\u5e94\u7528\u7ec4\u4ef6\u7684\u5c01\u88c5\u3001\u5206\u53d1\u3001\u90e8\u7f72\u3001\u8fd0\u884c\u7b49\u751f\u547d\u5468\u671f\u7684\u7ba1\u7406\uff0c\u4f7f\u7528\u6237\u7684APP\uff08\u53ef\u4ee5\u662f\u4e00\u4e2aWeb\u5e94\u7528\u6216\u6570\u636e\u5e93\u5e94\u7528\u7b49\u7b49\uff09\u53ca\u5176\u8fd0\u884c\u73af\u5883\u80fd\u591f\u505a\u5230\u201c\u4e00\u6b21\u5c01\u88c5\uff0c\u5230\u5904\u8fd0\u884c\u201d\u3002\nDocker\u662f\u5f00\u53d1\u4eba\u5458\u548c\u7cfb\u7edf\u7ba1\u7406\u5458\u4f7f\u7528\u5bb9\u5668\u5f00\u53d1\u3001\u90e8\u7f72\u548c\u8fd0\u884c\u5e94\u7528\u7a0b\u5e8f\u7684\u5e73\u53f0\u3002\u4f7f\u7528Linux\u5bb9\u5668\u6765\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u79f0\u4e3a\u96c6\u88c5\u7bb1\u5316\u3002\u4f7f\u7528docker\u8f7b\u677e\u90e8\u7f72\u5e94\u7528\u7a0b\u5e8f\u3002\u76ee\u524d\uff0cDocker \u4ece 17.03 \u7248\u672c\u4e4b\u540e\u5206\u4e3a CE\uff08Community Edition: \u793e\u533a\u7248\uff09 \u548c EE\uff08Enterprise Edition: \u4f01\u4e1a\u7248\uff09\uff0c\u5b66\u4e60\u65f6\u7528\u793e\u533a\u7248\u5c31\u53ef\u4ee5\u4e86\u3002\nDocker\u7684\u7ec4\u6210\nDocker\u7ec4\u6210\n\u955c\u50cf(image)\uff1a\nDocker\u955c\u50cf\u5c31\u76f8\u5f53\u4e8e\u662f\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff0c\u901a\u4fd7\u6765\u8bf4\u5c31\u662f\u4e3a\u5bb9\u5668\u7528\u6765\u521b\u5efa\u5bb9\u5668\u7684\n\u5bb9\u5668(Container)\uff1a\nDocker \u5229\u7528\u5bb9\u5668 (Container) \u72ec\u7acb\u8fd0\u884c\u7684\u4e00\u4e2a\u6216\u4e00\u7ec4\u5e94\u7528\uff0c\u5bb9\u5668\u662f\u7528\u955c\u50cf\u521b\u5efa\u7684\u8fd0\u884c\u5b9e\u4f8b\uff0c\u5b83\u53ef\u4ee5\u88ab\u542f\u52a8\u3001\u5f00\u59cb\u3001\u505c\u6b62\u3001\u5220\u9664\uff0c\u6bcf\u4e2a\u5bb9\u5668\u90fd\u662f\u76f8\u4e92\u9694\u79bb\u7684\u3001\u4fdd\u8bc1\u5b89\u5168\u7684\u5e73\u53f0\uff0c\u53ef\u4ee5\u628a\u5bb9\u5668\u770b\u505a\u662f\u4e00\u4e2a\u7b80\u6613\u7248\u7684Linux\u7cfb\u7edf\n\u5bb9\u5668\u5c31\u76f8\u5f53\u4e8eJava\u4e2d\u7684\u5bf9\u8c61\uff0c\u955c\u50cf\u76f8\u5f53\u4e8eJava\u4e2d\u7684\u7c7b\n\u4ed3\u5e93(Repository)\n\u4ed3\u5e93\u662f\u96c6\u4e2d\u5b58\u653e\u955c\u50cf\u6587\u4ef6\u7684\u573a\u6240\n\u4ed3\u5e93\u6ce8\u518c\u670d\u52a1\u5668 (Registry) \u4e0a\u5f80\u5f80\u5b58\u653e\u7740\u591a\u4e2a\u4ed3\u5e93\uff0c\u6bcf\u4e2a\u4ed3\u5e93\u4e2d\u53c8\u5305\u542b\u4e86\u591a\u4e2a\u955c\u50cf\uff0c\u6bcf\u4e2a\u955c\u50cf\u6709\u4e0d\u540c\u7684\u6807\u7b7e \n\u4ed3\u5e93\u5206\u4e3a\u516c\u5f00\u4ed3\u5e93\u548c\u79c1\u6709\u4ed3\u5e93\u4e24\u79cd\u5f62\u5f0f\n\u6700\u5927\u7684\u516c\u5f00\u4ed3\u5e93\u662fDockerHub\u5b58\u653e\u4e86\u6570\u91cf\u5e9e\u5927\u7684\u955c\u50cf\u4f9b\u7528\u6237\u4e0b\u8f7d\uff0c\u56fd\u5185\u7684\u516c\u5f00\u4ed3\u5e93\u5305\u62ec\u963f\u91cc\u4e91\u7b49\nDocker\u5bf9\u6bd4\u4f20\u7edf\u865a\u62df\u5316\u65b9\u5f0f\u7684\u4f18\u52bf\n\u66f4\u9ad8\u6548\u7684\u5229\u7528\u7cfb\u7edf\u8d44\u6e90\n\u7531\u4e8e\u5bb9\u5668\u4e0d\u9700\u8981\u8fdb\u884c\u786c\u4ef6\u865a\u62df\u4ee5\u53ca\u8fd0\u884c\u5b8c\u6574\u64cd\u4f5c\u7cfb\u7edf\u7b49\u989d\u5916\u5f00\u9500\uff0cDocker\u5bf9\u7cfb\u7edf\u8d44\u6e90\u7684\u5229\u7528\u7387\u66f4\u9ad8\u3002\u65e0\u8bba\u662f\u5e94\u7528\u6267\u884c\u901f\u5ea6\u3001\u5185\u5b58\u635f\u8017\u6216\u8005\u6587\u4ef6\u5b58\u50a8\u901f\u5ea6\uff0c\u90fd\u8981\u6bd4\u4f20\u7edf\u865a\u62df\u673a\u6280\u672f\u66f4\u9ad8\u6548\u3002\u56e0\u6b64\uff0c\u76f8\u6bd4\u865a\u62df\u673a\u6280\u672f\uff0c\u4e00\u4e2a\u76f8\u540c\u914d\u7f6e\u7684\n\u4e3b\u673a\uff0c\u5f80\u5f80\u53ef\u4ee5\u8fd0\u884c\u66f4\u591a\u6570\u91cf\u7684\u5e94\u7528\u3002\n\u4e00\u81f4\u7684\u8fd0\u884c\u73af\u5883\n\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\u662f\u73af\u5883\u4e00\u81f4\u6027\u95ee\u9898\u3002\u7531\u4e8e\u5f00\u53d1\u73af\u5883\u3001\u6d4b\u8bd5\u73af\u5883\u3001\u751f\u4ea7\u73af\u5883\u4e0d\u4e00\u81f4\uff0c\u5bfc\u81f4\u6709\u4e9bbug\u5e76\u672a\u5728\u5f00\u53d1\u8fc7\u7a0b\u4e2d\u88ab\u53d1\u73b0\u3002\u800cDocker\u7684\u955c\u50cf\u63d0\u4f9b\u4e86\u9664\u5185\u6838\u5916\u5b8c\u6574\u7684\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u786e\u4fdd\u4e86\u5e94\u7528\u8fd0\u884c\u73af\u5883\u4e00\u81f4\u6027\uff0c\u4ece\u800c\u4e0d\u4f1a\u518d\u51fa\u73b0\u300c\u8fd9\u6bb5\u4ee3\u7801\u5728\u6211\u673a\u5668\u4e0a\u6ca1\u95ee\u9898\u554a\u300d\u8fd9\u7c7b\u95ee\u9898\u3002\n\u66f4\u5feb\u901f\u7684\u542f\u52a8\u65f6\u95f4\n\u4f20\u7edf\u7684\u865a\u62df\u673a\u6280\u672f\u542f\u52a8\u5e94\u7528\u670d\u52a1\u5f80\u5f80\u9700\u8981\u6570\u5206\u949f\uff0c\u800cDocker\u5bb9\u5668\u5e94\u7528\uff0c\u7531\u4e8e\u76f4\u63a5\u8fd0\u884c\u4e8e\u5bbf\u4e3b\u5185\u6838\uff0c\u65e0\u9700\u542f\u52a8\u5b8c\u6574\n\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u56e0\u6b64\u53ef\u4ee5\u505a\u5230\u79cd\u7ea7\u3001\u751a\u81f3\u6beb\u79d2\u7ea7\u7684\u542f\u52a8\u65f6\u95f4\u3002\u5927\u5927\u7684\u8282\u7ea6\u4e86\u5f00\u53d1\u3001\u6d4b\u8bd5\u3001\u90e8\u7f72\u7684\u65f6\u95f4\u3002\n\u6301\u7eed\u4ea4\u4ed8\u548c\u90e8\u7f72\n\u5bf9\u5f00\u53d1\u548c\u8fd0\u7ef4( DevOps \uff09\u4eba\u5458\u6765\u8bf4\uff0c\u6700\u5e0c\u671b\u7684\u5c31\u662f\u4e00\u6b21\u521b\u5efa\u6216\u914d\u7f6e\uff0c\u53ef\u4ee5\u5728\u4efb\u610f\u5730\u65b9\u6b63\u5e38\u8fd0\u884c\u3002\n\u4f7f\u7528Docker\u53ef\u4ee5\u901a\u8fc7\u5b9a\u5236\u5e94\u7528\u955c\u50cf\u6765\u5b9e\u73b0\u6301\u7eed\u96c6\u6210\u3001\u6301\u7eed\u4ea4\u4ed8\u3001\u90e8\u7f72\u3002\u5f00\u53d1\u4eba\u5458\u53ef\u4ee5\u901a\u8fc7 Dockerfi1e\u6765\u8fdb\u884c\u955c\u50cf\u6784\u5efa\uff0c\u5e76\u7ed3\u5408 \u6301\u7eed\u96c6\u6210(Continuous Integration) \u7cfb\u7edf\u8fdb\u884c\u96c6\u6210\u6d4b\u8bd5\uff0c\u800c\u8fd0\u7ef4\u4eba\u5458\u5219\u53ef\u4ee5\u76f4\u63a5\u5728\u751f\u4ea7\u73af\u5883\u4e2d\u5feb\u901f\u90e8\u7f72\u8be5\u955c\u50cf\uff0c\u751a\u81f3\u7ed3\u5408 \u6301\u7eed\u90e8\u7f72(Continuous Delivery/Deployment) \u7cfb\u7edf\u8fdb\u884c\u81ea\u52a8\u90e8\u7f72\u3002\n\u800c\u4e14\u4f7f\u7528 Dockerfile\u4f7f\u955c\u50cf\u6784\u5efa\u900f\u660e\u5316\uff0c\u4e0d\u4ec5\u4ec5\u5f00\u53d1\u56e2\u961f\u53ef\u4ee5\u7406\u89e3\u5e94\u7528\u8fd0\u884c\u73af\u5883\uff0c\u4e5f\u65b9\u4fbf\u8fd0\u7ef4\u56e2\u961f\u7406\u89e3\u5e94\u7528\u8fd0\u884c\u6240\u9700\u6761\u4ef6\uff0c\u5e2e\u52a9\u66f4\u597d\u7684\u751f\u4ea7\u73af\u5883\u4e2d\u90e8\u7f72\u8be5\u955c\u50cf\u3002\n\u66f4\u8f7b\u677e\u7684\u8fc1\u79fb\n\u7531\u4e8eDocker\u786e\u4fdd\u4e86\u6267\u884c\u73af\u5883\u7684\u4e00\u81f4\u6027\uff0c\u4f7f\u5f97\u5e94\u7528\u7684\u8fc1\u79fb\u66f4\u52a0\u5bb9\u6613\u3002Docker\u53ef\u4ee5\u5728\u5f88\u591a\u5e73\u53f0\u4e0a\u8fd0\u884c\uff0c\u65e0\u8bba\u662f\u7269\u7406\u673a\u3001\u865a\u62df\u673a\u3001\u516c\u6709\u4e91\u3001\u79c1\u6709\u4e91\uff0c\u751a\u81f3\u662f\u7b14\u8bb0\u672c\uff0c\u5176\u8fd0\u884c\u7ed3\u679c\u662f\u4e00\u81f4\u7684\u3002\u56e0\u6b64\u7528\u6237\u53ef\u4ee5\u5f88\u8f7b\u6613\u7684\u5c06\u5728\u4e00\u4e2a\u5e73\u53f0\u4e0a\u8fd0\u884c\u7684\u5e94\u7528\uff0c\u8fc1\u79fb\u5230\u53e6\u4e00\u4e2a\u5e73\u53f0\u4e0a\uff0c\u800c\u4e0d\u7528\u62c5\u5fc3\u8fd0\u884c\u73af\u5883\u7684\u53d8\u5316\u5bfc\u81f4\u5e94\u7528\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\u7684\u60c5\u51b5\u3002\n\u66f4\u8f7b\u677e\u7684\u7ef4\u62a4\u548c\u6269\u5c55\nDocker\u4f7f\u7528\u7684\u5206\u5c42\u5b58\u50a8\u4ee5\u53ca\u955c\u50cf\u7684\u6280\u672f\uff0c\u4f7f\u5f97\u5e94\u7528\u91cd\u590d\u90e8\u5206\u7684\u590d\u7528\u66f4\u4e3a\u5bb9\u6613\uff0c\u4e5f\u4f7f\u5f97\u5e94\u7528\u7684\u7ef4\u62a4\u66f4\u65b0\u66f4\u52a0\u7b80\u5355\u57fa\u4e8e\u57fa\u7840\u955c\u50cf\u8fdb\u4e00\u6b65\u6269\u5c55\u955c\u50cf\u4e5f\u53d8\u5f97\u975e\u5e38\u7b80\u5355\u3002\u6b64\u5916\uff0cDocker\u56e2\u961f\u540c\u5404\u4e2a\u5f00\u6e90\u9879\u76ee\u56e2\u961f\u4e00\u8d77\u7ef4\u62a4\u4e86\u4e00\u5927\u6279\u9ad8\u8d28\u91cf\u7684\u5b98\u65b9\u955c\u50cf\uff0c\u65e2\u53ef\u4ee5\u76f4\u63a5\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\uff0c\u53c8\u53ef\u4ee5\u4f5c\u4e3a\u57fa\u7840\u8fdb\u4e00\u6b65\u5b9a\u5236\uff0c\u5927\u5927\u7684\u964d\u4f4e\u4e86\u5e94\u7528\u670d\u52a1\u7684\u955c\u50cf\u5236\u4f5c\u6210\u672c\u3002\n\u5bf9\u6bd4\u4f20\u7edf\u865a\u62df\u673a\u603b\u7ed3\n\n\n\u7279\u6027\nDocker\n\u4f20\u7edf\u865a\u62df\u673a\n\n\n\n\n\u542f\u52a8\n\u79d2\u7ea7\n\u5206\u949f\u7ea7\n\n\n\u786c\u76d8\u4f7f\u7528\n\u4e00\u822c\u4e3aMB\n\u4e00\u822c\u4e3aGB\n\n\n\u6027\u80fd\n\u63a5\u8fd1\u539f\u751f\n\u5f31\u4e8e\u539f\u751f\n\n\n\n\u4e0a\u5343\u4e2a\n\u4e00\u822c\u51e0\u5341\u4e2a\n\n\n\n\u8865\u5145\uff1a\nDocker\u7684\u8fdb\u7a0b\u9694\u79bb\n\nDocker\u5b89\u88c5\n\u8f6c\u81ea\u261e\n\u73af\u5883\uff1a\u865a\u62df\u673a\u88c5\u7684Centos7\uff0clinux 3.10 \u5185\u6838\n\nroot\u8d26\u6237\u767b\u5f55\uff0c\u67e5\u770b\u5185\u6838\u7248\u672c\u5982\u4e0b\n[root@localhost ~]# uname -a\nLinux localhost.localdomain 3.10.0-1062.12.1.el7.x86_64 #1 SMP Tue Feb 4 23:02:59 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\n\n\n\u628a yum \u5305\u66f4\u65b0\u5230\u6700\u65b0(\u975e\u5fc5\u987b\uff0c\u65b9\u4fbf\u5c0f\u767d)\n[root@localhost ~]# yum update\n\u5df2\u52a0\u8f7d\u63d2\u4ef6\uff1afastestmirror\nLoading mirror speeds from cached hostfile\n * base: centos.ustc.edu.cn\n * extras: mirrors.aliyun.com\n * updates: mirrors.cn99.com\nbase                                                                                                  | 3.6 kB  00:00:00     \nextras                                                                                                | 3.4 kB  00:00:00     \nupdates                                                                                               | 3.4 kB  00:00:00     \n\u6b63\u5728\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\n--&gt; \u6b63\u5728\u68c0\u67e5\u4e8b\u52a1\n---&gt; \u8f6f\u4ef6\u5305 NetworkManager.x86_64.1.1.12.0-6.el7 \u5c06\u88ab \u5347\u7ea7\n---&gt; \u8f6f\u4ef6\u5305 NetworkManager.x86_64.1.1.12.0-10.el7_6 \u5c06\u88ab \u66f4\u65b0\n##\uff08\u671f\u95f4\u8981\u9009\u62e9\u786e\u8ba4\uff0c\u8f93\u5165 y \u5373\u53ef\uff09\n\n\n\u88c5\u9700\u8981\u7684\u8f6f\u4ef6\u5305\uff0c yum-util \u63d0\u4f9byum-config-manager\u529f\u80fd\uff0c\u53e6\u5916\u4e24\u4e2a\u662fdevicemapper\u9a71\u52a8\u4f9d\u8d56\u7684\n[root@localhost ~]# yum install -y yum-utils device-mapper-persistent-data lvm2\n\u5df2\u52a0\u8f7d\u63d2\u4ef6\uff1afastestmirror\nLoading mirror speeds from cached hostfile\n * base: centos.ustc.edu.cn\n * extras: mirrors.aliyun.com\n * updates: mirrors.cn99.com\n\u8f6f\u4ef6\u5305 device-mapper-persistent-data-0.7.3-3.el7.x86_64 \u5df2\u5b89\u88c5\u5e76\u4e14\u662f\u6700\u65b0\u7248\u672c\n\u8f6f\u4ef6\u5305 7:lvm2-2.02.180-10.el7_6.8.x86_64 \u5df2\u5b89\u88c5\u5e76\u4e14\u662f\u6700\u65b0\u7248\u672c\n\u6b63\u5728\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\n--&gt; \u6b63\u5728\u68c0\u67e5\u4e8b\u52a1\n---&gt; \u8f6f\u4ef6\u5305 yum-utils.noarch.0.1.1.31-50.el7 \u5c06\u88ab \u5b89\u88c5\n--&gt; \u6b63\u5728\u5904\u7406\u4f9d\u8d56\u5173\u7cfb python-kitchen\uff0c\u5b83\u88ab\u8f6f\u4ef6\u5305 yum-utils-1.1.31-50.el7.noarch \u9700\u8981\n...\n...\n\n\u8865\u5145\uff1aLVM\u662fLogical Volume Manager\uff08\u903b\u8f91\u5377\u7ba1\u7406\u5668\uff09\u7684\u7b80\u5199\uff0c\u53c8\u8bd1\u4e3a\u903b\u8f91\u5377\u5b97\u7ba1\u7406\u5668\u3001\u903b\u8f91\u6247\u533a\u7ba1\u7406\u5668\u3001\u903b\u8f91\u78c1\u76d8\u7ba1\u7406\u5668\u3002\u662fLinux\u6838\u5fc3\u6240\u63d0\u4f9b\u7684\u903b\u8f91\u5377\u7ba1\u7406\uff08Logical Volume Management\uff09\u529f\u80fd\u3002\u5b83\u5728\u786c\u76d8\u7684\u786c\u76d8\u5206\u533a\u4e4b\u4e0a\uff0c\u53c8\u521b\u5efa\u4e86\u4e00\u4e2a\u903b\u8f91\u5c42\u4ee5\u65b9\u4fbf\u7cfb\u7edf\u7ba1\u7406\u786c\u76d8\u5206\u533a\u7cfb\u7edf\u3002\n\n\u8bbe\u7f6e yum \u6e90\uff08\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\uff09\nyum-config-manager --add-repo http://download.docker.com/linux/centos/docker-ce.repo\uff08\u4e2d\u592e\u4ed3\u5e93\uff09\nyum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo\uff08\u963f\u91cc\u4ed3\u5e93\uff09\n[root@localhost ~]# yum-config-manager --add-repo \nhttps://download.docker.com/linux/centos/docker-ce.repo\n\u5df2\u52a0\u8f7d\u63d2\u4ef6\uff1afastestmirror\nadding repo from: https://download.docker.com/linux/centos/docker-ce.repo\ngrabbing file https://download.docker.com/linux/centos/docker-ce.repo to \n/etc/yum.repos.d/docker-ce.repo\nrepo saved to /etc/yum.repos.d/docker-ce.repo\n\n\n\u53ef\u4ee5\u67e5\u770b\u6240\u6709\u4ed3\u5e93\u4e2d\u6240\u6709docker\u7248\u672c\uff0c\u5e76\u9009\u62e9\u7279\u5b9a\u7248\u672c\u5b89\u88c5\n[root@localhost ~]# yum list docker-ce --showduplicates | sort -r\n\u5df2\u52a0\u8f7d\u63d2\u4ef6\uff1afastestmirror\n\u53ef\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305\n * updates: mirrors.cn99.com\nLoading mirror speeds from cached hostfile\n * extras: mirrors.aliyun.com\ndocker-ce.x86_64            3:19.03.2-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.1-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:19.03.0-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.8-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.7-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.6-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.5-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.4-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.3-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.2-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.1-3.el7                     docker-ce-stable\ndocker-ce.x86_64            3:18.09.0-3.el7                     docker-ce-stable\ndocker-ce.x86_64            18.06.3.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.06.2.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.06.1.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.06.0.ce-3.el7                    docker-ce-stable\ndocker-ce.x86_64            18.03.1.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            18.03.0.ce-1.el7.centos             docker-ce-stable\ndocker-ce.x86_64            17.12.1.ce-1.el7.centos             docker-ce-stable\n\n\n\u5b89\u88c5Docker\uff0c\u547d\u4ee4\uff1ayum install docker-ce-\u7248\u672c\u53f7\uff0c\u6211\u9009\u7684\u662fdocker-ce-18.03.1.ce\uff0c\u5982\u4e0b\n[root@localhost ~]# yum install docker-ce-18.03.1.ce\n\u5df2\u52a0\u8f7d\u63d2\u4ef6\uff1afastestmirror\nLoading mirror speeds from cached hostfile\n * base: centos.ustc.edu.cn\n * extras: mirrors.aliyun.com\n * updates: mirrors.cn99.com\n\u6b63\u5728\u89e3\u51b3\u4f9d\u8d56\u5173\u7cfb\n--&gt; \u6b63\u5728\u68c0\u67e5\u4e8b\u52a1\n---&gt; \u8f6f\u4ef6\u5305 docker-ce.x86_64.0.18.03.1.ce-1.el7.centos \u5c06\u88ab \u5b89\u88c5\n##\uff08\u671f\u95f4\u8981\u9009\u62e9\u786e\u8ba4\uff0c\u8f93\u5165 y \u5373\u53ef\uff09\n\n[\u53ef\u9009]\u914d\u7f6e\u963f\u91cc\u4e91\u955c\u50cf\u52a0\u901f\n\nsudo mkdir -p /etc/docker\nsudo tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39;\n{\n  &quot;registry-mirrors&quot;: [&quot;https://*****.mirror.aliyuncs.com&quot;]\n}\nEOF\nsudo systemctl daemon-reload\nsudo systemctl restart docker\n\n\n\u542f\u52a8Docker\uff0c\u547d\u4ee4\uff1asystemctl start docker\uff0c\u7136\u540e\u52a0\u5165\u5f00\u673a\u542f\u52a8\uff0c\u5982\u4e0b\n[root@localhost ~]# systemctl start docker\n[root@localhost ~]# systemctl enable  docker\nCreated symlink from /etc/systemd/system/multi-user.target.wants/docker.service to /usr/lib/systemd/system/docker.service.\n[root@localhost ~]# docker version\nClient:\n Version:      18.03.1-ce\n API version:  1.37\n Go version:   go1.9.5\n Git commit:   9ee9f40\n Built:        Thu Apr 26 07:20:16 2018\n OS/Arch:      linux/amd64\n Experimental: false\n Orchestrator: swarm\n\nServer:\n Engine:\n  Version:      18.03.1-ce\n  API version:  1.37 (minimum version 1.12)\n  Go version:   go1.9.5\n  Git commit:   9ee9f40\n  Built:        Thu Apr 26 07:23:58 2018\n  OS/Arch:      linux/amd64\n  Experimental: false\n\n\n\n\u8865\u5145\uff1a\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cdocker \u547d\u4ee4\u4f1a\u4f7f\u7528 Unix socket \u4e0e Docker \u5f15\u64ce\u901a\u8baf\u3002\u800c\u53ea\u6709 root \u7528\u6237\u548c docker \u7ec4\u7684\u7528\u6237\u624d\u53ef\u4ee5\u8bbf\u95ee Docker \u5f15\u64ce\u7684 Unix socket\u3002\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u4e00\u822c Linux \u7cfb\u7edf\u4e0a\u4e0d\u4f1a\u76f4\u63a5\u4f7f\u7528 root \u7528\u6237\u3002\u56e0\u6b64\uff0c\u66f4\u597d\u5730\u505a\u6cd5\u662f\u5c06\u9700\u8981\u4f7f\u7528 docker \u7684\u7528\u6237\u52a0\u5165 docker \u7528\u6237\u7ec4\u3002\n\u5efa\u7acb docker \u7ec4\uff1a\n[root@localhost /]# sudo groupadd docker\n\n\u5c06\u5f53\u524d\u7528\u6237\u52a0\u5165 docker \u7ec4\uff1a\n[root@localhost /]# sudo usermod -aG docker $USER\n\n\u9000\u51fa\u5f53\u524d\u7ec8\u7aef\u5e76\u91cd\u65b0\u767b\u5f55\uff0c\u8fdb\u884c\u5982\u4e0b\u6d4b\u8bd5\u3002\n\u6d4b\u8bd5 Docker \u662f\u5426\u5b89\u88c5\u6b63\u786e\uff1a\n[root@localhost /]# docker run hello-world\n   Unable to find image &#39;hello-world:latest&#39; locally\n   latest: Pulling from library/hello-world\n   0e03bdcc26d7: Pull complete \n   Digest: sha256:4cf9c47f86df71d48364001ede3a4fcd85ae80ce02ebad74156906caff5378bc\n   Status: Downloaded newer image for hello-world:latest\n\n   Hello from Docker!             --&gt; \u51fa\u73b0\u8fd9\u53e5\u8bdd\u4ee3\u8868Docker\u5b89\u88c5\u6ca1\u6709\u95ee\u9898\n   This message shows that your installation appears to be working correctly.\n\n   To generate this message, Docker took the following steps:\n    1. The Docker client contacted the Docker daemon.\n    2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.\n       (amd64)\n    3. The Docker daemon created a new container from that image which runs the\n       executable that produces the output you are currently reading.\n    4. The Docker daemon streamed that output to the Docker client, which sent it\n       to your terminal.\n\n   To try something more ambitious, you can run an Ubuntu container with:\n    $ docker run -it ubuntu bash\n\n   Share images, automate workflows, and more with a free Docker ID:\n    https://hub.docker.com/\n\n   For more examples and ideas, visit:\n    https://docs.docker.com/get-started/\n\n\u82e5\u80fd\u6b63\u5e38\u8f93\u51fa\u4ee5\u4e0a\u4fe1\u606f\uff0c\u5219\u8bf4\u660e\u5b89\u88c5\u6210\u529f\u3002\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Docker", "slug": "Docker", "permalink": "/Xuxx_Blogs/tag/Docker/"}]}, {"title": "Liunx\u57fa\u7840", "date": "2020-09-15T15:30:00-00.00", "path": "/Xuxx_Blogs/archives/bj29/", "text": "Liunx\u76ee\u5f55\u7ba1\u7406\n\n\n\u76ee\u5f55\n\u8bf4\u660e\n\n\n\n\n/root\n\u6839\u76ee\u5f55\uff0c\u4e07\u7269\u8d77\u6e90\n\n\n/boot\n\u5305\u542b Linux \u5185\u6838\uff0c\u6700\u521d\u7684 RMA \u78c1\u76d8\u6620\u50cf\uff08\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u7531\u9a71\u52a8\u7a0b\u5e8f\u6240\u9700\uff09\uff0c\u548c\u542f\u52a8\u52a0\u8f7d\u7a0b\u5e8f \u6709\u8da3\u7684\u6587\u4ef6\uff1a /boot/grub/grub.conf or menu.lst\uff0c\u88ab\u7528\u6765\u914d\u7f6e\u542f\u52a8\uff1b\u52a0\u8f7d\u7a0b\u5e8f /boot/vmlinuz\uff0c Linux \u5185\u6838\n\n\n/bin\n\u5305\u542b\u7cfb\u7edf\u542f\u52a8\u548c\u8fd0\u884c\u6240\u5fc5\u987b\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\n\n\n/sbin\ns\u5c31\u662fSuper User\u7684\u610f\u601d\uff0c\u8fd9\u91cc\u5b58\u653e\u7684\u662f\u7cfb\u7edf\u7ba1\u7406\u5458\u4f7f\u7528\u7684\u7cfb\u7edf\u7ba1\u7406\u7a0b\u5e8f\n\n\n/usr\n\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u76ee\u5f55\uff0c\u7528\u6237\u7684\u5f88\u591a\u5e94\u7528\u7a0b\u5e8f\u548c\u6587\u4ef6\u90fd\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\uff0c\u7c7b\u4f3c\u4e8e windows \u4e0b\u7684 program files \u76ee\u5f55\u3002usr (unix software resource | unix \u8f6f\u4ef6\u8d44\u6e90)\n\n\n/usr/bin\n\u7cfb\u7edf\u7528\u6237\u4f7f\u7528\u7684\u5e94\u7528\u7a0b\u5e8f\n\n\n/usr/sbin\n\u8d85\u7ea7\u7528\u6237\u4f7f\u7528\u7684\u6bd4\u8f83\u9ad8\u7ea7\u7684\u7ba1\u7406\u7a0b\u5e8f\u548c\u7cfb\u7edf\u5b88\u62a4\u7a0b\u5e8f\n\n\n/usr/src\n\u5185\u6838\u6e90\u4ee3\u7801\u9ed8\u8ba4\u7684\u653e\u7f6e\u76ee\u5f55\n\n\n/proc\n\u7cfb\u7edf\u5185\u5b58\u7684\u6620\u5c04\u76ee\u5f55\uff0c\u63d0\u4f9b\u5185\u6838\u4e0e\u8fdb\u7a0b\u4fe1\u606f\n\n\n/lost+found\n\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u7a7a\u7684\uff0c\u5f53\u7cfb\u7edf\u975e\u6cd5\u5173\u673a\u540e\uff0c\u8fd9\u91cc\u5c31\u5b58\u653e\u4e86\u4e00\u4e9b\u6587\u4ef6\uff0c\u6587\u4ef6\u7cfb\u7edf\u6062\u590d\u65f6\u7684\u6062\u590d\u6587\u4ef6\n\n\n/var\n\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u5b58\u653e\u7740\u5728\u4e0d\u65ad\u6269\u5145\u7740\u7684\u4e1c\u897f\uff0c\u6211\u4eec\u4e60\u60ef\u5c06\u90a3\u4e9b\u7ecf\u5e38\u88ab\u4fee\u6539\u7684\u76ee\u5f55\u653e\u5728\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u3002\u5b58\u653e\u90ae\u4ef6\u3001\u7cfb\u7edf\u65e5\u5fd7\u7b49\u53d8\u5316\u6587\u4ef6\uff0c\u5b58\u653e\u7cfb\u7edf\u6216\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u7684\u6570\u636e\u6587\u4ef6(variable)\n\n\n/tmp\n\u8fd9\u4e2a\u76ee\u5f55\u662f\u7528\u6765\u5b58\u653e\u4e00\u4e9b\u4e34\u65f6\u6587\u4ef6\u7684\n\n\n/etc\n\u5b58\u653e\u7cfb\u7edf\u914d\u7f6e\u6587\u4ef6\u3002\u5b83\u4e5f\u5305\u542b\u4e00\u7cfb\u5217\u7684 shell \u811a\u672c\uff0c\u5728\u7cfb\u7edf\u542f\u52a8\u65f6\uff0c\u8fd9\u4e9b\u811a\u672c\u4f1a\u8fd0\u884c\u6bcf\u4e2a\u7cfb\u7edf\u670d\u52a1\u3002\u8fd9\u4e2a\u76ee\u5f55\u4e2d\u7684\u4efb\u4f55\u6587\u4ef6\u5e94\u8be5\u662f\u53ef\u8bfb\u7684\u6587\u672c\u6587\u4ef6\u3002  /etc/crontab\uff0c\u5b9a\u4e49\u81ea\u52a8\u8fd0\u884c\u7684\u4efb\u52a1\u3002 /etc/fstab\uff0c\u5305\u542b\u5b58\u50a8\u8bbe\u5907\u7684\u5217\u8868\uff0c\u4ee5\u53ca\u4e0e\u4ed6\u4eec\u76f8\u5173\u7684 \u6302\u8f7d\u70b9\u3002 /etc/passwd\uff0c\u5305\u542b\u7528\u6237\u5e10\u53f7\u5217\u8868\u3002\n\n\n/home\n\u7528\u6237\u4e3b\u76ee\u5f55\uff0c\u5728\u901a\u5e38\u7684\u914d\u7f6e\u73af\u5883\u4e0b\uff0c\u7cfb\u7edf\u4f1a\u5728 /home \u4e0b\uff0c\u7ed9\u6bcf\u4e2a\u7528\u6237\u5206\u914d\u4e00\u4e2a\u76ee\u5f55\u3002\u666e\u901a\u53ea\u80fd\u5728\u4ed6\u4eec\u81ea\u5df1\u7684\u76ee\u5f55\u4e0b\u521b\u5efa\u6587\u4ef6\u3002\u8fd9\u4e2a\u9650\u5236\u4fdd\u62a4\u7cfb\u7edf\u514d\u53d7\u9519\u8bef\u7684\u7528\u6237\u6d3b\u52a8\u7834\u574f\u3002\n\n\n/dev\n\u8fd9\u662f\u4e00\u4e2a\u5305\u542b\u8bbe\u5907\u7ed3\u70b9\u7684\u7279\u6b8a\u76ee\u5f55\u3002\u201c\u4e00\u5207\u90fd\u662f\u6587\u4ef6\u201d\uff0c\u4e5f\u4f7f\u7528\u4e8e\u8bbe\u5907\u3002\u5728\u8fd9\u4e2a\u76ee\u5f55\u91cc\uff0c\u5185\u6838\u7ef4\u62a4\u7740\u5b83\u652f\u6301\u7684\u8bbe\u5907\n\n\n/lib\n\u52a8\u6001\u8fde\u63a5\u5171\u4eab\u5e93\uff0c.so \u6587\u4ef6\uff0c\u7c7b\u4f3c\u4e8e Windows \u91cc\u7684 dll \u6587\u4ef6\u3002\n\n\n/mnt\n\u7cfb\u7edf\u63d0\u4f9b\u8be5\u76ee\u5f55\u662f\u4e3a\u4e86\u8ba9\u7528\u6237\u4e34\u65f6\u6302\u8f7d\u522b\u7684\u6587\u4ef6\u7cfb\u7edf\u7684\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5149\u9a71\u6302\u8f7d\u5728 /mnt/ \u4e0a\uff0c\u7136\u540e\u8fdb\u5165\u8be5\u76ee\u5f55\u5c31\u53ef\u4ee5\u67e5\u770b\u5149\u9a71\u91cc\u7684\u5185\u5bb9\u4e86\u3002\n\n\n/media\n\u7cfb\u7edf\u4f1a\u81ea\u52a8\u8bc6\u522b\u4e00\u4e9b\u8bbe\u5907\uff0c\u4f8b\u5982 U \u76d8\u3001\u5149\u9a71\u7b49\u7b49\uff0c\u628a\u8bc6\u522b\u7684\u8bbe\u5907\u6302\u8f7d\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u3002\n\n\n/sys\nsys \u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u70b9\n\n\n/srv\n\u5b58\u653e\u670d\u52a1\u76f8\u5173\u6570\u636e\n\n\n/opt\n\u8fd9\u662f\u7ed9\u4e3b\u673a\u989d\u5916\u5b89\u88c5\u8f6f\u4ef6\u6240\u6446\u653e\u7684\u76ee\u5f55\u3002\u6bd4\u5982\u4f60\u5b89\u88c5\u4e00\u4e2a ORACLE \u6570\u636e\u5e93\u5219\u5c31\u53ef\u4ee5\u653e\u5230\u8fd9\u4e2a\u76ee\u5f55\u4e0b\u3002\u9ed8\u8ba4\u662f\u7a7a\u7684\u3002\n\n\n/srv\n\u8be5\u76ee\u5f55\u5b58\u653e\u4e00\u4e9b\u670d\u52a1\u542f\u52a8\u4e4b\u540e\u9700\u8981\u63d0\u53d6\u7684\u6570\u636e\u3002\n\n\n/selinux\n\u8fd9\u4e2a\u76ee\u5f55\u662f Redhat/CentOS \u6240\u7279\u6709\u7684\u76ee\u5f55\uff0cSelinux \u662f\u4e00\u4e2a\u5b89\u5168\u673a\u5236\uff0c\u7c7b\u4f3c\u4e8ewindows \u7684\u9632\u706b\u5899\uff0c\u4f46\u662f\u8fd9\u5957\u673a\u5236\u6bd4\u8f83\u590d\u6742\uff0c\u8fd9\u4e2a\u76ee\u5f55\u5c31\u662f\u5b58\u653eselinux \u76f8\u5173\u7684\u6587\u4ef6\u7684\u3002\n\n\n\n\u64cd\u4f5c\u6587\u4ef6\u76ee\u5f55\n\n\n\u547d\u4ee4\n\u8bf4\u660e\n\u8bed\u6cd5\n\u5e38\u7528\u9009\u9879\u8bf4\u660e\n\n\n\n\nls\n\u663e\u793a\u6587\u4ef6\u548c\u76ee\u5f55\u5217\u8868\nls [\u9009\u9879] [dest]\n-a\uff1a\u5217\u51fa\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\uff0c\u5305\u542b.\u5f00\u5934\u7684\u9690\u85cf\u6587\u4ef6-l\uff1a\u5217\u51fa\u6587\u4ef6\u7684\u8be6\u7ec6\u4fe1\u606f-h\uff1a\u4ee5\u5bb9\u6613\u8bfb\u53d6\u7684\u65b9\u5f0f\u663e\u793a\u6587\u4ef6\u5927\u5c0f-d\uff1a\u4ec5\u5217\u51fa\u76ee\u5f55\u672c\u8eab\uff0c\u800c\u4e0d\u663e\u793a\u76ee\u5f55\u4e2d\u7684\u6587\u4ef6-t\uff1a\u6309\u7167\u65f6\u95f4\u987a\u5e8f\u6392\u5e8f\uff0c\u65f6\u95f4\u8d8a\u65e9\u8d8a\u65e9\u4e0b\u9762\n\n\nmkdir\n\u521b\u5efa\u76ee\u5f55\nmkdir [-\u9009\u9879] dest\n-p \u521b\u5efa\u591a\u7ea7\u76ee\u5f55\uff08\u8de8\u7ea7\u521b\u5efa\uff09-v \u67e5\u770b\u76ee\u5f55\u521b\u5efa\u7684\u8fc7\u7a0b\uff08\u521b\u5efa\u76ee\u5f55\u53ef\u89c6\u5316\uff09\n\n\nrmdir\n\u4ec5\u5220\u9664\u7a7a\u767d\u76ee\u5f55\nrmdir dest\n\n\n\ncd\n\u5207\u6362\u76ee\u5f55\ncd dest\n\n\n\ntouch\n\u751f\u6210\u4e00\u4e2a\u7a7a\u6587\u4ef6\ntouch dest\n\n\n\necho\n\u751f\u6210\u4e00\u4e2a\u5e26\u5185\u5bb9\u7684\u6587\u4ef6\necho \u5185\u5bb9 &gt; dest\n-e\uff1a\u6fc0\u6d3b\u8f6c\u4e49\u5b57\u7b26&gt;\uff1a\u590d\u5199&gt;&gt;\uff1a\u8ffd\u52a0\n\n\ncat\n\u663e\u793a\u6587\u672c\u6587\u4ef6\u5185\u5bb9\ncat [-\u9009\u9879] dest\n-n\uff1a\u67091\u5f00\u59cb\u5bf9\u6240\u6709\u8f93\u51fa\u7684\u884c\u6570\u7f16\u53f7\uff1b-b\uff1a\u548c-n\u76f8\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u5bf9\u4e8e\u7a7a\u767d\u884c\u4e0d\u7f16\u53f7\uff1b-s\uff1a\u5f53\u9047\u5230\u6709\u8fde\u7eed\u4e24\u884c\u4ee5\u4e0a\u7684\u7a7a\u767d\u884c\uff0c\u5c31\u4ee3\u6362\u4e3a\u4e00\u884c\u7684\u7a7a\u767d\u884c\uff1b\n\n\ncp\n\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\ncp [-\u9009\u9879] source  dest\n-a\uff1a\u6b64\u53c2\u6570\u7684\u6548\u679c\u548c\u540c\u65f6\u6307\u5b9a\"-dpR\"\u53c2\u6570\u76f8\u540c\uff1b -d\uff1a\u5f53\u590d\u5236\u7b26\u53f7\u8fde\u63a5\u65f6\uff0c\u628a\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55\u4e5f\u5efa\u7acb\u4e3a\u7b26\u53f7\u8fde\u63a5\uff0c\u5e76\u6307\u5411\u4e0e\u6e90\u6587\u4ef6\u6216\u76ee\u5f55\u8fde\u63a5\u7684\u539f\u59cb\u6587\u4ef6\u6216\u76ee\u5f55\uff1b-f\uff1a\u5f3a\u884c\u590d\u5236\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u4e0d\u8bba\u76ee\u6807\u6587\u4ef6\u6216\u76ee\u5f55\u662f\u5426\u5df2\u5b58\u5728\uff1b -i\uff1a\u8986\u76d6\u65e2\u6709\u6587\u4ef6\u4e4b\u524d\u5148\u8be2\u95ee\u7528\u6237\uff1b -l\uff1a\u5bf9\u6e90\u6587\u4ef6\u5efa\u7acb\u786c\u8fde\u63a5\uff0c\u800c\u975e\u590d\u5236\u6587\u4ef6\uff1b -p\uff1a\u4fdd\u7559\u6e90\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u5c5e\u6027\uff1b -R/r\uff1a\u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u4e0e\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\uff1b -s\uff1a\u5bf9\u6e90\u6587\u4ef6\u5efa\u7acb\u7b26\u53f7\u8fde\u63a5\uff0c\u800c\u975e\u590d\u5236\u6587\u4ef6\uff1b -u\uff1a\u4f7f\u7528\u8fd9\u9879\u53c2\u6570\u540e\u53ea\u4f1a\u5728\u6e90\u6587\u4ef6\u7684\u66f4\u6539\u65f6\u95f4\u8f83\u76ee\u6807\u6587\u4ef6\u66f4\u65b0\u65f6\u6216\u662f\u540d\u79f0\u76f8\u4e92\u5bf9\u5e94\u7684\u76ee\u6807\u6587\u4ef6\u5e76\u4e0d\u5b58\u5728\u65f6\uff0c\u624d\u590d\u5236\u6587\u4ef6\uff1b -S\uff1a\u5728\u5907\u4efd\u6587\u4ef6\u65f6\uff0c\u7528\u6307\u5b9a\u7684\u540e\u7f00\u201cSUFFIX\u201d\u4ee3\u66ff\u6587\u4ef6\u7684\u9ed8\u8ba4\u540e\u7f00\uff1b -b\uff1a\u8986\u76d6\u5df2\u5b58\u5728\u7684\u6587\u4ef6\u76ee\u6807\u524d\u5c06\u76ee\u6807\u6587\u4ef6\u5907\u4efd\uff1b -v\uff1a\u8be6\u7ec6\u663e\u793a\u547d\u4ee4\u6267\u884c\u7684\u64cd\u4f5c\u3002\n\n\nrm\n\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55\nrm [\u9009\u9879] dest\n-f\uff1a\u5f3a\u5236\u5220\u9664\u6587\u4ef6\u6216\u76ee\u5f55\uff1b -i\uff1a\u5220\u9664\u5df2\u6709\u6587\u4ef6\u6216\u76ee\u5f55\u4e4b\u524d\u5148\u8be2\u95ee\u7528\u6237\uff1b -r\u6216-R\uff1a\u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u4e0e\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\uff1b -v\uff1a\u663e\u793a\u6307\u4ee4\u7684\u8be6\u7ec6\u6267\u884c\u8fc7\u7a0b\u3002\n\n\nmv\n\u79fb\u52a8/\u91cd\u547d\u540d\u6587\u4ef6\u6216\u76ee\u5f55\nmv [\u9009\u9879] dest\n\u5e38\u7528\uff1amv \u6587\u4ef6\u540d\u6216\u76ee\u5f55  \u76ee\u6807\u76ee\u5f55mv a.txt ../    \u5c06a\u6587\u4ef6\u79fb\u52a8\u5230\u4e0a\u7ea7\u76ee\u5f55\uff08\u5c06\u4e00\u4e2a\u6587\u4ef6\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\u6ca1\u6709\u91cd\u547d\u540d\uff09mv a.txt  ../b.txt   \u5c06a\u6587\u4ef6\u79fb\u52a8\u5230\u4e0a\u4e00\u7ea7\u5e76\u6539\u540d\u4e3ab\u6587\u4ef6\uff08\u5c06\u4e00\u4e2a\u6587\u4ef6\u79fb\u52a8\u5230\u53e6\u4e00\u4e2a\u76ee\u5f55\u5e76\u91cd\u547d\u540d\uff09\n\n\nfind\n\u67e5\u627e\u6587\u4ef6\nfind [\u9009\u9879] [\u8d77\u59cb\u76ee\u5f55] dest\n\u5e38\u7528\u9009\u9879\u6709\uff1afind  . -name *.log    \u5728\u5f53\u524d\u76ee\u5f55\u67e5\u627e\u4ee5.log\u7ed3\u5c3e\u7684\u6587\u4ef6find  / -name  log   \u5728\u6839\u76ee\u5f55\u67e5\u627elog\u547d\u540d\u7684\u76ee\u5f55\n\n\ngrep\n\u5728\u6307\u5b9a\u6587\u4ef6\u4e2d\u67e5\u627e\u5b57\u7b26\uff08\u4e32\uff09\u5e76\u6253\u5370\u8be5\u884c\n\n\u7528\u6cd5\uff1agrep  \u5b57\u7b26\u4e32 \u6587\u4ef6\u540dgrep 123 fileName  \u5728file\u6587\u4ef6\u4e2d\u5bfb\u627e\u5b57\u7b26\u4e32123\n\n\ntree\n\u7528\u4e8e\u4ee5\u6811\u72b6\u56fe\u5217\u51fa\u76ee\u5f55\u5185\u5bb9\n\n\n\n\npwd\n\u663e\u793a\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\n\n\n\n\nln\n\u4e3a\u6587\u4ef6\u521b\u4ef6\u8fde\u63a5\n\n\n\n\nmore\n\u5206\u5c4f/\u9875\u663e\u793a\u6587\u672c\u6587\u4ef6\u5185\u5bb9\n\n\u5207\u6362\u81f3\u4e0b\u4e00\u5c4f\uff1a\u7a7a\u683c\u952e \u5207\u6362\u81f3\u4e0a\u4e00\u5c4f\uff1aCtrl+B\u67e5\u770b\u6587\u6863\u7684\u603b\u884c\u6570\uff0c\u4f7f\u7528\u547d\u4ee4\uff1awc -l\n\n\nhead\n\u663e\u793a\u6587\u4ef6\u5f00\u5934\u7684\u5185\u5bb9\n\n\n\n\ntail\n\u663e\u793a\u6587\u4ef6\u7ed3\u5c3e\u7684\u5185\u5bb9\n\n\n\n\n\u538b\u7f29/\u89e3\u538b\u7f29\ntar\ntar\u547d\u4ee4\u53ef\u4ee5\u4e3alinux\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u521b\u5efa\u6863\u6848\u3002\u5229\u7528tar\uff0c\u53ef\u4ee5\u4e3a\u67d0\u4e00\u7279\u5b9a\u6587\u4ef6\u521b\u5efa\u6863\u6848\uff08\u5907\u4efd\u6587\u4ef6\uff09\uff0c\u4e5f\u53ef\u4ee5\u5728\u6863\u6848\u4e2d\u6539\u53d8\u6587\u4ef6\uff0c\u6216\u8005\u5411\u6863\u6848\u4e2d\u52a0\u5165\u65b0\u7684\u6587\u4ef6\u3002tar\u6700\u521d\u88ab\u7528\u6765\u5728\u78c1\u5e26\u4e0a\u521b\u5efa\u6863\u6848\uff0c\u73b0\u5728\uff0c\u7528\u6237\u53ef\u4ee5\u5728\u4efb\u4f55\u8bbe\u5907\u4e0a\u521b\u5efa\u6863\u6848\u3002\u5229\u7528tar\u547d\u4ee4\uff0c\u53ef\u4ee5\u628a\u4e00\u5927\u5806\u7684\u6587\u4ef6\u548c\u76ee\u5f55\u5168\u90e8\u6253\u5305\u6210\u4e00\u4e2a\u6587\u4ef6\uff0c\u8fd9\u5bf9\u4e8e\u5907\u4efd\u6587\u4ef6\u6216\u5c06\u51e0\u4e2a\u6587\u4ef6\u7ec4\u5408\u6210\u4e3a\u4e00\u4e2a\u6587\u4ef6\u4ee5\u4fbf\u4e8e\u7f51\u7edc\u4f20\u8f93\u662f\u975e\u5e38\u6709\u7528\u7684\u3002\n\u9996\u5148\u8981\u5f04\u6e05\u4e24\u4e2a\u6982\u5ff5\uff1a\u6253\u5305\u548c\u538b\u7f29\u3002\u6253\u5305\u662f\u6307\u5c06\u4e00\u5927\u5806\u6587\u4ef6\u6216\u76ee\u5f55\u53d8\u6210\u4e00\u4e2a\u603b\u7684\u6587\u4ef6\uff1b\u538b\u7f29\u5219\u662f\u5c06\u4e00\u4e2a\u5927\u7684\u6587\u4ef6\u901a\u8fc7\u4e00\u4e9b\u538b\u7f29\u7b97\u6cd5\u53d8\u6210\u4e00\u4e2a\u5c0f\u6587\u4ef6\u3002\n\u4e3a\u4ec0\u4e48\u8981\u533a\u5206\u8fd9\u4e24\u4e2a\u6982\u5ff5\u5462\uff1f\u8fd9\u6e90\u4e8eLinux\u4e2d\u5f88\u591a\u538b\u7f29\u7a0b\u5e8f\u53ea\u80fd\u9488\u5bf9\u4e00\u4e2a\u6587\u4ef6\u8fdb\u884c\u538b\u7f29\uff0c\u8fd9\u6837\u5f53\u4f60\u60f3\u8981\u538b\u7f29\u4e00\u5927\u5806\u6587\u4ef6\u65f6\uff0c\u4f60\u5f97\u5148\u5c06\u8fd9\u4e00\u5927\u5806\u6587\u4ef6\u5148\u6253\u6210\u4e00\u4e2a\u5305\uff08tar\u547d\u4ee4\uff09\uff0c\u7136\u540e\u518d\u7528\u538b\u7f29\u7a0b\u5e8f\u8fdb\u884c\u538b\u7f29\uff08gzip bzip2)\u547d\u4ee4\uff09\u3002\n\u8bed\u6cd5\uff1atar  [\u9009\u9879]   \u6253\u5305\u540e\u6587\u6863\u7684\u540d\u79f0   \u6b32\u6253\u5305\u7684\u76ee\u5f55\n\u9009\u9879\uff1a\n\n-c\uff1a\u6253\u5305\n-x\uff1a\u89e3\u5305\n-z\uff1a\u901a\u8fc7gzip\u6307\u4ee4\u5904\u7406\u5907\u4efd\u6587\u4ef6\n-j\uff1a\u652f\u6301bzip2\u89e3\u538b\u6587\u4ef6\n-v\uff1a\u663e\u793a\u64cd\u4f5c\u8fc7\u7a0b\n-f\uff1a\u6307\u5b9a\u5907\u4efd\u6587\u4ef6\n-t\uff1a\u5217\u51fa\u5907\u4efd\u6587\u4ef6\u7684\u5185\u5bb9\n\n\u5b9e\u4f8b\uff1a\n\u5c06\u6587\u4ef6\u5168\u90e8\u6253\u5305\u6210tar\u5305\uff1a\ntar -cvf log.tar log2012.log    \u4ec5\u6253\u5305\uff0c\u4e0d\u538b\u7f29\ntar -czvf log.tar.gz log2012.log   \u6253\u5305\u540e\uff0c\u4ee5 gzip \u538b\u7f29 \ntar -cjvf log.tar.bz2 log2012.log  \u6253\u5305\u540e\uff0c\u4ee5 bzip2 \u538b\u7f29\n\n\u5728\u9009\u9879f\u4e4b\u540e\u7684\u6587\u4ef6\u6863\u540d\u662f\u81ea\u5df1\u53d6\u7684\uff0c\u4e60\u60ef\u4e0a\u90fd\u7528 .tar \u6765\u4f5c\u4e3a\u8fa8\u8bc6\u3002 \u5982\u679c\u52a0z\u9009\u9879\uff0c\u5219\u4ee5.tar.gz\u6216.tgz\u6765\u4ee3\u8868gzip\u538b\u7f29\u8fc7\u7684tar\u5305\uff1b\u5982\u679c\u52a0j\u9009\u9879\uff0c\u5219\u4ee5.tar.bz2\u6765\u4f5c\u4e3atar\u5305\u540d\u3002\n\u5c06tar\u5305\u89e3\u538b\u7f29\uff1a\ntar -xzvf ./log.tar.gz\n\ngzip\ngzip\u547d\u4ee4\u7528\u6765\u538b\u7f29\u6587\u4ef6\u3002gzip\u662f\u4e2a\u4f7f\u7528\u5e7f\u6cdb\u7684\u538b\u7f29\u7a0b\u5e8f\uff0c\u6587\u4ef6\u7ecf\u5b83\u538b\u7f29\u8fc7\u540e\uff0c\u5176\u540d\u79f0\u540e\u9762\u4f1a\u591a\u5904\u201c.gz\u201d\u6269\u5c55\u540d\u3002\ngzip\u662f\u5728Linux\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u4f7f\u7528\u7684\u4e00\u4e2a\u5bf9\u6587\u4ef6\u8fdb\u884c\u538b\u7f29\u548c\u89e3\u538b\u7f29\u7684\u547d\u4ee4\uff0c\u65e2\u65b9\u4fbf\u53c8\u597d\u7528\u3002gzip\u4e0d\u4ec5\u53ef\u4ee5\u7528\u6765\u538b\u7f29\u5927\u7684\u3001\u8f83\u5c11\u4f7f\u7528\u7684\u6587\u4ef6\u4ee5\u8282\u7701\u78c1\u76d8\u7a7a\u95f4\uff0c\u8fd8\u53ef\u4ee5\u548ctar\u547d\u4ee4\u4e00\u8d77\u6784\u6210Linux\u64cd\u4f5c\u7cfb\u7edf\u4e2d\u6bd4\u8f83\u6d41\u884c\u7684\u538b\u7f29\u6587\u4ef6\u683c\u5f0f\u3002\u636e\u7edf\u8ba1\uff0cgzip\u547d\u4ee4\u5bf9\u6587\u672c\u6587\u4ef6\u670960%\uff5e70%\u7684\u538b\u7f29\u7387\u3002\u51cf\u5c11\u6587\u4ef6\u5927\u5c0f\u6709\u4e24\u4e2a\u660e\u663e\u7684\u597d\u5904\uff0c\u4e00\u662f\u53ef\u4ee5\u51cf\u5c11\u5b58\u50a8\u7a7a\u95f4\uff0c\u4e8c\u662f\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u6587\u4ef6\u65f6\uff0c\u53ef\u4ee5\u51cf\u5c11\u4f20\u8f93\u7684\u65f6\u95f4\u3002\n\u8bed\u6cd5\uff1agzip  [\u9009\u9879]     [\u6b32\u6253\u5305\u7684\u76ee\u5f55]\n\u9009\u9879\uff1a\n\n-d\u6216--decompress\u6216----uncompress \u3000\u89e3\u5f00\u538b\u7f29\u6587\u4ef6\u3002\n-f\u6216--force \u3000\u5f3a\u884c\u538b\u7f29\u6587\u4ef6\u3002\u4e0d\u7406\u4f1a\u6587\u4ef6\u540d\u79f0\u6216\u786c\u8fde\u63a5\u662f\u5426\u5b58\u5728\u4ee5\u53ca\u8be5\u6587\u4ef6\u662f\u5426\u4e3a\u7b26\u53f7\u8fde\u63a5\u3002\n-h\u6216--help \u3000\u5728\u7ebf\u5e2e\u52a9\u3002\n-l\u6216--list \u3000\u5217\u51fa\u538b\u7f29\u6587\u4ef6\u7684\u76f8\u5173\u4fe1\u606f\u3002\n-q\u6216--quiet \u3000\u4e0d\u663e\u793a\u8b66\u544a\u4fe1\u606f\u3002\n-r\u6216--recursive \u3000\u9012\u5f52\u5904\u7406\uff0c\u5c06\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u53ca\u5b50\u76ee\u5f55\u4e00\u5e76\u5904\u7406\u3002\n-t\u6216--test \u3000\u6d4b\u8bd5\u538b\u7f29\u6587\u4ef6\u662f\u5426\u6b63\u786e\u65e0\u8bef\u3002\n-v\u6216--verbose \u3000\u663e\u793a\u6307\u4ee4\u6267\u884c\u8fc7\u7a0b\u3002\n\n\u5b9e\u4f8b\uff1a\n\u628a\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6bcf\u4e2a\u6587\u4ef6\u538b\u7f29\u6210.gz\u6587\u4ef6\ngzip *\n\n\u628a\u4e0a\u4f8b\u4e2d\u6bcf\u4e2a\u538b\u7f29\u7684\u6587\u4ef6\u89e3\u538b\uff0c\u5e76\u5217\u51fa\u8be6\u7ec6\u7684\u4fe1\u606f\ngzip -dv *\n\n\u8be6\u7ec6\u663e\u793a\u4f8b1\u4e2d\u6bcf\u4e2a\u538b\u7f29\u7684\u6587\u4ef6\u7684\u4fe1\u606f\uff0c\u5e76\u4e0d\u89e3\u538b\n\ngzip -l *\n\u538b\u7f29\u4e00\u4e2atar\u5907\u4efd\u6587\u4ef6\uff0c\u6b64\u65f6\u538b\u7f29\u6587\u4ef6\u7684\u6269\u5c55\u540d\u4e3a .tar.gz\ngzip -r log.tar\n\n\u9012\u5f52\u7684\u538b\u7f29test\u76ee\u5f55\ngzip -rv test\n\n\u8fd9\u6837\uff0c\u6240\u6709test\u4e0b\u9762\u7684\u6587\u4ef6\u90fd\u53d8\u6210\u4e86 .gz\uff0c\u76ee\u5f55\u4f9d\u7136\u5b58\u5728\uff0c\u53ea\u662f\u76ee\u5f55\u91cc\u9762\u7684\u6587\u4ef6\u76f8\u5e94\u53d8\u6210\u4e86 .gz\uff0c\u8fd9\u5c31\u662f\u538b\u7f29\uff0c\u548c\u6253\u5305\u4e0d\u540c\u3002\u56e0\u4e3a\u662f\u5bf9\u76ee\u5f55\u64cd\u4f5c\uff0c\u6240\u4ee5\u9700\u8981\u52a0\u4e0a -r \u9009\u9879\uff0c\u8fd9\u6837\u4e5f\u53ef\u4ee5\u5bf9\u5b50\u76ee\u5f55\u8fdb\u884c\u9012\u5f52\u4e86\u3002\n\u9012\u5f52\u5730\u89e3\u538b\u76ee\u5f55\ngzip -dr test\n\nbzip2\nbzip2\u547d\u4ee4\u7528\u4e8e\u521b\u5efa\u548c\u7ba1\u7406\uff08\u5305\u62ec\u89e3\u538b\u7f29\uff09\u201c.bz2\u201d\u683c\u5f0f\u7684\u538b\u7f29\u5305\u3002\nLiunx\u7cfb\u7edf\u7ba1\u7406\n\u7cfb\u7edf\u7ba1\u7406\u547d\u4ee4\n\n\n\u547d\u4ee4\n\u8bf4\u660e\n\n\n\n\nstat\n\u663e\u793a\u6307\u5b9a\u6587\u4ef6\u7684\u76f8\u5173\u4fe1\u606f,\u6bd4Is\u547d\u4ee4\u663e\u793a\u5185\u5bb9\u66f4\u591a\n\n\nwho\n\u663e\u793a\u5728\u7ebf\u767b\u5f55\u7528\u6237\n\n\nhostname\n\u663e\u793a\u4e3b\u673a\u540d\u79f0\n\n\nuname\n\u663e\u793a\u7cfb\u7edf\u4fe1\u606f\n\n\ntop\n\u663e\u793a\u5f53\u524d\u7cfb\u7edf\u4e2d\u8017\u8d39\u8d44\u6e90\u6700\u591a\u7684\u8fdb\u7a0b\n\n\nps\n\u663e\u793a\u77ac\u95f4\u7684\u8fdb\u7a0b\u72b6\u6001\uff08-A|e\uff1a\u663e\u793a\u6240\u6709\u7a0b\u5e8f\u3002\uff09\n\n\ndu\n\u663e\u793a\u6307\u5b9a\u7684\u6587\u4ef6(\u76ee\u5f55)\u5f53\u524d\u5df2\u4f7f\u7528\u7684\u78c1\u76d8\u7a7a\u95f4\u7684\u603b\u91cf\n\n\ndf\n\u663e\u793a\u6587\u4ef6\u7cfb\u7edf\u78c1\u76d8\u7a7a\u95f4\u7684\u4f7f\u7528\u60c5\u51b5\n\n\nfree\n\u663e\u793a\u5f53\u524d\u5185\u5b58\u548c\u4ea4\u6362\u7a7a\u95f4\u7684\u4f7f\u7528\u60c5\u51b5\n\n\nifconfig\n\u663e\u793a\u7f51\u7edc\u63a5\u53e3\u4fe1\u606f\n\n\nping\n\u6d4b\u8bd5\u7f51\u7edc\u7684\u8fde\u901a\u6027(\u5fc3\u8df3\u68c0\u6d4b)\n\n\nnetstat\n\u663e\u793a\u7f51\u7edc\u72b6\u6001\u4fe1\u606f(\u53ef\u4ee5\u67e5\u770b\u7aef\u53e3)\n\n\nclear\n\u6e05\u5c4f\n\n\nkill\n\u6740\u6b7b\u4e00\u4e2a\u8fdb\u7a0b(-9\uff1a\u5f3a\u5236\u7ec8\u6b62)\n\n\n\n\u5f00\u5173\u673a\u547d\u4ee4\nshutdown \u547d\u4ee4\n\nshutdown \u547d\u4ee4\u53ef\u4ee5\u7528\u6765\u8fdb\u884c\u5173\u673a\u7a0b\u5e8f\uff0c\u5e76\u4e14\u5728\u5173\u673a\u4ee5\u524d\u4f20\u9001\u8baf\u606f\u7ed9\u6240\u6709\u4f7f\u7528\u8005\u6b63\u5728\u6267\u884c\u7684\u7a0b\u5e8f\nshutdown \u4e5f\u53ef\u4ee5\u7528\u6765\u91cd\u5f00\u673a\u3002\n\n\n\n\u547d\u4ee4\n\u8bed\u6cd5\n\u53c2\u6570\n\u53c2\u6570\u8bf4\u660e\n\n\n\n\nshutdown\nshutdown [-t seconds] [-rkhncfF] time [message]\n\n\n\n\n\n\n-t seconds\n\u8bbe\u5b9a\u5728\u51e0\u79d2\u949f\u4e4b\u540e\u8fdb\u884c\u5173\u673a\u7a0b\u5e8f\n\n\n\n\n-k\n\u5e76\u4e0d\u4f1a\u771f\u7684\u5173\u673a\uff0c\u53ea\u662f\u5c06\u8b66\u544a\u8baf\u606f\u4f20\u9001\u7ed9\u6240\u6709\u53ea\u7528\u8005\n\n\n\n\n-r\n\u5173\u673a\u540e\u91cd\u65b0\u5f00\u673a\uff08\u91cd\u542f\uff09\n\n\n\n\n-h\n\u5173\u673a\u540e\u505c\u673a\n\n\n\n\n-n\n\u4e0d\u91c7\u7528\u6b63\u5e38\u7a0b\u5e8f\u6765\u5173\u673a\uff0c\u7528\u5f3a\u8feb\u7684\u65b9\u5f0f\u6740\u6389\u6240\u6709\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f\u540e\u81ea\u884c\u5173\u673a\n\n\n\n\n-c\n\u53d6\u6d88\u76ee\u524d\u5df2\u7ecf\u8fdb\u884c\u4e2d\u7684\u5173\u673a\u52a8\u4f5c\n\n\n\n\n-f\n\u5173\u673a\u65f6\uff0c\u4e0d\u505a fcsk \u52a8\u4f5c(\u68c0\u67e5 Linux \u6863\u7cfb\u7edf)\n\n\n\n\n-F\n\u5173\u673a\u65f6\uff0c\u5f3a\u8feb\u8fdb\u884c fsck \u52a8\u4f5c\n\n\n\n\ntime\n\u8bbe\u5b9a\u5173\u673a\u7684\u65f6\u95f4\n\n\n\n\nmessage\n\u4f20\u9001\u7ed9\u6240\u6709\u4f7f\u7528\u8005\u7684\u8b66\u544a\u8baf\u606f\n\n\n\n\u91cd\u542f\n\nreboot\nsudo\uff1a\u63d0\u6743\uff0c\u4ee5\u5176\u4ed6\u8eab\u4efd\u6765\u6267\u884c\u547d\u4ee4\uff0c\u9884\u8bbe\u7684\u8eab\u4efd\u4e3a root\nreboot\u63d0\u793a\u6ca1\u6709\u6743\u9650\u65f6\u4f7f\u7528\uff1asudo reboot\n\nshutdown -r now\n\u540c\u4e0a\uff0c\u52a0 sudo\n\n\n\u5173\u673a\n\nshutdown -h now\n\nVim\u7f16\u8f91\u5668\n\u6982\u8ff0\nVim\u662f\u4ecevi\u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668\u3002\u4ee3\u7801\u8865\u5b8c\u3001\u7f16\u8bd1\u53ca\u9519\u8bef\u8df3\u8f6c\u7b49\u65b9\u4fbf\u7f16\u7a0b\u7684\u529f\u80fd\u7279\u522b\u4e30\u5bcc\uff0c\u5728\u7a0b\u5e8f\u5458\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528\u3002\n\u7b80\u5355\u7684\u6765\u8bf4\uff0cvi\u662f\u8001\u5f0f\u7684\u5b57\u5904\u7406\u5668\uff0c\u4e0d\u8fc7\u529f\u80fd\u5df2\u7ecf\u5f88\u9f50\u5168\u4e86\uff0c\u4f46\u662f\u8fd8\u662f\u6709\u53ef\u4ee5\u8fdb\u6b65\u7684\u5730\u65b9\u3002Vim\u5219\u53ef\u4ee5\u8bf4\u662f\u7a0b\u5e8f\u5f00\u53d1\u8005\u7684\u4e00\u9879\u5f88\u597d\u7528\u7684\u5de5\u5177\u3002\n\u8fd0\u884c\u6a21\u5f0f\n\n\u7f16\u8f91\u6a21\u5f0f\uff1a\u7b49\u5f85\u7f16\u8f91\u547d\u4ee4\u8f93\u5165\n\n\u63d2\u5165\u6a21\u5f0f\uff1a\u7f16\u8f91\u6a21\u5f0f\u4e0b\uff0c\u8f93\u5165i\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f\uff0c\u63d2\u5165\u6587\u672c\u4fe1\u606f\n\n\u547d\u4ee4\u6a21\u5f0f\uff1a\u5728\u7f16\u8f91\u6a21\u5f0f\u4e0b\uff0c\u8f93\u5165:\u8fdb\u884c\u547d\u4ee4\u6a21\u5f0f\n\n\n\u547d\u4ee4\u6a21\u5f0f\n\n:q\uff1a\u9000\u51favim\n:wq\uff1a\u4fdd\u5b58\u540e\u9000\u51fa\n:q!\uff1a\u5f3a\u5236\u9000\u51fa\n:wq!\uff1a\u5f3a\u5236\u4fdd\u5b58\u540e\u9000\u51fa\n:w file\uff1a\u5c06\u5f53\u524d\u5185\u5bb9\u4fdd\u5b58\u6210\u67d0\u4e2a\u6587\u4ef6\n/\uff1a\u67e5\u627e\u5b57\u7b26\u4e32\n:set number\uff1a\u663e\u793a\u884c\u53f7\n:set nonumber\uff1a\u4e0d\u663e\u793a\u884c\u53f7\n:set paste\uff1a\u5f00\u542f\u539f\u6837\u7c98\u8d34\n\nLiunx\u6587\u4ef6\u548c\u76ee\u5f55\u8bbf\u95ee\u6743\u9650\u8bbe\u7f6e\nLinux\u7528 \u6237\u5206\u4e3a\uff1a\u62e5\u6709\u8005(owner)\u3001\u7ec4\u7fa4(group)\u3001\u5176\u4ed6(other)\uff0cLinux\u7cfb\u7edf\u4e2d\uff0c\u9884\u8bbe\u7684\u60c5\u6cc1\u4e0b\uff0c\u7cfb\u7edf\u4e2d\u6240\u6709\u7684\u5e10\u53f7\u4e0e\u4e00\u822c\u8eab\u4efd\u4f7f\u7528\u8005\uff0c\u4ee5\u53caroot\u7684\u76f8\u5173\u4fe1\u606f\uff0c \u90fd\u662f\u8bb0\u5f55\u5728/etc/passwd\u6587\u4ef6\u4e2d\u3002\u6bcf\u4e2a\u7528\u6237\u7684\u5bc6\u7801\u5219\u662f\u8bb0\u5f55\u5728/etc/shadow\u6587\u4ef6\u4e0b\u3002 \u6b64\u5916\uff0c\u6240\u6709\u7684\u7ec4\u7fa4\u540d\u79f0\u8bb0\u5f55\u5728/etc/group\u5167\u3002\nLinux\u6863\u6848\u7684\u57fa\u672c\u6743\u9650\u5c31\u6709\u4e5d\u4e2a\uff0c\u5206\u522b\u662fowner/group/others\u4e09\u79cd\u8eab\u4efd\u5404\u6709\u81ea\u5df1\u7684read/write/execute\u6743\u9650\u3002\n\u5982\u4e0b\u56fe\uff1a\n\n\u6743\u9650\u6570\u5b57\u5bf9\u5e94\u6743\u9650\u7ec4\u8bf4\u660e\uff1a\n\u603b\u5171\u5206\u4e3a4\u90e8\u5206\n\n\n\u6587\u4ef6\u6216\u6587\u4ef6\u5939\nowner\u6743\u9650\ngroup\u6743\u9650\nothers\u6743\u9650\n\n\n\n\n\u6587\u4ef6\u662f - \uff0c\u6587\u4ef6\u5939\u662f d\nr/w/x\u76f8\u52a0\nr/w/x\u76f8\u52a0\nr/w/x\u76f8\u52a0\n\n\n\nr(read)  \u53ef\u8bfb --  4\uff1bw(write) \u53ef\u5199   --   2\uff1bx(execute) \u53ef\u6267\u884c   --  1\uff1b-  \u8868\u793a\u76f8\u5e94\u7684\u6743\u9650\u8fd8\u6ca1\u6709\u88ab\u6388\u4e88\nchown\u547d\u4ee4\nchown\u662f change owner (\u6539\u53d8\u6240\u6709\u8005) \u7684\u610f\u601d\uff0c\u4e3b\u8981\u4f5c\u7528\u5c31\u662f\u6539\u53d8\u67d0\u4e2a\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6240\u6709\u8005\u548c\u6240\u5c5e\u7684\u7ec4\u3002\n\nchown  [-R]  \u7528\u6237\u540d\u79f0   \u6587\u4ef6\u6216\u76ee\u5f55\n\nchown  [-R]    \u7528\u6237\u540d\u79f0   \u7528\u6237\u7ec4\u540d\u79f0   \u6587\u4ef6\u6216\u76ee\u5f55\n-R\uff1a\u8fdb\u884c\u9012\u5f52\u5f0f\u7684\u6743\u9650\u66f4\u6539\uff0c\u5c06\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u3001\u5b50\u76ee\u5f55\u66f4\u65b0\u4e3a\u6307\u5b9a\u7528\u6237\u7ec4\u6743\u9650\n\n\nchmod\u547d\u4ee4\nchmod\u547d\u4ee4\u7528\u6765\u53d8\u66f4\u6587\u4ef6\u6216\u76ee\u5f55\u7684\u6743\u9650\u3002\u7528\u6237\u53ef\u4ee5\u4f7f\u7528 chmod \u547d\u4ee4\u53bb\u53d8\u66f4\u6587\u4ef6\u4e0e\u76ee\u5f55\u7684\u6743\u9650\uff0c\u8bbe\u7f6e\u65b9\u5f0f\u91c7\u7528\u6587\u5b57\u6216\u6570\u5b57\u4ee3\u53f7\u7686\u53ef\u3002\u7b26\u53f7\u8fde\u63a5\u7684\u6743\u9650\u65e0\u6cd5\u53d8\u66f4\uff0c\u5982\u679c\u7528\u6237\u5bf9\u7b26\u53f7\u8fde\u63a5\u4fee\u6539\u6743\u9650\uff0c\u5176\u6539\u53d8\u4f1a\u4f5c\u7528\u5728\u88ab\u8fde\u63a5\u7684\u539f\u59cb\u6587\u4ef6\u3002\n\u8bed\u6cd5\nchmod [\u9009\u9879] [\u64cd\u4f5c\u5bf9\u8c61] [\u64cd\u4f5c\u7b26\u5408] [mode] \u6587\u4ef6\u6216\u76ee\u5f55\n\n\u53c2\u6570\u8bf4\u660e\n\n\u64cd\u4f5c\u5bf9\u8c61\n\u53ef\u4ee5\u662f\u4ee5\u4e0b\u5b57\u6bcd\u7684\u4e00\u4e2a\u6216\u8005\u7ec4\u5408\n\nu\uff1a\u62e5\u6709\u8005\ng\uff1a\u7ec4\no\uff1a\u5176\u4ed6\na\uff1a\u6240\u6709\u7528\u6237(\u9ed8\u8ba4)\n\n\n\u64cd\u4f5c\u7b26\u5408\n\n+\uff1a\u8868\u793a\u6dfb\u52a0\u67d0\u4e2a\u6743\u9650\n-\uff1a\u8868\u793a\u53d6\u6d88\u67d0\u4e2a\u6743\u9650\n=\uff1a\u8d4b\u4e88\u7ed9\u5b9a\u7684\u6743\u9650\uff0c\u8986\u76d6\u6587\u4ef6/\u76ee\u5f55\u539f\u6709\u7684\u6743\u9650\n\n\nmode\n\nr \u8868\u793a\u53ef\u8bfb\u53d6\nw \u8868\u793a\u53ef\u5199\u5165\nx \u8868\u793a\u53ef\u6267\u884c\nX \u8868\u793a\u53ea\u6709\u5f53\u8be5\u6587\u4ef6\u662f\u4e2a\u5b50\u76ee\u5f55\u6216\u8005\u8be5\u6587\u4ef6\u5df2\u7ecf\u88ab\u8bbe\u5b9a\u8fc7\u4e3a\u53ef\u6267\u884c\u3002\n\n\n\n\u6570\u5b57\u8bbe\u5b9a\u6cd5\n\u6570\u5b57\u8bbe\u5b9a\u6cd5\u4e2d\u6570\u5b57\u8868\u793a\u7684\u542b\u4e49\uff1a\n\n0 \u8868\u793a\u6ca1\u6709\u4efb\u4f55\u6743\u9650\n1 \u8868\u793a\u6709\u53ef\u6267\u884c\u6743\u9650 = x\n2 \u8868\u793a\u6709\u53ef\u5199\u6743\u9650 = w\n4 \u8868\u793a\u6709\u53ef\u8bfb\u6743\u9650 = r\n\n\u4e5f\u53ef\u4ee5\u7528\u6570\u5b57\u6765\u8868\u793a\u6743\u9650\u5982\uff1achmod 755 fileName\n\u5b9e\u4f8b\uff1a\n\nchmod u+x file                \u3000\u3000\u3000   \u7ed9file\u7684\u5c5e\u4e3b\u589e\u52a0\u6267\u884c\u6743\u9650\n\n\nchmod 751 file                \u3000\u3000\u3000   \u7ed9file\u7684\u5c5e\u4e3b\u5206\u914d\u8bfb\u3001\u5199\u3001\u6267\u884c(7)\u7684\u6743\u9650\uff0c\u7ed9file\u7684\u6240\u5728\u7ec4\u5206\u914d\u8bfb\u3001\u6267\u884c(5)\u7684\u6743\u9650\uff0c\u7ed9\u5176\u4ed6\u7528\u6237\u5206\u914d\u6267\u884c(1)\u7684\u6743\u9650\n\n\nchmod u=rwx,g=rx,o=x file         \u4e0a\u4f8b\u7684\u53e6\u4e00\u79cd\u5f62\u5f0f\n\n\nchmod =r file                 \u3000\u3000\u3000\u3000\u4e3a\u6240\u6709\u7528\u6237\u5206\u914d\u8bfb\u6743\u9650\n\n\nchmod 444 file              \u3000\u3000\u3000   \u540c\u4e0a\u4f8b\n\n\nchmod a-wx,a+r   file   \u3000\u3000 \u3000    \u540c\u4e0a\u4f8b\n\n\nchmod -R u+r directory       \u3000    \u9012\u5f52\u5730\u7ed9directory\u76ee\u5f55\u4e0b\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\u7684\u5c5e\u4e3b\u5206\u914d\u8bfb\u7684\u6743\u9650\n\n\u9644: centos\u9632\u706b\u5899\u57fa\u672c\u4f7f\u7528\n\n\u542f\u52a8\uff1a systemctl start firewalld  \n\u5173\u95ed\uff1a systemctl stop firewalld  \n\u67e5\u770b\u72b6\u6001\uff1a systemctl status firewalld   \n\u5f00\u673a\u7981\u7528\uff1a systemctl disable firewalld  \n\u5f00\u673a\u542f\u7528\uff1a systemctl enable firewalld\n\u5b66\u4e60\u6307\u5357\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Liunx", "slug": "Liunx", "permalink": "/Xuxx_Blogs/tag/Liunx/"}]}, {"title": "\u56fe\u89e3 Java \u5185\u5b58\u6a21\u578b", "date": "2020-09-05T21:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj28/", "text": "\u8f6c\u81ea\n1. \u5185\u5b58\u6a21\u578b &amp; \u5206\u533a\nJava\u865a\u62df\u673a\u5728\u8fd0\u884cJava\u7a0b\u5e8f\u65f6\uff0c\u4f1a\u7ba1\u7406\u7740\u4e00\u5757\u5185\u5b58\u533a\u57df\uff1a\u8fd0\u884c\u65f6\u6570\u636e\u533a\n\u5728\u8fd0\u884c\u65f6\u6570\u636e\u533a\u91cc\uff0c\u4f1a\u6839\u636e\u7528\u9014\u8fdb\u884c\u5212\u5206\uff1a\n\nJava\u865a\u62df\u673a\u6808\uff08\u6808\u533a\uff09\n\u672c\u5730\u65b9\u6cd5\u6808\nJava\u5806\uff08\u5806\u533a\uff09\n\u65b9\u6cd5\u533a\n\u7a0b\u5e8f\u8ba1\u6570\u5668\n\n\n2. Java\u5806\n\n\n\u5907\u6ce8\uff1a\n\nJava\u5806\u662f\u5783\u7ea7\u6536\u96c6\u5668\u7ba1\u7406\u7684\u4e3b\u8981\u533a\u57df\uff0c\u56e0\u6b64\u88ab\u79f0\u4e3a:\"GC\u5806\";\n\n\u4ece\u5185\u5b58\u56de\u6536\u7684\u89d2\u5ea6\u53ef\u5206\u4e3a:\u65b0\u751f\u4ee3&amp;\u8001\u5e74\u4ee3\n\n\u65b0\u751f\u4ee3\u53ef\u7ec6\u5206:Eden \u7a7a\u95f4\u3001From Survivor \u7a7a\u95f4\u3001To Survivor \u7a7a\u95f4\n\n\u4ece\u5185\u5b58\u5206\u914d\u7684\u89d2\u5ea6:\u591a\u4e2a\u7ebf\u7a0b\u79c1\u6709\u7684\u5206\u914d\u7f13\u51b2\u533a\n\n\n3. Java\u865a\u62df\u673a\u6808\n\n\n4. \u672c\u5730\u65b9\u6cd5\u6808\n\n\u5907\u6ce8\uff1a\n\u672c\u5730\u65b9\u6cd5\u6808\u5341\u5206\u7c7b\u4f3cJava\u865a\u62df\u673a\u6808\n\u4e0eJava\u865a\u62df\u673a\u533a\u522b\u5728\u4e8e\uff1a\u670d\u52a1\u5bf9\u8c61\uff0c\u5373\uff1a\n\nJava\u865a\u62df\u673a\u6808\u4e3a\u6267\u884c Java \u65b9\u6cd5\u670d\u52a1\uff1b\n\n\u672c\u5730\u65b9\u6cd5\u6808\u4e3a\u6267\u884c Native\u65b9\u6cd5\u670d\u52a1\n\n\n5. \u65b9\u6cd5\u533a\n\n\n\u6ce8\uff1a\u5176\u5185\u90e8\u5305\u542b\u4e00\u4e2a\u8fd0\u884c\u65f6\u5e38\u91cf\u6c60\uff0c\u5177\u4f53\u4ecb\u7ecd\u5982\u4e0b\uff1a\n\n6. \u7a0b\u5e8f\u8ba1\u6570\u5668\n\n\n7. \u989d\u5916\u77e5\u8bc6\uff1a\u76f4\u63a5\u5185\u5b58\n\n\u5b9a\u4e49\uff1aNIO\u7c7b\uff08JDK1.4\u5f15\u5165\uff09\u4e2d\u57fa\u4e8e\u901a\u9053\u548c\u7f13\u51b2\u533a\u7684I/O\u65b9\u5f0f \u901a\u8fc7\u4f7f\u7528Native\u51fd\u6570\u5e93 \u76f4\u63a5\u5206\u914d \u7684\u5806\u5916\u5185\u5b58\n\u7279\u70b9\uff1a\u4e0d\u53d7\u5806\u5927\u5c0f\u9650\u5236\n\n\u4e0d\u5c5e\u4e8e\u865a\u62df\u673a\u8fd0\u884c\u65f6\u6570\u636e\u533a\u7684\u4e00\u90e8\u5206 &amp; \u4e0d\u5728\u5806\u4e2d\u5206\u914d\n\n\n\u5e94\u7528\u573a\u666f\uff1a\u9002\u7528\u4e8e\u9891\u7e41\u8c03\u7528\u7684\u573a\u666f\n\n\u901a\u8fc7\u4e00\u4e2a \u5b58\u50a8\u5728Java\u5806\u4e2d\u7684DirectByteBuffer\u5bf9\u8c61 \u4f5c\u4e3a\u8fd9\u5757\u5185\u5b58\u7684\u5f15\u7528 \u8fdb\u884c\u64cd\u4f5c\uff0c\u4ece\u800c\u907f\u514d\u5728 Java \u5806\u548c Native\u5806\u4e4b\u95f4\u6765\u56de\u590d\u5236\u6570\u636e\uff0c\u63d0\u9ad8\u4f7f\u7528\u6027\u80fd\n\n\n\u629b\u51fa\u7684\u5f02\u5e38\uff1aOutOfMemoryError\uff0c\u5373\u4e0e\u5176\u4ed6\u5185\u5b58\u533a\u57df\u7684\u603b\u548c \u5927\u4e8e \u7269\u7406\u5185\u5b58\u9650\u5236\n\n8. \u603b\u7ed3\n\u672c\u6587\u5168\u9762\u8bb2\u89e3JVM\u4e2d\u7684\u5185\u5b58\u6a21\u578b &amp; \u5206\u533a\uff0c\u603b\u7ed3\u5982\u4e0b\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "JVM", "slug": "JVM", "permalink": "/Xuxx_Blogs/tag/JVM/"}]}, {"title": "MySQL\u4f18\u5316\u76f8\u5173", "date": "2020-08-27T16:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj27/", "text": "MySQL\u5206\u5c42\u903b\u8f91\u67b6\u6784\n\u4e00. MySQL\u903b\u8f91\u5206\u5c42\n\u9996\u5148\u53ef\u4ee5\u628a\u670d\u52a1\u7aef\u60f3\u8c61\u6210\u4e00\u4e2a\u5927\u7684\u5bb9\u5668\uff0c\u91cc\u9762\u6709\u56db\u5c42\u7ed3\u6784\uff0c\u5f53\u4e00\u4e2a\u8bf7\u6c42\u8fc7\u6765\u540e\uff0c\u5c06\u4f1a\u6267\u884c\u8fd9\u56db\u5c42\uff0c\u6267\u884c\u4e00\u904d\u540e\u624d\u4f1a\u8fd4\u56de\u7ed9\u60f3\u8981\u7684\u7ed3\u679c\u3002\n1.\u8fde\u63a5\u5c42\n\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2aSelect\u662f\u76f4\u63a5\u4ea4\u7ed9\u8fde\u63a5\u5c42\u6765\u5904\u7406\uff0c\u800c\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u63d0\u4f9b\u4e0e\u5ba2\u6237\u7aef\u8fde\u63a5\u7684\u670d\u52a1.\u8fde\u63a5\u5c42\u53ea\u662f\u4e0e\u5ba2\u6237\u7aef\u5efa\u7acb\u8d77\u8fde\u63a5.\u5b8c\u6210\u4e00\u4e9b\u7c7b\u4f3c\u8fde\u63a5\u5904\u7406,\u6388\u6743\u8ba4\u8bc1 \u53ca\u76f8\u5173\u7684\u5b89\u5168\u65b9\u6848. \u5728\u8be5\u5c42\u4e0a\u5f15\u5165\u4e86\u8fde\u63a5\u6c60\u7684\u6982\u5ff5.\n2.\u670d\u52a1\u5c42\n\u63d0\u4f9b\u6838\u5fc3\u7684\u670d\u52a1\u529f\u80fd,\u5982sql\u63a5\u53e3,\u5b8c\u6210\u7f13\u5b58\u7684\u67e5\u8be2,\nsql\u7684\u5206\u6790\u548c\u4f18\u5316\u90e8\u5206\u53ca\u5185\u7f6e\u51fd\u6570\u7684\u6267\u884c.\n\u670d\u52a1\u5305\u62ec\u4ee5\u4e0b\u5185\u5bb9:\n2.1Mangement Service\n\u5907\u4efd  \u5b89\u5168  \u590d\u5236  \u96c6\u7fa4\n2.2-SQL interface\n\u5b58\u50a8\u8fc7\u7a0b    \u89c6\u56fe  \u89e6\u53d1\u5668\n2.3-Parser\u89e3\u6790\n\u67e5\u8be2\u4e8b\u52a1    \u5bf9\u8c61\u6743\u9650\n2.4-Optimizer\u4f18\u5316\u5668\n\u5f53\u7f16\u5199Sql\u8bed\u53e5\u6267\u884c\u65f6\uff0c\u4f18\u5316\u5668\u4f1a\u89c9\u5f97\u6211\u5199\u7684sql\u8bed\u53e5\u6027\u80fd\u4e0d\u591f\u597d\uff0c\u8fd9\u4e2a\u65f6\u5019\uff0c\u4f18\u5316\u5668\u4f1a\u81ea\u5df1\u5199\u4e00\u4e2a\u7b49\u4ef7\u4e8e\u8ddf\u6211\u5199\u7684\u6267\u884c\u540e\u7ed3\u679c\u4e00\u81f4\u7684sql\u8bed\u53e5\u8fdb\u884c\u4ee3\u66ff.\n2.5-Cache Buffers\n\u7f13\u5b58\n\u670d\u52a1\u5668\u4f1a\u67e5\u8be2\u5185\u90e8\u7684\u7f13\u5b58,\u5982\u679c\u7f13\u5b58\u7a7a\u95f4\u8db3\u591f\u5927,\u8fd9\u6837\u53ef\u4ee5\u89e3\u51b3\u5927\u91cf\u8bfb\u64cd\u4f5c\u7684\u73af\u5883\u4e2d,\u80fd\u591f\u5f88\u597d\u7684\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\n3.\u5f15\u64ce\u5c42\n\u5b58\u50a8\u5f15\u64ce\u662f\u771f\u6b63\u8d1f\u8d23MYSQL\u4e2d\u6570\u636e\u7684\u5b58\u50a8\u548c\u63d0\u53d6,\u670d\u52a1\u5668\u901a\u8fc7API\u4e0e\u5b58\u50a8\u5f15\u64ce\u8fdb\u884c\u901a\u4fe1, \u4e0d\u540c\u7684\u5b58\u50a8\u5f15\u64ce\u63d0\u4f9b\u7684\u529f\u80fd\u4e0d\u540c,\u53ef\u4ee5\u6839\u636e\u81ea\u5df1\u7684\u5b9e\u9645\u9700\u6c42\u6765\u8fdb\u884c\u9009\u53d6\u3002\n\u5e38\u89c1\u7684\u6709\uff1alnnoDB\u3001MylSAM\u3001Memory\n\nlnnoDB\uff1a\u5b83\u5728\u8bbe\u8ba1\u7684\u65f6\u5019\uff0c\u5b83\u662f\u4e8b\u52a1\u4f18\u5148\u3002\n\u539f\u7406\uff1a\u56e0\u4e3a\u5b83\u662f\u884c\u9501\uff0c\u6bcf\u4e00\u6761\u6570\u636e\u90fd\u8981\u9501\uff0c\u9501\u7684\u592a\u591a\uff0c\u6027\u80fd\u5c31\u964d\u4f4e\u4e86\uff0c\u867d\u7136\u6027\u80fd\u964d\u4f4e\u4e86\uff0c\u4f46\u662f\u9002\u5408\u9ad8\u5e76\u53d1\u4e86\uff0c\u5c31\u4e0d\u5bb9\u6613\u51fa\u9519\u4e86\u3002\n\nMylSAM\uff1a\u6027\u80fd\u4f18\u5148\n\u539f\u7406\uff1a\u56e0\u4e3a\u5b83\u662f\u8868\u9501\uff0c\u5bf9\u4e8e\u8868\u91cc\u9762\u7684\u5341\u6761\u6570\u636e\u6765\u8bf4\u662f\u4e0d\u53d7\u5f71\u54cd\u7684\uff0c\u5bf9\u5341\u6761\u9501\u4e00\u6b21\u5c31\u5b8c\u4e86\uff0c\u6240\u4ee5\u6027\u80fd\u5feb\u3002\n\nMemroy\uff1amemory\u5b58\u50a8\u5f15\u64ce\u662fMySQL\u4e2d\u7684\u4e00\u7c7b\u7279\u6b8a\u7684\u5b58\u50a8\u5f15\u64ce\u3002\n\u5176\u4f7f\u7528\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u7684\u5185\u5bb9\u6765\u521b\u5efa\u8868\uff0c\u800c\u4e14\u6240\u6709\u6570\u636e\u4e5f\u653e\u5728\u5185\u5b58\u4e2d,\u56e0\u6b64\uff0c\u5176\u57fa\u4e8e\u5185\u5b58\u4e2d\u7684\u7279\u6027\uff0c\u8fd9\u7c7b\u8868\u7684\u5904\u7406\u901f\u5ea6\u4f1a\u975e\u5e38\u5feb\uff0c\u4f46\u662f\uff0c\u5176\u6570\u636e\u6613\u4e22\u5931\uff0c\u751f\u547d\u5468\u671f\u77ed\u3002\n\n\n4.\u5b58\u50a8\u5c42\n\u4e3b\u8981\u662f\u5c06\u6570\u636e\u5b58\u50a8\u5728\u8fd0\u884c\u7684\u8ba1\u7b97\u673a\u6587\u4ef6\u7cfb\u7edf\u4e4b\u4e0a,\u5e76\u5b8c\u6210\u4e0e\u5b58\u50a8\u5f15\u64ce\u7684\u4ea4\u4e92\u3002\n\u4e8c. \u6574\u4f53\u6267\u884c\u6d41\u7a0b\n1.\u9996\u5148\u5ba2\u6237\u7aef\u53d1\u51fa\u4e00\u4e2aSelect\u64cd\u4f5c\n2.\u8fde\u63a5\u5c42\u63a5\u6536\u540e\u7ed9\u670d\u52a1\u5c42\n3.\u670d\u52a1\u5c42\u5bf9\u4f60\u7684\u67e5\u8be2\u8fdb\u884c\u4e00\u4e2a\u4f18\u5316\uff0c\u5e76\u628a\u4f18\u5316\u7ed3\u679c\u7ed9\u5f15\u64ce\u5c42\n4.\u9009\u62e9\u5f53\u524d\u6570\u636e\u5e93\u7684\u5f15\u64ce\uff0c\u9009\u5b8c\u5f15\u64ce\u540e\uff0c\u5f15\u64ce\u5c06\u6700\u7ec8\u7684\u6570\u636e\u4ea4\u7ed9\u4e86\u5b58\u50a8\u5c42\n5.\u5b58\u50a8\u5c42\uff0c\u7528\u5b58\u50a8\u5c42\u6765\u5b58\u50a8\u6570\u636e\nMySQL\u7d22\u5f15\n\u4ec0\u4e48\u662f\u7d22\u5f15\uff1f\n\u9996\u5148\uff0c\u7d22\u5f15\u662f\u4e00\u79cd\u6570\u636e\u7ed3\u6784\u3002\u6392\u597d\u5e8f\u7684\u5feb\u901f\u67e5\u627e\u7684\u6570\u636e\u7ed3\u6784\u3002\n\u5728\u6570\u636e\u4e4b\u5916\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u8fd8\u7ef4\u6301\u7740\u6ee1\u8db3\u7279\u5b9a\u67e5\u627e\u7b97\u6cd5\u7684\u6570\u636e\u7ed3\u6784\uff0c\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u4ee5\u67d0\u79cd\u65b9\u5f0f\u5f15\u7528\uff08\u6307\u5411\uff09\u6570\u636e\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u5728\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u7684\u57fa\u7840\u4e0a\u5b9e\u73b0\u9ad8\u7ea7\u67e5\u627e\u7b97\u6cd5\u3002\u8fd9\u79cd\u6570\u636e\u7ed3\u6784\uff0c\u5c31\u662f\u7d22\u5f15\u3002\n\u7d22\u5f15\u7684\u4f18\u52bf\n\n\u63d0\u9ad8\u68c0\u7d22\u6548\u7387\uff0c\u964d\u4f4e\u6570\u636e\u5e93\u7684IO\u6210\u672c\n\u7c7b\u4f3c\u56fe\u4e66\u9986\u91cc\u7684\u56fe\u4e66\u7ba1\u7406\uff0c\u63d0\u9ad8\u6570\u636e\u7684\u68c0\u7d22\u6548\u7387\uff0c\u964d\u4f4e\u4e86io\u6210\u672c\u3002\u4f8b\u5982\uff1a\u56fe\u4e66\u7ba1\u7406\u6709100\u4e07\u6761\u85cf\u4e66\uff0cok\uff0c\u5144\u5f1f\u6b64\u65f6\u8fdb\u53bb\u627e\u4e66\uff0c\u5982\u679c\u6ca1\u6709\u7d22\u5f15\uff0c\u4ece\u7b2c\u4e00\u6761\u5230\u5230100\u4e07\u6761\uff0c\u7956\u575f\u5192\u9752\u70df\u4f60\u725b\u6070\u5de7\u7b2c\u4e00\u6761\u5c31\u662f\u8981\u627e\u5230\u56fe\u4e66\uff0c\u90a3\u4e48\u70b9\u5b50\u80cc\u7684\u627e\u5230100\u4e07\u6761\u5168\u8868\u626b\u63cf\u3002\u90a3\u4e48\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u9891\u7e41\u8fdb\u884c100\u4e07\u6b21\u7684IO\u3002\u4e0d\u4ec5\u6d6a\u8d39\u65f6\u95f4\uff0c\u800c\u4e14\u8fd8\u6d88\u8017\u5185\u5b58\u3002\u5982\u679c\u50cf\u4e0a\u9762\u6811\u7684\u65b9\u5f0f\u5927\u5927\u51cf\u5c11\u67e5\u627e\u65f6\u95f4\u548cIO\u7684\u9891\u7e41\u3002\n\n\u901a\u8fc7\u7d22\u5f15\u5217\u961f\u6570\u636e\u8fdb\u884c\u6392\u5e8f\uff0c\u964d\u4f4e\u6570\u636e\u6392\u5e8f\u7684\u6210\u672c\uff0c\u964d\u4f4e\u4e86CPU\u7684\u6d88\u8017\u3002\n\n\n\u7d22\u5f15\u7684\u52a3\u52bf\n\n\u5b9e\u9645\u4e0a\u7d22\u5f15\u4e5f\u662f\u4e00\u5f20\u8868\uff0c\u8be5\u8868\u4fdd\u5b58\u4e86\u4e3b\u952e\u4e0e\u7d22\u5f15\u5b57\u6bb5\uff0c\u5e76\u6307\u5411\u5b9e\u4f53\u8868\u4e2d\u7684\u8bb0\u5f55\uff0c\u6240\u4ee5\u7d22\u5f15\u5217\u4e5f\u662f\u8981\u5360\u7a7a\u95f4\u7684\u3002\n\u867d\u7136\u7d22\u5f15\u5927\u5927\u63d0\u9ad8\u4e86\u67e5\u8be2\u901f\u5ea6\uff0c\u540c\u65f6\u4f1a\u964d\u4f4e\u66f4\u65b0\u8868\u7684\u901f\u5ea6\u3002\u6bd4\u5982\u5bf9\u8868\u8fdb\u884cINSERT\u3001UPDATE\u3001DELETE\u3002\u56e0\u4e3a\u66f4\u65b0\u8868\u65f6\uff0cMySQL\u4e0d\u4ec5\u8981\u4fdd\u5b58\u6811\uff0c\u8fd8\u8981\u4fdd\u5b58\u4e00\u4e0b\u7d22\u5f15\u6587\u4ef6\u6bcf\u6b21\u66f4\u65b0\u6dfb\u52a0\u4e86\u7d22\u5f15\u5217\u7684\u5b57\u6bb5\u3002\u90fd\u4f1a\u8c03\u6574\u56e0\u4e3a\u6bcf\u6b21\u66f4\u65b0\u5e26\u6765\u7684\u952e\u503c\u53d8\u5316\u540e\u7684\u7d22\u5f15\u3002\n\n\u7d22\u5f15\u53ea\u662f\u63d0\u9ad8\u6548\u7387\u7684\u4e00\u4e2a\u56e0\u7d20\uff0c\u5982\u679c\u4f60\u7684MySQL\u6709\u5927\u6570\u636e\u91cf\u7684\u8868\uff0c\u5c31\u9700\u8981\u82b1\u65f6\u95f4\u6765\u7814\u7a76\u5efa\u7acb\u6700\u4f18\u79c0\u7684\u7d22\u5f15\uff0c\u6216\u8005\u4f18\u5316\u67e5\u8be2SQL\u8bed\u53e5\u3002\n\u78c1\u76d8IO\u4e0e\u9884\u8bfb\n\u8003\u8651\u5230\u78c1\u76d8IO\u662f\u975e\u5e38\u9ad8\u6602\u7684\u64cd\u4f5c\uff0c\u8ba1\u7b97\u673a\u64cd\u4f5c\u7cfb\u7edf\u505a\u4e86\u4e00\u4e9b\u4f18\u5316\uff0c\u5f53\u4e00\u6b21IO\u65f6\uff0c\u4e0d\u4ec5\u628a\u5f53\u524d\u78c1\u76d8\u5730\u5740\u7684\u6570\u636e\uff0c\u800c\u4e14\u628a\u76f8\u90bb\u7684\u6570\u636e\u4e5f\u90fd\u8bfb\u53d6\u5230\u5185\u5b58\u7f13\u51b2\u533a\u5185\uff0c\u56e0\u4e3a\u5c40\u90e8\u9884\u8bfb\u6027\u539f\u7406\u544a\u8bc9\uff0c\u5f53\u8ba1\u7b97\u673a\u8bbf\u95ee\u4e00\u4e2a\u5730\u5740\u7684\u6570\u636e\u7684\u65f6\u5019\uff0c\u4e0e\u5176\u76f8\u90bb\u7684\u6570\u636e\u4e5f\u4f1a\u5f88\u5feb\u88ab\u8bbf\u95ee\u5230\u3002\u6bcf\u4e00\u6b21IO\u8bfb\u53d6\u7684\u6570\u636e\u79f0\u4e4b\u4e3a\u4e00\u9875(page)\u3002\u5177\u4f53\u4e00\u9875\u6709\u591a\u5927\u6570\u636e\u8ddf\u64cd\u4f5c\u7cfb\u7edf\u6709\u5173\uff0c\u4e00\u822c\u4e3a4k\u62168k\uff0c\u4e5f\u5c31\u662f\u8bfb\u53d6\u4e00\u9875\u5185\u7684\u6570\u636e\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u624d\u53d1\u751f\u4e86\u4e00\u6b21IO\uff0c\u8fd9\u4e2a\u7406\u8bba\u5bf9\u4e8e\u7d22\u5f15\u7684\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1\u975e\u5e38\u6709\u5e2e\u52a9\u3002\n\u9002\u5408\u5efa\u7d22\u5f15\u548c\u4e0d\u9002\u5408\u5efa\u7d22\u5f15\n\u54ea\u4e9b\u60c5\u51b5\u9002\u5408\u5efa\u7d22\u5f15\uff1a\n\n\u4e3b\u952e\u81ea\u52a8\u5efa\u7acb\u552f\u4e00\u7d22\u5f15\n\u9891\u7e41\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\u7684\u5b57\u6bb5\u5e94\u8be5\u521b\u5efa\u7d22\u5f15\n\u67e5\u8be2\u4e2d\u4e0e\u5176\u4ed6\u6807\u5173\u8054\u7684\u5b57\u6bb5\uff0c\u5916\u68c0\u5173\u8054\u5efa\u7acb\u7d22\u5f15\n\u9891\u7e41\u66f4\u65b0\u7684\u5b57\u6bb5\u4e0d\u9002\u5408\u521b\u5efa\u7d22\u5f15\uff08\u66f4\u65b0\u5b57\u6bb5\u4e0d\u4ec5\u8981\u66f4\u65b0\u6570\u636e\u672c\u8eab\uff0c\u800c\u4e14\u8fd8\u8981\u66f4\u65b0\u7d22\u5f15\u6811\uff09\nwhere\u6761\u4ef6\u91cc\u7528\u4e0d\u5230\u7684\u5b57\u6bb5\u4e0d\u521b\u5efa\u7d22\u5f15\n\u5355\u952e/\u7ec4\u5408\u7d22\u5f15\u7684\u9009\u62e9\u95ee\u9898\uff0cwho\uff1f\uff08\u5728\u9ad8\u5e76\u53d1\u4e0b\u503e\u5411\u521b\u5efa\u7ec4\u5408\u7d22\u5f15\uff09\n\u67e5\u8be2\u4e2d\u6392\u5e8f\u7684\u5b57\u6bb5\uff0c\u6392\u5e8f\u7684\u5b57\u6bb5\u82e5\u901a\u8fc7\u7d22\u5f15\u53bb\u8bbf\u95ee\u5c06\u5927\u5927\u63d0\u9ad8\u6392\u5e8f\u901f\u5ea6\uff08\u7d22\u5f15\u4e3b\u8981\u5e72\u4e24\u4ef6\u4e8b\uff1a\u68c0\u7d22\u3001\u6392\u5e8f\u3002\uff09\n\u67e5\u8be2\u4e2d\u8981\u7edf\u8ba1\u6216\u8005\u5206\u7ec4\u7684\u5b57\u6bb5\n\n\u54ea\u4e9b\u60c5\u51b5\u4e0d\u9002\u5408\u5efa\u7d22\u5f15\uff1a\n\n\u8868\u8bb0\u5f55\u592a\u5c11\uff08300\u4e07\u5de6\u53f3\u6027\u80fd\u5f00\u59cb\u9010\u6e10\u4e0b\u964d\uff0c\u867d\u7136\u5b98\u65b9\u6587\u6863\u8bf4\u6491\u5f97\u4f4f5-8\u767e\u4e07\u4ee5\u4e0a\uff0c\u4f46\u662f\u6839\u672c\u4e5f\u4e0d\u80fd\u7b49\u5230\u8fd9\u4e2a\u65f6\u5019\u518d\u53bb\u4f18\u5316\uff0c\u6027\u80fd\u80af\u5b9a\u4f1a\u53d7\u5230\u5f71\u54cd\uff09\n\u7ecf\u5e38\u589e\u5220\u6539\u7684\u8868\uff08\u4e3a\u4ec0\u4e48\uff1f\u63d0\u9ad8\u4e86\u67e5\u8be2\u901f\u5ea6\uff0c\u540c\u65f6\u5374\u4f1a\u964d\u4f4e\u4e86\u66f4\u65b0\u8868\u7684\u901f\u5ea6\uff0c\u5165\u961f\u8868\u8fdb\u884cINSERT,UPDATE\u548cDELETE\u3002\u56e0\u4e3a\u66f4\u65b0\u8868\u65f6\uff0cMySQL\u4e0d\u4ec5\u8981\u4fdd\u5b58\u6570\u636e\uff0c\u8fd8\u8981\u4fdd\u5b58\u7d22\u5f15\u6587\u4ef6\uff09\u3002\n\u6570\u636e\u91cd\u590d\u5207\u5206\u5e03\u5e73\u5747\u7684\u8868\u5b57\u6bb5\uff0c\u56e0\u6b64\u5e94\u8be5\u53ea\u4e3a\u6700\u7ecf\u5e38\u67e5\u8be2\u548c\u6700\u7ecf\u5e38\u6392\u5e8f\u7684\u6570\u636e\u5efa\u7acb\u7d22\u5f15\u3002\u6ce8\u610f\uff0c\u5982\u679c\u67d0\u4e2a\u6570\u636e\u5217\u5305\u62ec\u8bb8\u591a\u91cd\u590d\u7684\u5185\u5bb9\uff0c\u4e3a\u5b83\u5efa\u7acb\u7d22\u5f15\u5c31\u6ca1\u6709\u592a\u5927\u7684\u5b9e\u9645\u6548\u679c\u4e86\u3002\uff08\u5047\u8bbe\u4e00\u4e2a\u8868\u670910\u4e07\u884c\u7684\u8bb0\u5f55\uff0c\u6709\u4e00\u4e2a\u5b57\u6bb5A\u53ea\u6709True\u548cFalse\u4e24\u4e2a\u503c\uff0c\u4e14\u6bcf\u4e2a\u503c\u7684\u5206\u5e03\u6982\u7387\u5927\u7ea6\u4e3a50%\uff0c\u90a3\u4e48\u5bf9\u8fd9\u79cd\u8868\u7684A\u5b57\u6bb5\u5efa\u7acb\u7d22\u5f15\u4e00\u822c\u4e0d\u4f1a\u63d0\u9ad8\u6570\u636e\u5e93\u7684\u67e5\u8be2\u901f\u5ea6\u3002\u518d\u6bd4\u5982\u5bf9\u94f6\u884c\u5361\u5efa\u7acb\u7d22\u5f15\uff0c\u6bd5\u7adf\u94f6\u884c\u5361\u6ca1\u6709\u91cd\u590d\u7684\u3002\u7d22\u5f15\u7684\u9009\u62e9\u6027\u662f\u6307\u7d22\u5f15\u5217\u4e2d\u4e0d\u540c\u503c\u7684\u6570\u636e\u4e0e\u8868\u4e2d\u7684\u8bb0\u5f55\u6570\u7684\u6bd4\uff0c\u5982\u679c\u4e00\u4e2a\u8868\u4e2d\u67092000\u6761\u8bb0\u5f55\uff0c\u8868\u7d22\u5f15\u5217\u5c31\u67091980\u4e2a\u4e0d\u540c\u7684\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7d22\u5f15\u7684\u9009\u62e9\u6027\u5c31\u662f1980/2000=0.99\u3002\u4e00\u4e2a\u7d22\u5f15\u7684\u9009\u62e9\u6027\u8d8a\u63a5\u8fd1\u4e8e1\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7d22\u5f15\u7684\u6548\u7387\u5c31\u8d8a\u9ad8\u3002\uff09\n\nMySQL\u7d22\u5f15\u4f18\u53161-\u6027\u80fd\u5206\u6790Explain\nMySQL\u81ea\u5e26\u67e5\u8be2\u4f18\u5316\u5668(MySQL Query Optimizer)\n\nMySQL\u4e2d\u6709\u4e13\u95e8\u8d1f\u8d23\u4f18\u5316SELECT\u8bed\u53e5\u7684\u4f18\u5316\u5668\u6a21\u5757\uff0c\u4e3b\u8981\u529f\u80fd\uff1a\u901a\u8fc7\u8ba1\u7b97\u673a\u5206\u6790\u7cfb\u7edf\u4e2d\u6536\u96c6\u5230\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u4e3a\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684Query\u63d0\u4f9b\u4ed6\u8ba4\u4e3a\u6700\u4f18\u7684\u6267\u884c\u8ba1\u5212\uff08\u7cfb\u7edf\u8ba4\u4e3a\u6700\u4f18\u7684\u6570\u636e\u68c0\u7d22\u65b9\u5f0f\uff0c\u4e0d\u89c1\u5f97\u662fDBA\u8ba4\u4e3a\u662f\u6700\u4f18\u7684\uff0c\u8fd9\u90e8\u5206\u6700\u8017\u8d39\u65f6\u95f4\uff09\n\u5f53\u5ba2\u6237\u7aef\u5411MySQL\u8bf7\u6c42\u4e00\u6761Query\uff0c\u547d\u4ee4\u89e3\u6790\u5668\u6a21\u5757\u5b8c\u6210\u8bf7\u6c42\u5206\u7c7b\uff0c\u533a\u522b\u5904\u662fSELECT\u5e76\u8f6c\u53d1\u7ed9MySQL Query Optimizer\u65f6\uff0cMySQL Query Optimizer \u4f1a\u5148\u5bf9\u6574\u6761Query\u8fdb\u884c\u4f18\u5316\uff0c\u5904\u7406\u540a\u4e00\u4e9b\u5e38\u91cf\u8868\u8fbe\u5f0f\u7684\u9884\u7b97\uff0c\u76f4\u63a5\u6362\u7b97\u6210\u5e38\u91cf\u503c\uff0c\u5e76\u5bf9Query\u4e2d\u7684\u67e5\u8be2\u6761\u4ef6\u8fdb\u884c\u7b80\u5316\u548c\u8f6c\u6362\uff0c\u53bb\u6389\u4e00\u4e9b\u65e0\u7528\u6216\u663e\u800c\u6613\u89c1\u7684\u6761\u4ef6\u3001\u7ed3\u6784\u8c03\u6574\u7b49\u3002\u7136\u540e\u5206\u6790Query\u4e2d\u7684hint\u4fe1\u606f\uff08\u5982\u679c\u6709\uff09\uff0c\u770b\u73b0\u5b9eHint\u4fe1\u606f\u662f\u5426\u53ef\u4ee5\u5b8c\u5168\u786e\u5b9a\u8be5Query\u7684\u6267\u884c\u8ba1\u5212\u3002\u5982\u679c\u6ca1\u6709Hint\u6216Hint\u4fe1\u606f\u4e0d\u8db3\u4ee5\u5b8c\u5168\u786e\u5b9a\u6267\u884c\u8ba1\u5212\uff0c\u5219\u4f1a\u8bfb\u53d6\u7d22\u8bbe\u8ba1\u5bf9\u8c61\u7684\u7edf\u8ba1\u4fe1\u606f\uff0c\u6839\u636eQuery\u8fdb\u884c\u5199\u76f8\u5e94\u7684\u8ba1\u7b97\u5206\u6790\uff0c\u7136\u540e\u5728\u5f97\u51fa\u6700\u540e\u7684\u6267\u884c\u8ba1\u5212\u3002\n\nMySQL\u5e38\u89c1\u74f6\u9888\n\nCPU\uff1aCPU\u5728\u9971\u548c\u7684\u65f6\u5019\u4e00\u822c\u53d1\u751f\u5728\u6570\u636e\u88c5\u5165\u5185\u5b58\u6216\u4ece\u78c1\u76d8\u4e0a\u8bfb\u53d6\u6570\u636e\u7684\u65f6\u5019\nIO\uff1a\u78c1\u76d8I/O\u74f6\u9888\u53d1\u751f\u5728\u88c5\u5165\u6570\u636e\u8fdc\u5927\u4e8e\u5185\u5b58\u5bb9\u91cf\u7684\u65f6\u5019\n\u670d\u52a1\u5668\u786c\u76d8\u7684\u6027\u80fd\u74f6\u9888\uff1atop\uff0cfree\uff0ciostat\u548cvmstat\u6765\u67e5\u770b\u7cfb\u7edf\u7684\u6027\u80fd\u72b6\u6001\n\n\u5982\u679cSQL\u4f18\u5316\u5668\u6ca1\u6709\u66f4\u6539\uff0c\u5e76\u4e14\u8fd9\u4e9b\u74f6\u9888\u4e5f\u6ca1\u6709\u51fa\u73b0\uff0c\u90a3\u4e48\u8c03\u51faMySQL\u5206\u6790\u62a5\u544a\u6765\u770b\u770b\u5230\u5e95MySQL\u54ea\u91cc\u60f9\u4e86\u4e8b\u3002\nEXPLAIN\n\u5b98\u65b9\u6587\u6863\n\n\n\u662f\u4ec0\u4e48\uff1f\uff08\u67e5\u770b\u6267\u884c\u8ba1\u5212\uff09\n\n\n\u4f7f\u7528Explain\u5173\u952e\u5b57\u53ef\u4ee5\u6a21\u62df\u4f18\u5316\u5668\u6267\u884cSQL\u67e5\u8be2\u8bed\u53e5\uff0c\u4ece\u800c\u77e5\u9053MySQL\u662f\u5982\u4f55\u5904\u7406\u4f60\u7684SQL\u8bed\u53e5\u7684\uff0c\u5206\u6790\u4f60\u7684\u67e5\u8be2\u8bed\u53e5\u6216\u662f\u8868\u7ed3\u6784\u7684\u6027\u80fd\u74f6\u9888\u3002\n\n\n\u80fd\u5e72\u5417\uff1f\n\n\n\u8868\u7684\u8bfb\u53d6\u987a\u5e8f\n\u6570\u636e\u8bfb\u53d6\u64cd\u4f5c\u7684\u64cd\u4f5c\u7c7b\u578b\n\u54ea\u4e9b\u7d22\u5f15\u53ef\u4ee5\u4f7f\u7528\n\u54ea\u4e9b\u7d22\u5f15\u88ab\u5b9e\u9645\u4f7f\u7528\n\u8868\u4e4b\u95f4\u7684\u5f15\u7528\n\u6bcf\u5f20\u8868\u6709\u591a\u5c11\u884c\u88ab\u4f18\u5316\u5668\u67e5\u8be2\n\n\n\u600e\u4e48\u7528\uff1f\n\n\nExplain + SQL\u8bed\u53e5\n\u6267\u884c\u8ba1\u5212\u5305\u542b\u7684\u4fe1\u606f\n\n\n\u5404\u5b57\u6bb5\u89e3\u91ca:\n\nid\uff1aselect\u67e5\u8be2\u7684\u5e8f\u5217\u53f7\uff0c\u5305\u542b\u4e00\u7ec4\u6570\u5b57\uff0c\u8868\u793a\u67e5\u8be2\u4e2d\u6267\u884cselect\u5b50\u53e5\u6216\u64cd\u4f5c\u8868\u7684\u987a\u5e8f\u3002\n\n\u5305\u542b3\u79cd\u60c5\u51b5\uff1a\nid\u76f8\u540c\uff0c\u6267\u884c\u987a\u5e8f\u7531\u4e0a\u81f3\u4e0b\nid\u4e0d\u540c\uff0c\u503c\u8d8a\u5927\u4f18\u5148\u7ea7\u8d8a\u9ad8\u8d8a\u5148\u88ab\u6267\u884c\nid\u90e8\u5206\u76f8\u540c\uff0c\u5982\u679cid\u76f8\u540c\uff0c\u53ef\u8ba4\u4e3a\u662f\u540c\u4e00\u7ec4\uff0c\u6267\u884c\u987a\u5e8f\u4ece\u4e0a\u5230\u4e0b\u3002\u5728\u6240\u6709\u7ec4\u4e2d\uff0cid\u503c\u8d8a\u5927\u6267\u884c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002\n\n\n\n\u603b\u7ed3\uff1aid\u7684\u503c\u8868\u793aselect\u5b50\u53e5\u6216\u8868\u7684\u6267\u884c\u987a\u5e8f\uff0cid\u76f8\u540c\uff0c\u6267\u884c\u987a\u5e8f\u4ece\u4e0a\u5230\u4e0b\uff0cid\u4e0d\u540c\uff0c\u503c\u8d8a\u5927\u7684\u6267\u884c\u4f18\u5148\u7ea7\u8d8a\u9ad8\u3002\n\nselect_type\uff1aSELECT\u7684\u7c7b\u578b\n\u5e38\u89c1\uff1a\n\nSIMPLE : \u7b80\u5355\u7684SELECT\u67e5\u8be2, \u67e5\u8be2\u4e2d\u4e0d\u5305\u542b\u5b50\u67e5\u8be2\u6216\u8005UNION\nPRIMARY : \u67e5\u8be2\u4e2d\u5305\u542b\u4efb\u4f55\u590d\u6742\u7684\u5b50\u67e5\u8be2, \u6700\u5916\u5c42\u67e5\u8be2\u88ab\u6807\u8bb0\u4e3aPRIMARY\nSUBQUERY : \u5728SELECT\u6216WHERE\u5217\u8868\u4e2d\u5305\u542b\u5b50\u67e5\u8be2\nDERIVED : \u5728FROM\u5217\u8868\u4e2d\u5305\u542b\u7684\u5b50\u67e5\u8be2\u88ab\u6807\u8bb0\u4e3aDERIVED(\u884d\u751f), MySQL\u4f1a\u9012\u5f52\u6267\u884c\u8fd9\u4e9b\u5b50\u67e5\u8be2, \u628a\u7ed3\u679c\u653e\u5728\u4e34\u65f6\u8868\u91cc\nUNION : \u82e5\u7b2c\u4e8c\u4e2aSELECT\u51fa\u73b0\u5728UNION\u4e4b\u540e, \u5219\u88ab\u6807\u8bb0\u4e3aUNION; \u82e5UNION\u5305\u542b\u5728FROM\u5b50\u53e5\u7684\u5b50\u67e5\u8be2\u4e2d, \u5916\u5c42SELECT\u88ab\u6807\u8bb0\u4e3a : DERIVED\nUNION RESULT : \u4eceUNION\u8868\u83b7\u53d6\u7ed3\u679c\u7684SELECT\n\n\ntable\uff1a\u663e\u793a\u8fd9\u4e00\u884c\u7684\u6570\u636e\u662f\u5173\u4e8e\u54ea\u5f20\u8868\u7684\n\ntype\uff1a\u8bbf\u95ee\u7c7b\u578b, \u663e\u793a\u67e5\u8be2\u4f7f\u7528\u4e86\u4f55\u79cd\u7c7b\u578b\uff0c\n\u4ece\u6700\u597d\u5230\u6700\u5dee\u4f9d\u6b21\u662f\uff1asystem &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; ALL \uff08\u5e38\u89c1\u7684\uff09\n\u4e00\u822c\u6765\u8bf4, \u8981\u4fdd\u8bc1\u67e5\u8be2\u81f3\u5c11\u8fbe\u5230 range \u7ea7\u522b, \u6700\u597d\u80fd\u8fbe\u5230 ref \u3002\n\nsystem\uff1a\u8868\u53ea\u6709\u4e00\u884c\u8bb0\u5f55(\u7b49\u4e8e\u7cfb\u7edf\u8868), \u8fd9\u662f const \u7c7b\u578b\u7684\u7279\u4f8b, \u5e73\u65f6\u4e0d\u4f1a\u51fa\u73b0\n\nconst\uff1a\u8868\u793a\u901a\u8fc7\u7d22\u5f15\u4e00\u6b21\u5c31\u627e\u5230\u4e86, const \u7528\u4e8e\u6bd4\u8f83 primary key \u6216\u8005 unique \u7d22\u5f15\u3002\u56e0\u4e3a\u53ea\u5339\u914d\u4e00\u884c\u6570\u636e, \u7d22\u5f15\u5f88\u5feb, \u5982\u5c06\u4e3b\u952e\u7f6e\u4e8ewhere\u5217\u8868\u4e2d, MySQL\u5c31\u80fd\u5c06\u8be5\u67e5\u8be2\u8f6c\u6362\u4e3a\u4e00\u4e2a\u201c\u5e38\u91cf\u201d\u3002\n\neq_ref\uff1a\u552f\u4e00\u6027\u7d22\u5f15\u626b\u63cf, \u5bf9\u4e8e\u6bcf\u4e2a\u7d22\u5f15\u952e, \u8868\u4e2d\u53ea\u6709\u4e00\u6761\u8bb0\u5f55\u4e0e\u4e4b\u5339\u914d\u3002\u5e38\u89c1\u4e8e\u4e3b\u952e\u6216\u552f\u4e00\u7d22\u5f15\u626b\u63cf\n\nref\uff1a\u975e\u552f\u4e00\u6027\u7d22\u5f15\u626b\u63cf, \u8fd4\u56de\u5339\u914d\u67d0\u4e2a\u5355\u72ec\u503c\u7684\u6240\u6709\u884c\u3002\u672c\u8d28\u4e0a\u4e5f\u662f\u4e00\u79cd\u7d22\u5f15\u8bbf\u95ee, \u5b83\u8fd4\u56de\u6240\u6709\u5339\u914d\u67d0\u4e2a\u5355\u72ec\u503c\u7684\u884c, \u53ef\u80fd\u4f1a\u627e\u5230\u591a\u4e2a\u7b26\u5408\u6761\u4ef6\u7684\u884c, \u6240\u4ee5\u8fd9\u4e2a\u5e94\u8be5\u5c5e\u4e8e\u67e5\u627e\u548c\u626b\u63cf\u7684\u6df7\u5408\u4f53\neq_ref\u548cref\uff1a\u5c31\u597d\u6bd4\u4e00\u4e2a\u73ed\u7ea7\u91cc\u9762\uff0c\u53ea\u6709\u4e00\u4e2a\u73ed\u4e3b\u4efb\u548c\u4e00\u7fa4\u5b66\u751f\uff0ct2\u8fd4\u56de\u7684\u53ea\u6709\u4e00\u4e2a\u8bb0\u5f55\uff08\u5c31\u5c31\u597d\u6bd4\u73ed\u4e3b\u4efb\uff09\uff0c\u800ccol1\u8fd4\u56de\u7684\u662f\u6240\u6709col1\u7b49\u4e8eac\uff08\u6240\u6709\u540d\u5b57\u662fac\u7684\u5b66\u751f\uff09\n\nrange\uff1a\u53ea\u68c0\u7d22\u7ed9\u5b9a\u8303\u56f4\u7684\u884c, \u4f7f\u7528\u4e00\u4e2a\u7d22\u5f15\u6765\u9009\u62e9\u884c\u3002key \u5217\u663e\u793a\u4f7f\u7528\u4e86\u54ea\u4e2a\u7d22\u5f15, \u4e00\u822c\u5c31\u662f\u5728 where \u8bed\u53e5\u4e2d\u51fa\u73b0\u4e86between, &lt; ,&gt; ,in \u7b49\u7684\u67e5\u8be2\u3002\u8fd9\u79cd\u8303\u56f4\u7d22\u5f15\u626b\u63cf\u6bd4\u5168\u8868\u626b\u63cf\u8981\u597d, \u56e0\u4e3a\u5b83\u53ea\u9700\u8981\u5f00\u59cb\u4e8e\u7d22\u5f15\u7684\u67d0\u4e00\u70b9, \u800c\u7ed3\u675f\u4e8e\u53e6\u4e00\u70b9, \u4e0d\u7528\u626b\u63cf\u5168\u90e8\u7d22\u5f15\u3002\n\nindex\uff1aFull Index Scan(\u5168\u7d22\u5f15\u626b\u63cf), index\u4e0eALL\u7684\u533a\u522b\u4e3aindex\u7c7b\u578b\u53ea\u904d\u5386\u7d22\u5f15\u6811\u3002\u8fd9\u901a\u5e38\u6bd4ALL\u5feb, \u56e0\u4e3a\u7d22\u5f15\u6587\u4ef6\u901a\u5e38\u6bd4\u6570\u636e\u6587\u4ef6\u5c0f\u3002(\u4e5f\u5c31\u662f\u8bf4\uff0c\u867d\u7136ALL\u548cindex\u90fd\u662f\u8bfb\u5168\u8868, \u4f46index\u662f\u4ece\u7d22\u5f15\u4e2d\u8bfb\u53d6\u7684, \u800cALL\u662f\u4ece\u786c\u76d8\u4e2d\u8bfb\u53d6\u7684)\u3002\nALL\uff1aFull Table Scan(\u5168\u8868\u626b\u63cf), \u5c06\u904d\u5386\u5168\u8868\u4ee5\u627e\u5230\u5339\u914d\u7684\u884c\u3002\n\n\npossible_keys\uff1a\u53ef\u80fd\u7528\u5230\u7684\u7d22\u5f15\uff0c\u4e00\u4e2a\u6216\u591a\u4e2a\uff0c\u4f46\u4e0d\u4e00\u5b9a\u88ab\u67e5\u8be2\u5b9e\u9645\u4f7f\u7528\u3002\n\nkey\uff1a\n\n\u5b9e\u9645\u4f7f\u7528\u7684\u7d22\u5f15, \u5982\u679c\u4e3aNULL, \u5219\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15\u3002\uff08\u8981\u4e48\u6ca1\u5efa\u7d22\u5f15\uff0c\u8981\u4e48\u5efa\u4e86\u7d22\u5f15\u6ca1\u7528\uff0c\u5373\u7d22\u5f15\u5931\u6548\uff09\n\u67e5\u8be2\u4e2d\u82e5\u4f7f\u7528\u4e86\u8986\u76d6\u7d22\u5f15, \u5219\u8be5\u7d22\u5f15\u4ec5\u51fa\u73b0\u5728key\u5217\u8868\u4e2d\n\n\nkey_len\uff1a\n\n\u8868\u793a\u7d22\u5f15\u4e2d\u4f7f\u7528\u7684\u5b57\u8282\u6570, \u53ef\u901a\u8fc7\u8be5\u5217\u8ba1\u7b97\u67e5\u8be2\u4e2d\u4f7f\u7528\u7684\u7d22\u5f15\u7684\u957f\u5ea6\u3002\u5728\u4e0d\u635f\u5931\u7cbe\u786e\u6027\u7684\u60c5\u51b5\u4e0b, \u957f\u5ea6\u8d8a\u77ed\u8d8a\u597d\u3002\uff08\u6709\u53e5\u8bdd\u8bf4\u5c31\u662f\uff1a\u4e0d\u7ed9\u9a6c\u5403\u8349\uff0c\u53c8\u8981\u9a6c\u513f\u8dd1\uff09\nkey_len\u663e\u793a\u7684\u503c\u4e3a\u7d22\u5f15\u5b57\u6bb5\u7684\u6700\u5927\u53ef\u80fd\u957f\u5ea6, \u5e76\u975e\u5b9e\u9645\u4f7f\u7528\u957f\u5ea6, \u5373 key_len \u662f\u6839\u636e\u8868\u5b9a\u4e49\u8ba1\u7b97\u800c\u5f97, \u4e0d\u662f\u901a\u8fc7\u8868\u5185\u68c0\u7d22\u83b7\u5f97\u7684\uff08\u540c\u6837\u7684\u67e5\u8be2\u7ed3\u679c\uff0ckey_len\u7528\u7684\u8d8a\u5c11\u8d8a\u597d\uff09\n\n\nref\uff1a\u663e\u793a\u7d22\u5f15\u7684\u54ea\u4e00\u5217\u88ab\u4f7f\u7528\u4e86, \u5982\u679c\u53ef\u80fd\u7684\u8bdd, \u6700\u597d\u662f\u4e00\u4e2a\u5e38\u6570\u3002\u54ea\u4e9b\u5217\u6216\u5e38\u91cf\u88ab\u7528\u4e8e\u67e5\u627e\u7d22\u5f15\u5217\u4e0a\u7684\u503c\u3002\n\nrows\uff1a\u6839\u636e\u8868\u7edf\u8ba1\u4fe1\u606f\u53ca\u7d22\u5f15\u9009\u7528\u60c5\u51b5, \u5927\u81f4\u4f30\u7b97\u51fa\u627e\u5230\u6240\u9700\u8bb0\u5f55\u6240\u9700\u8981\u8bfb\u53d6\u7684\u884c\u6570\uff08\u8868\u4e2d\u6709\u591a\u5c11\u884c\u88ab\u4f18\u5316\u5668\u67e5\u8be2\uff09\n\nExtra\uff1a\u5305\u542b\u4e0d\u9002\u5408\u5728\u5176\u4ed6\u5217\u4e2d\u663e\u793a\u4f46\u5341\u5206\u91cd\u8981\u7684\u989d\u5916\u4fe1\u606f\n\nUsing filesort : \u8bf4\u660eMySQL\u4f1a\u5bf9\u6570\u636e\u4f7f\u7528\u4e00\u4e2a\u5916\u90e8\u7684\u7d22\u5f15\u6392\u5e8f, \u800c\u4e0d\u662f\u6309\u7167\u8868\u5185\u7d22\u5f15\u987a\u5e8f\u8fdb\u884c\u8bfb\u53d6\u3002MySQL\u4e2d\u65e0\u6cd5\u5229\u7528\u7d22\u5f15\u5b8c\u6210\u7684\u6392\u5e8f\u64cd\u4f5c\u79f0\u4e3a\"\u6587\u4ef6\u5185\u6392\u5e8f\"\u3002\nUsing temporary : \u540c\u6bd4\u524d\u8005\u6027\u80fd\u66f4\u5dee\uff0c\u4f7f\u7528\u4e86\u4e34\u65f6\u8868\u4fdd\u5b58\u4e2d\u95f4\u7ed3\u679c, MySQL\u5728\u5bf9\u67e5\u8be2\u7ed3\u679c\u6392\u5e8f\u65f6\u4f7f\u7528\u4e86\u4e34\u65f6\u8868\u3002\u5e38\u89c1\u4e8e\u6392\u5e8forder by\u548c\u5206\u7ec4\u67e5\u8be2group by\u3002\nUsing index : \u8868\u793a\u76f8\u5e94\u7684SELECT\u64cd\u4f5c\u4e2d\u4f7f\u7528\u4e86\u8986\u76d6\u7d22\u5f15(Covering Index), \u907f\u514d\u4e86\u8bbf\u95ee\u8868\u7684\u6570\u636e\u884c, \u6548\u7387\u8fd8\u53ef\u4ee5\nUsing where : \u4f7f\u7528\u4e86where\u8fc7\u6ee4\nUsing join buffer : \u4f7f\u7528\u4e86\u8fde\u63a5\u7f13\u5b58\u7d22\u5f15\u4f18\u5316MIN/MAx\u64cd\u4f5c\u6216\u8005\u5bf9\u4e8eMyIsam\u5b58\u50a8\u5f15\u64ce\u4f18\u5316COUNT(*)\u64cd\u4f5c, \u4e0d\u5fc5\u7b49\u5230\u6267\u884c\u9636\u6bb5\u518d\u8fdb\u884c\u8ba1\u7b97, \u67e5\u8be2\u6267\u884c\u8ba1\u5212\u751f\u6210\u9636\u6bb5\u5373\u5b8c\u6210\u4f18\u5316\u3002\nImpossible WHERE : where\u5b50\u53e5\u503c\u603b\u662ffalse, \u4e0d\u80fd\u7528\u6765\u83b7\u53d6\u4efb\u4f55\u6570\u636e, \u5982name=\u2018\u5f20\u4e09\u2019 and name=\u2018\u674e\u56db\u2019(\u4e0d\u53ef\u80fd\u4e00\u4e2a\u4eba\u540d\u5b57\u662f\u5f20\u4e09\uff0c\u53c8\u662f\u674e\u56db\u5427)\nSelect tables optimized away : \u5728\u6ca1\u6709group by\u5b50\u53e5\u7684\u60c5\u51b5\u4e0b, \u57fa\u4e8edistinct : \u4f18\u5316distinct\u64cd\u4f5c, \u5728\u627e\u5230\u7b2c\u4e00\u5339\u914d\u7684\u5143\u7ec4\u540e\u5373\u505c\u6b62\u627e\u540c\u6837\u503c\u7684\u52a8\u4f5c\n\n\n\n\u8865\u5145\n\u8986\u76d6\u7d22\u5f15(Covering Index)\uff0c\u4e00\u8bf4\u4e3a\u7d22\u5f15\u8986\u76d6\n\u7406\u89e3\u65b9\u5f0f\u4e00\uff1a\u5c31\u662fselect\u7684\u6570\u636e\u5217\u53ea\u7528\u4ece\u7d22\u5f15\u4e2d\u5c31\u80fd\u591f\u83b7\u53d6\uff0c\u4e0d\u6bd4\u8bfb\u53d6\u6570\u636e\u884c\uff0cMySQL\u53ef\u4ee5\u5229\u7528\u7d22\u5f15\u8fd4\u56deselect\u5217\u8868\u4e2d\u7684\u5b57\u6bb5\uff0c\u800c\u4e0d\u5fc5\u6839\u636e\u7d22\u5f15\u518d\u6b21\u8bfb\u53d6\u6570\u636e\u6587\u4ef6\uff0c\u6362\u53e5\u8bdd\u8bf4\u67e5\u8be2\u5217\u8981\u88ab\u6240\u5efa\u7684\u7d22\u5f15\u8986\u76d6\u3002\uff08\u4e5f\u5c31\u662f\u8bf4\u5efa\u7684\u7d22\u5f15\u662fcol1,col2,col3\u7684\u590d\u5408\u7d22\u5f15\uff0c\u521a\u597d\u67e5\u8be2\u7684\u4e5f\u662f\u8fd9\u51e0\u5217\u6216\u8005\u90e8\u5206\u6ee1\u8db3\uff09\n\u7406\u89e3\u65b9\u5f0f\u4e8c\uff1a\u7d22\u5f15\u662f\u9ad8\u6548\u627e\u5230\u884c\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4f46\u662f\u4e00\u822c\u6570\u636e\u5e93\u4e5f\u80fd\u4f7f\u7528\u7d22\u5f15\u627e\u5230\u4e00\u4e2a\u5217\u7684\u884c\uff0c\u56e0\u6b64\u5b83\u4e0d\u5fc5\u8bfb\u53d6\u6574\u4e2a\u884c\uff0c\u6bd5\u7adf\u7d22\u5f15\u53f6\u5b50\u8282\u70b9\u5b58\u50a8\u4e86\u4ed6\u4eec\u6240\u5f15\u7528\u7684\u6570\u636e\uff0c\u5f53\u80fd\u901a\u8fc7\u8bfb\u53d6\u7d22\u5f15\u5c31\u53ef\u4ee5\u5f97\u5230\u60f3\u8981\u7684\u6570\u636e\uff0c\u90a3\u5c31\u4e0d\u9700\u8981\u8bfb\u53d6\u884c\u4e86\uff0c\u4e00\u4e2a\u7d22\u5f15\u5305\u542b\u4e86\uff08\u6216\u8986\u76d6\u4e86\uff09\u6ee1\u8db3\u67e5\u8be2\u7ed3\u679c\u7684\u6570\u636e\u5c31\u53eb\u505a\u8986\u76d6\u7d22\u5f15\u3002\n\u6ce8\u610f\uff1a\u5982\u679c\u4f7f\u7528\u8986\u76d6\u7d22\u5f15\uff0c\u4e00\u5b9a\u8981\u6ce8\u610fselect\u5217\u8868\u4e2d\u53ea\u8981\u6240\u9700\u7684\u5217\uff0c\u4e0d\u53ef select * \uff1b\u56e0\u4e3a\u5982\u679c\u5c06\u6240\u6709\u7684\u5b57\u6bb5\u4e00\u8d77\u505a\u7d22\u5f15\u4f1a\u5bfc\u81f4\u7d22\u5f15\u6587\u4ef6\u8fc7\u5927\uff0c\u67e5\u8be2\u6027\u80fd\u4e0b\u964d\u3002\nMySQL\u7d22\u5f15\u4f18\u53162-\u4f18\u5316\u6cd5\u5219\n\n\u5168\u503c\u5339\u914d\u6211\u6700\u7231(\u600e\u4e48\u5efa\u5c31\u600e\u4e48\u7528)\n\n\u6700\u4f73\u5de6\u524d\u7f00\u6cd5\u5219\uff1a\u5982\u679c\u7d22\u5f15\u4e86\u591a\u5217\uff0c\u8981\u9075\u5b88\u6700\u5de6\u524d\u7f00\u6cd5\u5219\u3002\u6307\u7684\u662f\u67e5\u8be2\u4ece\u7d22\u5f15\u7684\u6700\u5de6\u524d\u5217\u5f00\u59cb\u5e76\u4e14\u4e0d\u8df3\u8fc7\u7d22\u5f15\u4e2d\u7684\u5217\u3002\n\n\u4e0d\u5728\u7d22\u5f15\u5217\u4e0a\u505a\u4efb\u4f55\u64cd\u4f5c\uff08\u8ba1\u7b97\u3001\u51fd\u6570\u3001(\u81ea\u52a8or\u624b\u52a8)\u7c7b\u578b\u8f6c\u6362\uff09\uff0c\u4f1a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\u800c\u8f6c\u5411\u5168\u8868\u626b\u63cf\u53a8\n\n\u5b58\u50a8\u5f15\u64ce\u4e0d\u80fd\u4f7f\u7528\u7d22\u5f15\u4e2d\u8303\u56f4\u6761\u4ef6\u53f3\u8fb9\u7684\u5217\n\n\u5c3d\u91cf\u4f7f\u7528\u8986\u76d6\u7d22\u5f15(\u53ea\u8bbf\u95ee\u7d22\u5f15\u7684\u67e5\u8be2(\u7d22\u5f15\u5217\u548c\u67e5\u8be2\u5217\u4e00\u81f4))\uff0c\u51cf\u5c11select *\n\nMySQL\u5728\u4f7f\u7528\u4e0d\u7b49\u4e8e(!=\u6216\u8005&lt;&gt;)\u7684\u65f6\u5019\u65e0\u6cd5\u4f7f\u7528\u7d22\u5f15\u4f1a\u5bfc\u81f4\u5168\u8868\u626b\u63cf\n\nis null ,is not null\u4e5f\u65e0\u6cd5\u4f7f\u7528\u7d22\u5f15\n\nlike\u4ee5\u901a\u914d\u7b26\u5f00\u5934('%abc...')MySQL\u7d22\u5f15\u5931\u6548\u4f1a\u53d8\u6210\u5168\u8868\u626b\u63cf\u7684\u64cd\u4f5c(like % \u52a0\u53f3\u8fb9)\n\u95ee\u9898:\u89e3\u51b3like '%\u5b57\u7b26\u4e32%'\u65f6\u7d22\u5f15\u4e0d\u88ab\u4f7f\u7528\u7684\u65b9\u6cd5? \u2014\u2014 \u8986\u76d6\u7d22\u5f15\uff08\u7d22\u5f15\u7684\u4e2a\u6570\u548c\u987a\u5e8f\u4e0e\u67e5\u8be2\u7684\u5b57\u6bb5\u5b8c\u5168\u76f8\u540c\u6216\u8005\u90e8\u5206\u76f8\u540c\uff09\n\n\u5b57\u7b26\u4e32\u4e0d\u52a0\u5355\u5f15\u53f7\u7d22\u5f15\u5931\u6548\n\n\u5c11\u7528or,\u7528\u5b83\u6765\u8fde\u63a5\u65f6\u4f1a\u7d22\u5f15\u5931\u6548\n\n\n\u53e3\u8bc0\uff1a\n\u200b   \u5168\u503c\u5339\u914d\u6211\u6700\u7231\uff0c\u6700\u5de6\u524d\u7f00\u8981\u9075\u5b88;\n\u200b   \u5e26\u5934\u5927\u54e5\u4e0d\u80fd\u6b7b\uff0c\u4e2d\u95f4\u5144\u5f1f\u4e0d\u80fd\u65ad;\n\u200b   \u7d22\u5f15\u5217\u4e0a\u5c11\u8ba1\u7b97\uff0c\u8303\u56f4\u4e4b\u540e\u5168\u5931\u6548;\n\u200b   LIKE\u767e\u5206\u5199\u6700\u53f3\uff0c\u8986\u76d6\u7d22\u5f15\u4e0d\u5199\u661f;\n\u200b   \u4e0d\u7b49\u7a7a\u503c\u8fd8\u6709or\uff0c\u7d22\u5f15\u5931\u6548\u8981\u5c11\u7528;\n\u200b   VAR\u5f15\u53f7\u4e0d\u53ef\u4e22\uff0cSQL\u9ad8\u7ea7\u4e5f\u4e0d\u96be!\n\u4f8b\u5b50\uff1a\n\nSql \u8bed\u53e5\u4e2d IN \u548c EXISTS \u7684\u533a\u522b\u53ca\u5e94\u7528\nstudent\u8868\nDROP TABLE IF EXISTS `student`;\nCREATE TABLE `student` (\n  `stuid` varchar(16) NOT NULL COMMENT &#39;\u5b66\u53f7&#39;,\n  `stunm` varchar(20) NOT NULL COMMENT &#39;\u5b66\u751f\u59d3\u540d&#39;,\n  PRIMARY KEY (`stuid`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- ----------------------------\n-- Records of student\n-- ----------------------------\nINSERT INTO `student` VALUES (&#39;1001&#39;, &#39;\u5f20\u4e09&#39;);\nINSERT INTO `student` VALUES (&#39;1002&#39;, &#39;\u674e\u56db&#39;);\nINSERT INTO `student` VALUES (&#39;1003&#39;, &#39;\u8d75\u4e8c&#39;);\nINSERT INTO `student` VALUES (&#39;1004&#39;, &#39;\u738b\u4e94&#39;);\nINSERT INTO `student` VALUES (&#39;1005&#39;, &#39;\u5218\u9752&#39;);\nINSERT INTO `student` VALUES (&#39;1006&#39;, &#39;\u5468\u660e&#39;);\nINSERT INTO `student` VALUES (&#39;1007&#39;, &#39;\u5434\u4e03&#39;);\n\nscore\u8868\nDROP TABLE IF EXISTS `score`;\nCREATE TABLE `score` (\n  `stuid` varchar(16) NOT NULL,\n  `courseno` varchar(20) NOT NULL,\n  `scores` float DEFAULT NULL,\n  PRIMARY KEY (`stuid`,`courseno`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\n-- ----------------------------\n-- Records of score\n-- ----------------------------\nINSERT INTO `score` VALUES (&#39;1001&#39;, &#39;C001&#39;, &#39;67&#39;);\nINSERT INTO `score` VALUES (&#39;1001&#39;, &#39;C002&#39;, &#39;87&#39;);\nINSERT INTO `score` VALUES (&#39;1001&#39;, &#39;C003&#39;, &#39;83&#39;);\nINSERT INTO `score` VALUES (&#39;1001&#39;, &#39;C004&#39;, &#39;88&#39;);\nINSERT INTO `score` VALUES (&#39;1001&#39;, &#39;C005&#39;, &#39;77&#39;);\nINSERT INTO `score` VALUES (&#39;1001&#39;, &#39;C006&#39;, &#39;77&#39;);\nINSERT INTO `score` VALUES (&#39;1002&#39;, &#39;C001&#39;, &#39;68&#39;);\nINSERT INTO `score` VALUES (&#39;1002&#39;, &#39;C002&#39;, &#39;88&#39;);\nINSERT INTO `score` VALUES (&#39;1002&#39;, &#39;C003&#39;, &#39;84&#39;);\nINSERT INTO `score` VALUES (&#39;1002&#39;, &#39;C004&#39;, &#39;89&#39;);\nINSERT INTO `score` VALUES (&#39;1002&#39;, &#39;C005&#39;, &#39;78&#39;);\nINSERT INTO `score` VALUES (&#39;1002&#39;, &#39;C006&#39;, &#39;78&#39;);\nINSERT INTO `score` VALUES (&#39;1003&#39;, &#39;C001&#39;, &#39;69&#39;);\nINSERT INTO `score` VALUES (&#39;1003&#39;, &#39;C002&#39;, &#39;89&#39;);\nINSERT INTO `score` VALUES (&#39;1003&#39;, &#39;C003&#39;, &#39;85&#39;);\nINSERT INTO `score` VALUES (&#39;1003&#39;, &#39;C004&#39;, &#39;90&#39;);\nINSERT INTO `score` VALUES (&#39;1003&#39;, &#39;C005&#39;, &#39;79&#39;);\nINSERT INTO `score` VALUES (&#39;1003&#39;, &#39;C006&#39;, &#39;79&#39;);\nINSERT INTO `score` VALUES (&#39;1004&#39;, &#39;C001&#39;, &#39;70&#39;);\nINSERT INTO `score` VALUES (&#39;1004&#39;, &#39;C002&#39;, &#39;90&#39;);\nINSERT INTO `score` VALUES (&#39;1004&#39;, &#39;C003&#39;, &#39;86&#39;);\nINSERT INTO `score` VALUES (&#39;1004&#39;, &#39;C004&#39;, &#39;91&#39;);\nINSERT INTO `score` VALUES (&#39;1004&#39;, &#39;C005&#39;, &#39;80&#39;);\nINSERT INTO `score` VALUES (&#39;1004&#39;, &#39;C006&#39;, &#39;80&#39;);\nINSERT INTO `score` VALUES (&#39;1005&#39;, &#39;C001&#39;, &#39;71&#39;);\nINSERT INTO `score` VALUES (&#39;1005&#39;, &#39;C002&#39;, &#39;91&#39;);\nINSERT INTO `score` VALUES (&#39;1005&#39;, &#39;C003&#39;, &#39;87&#39;);\nINSERT INTO `score` VALUES (&#39;1005&#39;, &#39;C004&#39;, &#39;92&#39;);\nINSERT INTO `score` VALUES (&#39;1005&#39;, &#39;C005&#39;, &#39;81&#39;);\nINSERT INTO `score` VALUES (&#39;1005&#39;, &#39;C006&#39;, &#39;81&#39;);\nINSERT INTO `score` VALUES (&#39;1006&#39;, &#39;C001&#39;, &#39;72&#39;);\nINSERT INTO `score` VALUES (&#39;1006&#39;, &#39;C002&#39;, &#39;92&#39;);\nINSERT INTO `score` VALUES (&#39;1006&#39;, &#39;C003&#39;, &#39;88&#39;);\nINSERT INTO `score` VALUES (&#39;1006&#39;, &#39;C004&#39;, &#39;93&#39;);\nINSERT INTO `score` VALUES (&#39;1006&#39;, &#39;C005&#39;, &#39;82&#39;);\nINSERT INTO `score` VALUES (&#39;1006&#39;, &#39;C006&#39;, &#39;82&#39;);\n\ncourse\u8868\nDROP TABLE IF EXISTS `courses`;\nCREATE TABLE `courses` (\n  `courseno` varchar(20) NOT NULL,\n  `coursenm` varchar(100) NOT NULL,\n  PRIMARY KEY (`courseno`)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT=&#39;\u8bfe\u7a0b\u8868&#39;;\n\n-- ----------------------------\n-- Records of courses\n-- ----------------------------\nINSERT INTO `courses` VALUES (&#39;C001&#39;, &#39;\u5927\u5b66\u8bed\u6587&#39;);\nINSERT INTO `courses` VALUES (&#39;C002&#39;, &#39;\u65b0\u89c6\u91ce\u82f1\u8bed&#39;);\nINSERT INTO `courses` VALUES (&#39;C003&#39;, &#39;\u79bb\u6563\u6570\u5b66&#39;);\nINSERT INTO `courses` VALUES (&#39;C004&#39;, &#39;\u6982\u7387\u8bba\u4e0e\u6570\u7406\u7edf\u8ba1&#39;);\nINSERT INTO `courses` VALUES (&#39;C005&#39;, &#39;\u7ebf\u6027\u4ee3\u6570&#39;);\nINSERT INTO `courses` VALUES (&#39;C006&#39;, &#39;\u9ad8\u7b49\u6570\u5b66(\u4e00)&#39;);\nINSERT INTO `courses` VALUES (&#39;C007&#39;, &#39;\u9ad8\u7b49\u6570\u5b66(\u4e8c)&#39;);\n\n\u8865\u5145\uff1aSQL\u8bed\u53e5\u6267\u884c\u987a\u5e8f\u8be6\u89c1\uff1aSQL\u8bed\u53e5\u6267\u884c\u987a\u5e8f\nIN \u8bed\u53e5\uff1a\u53ea\u6267\u884c\u4e00\u6b21\n\u786e\u5b9a\u7ed9\u5b9a\u7684\u503c\u662f\u5426\u4e0e\u5b50\u67e5\u8be2\u6216\u5217\u8868\u4e2d\u7684\u503c\u76f8\u5339\u914d\u3002in\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u9996\u5148\u67e5\u8be2\u5b50\u67e5\u8be2\u7684\u8868\uff0c\u7136\u540e\u5c06\u5185\u8868\u548c\u5916\u8868\u505a\u4e00\u4e2a\u7b1b\u5361\u5c14\u79ef\uff0c\u7136\u540e\u6309\u7167\u6761\u4ef6\u8fdb\u884c\u7b5b\u9009\u3002\u6240\u4ee5\u76f8\u5bf9\u5185\u8868\u6bd4\u8f83\u5c0f\u7684\u65f6\u5019\uff0cin\u7684\u901f\u5ea6\u8f83\u5feb\u3002\n\u5177\u4f53sql\u793a\u4f8b\uff1a\nselect * from student s where s.stuid in(select stuid from score ss where ss.stuid = s.stuid)\n\n\nselect * from student s where s.stuid in(select stuid from score ss where ss.stuid &lt;1005)\n\n\n\u4ee5\u4e0a\u4e24\u4e2a\u8bed\u53e5\u7684\u6267\u884c\u6d41\u7a0b\uff1a\n\u9996\u5148\u4f1a\u6267\u884cfrom\u8bed\u53e5\u627e\u51fastudent\u8868\uff0c\u7136\u540e\u6267\u884c in \u91cc\u9762\u7684\u5b50\u67e5\u8be2\uff0c\u518d\u7136\u540e\u5c06\u67e5\u8be2\u5230\u7684\u7ed3\u679c\u548c\u539f\u6709\u7684user\u8868\u505a\u4e00\u4e2a\u7b1b\u5361\u5c14\u79ef\uff0c\u518d\u6839\u636e\u7684 student.stuid IN score.stuid \u7684\u6761\u4ef6\uff0c\u5c06\u7ed3\u679c\u8fdb\u884c\u7b5b\u9009\uff08\u65e2\u6bd4\u8f83stuid\u5217\u7684\u503c\u662f\u5426\u76f8\u7b49\uff0c\u5c06\u4e0d\u76f8\u7b49\u7684\u5220\u9664\uff09\u3002\u6700\u540e\u5f97\u5230\u7b26\u5408\u6761\u4ef6\u7684\u6570\u636e\u3002\nEXISTS\u8bed\u53e5\uff1a\u6267\u884cstudent.length\u6b21\n\u6307\u5b9a\u4e00\u4e2a\u5b50\u67e5\u8be2\uff0c\u68c0\u6d4b\u884c\u7684\u5b58\u5728\u3002\u904d\u5386\u5faa\u73af\u5916\u8868\uff0c\u7136\u540e\u770b\u5916\u8868\u4e2d\u7684\u8bb0\u5f55\u6709\u6ca1\u6709\u548c\u5185\u8868\u7684\u6570\u636e\u4e00\u6837\u7684\u3002\u5339\u914d\u4e0a\u5c31\u5c06\u7ed3\u679c\u653e\u5165\u7ed3\u679c\u96c6\u4e2d\u3002\nEXISTS \u8bed\u6cd5\uff1a\nSELECT ... FROM table WHERE EXISTS(subquery)\n\u7406\u89e3\uff1a\u5c06\u4e3b\u67e5\u8be2\u7684\u6570\u636e\u653e\u5230\u5b50\u67e5\u8be2\u4e2d\u505a\u6761\u4ef6\u9a8c\u8bc1\uff0c\u6839\u636e\u9a8c\u8bc1\u7ed3\u679c\uff08TRUE\u6216\u8005FALSE\uff09\u6765\u51b3\u5b9a\u6731\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u679c\u662f\u5426\u5f97\u610f\u4fdd\u7559\u3002\u76f8\u5f53\u4e8e\u4ece\u8868A\u548cB\u4e2d\u53d6\u51fa\u4ea4\u96c6\uff0c\u7136\u540e\u518d\u4eceA\u8868\u4e2d\u53d6\u51fa\u6240\u5728\u4ea4\u96c6\u7684\u90e8\u5206\u6570\u636e\uff0c\u5f53\u7136\u540e\u9762\u52a0WHERE\u6761\u4ef6\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b5b\u9009\u3002\nselect * from student s where EXISTS(select stuid from score ss where ss.stuid = s.stuid)\n\n\u8fd9\u6761sql\u8bed\u53e5\u7684\u6267\u884c\u7ed3\u679c\u548c\u4e0a\u9762\u7684in\u7684\u7b2c\u4e00\u6761\u6267\u884c\u7ed3\u679c\u662f\u4e00\u6837\u7684\u3002\n\u4f46\u662f\uff0c\u4e0d\u4e00\u6837\u7684\u662f\u5b83\u4eec\u7684\u6267\u884c\u6d41\u7a0b\u5b8c\u5168\u4e0d\u4e00\u6837\uff1a\n\u3000\u3000\u4f7f\u7528exists\u5173\u952e\u5b57\u8fdb\u884c\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u9996\u5148\uff0c\u5148\u67e5\u8be2\u7684\u4e0d\u662f\u5b50\u67e5\u8be2\u7684\u5185\u5bb9\uff0c\u800c\u662f\u67e5\u7684\u4e3b\u67e5\u8be2\u7684\u8868\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5148\u6267\u884c\u7684sql\u8bed\u53e5\u662f\uff1a\nselect * from student s\n\n\n\u5982\u679c\u6210\u7acb\u5219\u8fd4\u56detrue\u4e0d\u6210\u7acb\u5219\u8fd4\u56defalse\u3002\u5982\u679c\u8fd4\u56de\u7684\u662ftrue\u7684\u8bdd\uff0c\u5219\u8be5\u884c\u7ed3\u679c\u4fdd\u7559\uff0c\u5982\u679c\u8fd4\u56de\u7684\u662ffalse\u7684\u8bdd\uff0c\u5219\u5220\u9664\u8be5\u884c\uff0c\u6700\u540e\u5c06\u5f97\u5230\u7684\u7ed3\u679c\u8fd4\u56de\u3002\nIN\u548cEXISTS\u7684\u533a\u522b\u53ca\u5e94\u7528\u573a\u666f\n\u200b   \u5982\u679c\u5b50\u67e5\u8be2\u5f97\u51fa\u7684\u7ed3\u679c\u96c6\u8bb0\u5f55\u8f83\u5c11\uff0c\u4e3b\u67e5\u8be2\u4e2d\u7684\u8868\u8f83\u5927\u4e14\u53c8\u6709\u7d22\u5f15\u65f6\u5e94\u8be5\u7528 in , \u53cd\u4e4b\u5982\u679c\u5916\u5c42\u7684\u4e3b\u67e5\u8be2\u8bb0\u5f55\u8f83\u5c11\uff0c\u5b50\u67e5\u8be2\u4e2d\u7684\u8868\u5927\uff0c\u53c8\u6709\u7d22\u5f15\u65f6\u4f7f\u7528 exists \u3002\u5176\u5b9e\u533a\u5206 in \u548c exists \u4e3b\u8981\u662f\u9020\u6210\u4e86\u9a71\u52a8\u987a\u5e8f\u7684\u6539\u53d8(\u8fd9\u662f\u6027\u80fd\u53d8\u5316\u7684\u5173\u952e)\uff0c\u5982\u679c\u662f exists \uff0c\u90a3\u4e48\u4ee5\u5916\u5c42\u8868\u4e3a\u9a71\u52a8\u8868\uff0c\u5148\u88ab\u8bbf\u95ee\uff0c\u5982\u679c\u662f in \uff0c\u90a3\u4e48\u5148\u6267\u884c\u5b50\u67e5\u8be2\uff0c\u6240\u4ee5\u4f1a\u4ee5\u9a71\u52a8\u8868\u7684\u5feb\u901f\u8fd4\u56de\u4e3a\u76ee\u6807\uff0c\u90a3\u4e48\u5c31\u4f1a\u8003\u8651\u5230\u7d22\u5f15\u53ca\u7ed3\u679c\u96c6\u7684\u5173\u7cfb\u4e86 \uff0c\u53e6\u5916 in \u65f6\u4e0d\u5bf9NULL\u8fdb\u884c\u5904\u7406\u3002\n\u200b   in \u662f\u628a\u5916\u8868\u548c\u5185\u8868\u4f5c hash \u8fde\u63a5\uff0c\u800cexists\u662f\u5bf9\u5916\u8868\u4f5cloop\u5faa\u73af\uff0c\u6bcf\u6b21loop\u5faa\u73af\u518d\u5bf9\u5185\u8868\u8fdb\u884c\u67e5\u8be2\u3002\u4e00\u76f4\u4ee5\u6765\u8ba4\u4e3aexists\u6bd4in\u6548\u7387\u9ad8\u7684\u8bf4\u6cd5\u662f\u4e0d\u51c6\u786e\u7684\u3002\nnot in \u548cnot exists\n\u200b   \u5982\u679c\u67e5\u8be2\u8bed\u53e5\u4f7f\u7528\u4e86not in \u90a3\u4e48\u5185\u5916\u8868\u90fd\u8fdb\u884c\u5168\u8868\u626b\u63cf\uff0c\u6ca1\u6709\u7528\u5230\u7d22\u5f15\uff1b\u800cnot extsts \u7684\u5b50\u67e5\u8be2\u4f9d\u7136\u80fd\u7528\u5230\u8868\u4e0a\u7684\u7d22\u5f15\u3002\u6240\u4ee5\u65e0\u8bba\u90a3\u4e2a\u8868\u5927\uff0c\u7528not exists\u90fd\u6bd4not in\u8981\u5feb\u3002\n\u67e5\u8be2\u4f18\u5316\n1.\u539f\u5219\n1.\u5c0f\u8868\u9a71\u52a8\u5927\u8868\uff0c\u5373\u5c0f\u7684\u6570\u636e\u96c6\u9a71\u52a8\u5927\u7684\u6570\u636e\u96c6\u3002\n\u200b   \u6570\u636e\u5e93\u6700\u4f24\u795e\u7684\u5c31\u662f\u8ddf\u7a0b\u5e8f\u94fe\u63a5\u91ca\u653e\uff0c\u7b2c\u4e00\u4e2a\u5efa\u7acb\u4e8610000\u6b21\u94fe\u63a5\uff0c\u7b2c\u4e8c\u4e2a\u5efa\u7acb\u4e8650\u6b21\u3002\u5047\u8bbe\u94fe\u63a5\u4e86\u4e24\u6b21\uff0c\u6bcf\u6b21\u505a\u4e0a\u767e\u4e07\u6b21\u7684\u6570\u636e\u96c6\u67e5\u8be2\uff0c\u67e5\u5b8c\u5c31\u8d70\uff0c\u8fd9\u6837\u5c31\u53ea\u505a\u4e86\u4e24\u6b21\uff1b\u76f8\u53cd\u5efa\u7acb\u4e86\u4e0a\u767e\u4e07\u6b21\u94fe\u63a5\uff0c\u7533\u8bf7\u94fe\u63a5\u91ca\u653e\u53cd\u590d\u91cd\u590d\uff0c\u8fd9\u6837\u7cfb\u7edf\u5c31\u53d7\u4e0d\u4e86\u4e86\u3002\n\u8fd9\u65f6\u5019\u5c31\u8bde\u751f\u4e86in \u548cexists\u7684\u5bf9\u6bd4\u3002\nin\n\u8fd9\u91cc\u5047\u8bbeA\u8868\u4ee3\u8868\u5458\u5de5\u8868\uff0cB\u8868\u4ee3\u8868\u90e8\u95e8\u8868\u3002\n\u5047\u8bbe\u90e8\u95e8\u53ea\u6709\u4e09\u4e2a\uff0c\u9500\u552e\u3001\u6280\u672f\u90e8\u3001\u884c\u653f\u90e8\uff0c\u8a00\u4e0b\u4e4b\u610f\u662f\u5728\u8fd9\u4e09\u4e2a\u90e8\u95e8\u91cc\u7684\u6240\u6709\u5458\u5de5\u90fd\u67e5\u51fa\u3002\nselect * from A where id in (select id from B);\n\n\u7b49\u4ef7\u4e8e\uff1a\n\u5148\u5faa\u73af\nfor select id from B\n\n\u6bd4\u5982\u4e00\u4e2a\u516c\u53f8\u67095\u4e2a\u90e8\u95e8\uff0c\u4f46\u662f\u534e\u4e3a\u7684\u5458\u5de5\u5c11\u8bf4\u670915W-20W\uff0c\u5458\u5de5\u603b\u4e0d\u80fd\u6bd4\u90e8\u95e8\u591a\u5427\uff0c1\u4e2a\u5458\u5de5\u4e0d\u80fd\u670910-20\u51e0\u4e2a\u90e8\u95e8\u5427\uff0c\u8fd9\u65f6\u5019\u5c31\u76f8\u5f53\u4e8e\u5f97\u5230\u4e86\u5c0f\u8868(\u90e8\u95e8\u8868)\uff1b\n\u540e\u5faa\u73af\uff1a\nfor select * from A where A.id = B.id\n\n\u76f8\u5f53\u4e8eA.id\u7b49B\u8868\u91cc\u9762\u7684\uff0c\u76f8\u5f53\u4e8e\u4ece\u90e8\u95e8\u8868\u83b7\u5f97\u5bf9\u5e94\u7684id\u3002\n\u5f53B\u8868\u7684\u6570\u636e\u96c6\u5fc5\u987b\u5c0f\u4e8eA\u8868\u7684\u6570\u636e\u96c6\u65f6\uff0c\u7528in\u4f18\u4e8eexists\u3002\n\u53cd\u4e4b\nselect * from A where exists (select 1 from B where B.id = A.id); \n# \u8fd9\u91cc\u7684select 1\u5e76\u4e0d\u7edd\u5bf9\uff0c\u53ef\u4ee5\u5199\u4e3aselect &#39;X&#39;\u6216\u8005&#39;A&#39;,&#39;B&#39;,&#39;C&#39;\u90fd\u53ef\u4ee5\uff0c\u53ea\u8981\u662f\u5e38\u91cf\u5c31\u53ef\u4ee5\u3002\n\n\u7b49\u4ef7\u4e8e\uff1a\n\u5148\u5faa\u73af\nfor select * from A\n\n\u540e\u5faa\u73af\nfor select * from B where B.id = A.id\n\n\u8fd9\u6837exists\u5c31\u4f1a\u53d8\u6210\u770b\u770bA\u8868\u662f\u5426\u5b58\u5728\u4e8e(select 1 from B where B.id = A.id)\u91cc\u9762\uff0c\u8fd9\u4e2a\u67e5\u8be2\u8fd4\u56de\u7684\u662fTRUE\u6216\u8005FALSE\u7684BOOL\u503c\uff0c\u7b80\u5355\u6765\u8bf4\u5c31\u662f\u8981\u5f53A\u8868\u7684\u6570\u636e\u96c6\u5c0f\u4e8eB\u8868\u7684\u6570\u636e\u96c6\u65f6\uff0c\u7528exists\u4f18\u4e8ein\u3002\n\u8981\u6ce8\u610f\u7684\u662f\uff1aA\u8868\u4e0eB\u8868\u7684ID\u5b57\u6bb5\u5e94\u8be5\u5efa\u7acb\u7d22\u5f15\u3002\nEXISTS\n\u8bed\u6cd5\uff1aEXISTS\nSELECT ... FROM table WHERE EXISTS(subquery)\u3002\n\u7406\u89e3\uff1a\u5c06\u4e3b\u67e5\u8be2\u7684\u6570\u636e\u653e\u5230\u5b50\u67e5\u8be2\u4e2d\u505a\u6761\u4ef6\u9a8c\u8bc1\uff0c\u6839\u636e\u9a8c\u8bc1\u7ed3\u679c\uff08TRUE\u6216\u8005FALSE\uff09\u6765\u51b3\u5b9a\u6731\u67e5\u8be2\u7684\u6570\u636e\u7ed3\u679c\u662f\u5426\u5f97\u610f\u4fdd\u7559\u3002\n\u76f8\u5f53\u4e8e\u4ece\u8868A\u548cB\u4e2d\u53d6\u51fa\u4ea4\u96c6\uff0c\u7136\u540e\u518d\u4eceA\u8868\u4e2d\u53d6\u51fa\u6240\u5728\u4ea4\u96c6\u7684\u90e8\u5206\u6570\u636e\uff0c\u5f53\u7136\u540e\u9762\u52a0WHERE\u6761\u4ef6\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u7b5b\u9009\u3002\n\u8865\u5145\uff1a\nSQL\u8bed\u53e5\u6267\u884c\u987a\u5e8f\u8be6\u89c1\uff1aSQL\u8bed\u53e5\u6267\u884c\u987a\u5e8f\n\nEXISTS(subquery)\u53ea\u8fd4\u56deTRUE\u6216\u8005FALSE\uff0c\u56e0\u6b64\u5b50\u67e5\u8be2\u4e2d\u7684SELECT * \u4e5f\u53ef\u4ee5\u662fSELECT 1 \u6216\u8005SELECT 'X'\uff0c\u5b98\u65b9\u8bf4\u6cd5\u662f\u5b9e\u9645\u6267\u884c\u65f6\u4f1a\u5ffd\u7565SELECT\u6e05\u5355\uff0c\u56e0\u6b64\u6ca1\u6709\u533a\u522b\u3002\nEXISTS\u5b50\u67e5\u8be2\u7684\u5b9e\u9645\u6267\u884c\u8fc7\u7a0b\u53ef\u80fd\u7ecf\u8fc7\u4e86\u4f18\u5316\u800c\u4e0d\u662f\u7406\u89e3\u4e0a\u7684\u9010\u6761\u5bf9\u6bd4\uff0c\u5982\u679c\u62c5\u5fe7\u6548\u7387\u95ee\u9898\uff0c\u53ef\u8fdb\u884c\u5b9e\u9645\u6821\u9a8c\u3002\nEXISTS\u5b50\u67e5\u8be2\u65fa\u65fa\u53ef\u4ee5\u7528\u6761\u4ef6\u8868\u8fbe\u5f0f\uff0c\u5176\u4ed6\u5b50\u67e5\u8be2\u6216\u8005JOIN\u6765\u66ff\u4ee3\uff0c\u4f55\u79cd\u6700\u4f18\u9700\u8981\u5177\u4f53\u95ee\u9898\u5177\u4f53\u5206\u6790\u3002\n\n\u5982\u679c\u67e5\u8be2\u7684\u4e24\u4e2a\u8868\u5927\u5c0f\u76f8\u5f53\uff0c\u90a3\u4e48\u7528in\u548cexists\u5dee\u522b\u4e0d\u5927\u3002\n\u5ef6\u4f38\u4e3e\u4f8b\u5de9\u56fa\uff1a\n\u5982\u679c\u4e24\u4e2a\u8868\u4e2d\u4e00\u4e2a\u8f83\u5c0f\uff0c\u4e00\u4e2a\u662f\u5927\u8868\uff0c\u5219\u5b50\u67e5\u8be2\u8868\u5927\u7684\u7528exists\uff0c\u5b50\u67e5\u8be2\u8868\u5c0f\u7684\u7528in\uff1a\n\u4f8b\u5982\uff1a\u8868A\uff08\u5c0f\u8868\uff09\uff0c\u8868B\uff08\u5927\u8868\uff09\nselect * from A where cc in (select cc from B) ;  # \u6548\u7387\u4f4e\uff0c\u7528\u5230\u4e86A\u8868\u4e0acc\u5217\u7684\u7d22\u5f15\uff1b\nselect * from A where exists(select cc from B where cc=A.cc) ;  # \u6548\u7387\u9ad8\uff0c\u7528\u5230\u4e86B\u8868\u4e0acc\u5217\u7684\u7d22\u5f15\u3002\n\n\u76f8\u53cd\u7684\nselect * from B where cc in (select cc from A) ;  # \u6548\u7387\u9ad8\uff0c\u7528\u5230\u4e86B\u8868\u4e0acc\u5217\u7684\u7d22\u5f15\uff1b\nselect * from B where exists(select cc from A where cc=B.cc) ;  # \u6548\u7387\u4f4e\uff0c\u7528\u5230\u4e86A\u8868\u4e0acc\u5217\u7684\u7d22\u5f15\u3002\n\nnot in \u548cnot exists\u5982\u679c\u67e5\u8be2\u8bed\u53e5\u4f7f\u7528\u4e86not in \u90a3\u4e48\u5185\u5916\u8868\u90fd\u8fdb\u884c\u5168\u8868\u626b\u63cf\uff0c\u6ca1\u6709\u7528\u5230\u7d22\u5f15\uff1b\u800cnot extsts \u7684\u5b50\u67e5\u8be2\u4f9d\u7136\u80fd\u7528\u5230\u8868\u4e0a\u7684\u7d22\u5f15\u3002\u6240\u4ee5\u65e0\u8bba\u90a3\u4e2a\u8868\u5927\uff0c\u7528not exists\u90fd\u6bd4not in\u8981\u5feb\u3002\n\u4f8b\uff1a\n\n2.Order By\u5173\u952e\u5b57\u4f18\u5316\nOrder By\u5b50\u53e5\uff0c\u5c3d\u91cf\u4f7f\u7528Index\u65b9\u5f0f\u6392\u5e8f,\u907f\u514d\u4f7f\u7528FileSort\u65b9\u5f0f\u6392\u5e8f \u3002\n\u5c3d\u53ef\u80fd\u5728\u7d22\u5f15\u5217\u4e0a\u5b8c\u6210\u6392\u5e8f\u64cd\u4f5c\uff0c\u9075\u7167\u7d22\u5f15\u7684\u6700\u4f73\u5de6\u524d\u7f00\u3002\n\u63d0\u9ad8Order By\u7684\u901f\u5ea6:\n\nOrder by\u65f6, select * \u662f\u4e00\u4e2a\u5927\u5fcc,\u5e94\u8be5\u53ea select \u9700\u8981\u7684\u5b57\u6bb5\uff0c\u8fd9\u70b9\u975e\u5e38\u91cd\u8981\u3002\u5728\u8fd9\u91cc\u7684\u5f71\u54cd\u662f:\n\n\u5f53Query\u7684\u5b57\u6bb5\u5927\u5c0f\u603b\u548c\u5c0f\u4e8emax_length_for_sort_data\u800c\u4e14\u6392\u5e8f\u5b57\u6bb5\u4e0d\u662fTEXT \u6216\u8005 BLOB\u7c7b\u578b\u65f6\uff0c\u4f1a\u7528\u6539\u8fdb\u540e\u7684\u7b97\u6cd5\u2014\u2014\u5355\u8def\u6392\u5e8f\uff0c\u5426\u5219\u7528\u8001\u7b97\u6cd5\u2014\u2014\u591a\u8def\u6392\u5e8f\u3002\n\n\u4e24\u79cd\u6392\u5e8f\u7b97\u6cd5\u7684\u6570\u636e\u90fd\u6709\u53ef\u80fd\u8d85\u51fasort_buffer\u7684\u5bb9\u91cf\uff0c\u8d85\u51fa\u4e4b\u540e\uff0c\u4f1a\u521b\u5efatmp\u6587\u4ef6\u8fdb\u884c\u5408\u5e76\u6392\u5e8f\uff0c\u5bfc\u81f4\u591a\u6b21IO\uff0c\u4f46\u662f\u7528\u5355\u8def\u6392\u5e8f\u7b97\u6cd5\u7684\u98ce\u9669\u4f1a\u66f4\u5927\u4e00\u4e9b,\u6240\u4ee5\u9700\u8981\u63d0\u9ad8sort_buffer_size\u3002\n\n\n\n\u5c1d\u8bd5\u63d0\u9ad8 sort_buffer_size (\u6392\u5e8f\u7f13\u51b2\u533a\u5927\u5c0f)\n\u4e0d\u7ba1\u7528\u54ea\u79cd\u7b97\u6cd5\uff0c\u63d0\u9ad8\u8fd9\u4e2a\u53c2\u6570\u90fd\u4f1a\u63d0\u9ad8\u6548\u7387\uff0c\u5f53\u7136\uff0c\u8981\u6839\u636e\u7cfb\u7edf\u7684\u80fd\u529b\u53bb\u63d0\u9ad8\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u53c2\u6570\u662f\u9488\u5bf9\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u3002\n\n\u5c1d\u8bd5\u63d0\u9ad8 max_length_for_sort_data (\u6392\u5e8f\u6570\u636e\u7684\u6700\u5927\u957f\u5ea6)\n\u63d0\u9ad8\u8fd9\u4e2a\u53c2\u6570\uff0c\u4f1a\u589e\u52a0\u7528\u6539\u8fdb\u7b97\u6cd5\u7684\u6982\u7387\u3002\u4f46\u662f\u5982\u679c\u8bbe\u7684\u592a\u9ad8\uff0c\u6570\u636e\u603b\u5bb9\u91cf\u8d85\u51fasort_buffer_size\u7684\u6982\u7387\u5c31\u589e\u5927\uff0c\u660e\u663e\u75c7\u72b6\u662f\u9ad8\u78c1\u76d8I/O\u6d3b\u52a8\u548c\u4f4eCPU\u4f7f\u7528\u7387\u3002\n\n\n\n3.Group By\u5173\u952e\u5b57\u4f18\u5316\n\u4e0eOrder By\u76f8\u4f3c\u3002\n\ngroup by\u5b9e\u8d28\u662f\u5148\u6392\u5e8f\u540e\u8fdb\u884c\u5206\u7ec4\uff0c\u9075\u7167\u7d22\u5f15\u5efa\u7684\u6700\u4f73\u5de6\u524d\u7f00\u3002\n\n\u5f53\u65e0\u6cd5\u4f7f\u7528\u7d22\u5f15\u5217\uff0c\u589e\u5927max_length_for_sort_data\u53c2\u6570\u7684\u8bbe\u7f6e+\u589e\u5927sort_buffer_size\u53c2\u6570\u7684\u8bbe\u7f6e\u3002\n\nwhere\u9ad8\u4e8ehaving\uff0c\u80fd\u5199\u5728where\u9650\u5b9a\u7684\u6761\u4ef6\u5c31\u4e0d\u8981\u53bbhaving\u9650\u5b9a\u4e86\u3002\n\n\n2.\u6d41\u7a0b\n\n\u6162\u67e5\u8be2\u7684\u5f00\u542f\u5e76\u6355\u83b7\nexplain + \u6162SQL\u5206\u6790\nshow profile \u67e5\u8be2SQL\u5728MySQL\u670d\u52a1\u5668\u91cc\u9762\u7684\u6267\u884c\u7ec6\u8282\u548c\u751f\u547d\u5468\u671f\u60c5\u51b5\nSQL\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u53c2\u6570\u8c03\u4f18\u3002\n\n\u6162\u67e5\u8be2\u65e5\u5fd7\nhttps://dev.MySQL.com/doc/refman/8.0/en/slow-query-log.html\n\n1.\u8bf4\u660e\nMySQL\u7684\u6162\u67e5\u8be2\u65e5\u5fd7\u662fMySQL\u63d0\u4f9b\u7684\u4e00\u79cd\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5b83\u7528\u6765\u8bb0\u5f55\u5728MySQL\u4e2d\u54cd\u5e94\u65f6\u95f4\u8d85\u8fc7\u9600\u503c\u7684\u8bed\u53e5\uff0c\u5177\n\u4f53\u6307\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc7long_query_time\u503c\u7684SQL\uff0c\u5219\u4f1a\u88ab\u8bb0\u5f55\u5230\u6162\u67e5\u8be2\u65e5\u5fd7\u4e2d\u3002\n\u5177\u4f53\u6307\u8fd0\u884c\u65f6\u95f4\u8d85\u8fc7Iong_query_time\u503c\u7684SQL\uff0c\u5219\u4f1a\u88ab\u8bb0\u5f55\u5230\u6162\u67e5\u8be2\u65e5\u5fd7\u4e2d\u3002long_query_time\u7684\u9ed8\u8ba4\u503c\u4e3a10\uff0c\u610f\u601d\u662f\u8fd0\u884c\u65f6\u95f4\u5927\u4e8e10\u79d2\u7684\u8bed\u53e5\u3002\n\u7531\u5b83\u6765\u67e5\u770b\u54ea\u4e9bSQL\u8d85\u51fa\u4e86\u7684\u6700\u5927\u5fcd\u8010\u65f6\u95f4\u503c\uff0c\u518d\u7ed3\u5408 explain \u8fdb\u884c\u5168\u9762\u5206\u6790\u3002\n2.\u4f7f\u7528\n\u9ed8\u8ba4MySQL\u6ca1\u6709\u5f00\u542f\u6162\u67e5\u8be2\uff0c\u9700\u8981\u8bf4\u52a8\u8bbe\u7f6e\u8fd9\u4e2a\u53c2\u6570\u3002\u5f53\u7136\uff0c\u5982\u679c\u4e0d\u662f\u8c03\u4f18\u9700\u8981\u7684\u8bdd\uff0c\u4e00\u822c\u4e0d\u5efa\u8bae\u5f00\u542f\u8be5\u53c2\u6570\uff0c\u56e0\u4e3a\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7\u4f1a\u6216\u591a\u6216\u5c11\u5e26\u6765\u4e00\u5b9a\u7684\u6027\u80fd\u5f71\u54cd\u3002\u6162\u67e5\u8be2\u65e5\u5fd7\u652f\u6301\u5c06\u65e5\u5fd7\u5199\u5165\u6587\u4ef6\u3002\n\u67e5\u770b\u662f\u5426\u5f00\u542f  SHOW GLOBAL VARIABLES LIKE 'slow_query_log%'\u3002\n\n\u4e0a\u9762\u67e5\u8be2\u7ed3\u679c\u7b2c\u4e00\u884c\uff0c\u8fd9\u91cc\u662f\u5f00\u542f\u7684\uff0c\u7b2c\u4e8c\u884c\u662f\u9ed8\u8ba4\u67e5\u8be2\u8def\u5f84\u6587\u4ef6\u540d\u3002\n\u8865\u5145\uff1a\u5982\u679c\u901a\u8fc7\u7ec8\u7aef\u547d\u4ee4\u8bbe\u5b9a\u7684\u8bdd\uff0c\u518d\u67e5\u8be2\u662f\u770b\u4e0d\u5230\u4fee\u6539\u7ed3\u679c\u7684\uff0c\u9700\u8981\u65b0\u5f00\u542f\u4e00\u4e2a\u7a97\u53e3\u67e5\u770b\u5373\u53ef\u3002\u5982\u679c\u8981\u6c38\u4e45\u751f\u6548\uff0c\u5fc5\u987b\u4fee\u6539my.cnf\u914d\u7f6e\u6587\u4ef6(\u5176\u4ed6\u7cfb\u7edf\u53d8\u91cf\u4e5f\u662f\u5982\u6b64)\u3002\n\u8981\u660e\u786e\u6307\u5b9a\u521d\u59cb\u6162\u67e5\u8be2\u65e5\u5fd7\u72b6\u6001\uff0c\u8bf7\u4f7f\u7528 SET GLOBAL slow_query_log = 1 | 0\u3002\n\u4f7f\u7528`SET GLOBAL slow_query_log = 1\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7\u53ea\u5bf9\u5f53\u524d\u6570\u636e\u5e93\u751f\u6548\uff0cMySQL\u91cd\u542f\u540e\u4fbf\u4f1a\u5931\u6548\u3002\n\u90a3\u4e48\u5f00\u542f\u4e86\u6162\u65e5\u5fd7\u540e\uff0c\u600e\u4e48\u6837\u7684SQL\u624d\u4f1a\u8bb0\u5f55\u5230\u6162\u67e5\u8be2\u5f53\u4e2d\u5462\uff1f\n\u8fd9\u4e2a\u662f\u7531\u53c2\u6570long_query_time\u63a7\u5236\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0blong_query_time\u7684\u503c\u662f10\u79d2\u3002\n\u67e5\u770b:SHOW GLOBAL VARIABLES LIKE 'long_query_time';\n\u5047\u5982SQL\u8fd0\u884c\u65f6\u95f4\u521a\u597d\u7b49\u4e8elong_query_time\u7684\u60c5\u51b5\uff0c\u5e76\u4e0d\u4f1a\u88ab\u8bb0\u5f55\u4e0b\u6765\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728MySQL\u6e90\u7801\u91cc\u662f\u5224\u65ad\u5927\u4e8elong_query_time\uff0c\u800c\u975e\u5927\u4e8e\u7b49\u4e8e\u3002\n\u8bbe\u7f6e:SET GLOBAL long_query_time = 3\u3002\n\n\u8bb0\u5f55\u6162SQL\u5e76\u540e\u7eed\u5206\u6790\uff1aselect sleep(4);\n1598601396920\n\n\u67e5\u770b\u5f53\u524d\u7cfb\u7edf\u4e2d\u591a\u5c11\u6761\u6ee1\u8bb0\u5f55\uff1ashow global status like '%Slow_queries%';\n\n\n\n\u914d\u7f6e\u7248\n\nshow_query_log = 1;\nshow_query_log_file=/var/lib/MySQL/MySQL_slow.log\nlog_query_time=3;\nlog_output=FILE\n3.\u65e5\u5fd7\u5206\u6790\u5de5\u5177MySQLdumpslow\n\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5982\u679c\u8981\u624b\u52a8\u5206\u6790\u65e5\u5fd7\uff0c\u67e5\u627e\u3001\u5206\u6790SQL\uff0c\u663e\u7136\u662f\u4e00\u4e2a\u4f53\u529b\u6d3b\uff0cMySQL\u63d0\u4f9b\u4e86\u65e5\u5fd7\u5206\u6790\u5de5\u5177MySQLdumpslow\u3002\n\u4e0a\u9762\u6d4b\u8bd5\u7684\u6162\u67e5\u8be2SQL\u53ea\u6709\u4e00\u6761\uff0c\u5047\u5982\u5728\u5b9e\u9645\u7684\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u6162\u67e5\u8be2SQL\u8fdc\u8fdc\u9ad8\u4e8e\u6d4b\u8bd5\u7684\u6570\u91cf\uff0c\u5341\u51e0\u6761\u751a\u81f3\u51e0\u5341\u6761\uff0c\u5047\u5982\u51e0\u6761\u6162\u67e5\u8be2\u51fa\u73b0\u7684\u9891\u7387\u5f88\u9ad8\uff0c\u80fd\u505a\u5230\u6839\u636e\u8f7b\u91cd\u4f18\u5148\u7ea7\u6765\u5206\u6790\u5e76\u6392\u9664\u90a3\u662f\u4e0d\u662f\u66f4\u597d\uff1f\u90a3\u4e48\u5c31\u7528\u5230\u4e86MySQLdumpslow\u3002\n\n[root@lig MySQL]# MySQLdumpslow --help   ----------------------------------------------//\u6267\u884c\u547d\u4ee4\nUsage: MySQLdumpslow [ OPTS... ] [ LOGS... ]\n\nParse and summarize the MySQL slow query log. Options are\n\n  --verbose    verbose\n  --debug      debug\n  --help       write this text to standard output\n\n  -v           verbose\n  -d           debug\n  -s ORDER     what to sort by (al, at, ar, c, l, r, t), 'at' is default\n                al: average lock time\n                ar: average rows sent\n                at: average query time\n                 c: count\n                 l: lock time\n                 r: rows sent\n                 t: query time  \n  -r           reverse the sort order (largest last instead of first)\n  -t NUM       just show the top n queries\n  -a           don't abstract all numbers to N and strings to 'S'\n  -n NUM       abstract numbers with at least n digits within names\n  -g PATTERN   grep: only consider stmts that include this string\n  -h HOSTNAME  hostname of db server for *-slow.log filename (can be wildcard),\n               default is '*', i.e. match all\n  -i NAME      name of server instance (if using MySQL.server startup script)\n  -l           don't subtract lock time from total time\ns\uff1a\u8868\u793a\u6309\u7167\u4f55\u79cd\u65b9\u5f0f\u6392\u5e8f\nc\uff1a\u8bbf\u95ee\u6b21\u6570\ni\uff1a\u9501\u5b9a\u65f6\u95f4\nr\uff1a\u8fd4\u56de\u8bb0\u5f55\nt\uff1a\u67e5\u8be2\u65f6\u95f4\nal\uff1a\u5e73\u5747\u9501\u5b9a\u65f6\u95f4\nar\uff1a\u5e73\u5747\u8fd4\u56de\u8bb0\u5f55\u6570\nat\uff1a\u5e73\u5747\u67e5\u8be2\u65f6\u95f4\nt\uff1a\u5373\u4e3a\u8fd4\u56de\u524d\u9762\u591a\u5c11\u6761\u6570\u636e\ng\uff1a\u540e\u8fb9\u642d\u914d\u4e00\u4e2a\u6b63\u5219\u5339\u914d\u6a21\u5f0f\uff0c\u5927\u5c0f\u5199\u4e0d\u654f\u611f\n\u4f8b\uff1a\n\nMySQLdumpslow -s r -t 10 /data/MySQL/MySQL-slow.log  //\u5f97\u5230\u8fd4\u56de\u8bb0\u5f55\u96c6\u6700\u591a\u768410\u4e2aSQL\nMySQLdumpslow -s c -t 10 /data/MySQL/MySQL-slow.log //\u5f97\u5230\u8bbf\u95ee\u6b21\u6570\u6700\u591a\u768410\u4e2aSQL \nMySQLdumpslow -s t -t 10 -g \"left join\" /data/MySQL/MySQL-slow.log  //\u5f97\u5230\u6309\u7167\u65f6\u95f4\u6392\u5e8f\u7684\u524d10\u6761\u91cc\u9762\u542b\u6709\u505a\u4e86\u8fde\u63a5\u7684\u67e5\u8be2SQL\nMySQLdumpslow -s r -t 10 /data/MySQL/MySQL-slow.log | more  //\u53e6\u5916\u5efa\u8bae\u5728\u4f7f\u7528\u8fd9\u4e9b\u547d\u4ee4\u65f6\u7ed3\u5408|\u548cmore\u4f7f\u7528\uff0c\u5426\u5219\u6709\u53ef\u80fd\u51fa\u73b0\u7206\u5c4f\u60c5\u51b5\nMySQL\u67e5\u8be2\u4f18\u5316(3)-show profile\n\u5982\u679c\u60f3\u8981\u8fdb\u884cSQL\u67e5\u8be2\u7684\u6570\u636e\u8c03\u4f18\u3001\u6392\u67e5\u3002\n\u7b2c\u4e00\u6b65\uff0c\u4e00\u5b9a\u8981\u8ba9\u51fa\u73b0\u7684\u95ee\u9898\u91cd\u73b0\u554a(\u8fd0\u8425\u5de5\u7a0b\u5e08\u6216DBA\u4ed6\u4eec\u4ece\u76d1\u63a7\u7cfb\u7edf\u91cc\u9762\uff0c\u6536\u5230\u4e86\u7206\u70b8\uff0c\u7cfb\u7edf\u53d8\u6162\u4e86\uff0c\u5927\u5bb6\u90fd\u77e5\u9053\uff0c\u91cd\u8981\u7684\u6838\u5fc3\u7cfb\u7edf\u90fd\u4f1a\u6709\u53e6\u5916\u4e00\u5957\u8f85\u52a9\u7684\u7cfb\u7edf\u6765\u76d1\u63a7\uff0c\u8fd9\u79cd\u76d1\u63a7\u7cfb\u7edf\uff0c\u6bd4\u5982\u8bf4\u73b0\u5728\u8fd9\u4e2a\u7cfb\u7edf\u6162\u4e0e\u6bcf\u4e00\u4e2a\u6a21\u5757\u5e73\u5747\u65f6\u95f4\uff0c\u53ef\u80fd5\u79d2\u949f\u5c31\u80fd\u6267\u884c\u5b8c\uff0c\u4f46\u662f\u5df2\u7ecf\u957f\u8fbe20\u79d2\u4e86\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u8981\u5224\u65ad\u4e3a\u4ec0\u4e48\u6162\u4e86\u3002\n\u6709\u5f88\u591a\u79cd\u53ef\u80fd\u7684\u539f\u56e0\uff1a\u53ef\u80fd\u662f\u7a0b\u5e8f\u7684\u5185\u5b58\u6cc4\u6f0f\uff0c\u53ef\u80fd\u662f\u6b7b\u9501\uff0c\u53ef\u80fd\u662f\u7f51\u7edc\uff0c\u53ef\u80fd\u662fSQL\u5199\u7684\u70c2\u3002\n\u5047\u8bbe\u662fSQL\u7684\u95ee\u9898\uff0c\u90a3\u4e48\u9700\u8981\u628a\u6709\u95ee\u9898\u7684SQL\u6293\u51fa\u6765\n\u6267\u884c\u8fc7\u7a0b\uff1a\n\n\u6536\u5230\u95ee\u9898\uff0c\u8bca\u65adSQL\n\u5f00\u542f\u6162\u67e5\u8be2\u65e5\u5fd7\uff0c\u6293\u51fa\u6267\u884c\u7684\u6162\u7684SQL\n\u4f7f\u7528explain\u5206\u6790\uff08\u57fa\u672c\u4e0a\u53ef\u4ee5\u627e\u5230\u4e3a\u9898\u6240\u5728\uff0c\u4f46\u662f\u5982\u679c\u8fd8\u662f\u6ca1\u6709\u6446\u5e73\uff0cSQL\u5728\u4f20\u8f93\u3001\u7f51\u7edc\u3001\u8fde\u63a5\u3001\u6b7b\u9501\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u7ec6\u7c92\u5ea6\u7684\u67e5\u8be2\u548c\u6392\u67e5\u7684\u65f6\u5019\u5c31\u9700\u8981\u4f7f\u7528show profile\uff09\nshow profile\uff08\u8fd8\u662f\u89e3\u51b3\u7684\u4e00\u822c\u822c\uff09\n\u914d\u5408DBA \u5230my.cnf\u914d\u7f6e\u6587\u4ef6\u4e2d\u5bf9\u5404\u79cd\u6027\u80fd\u7684\u53c2\u6570\u8c03\u4f18\u548c\u4fee\u6539(\u57fa\u672c\u4e0a\u662fDBA\u4fee\u6539)\n\nshow profile\nMySQL 8.0\u53c2\u8003\u624b\u518c-show profile\n\u662f\u4ec0\u4e48\uff1a\u662fmysql \u63d0\u4f9b\u53ef\u4ee5\u7528\u6765\u5206\u6790\u5f53\u524d\u4f1a\u8bdd\u4e2d\u8bed\u53e5\u6267\u884c\u7684\u8d44\u6e90\u6d88\u8017\u60c5\u51b5\u3002\u53ef\u4ee5\u7528\u4e8eSQL\u7684\u8c03\u4f18\u7684\u6d4b\u91cf\u3002\uff08\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u53c2\u6570\u5904\u4e8e\u5173\u95ed\u72b6\u6001\uff0c\u5e76\u4fdd\u5b58\u6700\u8fd115\u6b21\u7684\u8fd0\u884c\u7ed3\u679c\uff09\n\u5206\u6790\u6b65\u9aa4\uff1a\n\n\u662f\u5426\u652f\u6301\uff0c\u770b\u770b\u5f53\u524d\u7684MySQL\u7248\u672c\u662f\u5426\u652f\u6301:\nshow variables like &#39;profiling&#39;;\n #\u6216\n show variables like &#39;profiling%&#39;;\n\n\n\u5f00\u542f\u529f\u80fd\uff0c\u9ed8\u8ba4\u662f\u5173\u95ed\uff0c\u4f7f\u7528\u524d\u9700\u8981\u5f00\u542f:\nset profiling = on;\n\n\n\u8fd0\u884csql\n\u968f\u4fbf\u8fd0\u884c\u51e0\u6761SQL\uff0c\u4ee5\u4fbf\u4e8eshow prifiles\u7684\u65e5\u5fd7\u5206\u6790\u3002\n\n\u67e5\u8be2\u7ed3\u679c\nshow profiles;\n\n\n\n\u8bca\u65adSQL\nshow profile cpu, block io for query [\u4e0a\u4e00\u6b65\u7684Query_ID];\n\n\n\u4ece\u56fe\u4e2d\u53ef\u4ee5\u770b\u5230\u5f00\u59cb\uff0c\u6253\u5f00\u8868\uff0c\u52a0\u8f7d\uff0c\u5173\u95ed\u8868\uff0c\u91ca\u653e\u8d44\u6e90\u3001\u8bb0\u5f55\u65e5\u5fd7\uff0c\u6e05\u7406\u5de5\u4f5c\uff0c\u5728\u8fd9\u513f\u53ef\u4ee5\u770b\u5230\u4e00\u6761SQL\u6267\u884c\u7684\u5b8c\u6574\u751f\u547d\u5468\u671f\u3002\n\n\n\u5f00\u53d1\u4e2d\u9700\u8981\u6ce8\u610f\u7684\u95ee\u9898\n\u5982\u679cshow profile ... for query [Query_ID];\u51fa\u73b0\u4e86\u5982\u4e0b\u56db\u4e2a\uff0c\u5219\u5fc5\u987b\u4f18\u5316\u8fd9\u6761sql\u3002\n\nconverting HEAP to MyISAM : \u67e5\u8be2\u7ed3\u679c\u592a\u5927\uff0c \u5185\u5b58\u90fd\u4e0d\u591f\u7528\u4e86\uff0c\u4f1a\u5f80\u78c1\u76d8\u4e0a\u642c\u4e86\nCreating tmp table : \u521b\u5efa\u4e34\u65f6\u8868\n\u62f7\u8d1d\u6570\u636e\u5230\u4e34\u65f6\u8868: \u5047\u8bbe\u8981\u67e5\u8be2\u4e24\u767e\u4e07\u6570\u636e\uff0c\u521a\u597d\u5339\u914d\u7684\u6761\u4ef6\u6709\u4e00\u767e\u4e07\uff0c\u6070\u5de7\u8981\u628a\u8fd9\u4e00\u767e\u4e07\u7684\u6570\u636e\u62f7\u8d1d\u5230\u4e34\u65f6\u8868\uff0c\u7136\u540e\u518d\u628a\u6570\u636e\u63a8\u9001\u7ed9\u7528\u6237\uff0c\u6700\u540e\u518d\u628a\u4e34\u65f6\u8868\u5220\u6389\uff0c\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u5bfc\u81f4SQL\u53d8\u6162\u7684\u7f6a\u9b41\u7978\u9996\n\u7528\u5b8c\u518d\u5220\u9664\n\n\nCopying to tmp table on disk : \u628a\u5185\u5b58\u4e2d\u4e34\u65f6\u8868\u590d\u5236\u5230\u78c1\u76d8\nlocked\n\n\n\nMySQL\u67e5\u8be2\u4f18\u5316(4)-\u5168\u5c40\u67e5\u8be2\u65e5\u5fd7\nshow profile\u53ef\u4ee5\u5e2e\u8bb0\u5f55\u4e0b\u6765\u4e86\u540e\u53f0\u6267\u884c\u8fc7\u5f97SQL\uff0c\u5168\u5c40\u67e5\u8be2\u65e5\u5fd7\u6709\u65f6\u4e5f\u80fd\u5e2e\u52a9\u6765\u8c03SQL\u3002\u4f46\u662f\uff0c\u5207\u8bb0\uff0c\u8fd9\u4e2a\u5168\u5c40\u67e5\u8be2\u65e5\u5fd7\u53ea\u80fd\u5728\u6d4b\u8bd5\u73af\u5883\u4f7f\u7528\uff0c\u7edd\u4e0d\u53ef\u4ee5\u5728\u751f\u4ea7\u73af\u5883\u4f7f\u7528\uff08\u516c\u53f8\u4e2d\u4e00\u822c\u90fd\u662f\u751f\u4ea7\u73af\u5883\u3001\u6d4b\u8bd5\u73af\u5883\u5206\u79bb\uff0c\u4f46\u662f\u6d4b\u8bd5\u73af\u5883\u4e00\u822c\u90fd\u4e0d\u5982\u751f\u4ea7\u73af\u5883\uff0c\u6216\u591a\u6216\u5c11\u4f1a\u6709\u4e9b\u5dee\u8ddd\uff0c\u4f46\u662f\u5927\u90e8\u5206\u7684SQL\u6b63\u5e38\u6765\u8bf4\u5728\u90e8\u5230\u751f\u4ea7\u4e4b\u524d\u4f1a\u5728\u6d4b\u8bd5\u4e0a\u5148\u8dd1\u4e00\u904d\u751a\u81f3\u51e0\u904d\uff09\u3002\n\u5207\u8bb0\uff1a\u6c38\u8fdc\u4e0d\u8981\u518d\u751f\u4ea7\u73af\u5883\u5f00\u542f\u5168\u5c40\u67e5\u8be2\u65e5\u5fd7\u8fd9\u4e2a\u529f\u80fd\u3002\n\u914d\u7f6e\u65b9\u5f0f\u542f\u7528:\n\u5728MySQL\u7684\u914d\u7f6e\u6587\u4ef6\u4e2d\uff0c\u914d\u7f6e\u5982\u4e0b\uff1a\n#\u5f00\u542f\ngeneral_log=1\n#\u8bb0\u5f55\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84\ngeneral_log_file=/path/logfile\n#\u8f93\u51fa\u683c\u5f0f\nlog_output=file\n\n\u547d\u4ee4\u65b9\u5f0f\u542f\u7528:\nset global general_log=1; #\u5f00\u542f\u540e\u4f1a\u628a\u6240\u6709\u7684SQL\u8fdb\u884c\u8bb0\u5f55\nset global log_output=&#39;TABLE&#39;;\n\n\u6b64\u540e\u6240\u7f16\u5199\u7684SQL\u8bed\u53e5\uff0c\u5c06\u4f1a\u8bb0\u5f55\u5230MySQL\u5e93\u91cc\u7684general_log\u8868\uff0c\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u547d\u4ee4\u67e5\u770b\u3002\nselect * from mysql.general_log;\n\n\u5982\u679c\u9700\u8981\u505a\u7cfb\u7edf\u7684\u5b9a\u6848\u5206\u6790(\u5982\uff1a\u4eca\u5929\u4e0b\u53482\u70b9-3\u70b9\u51fa\u73b0\u7684\u6545\u969c\uff09\uff0c\u5982\u679c\u8981\u89c2\u5bdf\u548c\u590d\u73b0\u7684\u8bdd\uff0c\u53ef\u4ee5\u5728\u6d4b\u8bd5\u73af\u5883\u4e0b\u6a21\u62df\u4e00\u904d\uff0c\u7136\u540e\u628a\u6240\u6709\u7684\u95ee\u9898\u590d\u73b0\u4e00\u4e0b\u3002\n\u7136\u540e\u7528general_log\u8fd9\u4e2a\u8868\u6765\u67e5\u770b\u4ec0\u4e48\u65f6\u95f4\u6bb5\u53d1\u751f\u4e86\u4ec0\u4e48\u6837\u7684SQL\uff0c\u5e2e\u52a9\u5b9a\u4f4d\u95ee\u9898\u3002\nMySQL\u9501\u673a\u5236\n\u6982\u8ff0\n\u9501\u662f\u8ba1\u7b97\u673a\u534f\u8c03\u591a\u4e2a\u8fdb\u7a0b\u6216\u7ebf\u7a0b\u5e76\u53d1\u8bbf\u95ee\u67d0\u4e00\u8d44\u6e90\u7684\u673a\u5236(\u8bf4\u767d\u4e86\u5c31\u662f\u9632\u6b62\u4e89\u62a2)\u3002\n\u6253\u4e2a\u6bd4\u65b9\uff0c\u5728\u6dd8\u5b9d\u4e0a\u4e70\u4e00\u4ef6\u5546\u54c1\uff0c\u5546\u54c1\u53ea\u6709\u4e00\u4e2a\u5e93\u5b58\uff0c\u8fd9\u4e2a\u65f6\u5019\u5982\u679c\u8fd8\u6709\u53e6\u4e00\u4e2a\u4eba\u8d2d\u4e70\uff0c\u90a3\u4e48\u5982\u4f55\u89e3\u51b3\u662f\u4f60\u4e70\u5230\u8fd8\u662f\u53e6\u4e00\u4e2a\u4eba\u4e70\u5230\u7684\u95ee\u9898\uff1f\n\u8fd9\u91cc\u80af\u5b9a\u8981\u7528\u5230\u4e8b\u52a1\uff0c\u5148\u4ece\u5e93\u5b58\u8868\u4e2d\u53d6\u51fa\u7269\u54c1\u6570\u91cf\uff0c\u7136\u540e\u63d2\u5165\u8ba2\u5355\uff0c\u4ed8\u6b3e\u540e\u63d2\u5165\u4ed8\u6b3e\u8868\u4fe1\u606f\uff0c\u7136\u540e\u66f4\u65b0\u5546\u54c1\u6570\u91cf\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528\u9501\u53ef\u4ee5\u5bf9\u6709\u9650\u7684\u8d44\u6e90\u8fdb\u884c\u4fdd\u62a4\uff0c\u89e3\u51b3\u9694\u79bb\u548c\u5e76\u53d1\u7684\u77db\u76fe\u3002\n\n\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u9664\u4f20\u7edf\u7684\u8ba1\u7b97\u8d44\u6e90(\u5982CPU\u3001RAM\u3001I/O\u7b49)\u7684\u4e89\u7528\u610f\u5916\uff0c\u6570\u636e\u4e5f\u662f\u4e00\u79cd\u4f9b \u8bb8\u591a\u7528\u6237\u5171\u4eab\u7684\u8d44\u6e90\uff0c\u5982\u4f55\u4fdd\u8bc1\u6570\u636e\u5e76\u53d1\u8bbf\u95ee\u7684\u4e00\u81f4\u6027\uff0c\u6709\u6548\u6027\u662f\u6240\u6709\u6570\u636e\u5e93\u5fc5\u987b\u89e3\u51b3\u7684\u4e00\u4e2a\u95ee\u9898\u3002\u9501\u5145\u8db3\u4e5f\u662f\u5f71\u54cd\u6570\u636e\u5e93\u5e76\u53d1\u8bbf\u95ee\u6027\u80fd\u7684\u4e00\u4e2a\u91cd\u8981\u56e0\u7d20\u3002\u4ece\u8fd9\u4e2a\u89d2\u5ea6\u6765\u8bf4\uff0c\u9501\u5bf9\u6570\u636e\u5e93\u800c\u8a00\u95f2\u7684\u5c24\u5176\u91cd\u8981\uff0c\u4e5f\u66f4\u52a0\u590d\u6742\u3002\n\u9501\u7684\u5206\u7c7b\n\n\u4ece\u5bf9\u6570\u636e\u64cd\u4f5c\u7684\u7c7b\u578b\uff08\u8bfb/\u5199\uff09\u5206\n\n\u8bfb\u9501\uff08\u5171\u4eab\u9501\uff09\uff1a\u9488\u5bf9\u540c\u4e00\u4efd\u6570\u636e\uff0c\u591a\u4e2a\u8bfb\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u800c\u4e0d\u4f1a\u4e92\u76f8\u5f71\u54cd\u3002\n\u5199\u9501\uff08\u6392\u5b83\u9501\uff09\uff1a\u5f53\u524d\u5199\u64cd\u4f5c\u6ca1\u6709\u5b8c\u6210\u524d\uff0c\u5b83\u4f1a\u963b\u65ad\u5176\u4ed6\u5199\u9501\u548c\u8bfb\u9501\u3002\n\u4ece\u5bf9\u6570\u636e\u64cd\u4f5c\u7684\u7c92\u5ea6\u5206(\u8868\u9501\u3001\u884c\u9501)\n\u5f00\u9500\u3001\u52a0\u9501\u901f\u5ea6\u3001\u6b7b\u9501\u3001\u7c92\u5ea6\u3001\u5e76\u53d1\u6027\u80fd\uff0c\u53ea\u80fd\u5c31\u5177\u4f53\u5e94\u7528\u7684\u7279\u70b9\u6765\u8bf4\u54ea\u79cd\u9501\u66f4\u5408\u9002\n1.\u8868\u9501(\u504f\u8bfb)\n\u504f\u5411MyISAM\u5b58\u50a8\u5f15\u64ce\uff0c\u5f00\u9500\u5c0f\uff0c\u52a0\u9501\u5757\uff1b\u65e0\u6b7b\u9501\uff1b\u9501\u5b9a\u9897\u7c92\u5927\uff0c\u53d1\u751f\u9501\u51b2\u7a81\u7684\u6982\u7387\u6700\u9ad8\uff0c\u5e76\u53d1\u5ea6\u6700\u4f4e\u3002\n\u5f00\u73a9\u7b11\u7684\u8bf4\uff0c\u65e9\u4e0a\u6765\u4e0a\u73ed\u4f60\u7b2c\u4e00\u4e2a\u6765\u7684\uff0c \u5230\u516c\u53f8\u5c31\u628a\u5927\u95e8\u7ed9\u9501\u4f4f\u4e86\uff0c\u628a\u95e8\u7981\u7535\u5173\u4e86\uff0c\u6574\u4e2a\u516c\u53f8\u73b0\u5728\u4f60\u4e00\u4e2a\u4eba\u72ec\u4eab\uff0c\u522b\u4eba\u8fd8\u80fd\u8ddf\u4f60\u51b2\u7a81\u5417\uff0c\u5e76\u53d1\u5ea6\u4e5f\u5c31\u6700\u4f4e\u4e86\u3002\n\n1.\u6848\u4f8b\u5206\u6790(\u52a0\u8bfb\u9501)\n\n\u5efa\u8868SQL\n\nmysql&gt; create table mylock(\n    -&gt; id int not nul primary key auto_increment,\n    -&gt; name varchar(20)\n    -&gt; )engine myisam;\ninsert into mylock(name) values (&#39;a&#39;);\ninsert into mylock(name) values (&#39;b&#39;);\ninsert into mylock(name) values (&#39;c&#39;);\ninsert into mylock(name) values (&#39;d&#39;);\ninsert into mylock(name) values (&#39;e&#39;);\n\nselect * from mylock;\n\n\u52a0\u9501\u548c\u89e3\u9501\u547d\u4ee4\uff1a\nlock table \u8868\u540d1 read|write, \u8868\u540d2 read|write; #\u52a0\u9501\nunlock tables; #\u89e3\u9501\n\n\n\u52a0\u8bfb\u9501(\u5171\u4eab\u9501)\n\nlock table mylock read;\n\n\u67e5\u770b\u8868\u4e0a\u7684\u9501\uff1a\u5b98\u65b9\u6587\u6863-show open tables\nshow open tables;\n\n\n\n\u52a0\u8bfb\u9501\u540e\uff0c\u8bfb\u53d6\u81ea\u5df1\u53ef\u4ee5\uff0c\u5199\u81ea\u5df1\u4ee5\u53ca\u8bfb\u53d6\u672c\u5e93\u4e2d\u522b\u7684\u8868\u90fd\u4e0d\u53ef\u4ee5\uff0c\u8a00\u4e0b\u4e4b\u610f\u5c31\u662f\u53ea\u8981\u52a0\u4e86\u8bfb\u9501\uff0c\u5c31\u5fc5\u987b\u8981\u628a\u8fd9\u7b14\u8bfb\u7684\u8d26\u6e05\u6389\u518d\u53bb\u505a\u522b\u7684\u4e8b\u3002\n\u603b\u7ed3\n(\u7a97\u53e31)\u83b7\u5f97\u8868mylock\u7684read\u9501\u5b9a\u65f6\uff1a\n\n\u5f53\u524dsession(\u7a97\u53e31)\u53ef\u4ee5\u8fdb\u884c\u67e5\u770b\u8be5\u8868\u8bb0\u5f55\u64cd\u4f5c\uff1b\u5176\u5b83session\u4e5f\u53ef\u67e5\u8be5\u8868\u8bb0\u5f55\n\u5f53\u524dsession\u4e0d\u80fd\u67e5\u770b\u5176\u5b83\u6ca1\u6709\u9501\u5b9a\u7684\u8868(\u8d26\u6ca1\u7ed3)\uff1b\u5176\u5b83session\u53ef\u4ee5\u67e5\u8be2\u6216\u66f4\u65b0\u5176\u5b83\u975e\u9501\u5b9a\u7684\u8868\n\u5f53\u524dsession\u63d2\u5165\u6216\u66f4\u65b0\u9501\u5b9a\u8868\u90fd\u4f1a\u63d0\u793a\u62a5\u9519\uff1b\u5176\u5b83session\u63d2\u5165\u6216\u66f4\u65b0\u9501\u5b9a\u8868\u90fd\u4f1a\u4e00\u76f4\u963b\u585e\u7b49\u5f85\u83b7\u53d6\u8868\n\u5f53\u524dsession\u91ca\u653e\u8bfb\u9501\u65f6\uff0c\u5176\u5b83session\u83b7\u5f97\u9501\uff0c\u6267\u884c\u63d2\u5165\u6216\u66f4\u65b0\u5b8c\u6210\u3002\n\n2.\u6848\u4f8b\u5206\u67902(\u52a0\u5199\u9501)\n\u5f53session1(\u7a97\u53e31)\u83b7\u5f97\u8868mylock\u7684write\u9501\u5b9a\u65f6\uff1a\n\n\u5f53\u524dsession1\u5bf9\u9501\u5b9a\u90fd\u5f97\u8868\u8fdb\u884c\u67e5\u8be2\u3001\u66f4\u65b0\u64cd\u4f5c\u90fd\u53ef\u4ee5\u6267\u884c\uff0c\u5176\u5b83session\u5bf9\u9501\u5b9a\u8868\u7684\u67e5\u8be2(\u66f4\u65b0\u64cd\u4f5c\u4e5f\u4e00\u6837)\u88ab\u963b\u585e\uff0c\u9700\u8981\u7b49\u5f85\u9501\u88ab\u91ca\u653e\u3002\uff08\u5982\u679c\u53ef\u4ee5\uff0c\u8bf7\u6362\u6210\u4e0d\u540c\u7684id\u6765\u8fdb\u884c\u6d4b\u8bd5\uff0c\u56e0\u4e3amysq\u6709\u7f13\u5b58\uff0c\u67e5\u8be2\u7684\u591a\u4e86\uff0c\u7b2c\u4e8c\u6b21\u7684\u6761\u4ef6\u4f1a\u4ece\u7f13\u5b58\u83b7\u5f97\uff0c\u4f1a\u5f71\u54cd\u9501\u6548\u679c\u6f14\u793a\uff09\n\u5f53\u524dsesison1\u91ca\u653e\u9501\uff0c\u5176\u5b83session\u83b7\u5f97\u9501\uff0c\u67e5\u8be2\u8fd4\u56de\u3002\n\n\u6848\u4f8b\u7ed3\u8bba\nMyISAM\u5728\u6267\u884c\u67e5\u8be2(SELECT)\u524d\uff0c\u4f1a\u81ea\u52a8\u7ed9\u6d89\u53ca\u67e5\u8be2(SELECT)\u7684\u6240\u6709\u8868\u52a0\u8bfb\u9501\uff0c\u5728\u6267\u884c\u589e\u5220\u6539\u64cd\u4f5c\u524d\uff0c\u4f1a\u81ea\u52a8\u7ed9\u6d89\u53ca\u589e\u5220\u6539\u64cd\u4f5c\u7684\u8868\u52a0\u5199\u9501\u3002\nMySQL\u7684\u8868\u7ea7\u7ed3\u6784\u6709\u4e24\u79cd\u6a21\u5f0f\uff1a\n\n\u8868\u5171\u4eab\u8bfb\u9501\uff08Table Read Lock\uff09\n\n\u8868\u72ec\u5360\u5199\u9501\uff08Table Write Lock\uff09\n\n\n\n\u7ed3\u8bba\uff1a\n\u5bf9MyISAM\u5f15\u64ce\u7684\u8868\u8fdb\u884c\u64cd\u4f5c\uff0c\u4f1a\u6709\u4ee5\u4e0b\u60c5\u51b5\uff1a\n\n\u5bf9MyISAM\u8868\u7684\u8bfb\u64cd\u4f5c\uff08\u52a0\u8bfb\u9501\uff09\uff0c\u4e0d\u4f1a\u5f71\u54cd\u5176\u4ed6\u8fdb\u884c\u5bf9\u540c\u4e00\u8868\u7684\u8bfb\u64cd\u4f5c\uff0c\u4f46\u4f1a\u963b\u585e\u540c\u4e00\u8868\u7684\u5199\u64cd\u4f5c\uff0c\u53ea\u6709\u5f53\u8bfb\u9501\u91ca\u653e\u540e\uff0c\u624d\u4f1a\u6267\u884c\u5176\u5b83\u8fdb\u7a0b\u7684\u5199\u64cd\u4f5c\u3002\n\u5bf9MyISAM\u8868\u7684\u5199\u64cd\u4f5c\uff08\u52a0\u5199\u9501\uff09\uff0c\u4f1a\u963b\u585e\u5176\u5b83\u8fdb\u884c\u5bf9\u7edf\u4e00\u8bfb\u548c\u5199\u64cd\u4f5c\uff0c\u53ea\u6709\u5f53\u9501\u91ca\u653e\u540e\uff0c\u624d\u4f1a\u6267\u884c\u5176\u5b83\u8fdb\u7a0b\u7684\u8bfb\u5199\u64cd\u4f5c\u3002\n\n\u7b80\u800c\u7b80\u4e4b\uff0c\u5c31\u662f\uff1a\u8bfb\u9501\u4f1a\u963b\u585e\u5199\uff0c\u4f46\u662f\u4e0d\u4f1a\u963b\u585e\u8bfb\u3002\u800c\u5199\u9501\u5219\u4f1a\u628a\u8bfb\u548c\u5199\u90fd\u963b\u585e\u3002\n\u8865\u5145\uff1a\n\u5982\u4f55\u5206\u6790\u8868\u9501\u5b9a\n\u53ef\u4ee5\u901a\u8fc7\u67e5\u770btable_locks_waited\u548ctable_locks_immediate\u72b6\u6001\u53d8\u91cf\u6765\u5206\u6790\u7cfb\u7edf\u4e0a\u7684\u8868\u9501\u5b9a\u3002\nSQL\uff1a\nshow status like &#39;table%&#39;;\n\n\u8fd9\u91cc\u4f1a\u6709\u51e0\u4e2a\u53d8\u91cf\u6765\u8bb0\u5f55MySQL\u5185\u90e8\u8868\u7ea7\u9501\u5b9a\u7684\u60c5\u51b5\uff0c\u5176\u4e2d\u6700\u91cd\u8981\u7684\u4e24\u4e2a\u53d8\u91cf\u8bf4\u660e\u5982\u4e0b\uff1a\n\nTable_locks_immediate\uff1a\u4ea7\u751f\u8868\u7ea7\u9501\u5b9a\u7684\u6b21\u6570\uff0c\u8868\u793a\u53ef\u4ee5\u7acb\u5373\u83b7\u53d6\u6240\u7684\u67e5\u8be2\u6b21\u6570\uff0c\u6bcf\u7acb\u5373\u83b7\u53d6\u9501\u503c\nTable_locks_waited\uff1a\u51fa\u73b0\u8868\u7ea7\u9501\u5b9a\u5f81\u7528\u800c\u53d1\u751f\u7b49\u5f85\u7684\u6b21\u6570\uff08\u4e0d\u80fd\u7acb\u5373\u83b7\u53d6\u6240\u7684\u6b21\u6570\uff0c\u6bcf\u7b49\u5f85\u4e00\u6b21\u9501\u503c\u52a01\uff09\uff0c\u6b64\u503c\u9ad8\u5219\u8bf4\u660e\u5b58\u5728\u7740\u8f83\u4e25\u91cd\u7684\u8868\u7ea7\u9501\u5f81\u7528\u60c5\u51b5\u3002\n\n\u6b64\u5916\uff0cMyISAM\u7684\u8bfb\u5199\u9501\u8c03\u5ea6\u662f\u5199\u4f18\u5148\uff0c\u6240\u4ee5MyISAM\u4e0d\u9002\u5408\u505a\u5199\u4e3a\u4e3b\u7684\u8868\u7684\u5f15\u64ce\uff0c\u56e0\u4e3a\u52a0\u5199\u9501\u540e\uff0c\u5176\u5b83\u7ebf\u7a0b\u4e0d\u80fd\u505a\u4efb\u4f55\u64cd\u4f5c\uff0c\u5927\u91cf\u7684\u66f4\u65b0\u4f1a\u4f7f\u67e5\u8be2\u96be\u5f97\u5230\u9501\uff0c\u4ece\u800c\u9020\u6210\u6c38\u8fdc\u963b\u585e\u3002\n2.\u884c\u9501(\u504f\u5199)\n\u884c\u9501(\u504f\u5411InnoDB\u5b58\u50a8\u5f15\u64ce\uff0c\u5f00\u9500\u5927\uff0c \u52a0\u9501\u6162\uff0c\u4f1a\u51fa\u73b0\u6b7b\u9501\uff1b\u9501\u5b9a\u7c92\u5ea6\u6700\u5c0f\uff0c\u53d1\u751f\u9501\u51b2\u7a81\u7684\u6982\u7387\u6700\u4f4e\uff08\u5047\u8bbe100\u884c\uff0c\u4f60\u752845\u884c\u6211\u752878\u884c\uff0c\u4e24\u8005\u65e0\u4ea4\u96c6\uff09\uff0c\u5e76\u53d1\u5ea6\u4e5f\u6700\u9ad8\u3002\nInnoDB\u4e0eMyISAM\u7684\u6700\u5927\u4e0d\u540c\u7684\u4e24\u70b9\uff1a\n\n\u652f\u6301\u4e8b\u52a1(TRANSACTION)\uff1b\n\u91c7\u7528\u4e86\u884c\u7ea7\u9501\uff1b\n\n\n\u56de\u987e\uff1a\n\u4e8b\u52a1\u662f\u7531\u4e00\u7ec4SQL\u8bed\u53e5\u7ec4\u6210\u7684\u903b\u8f91\u5904\u7406\u5355\u5143\uff0c\u4e8b\u52a1\u5177\u6709\u4ee5\u4e0b4\u4e2a\u5c5e\u6027\uff0c\u901a\u5e38\u7b80\u79f0\u4e3a\u4e8b\u52a1\u7684ACID\u5c5e\u6027\u3002\n\n\u539f\u5b50\u6027\uff08Atomicity)\uff1a\u4e8b\u52a1\u662f\u4e00\u4e2a\u539f\u5b50\u64cd\u4f5c\u5355\u5143\uff0c\u5176\u5bf9\u6570\u636e\u7684\u4fee\u6539\uff0c\u8981\u4e48\u5168\u90fd\u6267\u884c\uff0c\u8981\u4e48\u5168\u90fd\u4e0d\u6267\u884c\u3002\n\n\u4e00\u81f4\u6027(Consistent)\uff1a\u5728\u4e8b\u52a1\u5f00\u59cb\u548c\u5b8c\u6210\u65f6\uff0c\u6570\u636e\u90fd\u5fc5\u987b\u4fdd\u6301\u4e00\u81f4\u72b6\u6001\u3002\u8fd9\u610f\u5473\u7740\u6240\u6709\u76f8\u5173\u7684\u6570\u636e\u89c4\u5219\u90fd\u5fc5\u987b\u5e94\u7528\u4e8e\u4e8b\u52a1\u7684\u4fee\u6539\uff0c\u4ee5\u4fdd\u6301\u6570\u636e\u7684\u5b8c\u6574\u6027\uff1b\u4e8b\u52a1\u7ed3\u675f\u65f6\uff0c\u6240\u6709\u7684\u5185\u90e8\u6570\u636e\u7ed3\u6784\uff08\u5982B\u6811\u7d22\u5f15\u6216\u53cc\u5411\u94fe\u8868\uff09\u4e5f\u90fd\u5fc5\u987b\u662f\u6b63\u786e\u7684\u3002\n\n\u9694\u79bb\u6027\uff08lsolation)\uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u63d0\u4f9b\u4e00\u5b9a\u7684\u9694\u79bb\u673a\u5236\uff0c\u4fdd\u8bc1\u4e8b\u52a1\u5728\u4e0d\u53d7\u5916\u90e8\u5e76\u53d1\u64cd\u4f5c\u5f71\u54cd\u7684\u201c\u72ec\u7acb\u201d\u73af\u5883\u6267\u884c\u3002\u8fd9\u610f\u5473\u7740\u4e8b\u52a1\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u4e2d\u95f4\u72b6\u6001\u5bf9\u5916\u90e8\u662f\u4e0d\u53ef\u89c1\u7684\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\u6301\u4e45\u6027(Durable)\uff1a\u4e8b\u52a1\u5b8c\u6210\u4e4b\u540e\uff0c\u5b83\u5bf9\u4e8e\u6570\u636e\u7684\u4fee\u6539\u662f\u6c38\u4e45\u6027\u7684\uff0c\u5373\u4f7f\u51fa\u73b0\u7cfb\u7edf\u6545\u969c\u4e5f\u80fd\u591f\u4fdd\u6301\u3002\n\n\u5e76\u53d1\u4e8b\u52a1\u5904\u7406\u5e26\u6765\u7684\u95ee\u9898\uff1a\n\n\u66f4\u65b0\u4e22\u5931(Lost Update)\uff1a\u5f53\u4e24\u4e2a\u6216\u591a\u4e2a\u4e8b\u52a1\u9009\u62e9\u540c\u4e00\u884c\uff0c\u7136\u540e\u57fa\u4e8e\u6700\u521d\u9009\u5b9a\u7684\u503c\u66f4\u65b0\u8be5\u884c\u65f6\uff0c\u7531\u4e8e\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u4e0d\u77e5\u9053\u5176\u4ed6\u4e8b\u52a1\u7684\u5b58\u5728\uff0c\u5c31\u4f1a\u53d1\u751f\u4e22\u5931\u66f4\u65b0\u95ee\u9898\u2014\u2014\u6700\u540e\u7684\u66f4\u65b0\u8986\u76d6\u4e86\u7531\u5176\u4ed6\u4e8b\u52a1\u6240\u505a\u7684\u66f4\u65b0\u3002\n\n\u810f\u8bfb(Dirty Reads)\uff1a\u4e8b\u52a1A\u8bfb\u53d6\u5230\u4e86\u4e8b\u52a1B\u5df2\u4fee\u6539\u4f46\u5c1a\u672a\u63d0\u4ea4\u7684\u7684\u6570\u636e\uff0c\u8fd8\u5728\u8fd9\u4e2a\u6570\u636e\u57fa\u7840\u4e0a\u505a\u4e86\u64cd\u4f5c\u3002\u6b64\u65f6\uff0c\u5982\u679cB\u4e8b\u52a1\u56de\u6eda\uff0cA\u8bfb\u53d6\u7684\u6570\u636e\u65e0\u6548\uff0c\u4e0d\u7b26\u5408\u4e00\u81f4\u6027\u8981\u6c42\u3002\n\n\u4e0d\u53ef\u91cd\u590d\u8bfb(Non-Repeatable Reads)\uff1a\u4e8b\u52a1A\u8bfb\u53d6\u5230\u4e86\u4e8b\u52a1B\u5df2\u7ecf\u63d0\u4ea4\u7684\u4fee\u6539\u6570\u636e\uff0c\u4e0d\u7b26\u5408\u9694\u79bb\u6027\u3002\n\n\u5e7b\u8bfb(Phantom Reads)\uff1a\u4e8b\u52a1A\u8bfb\u53d6\u5230\u4e86\u4e8b\u52a1B\u63d0\u4ea4\u7684\u65b0\u589e\u6570\u636e\uff0c\u4e0d\u7b26\u5408\u9694\u79bb\u6027\u3002\n\u810f\u8bfb\u662f\u4e8b\u52a1B\u91cc\u9762\u4fee\u6539\u4e86\u6570\u636e\uff0c\u5e7b\u8bfb\u662f\u4e8b\u52a1B\u91cc\u9762\u65b0\u589e\u4e86\u6570\u636e\u3002\n\n\n\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a\n\n\u6848\u4f8b\u5206\u6790\n\n\u5efa\u8868SQL\n\nCREATE TABLE test_innodb_lock (\n  a int(11),\n  b varchar(16)\n) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n\ninsert into test_innodb_lock valeus(1,&#39;b2&#39;);\ninsert into test_innodb_lock valeus(3,&#39;3&#39;);\ninsert into test_innodb_lock valeus(4,&#39;4000&#39;);\ninsert into test_innodb_lock valeus(5,&#39;5000&#39;);\ninsert into test_innodb_lock valeus(6,&#39;6000&#39;);\ninsert into test_innodb_lock valeus(7,&#39;7000&#39;);\ninsert into test_innodb_lock valeus(8,&#39;8000&#39;);\ninsert into test_innodb_lock valeus(9,&#39;9000&#39;);\ninsert into test_innodb_lock valeus(1,&#39;b1&#39;);\n\ncreate index test_innodb_a_ind on test_innodb_lock(a);\n\ncreate index test_innodb_lock_b_ind on test_innodb_lock(b);\n\nselect * from test_innodb_lock;\n\n\n\u884c\u9501\u6f14\u793a\nMySQL5.5\u4ee5\u540e\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\u4e3aInnoDB\uff0cMySQL\u9ed8\u8ba4\u7684\u6570\u636e\u63d0\u4ea4\u64cd\u4f5c\u6a21\u5f0f\u662f\u81ea\u52a8\u63d0\u4ea4\u6a21\u5f0f\uff08autocommit\uff09\uff0c\u8fd9\u5c31\u8868\u793a\u9664\u975e\u663e\u5f0f\u5730\u5f00\u59cb\u4e00\u4e2a\u4e8b\u52a1\uff0c\u5426\u5219\u6bcf\u4e2a\u67e5\u8be2\u90fd\u88ab\u5f53\u505a\u4e00\u4e2a\u5355\u72ec\u7684\u4e8b\u52a1\u81ea\u52a8\u6267\u884c\u3002\nshow variables like &quot;autocommit&quot;; #\u67e5\u770b\u81ea\u52a8\u63d0\u4ea4\u72b6\u6001\nset autocommit=0; #\u5173\u95ed\u81ea\u52a8\u63d0\u4ea4\n\n\n\n\u603b\u7ed3\n\u521b\u5efa\u4e24\u4e2a\u4f1a\u8bdd\uff0c\u5148\u5173\u95ed autocommit\uff1b\uff08set autocommit=0\uff09\n\nsession1\u6267\u884c\u66f4\u65b0\u64cd\u4f5c\uff0c\u6ca1\u6709\u624b\u5199commit\uff1bsession2\u6267\u884c\u540c\u4e00\u884c\u6570\u636e\u7684\u66f4\u65b0\u64cd\u4f5c\uff0c\u4f1a\u88ab\u963b\u585e\u3002\nsession1\u63d0\u4ea4commit\u66f4\u65b0\uff1bsession2\u89e3\u9664\u963b\u585e\uff0c\u66f4\u65b0\u6b63\u5e38\u8fdb\u884c\u3002\nsession1\u4e0esession2\u6267\u884c\u4e0d\u540c\u884c\u7684\u66f4\u65b0\u64cd\u4f5c\u65f6\uff0c\u4e92\u4e0d\u5f71\u54cd\uff0c\u4e0d\u4f1a\u53d1\u751f\u7b49\u5f85\u963b\u585e\u60c5\u51b5\n\u4e24\u8005\u63d0\u4ea4\uff0c\u6570\u636e\u663e\u793a\u6b63\u5e38\u3002\n\n\u7d22\u5f15\u5931\u6548\u884c\u9501\u53d8\u8868\u9501\n\u9996\u5148\u77e5\u9053\u5982\u679c\u7d22\u5f15\u5931\u6548\u7684\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e48\u80af\u5b9a\u4f1a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\uff0c\u4f46\u662f\u5982\u679c\u4f7f\u7528\u4e0d\u5f53\uff0c\u4f1a\u5bfc\u81f4\u884c\u9501\u53d8\u6210\u8868\u9501\u3002\n\u4e0a\u6587\u4e2d\u6570\u636e\u5e93\u7684\u5b58\u50a8\u5f15\u64ce\u4e3aInnoDB\uff0c\u5e76\u4e14\u5173\u95ed\u4e86\u81ea\u52a8\u63d0\u4ea4\uff0c\u5728\u521b\u5efa\u8868\u7684\u65f6\u5019\u521b\u5efa\u4e86\u4e24\u4e2a\u7d22\u5f15\uff0c\u5206\u522b\u5728\u8868\u4e2d\u7684a\u548cb\u5b57\u6bb5\u4e0a\u5efa\u7acb\u4e86\u4e24\u4e2a\u5355\u503c\u7d22\u5f15\u3002\u5982\u4e0b\n\n\u770b\u4e00\u4e0b\u8868\u4fe1\u606f\n\n\u5176\u4e2d\uff0ca\u4e3aint\u578b\uff0cb\u4e3avarchar\u578b\n\u4e0a\u6587\u4e2d\u8bf4\u8fc7\uff0c\u4e24\u4e2a\u4f1a\u8bdd\u53bb\u6267\u884c\u4e0d\u540c\u7684\u8bb0\u5f55\u5404\u4e0d\u76f8\u5e72\u4e0d\u4f1a\u5bfc\u81f4\u963b\u585e\u72b6\u6001\u3002\n\u5728\u8bb2\u7d22\u5f15\u4f18\u5316\u7684\u65f6\u5019\u8bf4\u8fc7\u201cvar\u5f15\u53f7\u4e0d\u80fd\u4e22\u201d\uff0c\u5982\u679c\u4e22\u5931\uff0c\u4f1a\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\u3002\u73b0\u5728\u6765\u6a21\u62df\u4e00\u4e0b\u8fd9\u79cd\u60c5\u51b5\uff0c\u4e0a\u9762\u8bf4\u8fc7b\u5b57\u6bb5\u662fvarchar\u578b\uff0c\u6545\u610f\u628a\u5b83\u5199\u9519\u4e0d\u52a0\u5355\u5f15\u53f7\u3002\nMySQL\u5e95\u5c42\u662f\u505a\u4e86\u7c7b\u578b\u8f6c\u6362\u7684\uff0c\u4f46\u662f\u7531\u4e8e\u201cb\u201d\u5217\u662f\u505a\u4e86\u7d22\u5f15\u7684\u7684\u4e00\u5217\uff0c\u81ea\u52a8\u505a\u4e86\u7c7b\u578b\u8f6c\u6362\u4e4b\u540e\u5bfc\u81f4\u7c7b\u578b\u5931\u6548\uff0c\u6b64\u65f6\u5728\u4f1a\u8bdd1\u4e2d\u4fee\u6539\u4e4b\u540e\uff0c\u81ea\u5df1\u81ea\u5a31\u81ea\u4e50\u4e86\u4e00\u756a\uff0c\u5b8c\u5168\u4e0d\u7ba1\u4f1a\u8bdd2\u53d7\u5f97\u4e86\u53d7\u4e0d\u4e86\u53d1\u751f\u4e86\u963b\u585e\u3002\u6b64\u65f6\u6267\u884ccommit\u3002\n\u8fd9\u79cd\u60c5\u51b5\u5c31\u662f\u4e00\u4e2a\u4e0d\u5c0f\u5fc3\u5c31\u662f\uff0cvar\u6ca1\u6709\u52a0\u5f15\u53f7\uff0c\u5bfc\u81f4\u7d22\u5f15\u5931\u6548\uff0c\u884c\u9501\u8fb9\u8868\u9501\u3002\n\u6ca1\u6709\u7d22\u5f15\u6216\u8005\u7d22\u5f15\u5931\u6548\u65f6\uff0cInnoDB \u7684\u884c\u9501\u53d8\u8868\u9501\n\u539f\u56e0\uff1aMysql \u7684\u884c\u9501\u662f\u901a\u8fc7\u7d22\u5f15\u5b9e\u73b0\u7684\uff01\n\u95f4\u9699\u9501\u5371\u5bb3\n\u5f53\u7528\u8303\u56f4\u6761\u4ef6\u800c\u4e0d\u662f\u76f8\u7b49\u6761\u4ef6\u68c0\u7d22\u6570\u636e\uff0c\u5e76\u8bf7\u6c42\u5171\u4eab\u6216\u6392\u4ed6\u9501\u65f6\uff0cInnoDB\u4f1a\u7ed9\u7b26\u5408\u6761\u4ef6\u7684\u5df2\u6709\u6570\u636e\u8bb0\u5f55\u7684\u7d22\u5f15\u9879\u52a0\u9501\uff1b\u5bf9\u4e8e\u952e\u503c\u5728\u6761\u4ef6\u8303\u56f4\u5185\u4f46\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\uff0c\u53eb\u505a\u201c\u95f4\u9699(GAP)\u201d(\u5b81\u53ef\u9519\u6740\u4e0d\u53ef\u653e\u8fc7\uff0c\u5c31\u7b97\u4e2d\u95f4\u51fa\u73b0\u95f4\u9699\uff0c\u627e\u4e0d\u5230\u6307\u5b9a\u7684\u8bb0\u5f55\u4e5f\u4f1a\u9501\u4f4f)\uff0cInnoDB\u4e5f\u4f1a\u5bf9\u8fd9\u4e2a\u201c\u95f4\u9699\u201d\u52a0\u9501\uff0c\u8fd9\u79cd\u9501\u673a\u5236\u5c31\u662f\u6240\u8c13\u7684\u95f4\u9699\u9501(NEXT-KEY)\u9501\u3002\n\u95f4\u9699\u9501\u6709\u4e00\u4e2a\u6bd4\u8f83\u81f4\u547d\u7684\u5f31\u70b9\uff0c\u5c31\u662f\u5f53\u9501\u5b9a\u4e00\u4e2a\u8303\u56f4\u952e\u503c\u4e4b\u540e\uff0c\u5373\u4f7f\u67d0\u4e9b\u4e0d\u5b58\u5728\u7684\u952e\u503c\u4e5f\u4f1a\u88ab\u65e0\u8f9c\u7684\u9501\u5b9a\uff0c\u800c\u9020\u6210\u5728\u9501\u5b9a\u7684\u65f6\u5019\u65e0\u6cd5\u63d2\u5165\u9501\u5b9a\u503c\u8303\u56f4\u5185\u7684\u4efb\u4f55\u6570\u636e\uff0c\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\u8fd9\u53ef\u80fd\u4f1a\u9488\u5bf9\u6027\u9020\u6210\u5f88\u5927\u7684\u5371\u5bb3\u3002\n\u4e00\u822c\u800c\u8a00\uff0c\u4e3a\u4e86\u4e91\u8ba1\u7b97\u548c\u5927\u6570\u636e\u5206\u6790\uff0c\u6570\u636e\u6700\u6700\u597d\u662f\u8fde\u7eed\u7684\u3002\u6bcf\u4e00\u4e2a\u4e92\u8054\u7f51\u516c\u53f8\u7684\u6bcf\u4e00\u6761\u6570\u636e\u90fd\u65f6\u5f88\u73cd\u8d35\u7684\uff0c\u4e1a\u52a1\u903b\u8f91\u5c42\u6240\u5199\u7684delete\u65b9\u6cd5\u8c03\u7528mapper\u5c42delete\u65b9\u6cd5\u5e76\u6ca1\u6709\u4ece\u7269\u7406\u4e0a\u628a\u8fd9\u6761\u6570\u636e\u7ed9\u5207\u5207\u5b9e\u5b9e\u7684\u5e72\u6389\u3002\n\n\u603b\u7ed3\n\n\u5728\u4f1a\u8bdd1\u4e2d\u6267\u884c\u8303\u56f4\u64cd\u4f5c\u5e76\u672a\u63d0\u4ea4\u4e8b\u52a1\uff1b\u4f1a\u8bdd2\u4ea7\u751f\u963b\u585e\uff0c\u6682\u65f6\u4e0d\u80fd\u63d2\u5165\uff1b\n\u4f1a\u8bdd1\u6267\u884ccommit\uff1b\u4f1a\u8bdd2\u963b\u585e\u89e3\u9664\u3002\n\n\u884c\u9501\u603b\u7ed3\nInnoDB\u5b58\u50a8\u5f15\u64ce\u7531\u4e8e\u4e8b\u5148\u4e86\u884c\u7ea7\u9501\u5b9a\uff0c\u867d\u7136\u5728\u9501\u5b9a\u673a\u5236\u7684\u7684\u5b9e\u73b0\u65b9\u9762\uff0c\u6240\u5e26\u6765\u7684\u6027\u80fd\u635f\u8017\u53ef\u80fd\u6bd4\u8868\u7ea7\u9501\u5b9a\u4f1a\u8981\u66f4\u9ad8\u4e00\u4e9b\uff0c\u4f46\u662f\u5728\u6574\u4f53\u5e76\u53d1\u5904\u7406\u80fd\u529b\u65b9\u9762\u8981\u8fdc\u8fdc\u4f18\u4e8eMyISAM\u7684\u8868\u7ea7\u9501\u5b9a\u7684\u3002\u5f53\u7cfb\u7edf\u5e76\u53d1\u91cf\u8f83\u9ad8\u7684\u65f6\u5019\uff0cInnoDB\u7684\u6574\u4f53\u6027\u80fd\u548cMyISAM\u76f8\u6bd4\u5c31\u4f1a\u6709\u6bd4\u8f83\u660e\u663e\u7684\u4f18\u52bf\u4e86\u3002\n\u4f46\u662f\uff0cInnoDB\u7684\u884c\u7ea7\u9501\u5b9a\u540c\u6837\u4e5f\u6709\u5176\u8106\u5f31\u7684\u4e00\u9762\uff0c\u5f53\u4f7f\u7528\u4e0d\u5f53\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u8ba9InnoDB\u7684\u6574\u4f53\u6027\u80fd\u8868\u73b0\u4e0d\u4ec5\u4e0d\u80fd\u6bd4MyISAM\u9ad8\uff0c\u751a\u81f3\u53ef\u80fd\u66f4\u5dee\uff08\u5c31\u50cf\u524d\u9762\u8bf4\u8fc7\u7684\u884c\u9501\u53ef\u80fd\u53d8\u8868\u9501\uff09\u3002\n\u884c\u9501\u5206\u6790\uff1a\n\u901a\u8fc7\u68c0\u67e5 InnoDB_row_lock \u72b6\u6001\u53d8\u91cf\u6765\u5206\u6790\u7cfb\u7edf\u4e0a\u7684\u884c\u9501\u7684\u4e89\u593a\u60c5\u51b5\nshow status like &#39;innodb_row_lock%&#39;;\n\n\n\u5bf9\u5404\u4e2a\u72b6\u6001\u91cf\u7684\u8bf4\u660e\u5982\u4e0b\uff1a\n\nInnodb_row_lock_current_waits\uff1a\u5f53\u524d\u6b63\u5728\u7b49\u5f85\u9501\u5b9a\u7684\u6570\u91cf\uff1b\n\nInnodb_row_lock_time\uff1a\u4ece\u7cfb\u7edf\u542f\u52a8\u5230\u73b0\u5728\u9501\u5b9a\u603b\u65f6\u95f4\u957f\u5ea6\uff1b\n\nInnodb_row_lock_time_avg\uff1a\u6bcf\u6b21\u7b49\u5f85\u9501\u82b1\u8d39\u5e73\u5747\u65f6\u95f4\uff1b\n\nInnodb_row_lock_time_max\uff1a\u4ece\u7cfb\u7edf\u542f\u52a8\u5230\u73b0\u5728\u7b49\u5f85\u6700\u957f\u7684\u4e00\u6b21\u8bf4\u8bdd\u7684\u65f6\u95f4\uff1b\n\nInnodb_row_lock_waits \uff1a\u542f\u52a8\u7cfb\u7edf\u540e\u5230\u73b0\u5728\u603b\u5171\u7b49\u5f85\u7684\u6b21\u6570\uff1b\n\n\n\u5bf9\u4e8e5\u4e2a\u72b6\u6001\u53d8\u91cf\uff0c\u6bd4\u8f83\u91cd\u8981\u7684\u662f\uff1a\n\nInnodb_row_lock_time_avg\uff08\u7b49\u5f85\u9501\u7684\u5e73\u5747\u65f6\u957f\uff09\n\nInnodb_row_lock_waits \uff08\u7b49\u5f85\u603b\u6b21\u6570\uff09\n\nInnodb_row_lock_time\uff08\u7b49\u5f85\u603b\u65f6\u957f\uff09\n\n\n\u5c24\u5176\u662f\u5f53\u7b49\u5f85\u6b21\u6570\u8d8a\u9ad8\uff0c\u800c\u4e14\u6bcf\u6b21\u7b49\u5f85\u65f6\u957f\u4e5f\u4e0d\u5c0f\u7684\u65f6\u5019\uff0c\u5c31\u9700\u8981\u5206\u6790\u7cfb\u7edf\u4e2d\u4e3a\u4ec0\u4e48\u4f1a\u6709\u5982\u6b64\u591a\u7684\u7b49\u5f85\uff0c\u7136\u540e\u6839\u636e\u5206\u6790\u7ed3\u679c\u7740\u624b\u5236\u5b9a\u4f18\u5316\u8ba1\u5212\u3002\n\u4f18\u5316\u5efa\u8bae\n\n\u5c3d\u53ef\u80fd\u5728\u6240\u6709\u6570\u636e\u68c0\u7d22\u90fd\u901a\u8fc7\u7d22\u5f15\u6765\u5b8c\u6210\uff0c\u907f\u514d\u65e0\u7d22\u5f15\u884c\u9501\u5347\u7ea7\u4e3a\u8868\u9501\n\u5408\u7406\u8bbe\u8ba1\u7d22\u5f15\uff0c\u5c3d\u91cf\u7f29\u5c0f\u9501\u7684\u8303\u56f4\n\u5c3d\u53ef\u80fd\u8f83\u5c11\u68c0\u7d22\u6761\u4ef6\uff0c\u907f\u514d\u95f4\u9699\u9501\n\u5c3d\u91cf\u63a7\u5236\u4e8b\u52a1\u5927\u5c0f\uff0c\u51cf\u5c11\u9501\u5b9a\u8d44\u6e90\u91cf\u548c\u65f6\u95f4\u957f\u5ea6\n\u5c3d\u53ef\u80fd\u4f4e\u7ea7\u522b\u4e8b\u52a1\u9694\u79bb\n\n\u8865\u5145\uff1a\n\u5982\u4f55\u9501\u5b9a\u4e00\u884c\uff1f\n\u5728SQL\u8bed\u53e5\u540e\u9762\u52a0\u4e0afor update\uff0c\u76f4\u5230\u9501\u5b9a\u884c\u7684\u4f1a\u8bdd\u63d0\u4ea4commit\u3002\n\n3.\u9875\u9501\n\u5f00\u9500\u548c\u52a0\u9501\u65f6\u95f4\u754c\u4e8e\u8868\u9501\u548c\u884c\u9501\u4e4b\u95f4\uff1b\u4f1a\u51fa\u73b0\u6b7b\u9501\uff1b\u9501\u5b9a\u7c92\u5ea6\u754c\u4e8e\u8868\u9501\u548c\u884c\u9501\u4e4b\u95f4\uff0c\u5e76\u53d1\u5ea6\u4e00\u822c\u3002\nMySQL\u4e3b\u4ece\u590d\u5236\n\u6982\u5ff5\nMySQL \u4e3b\u4ece\u590d\u5236\u662f\u6307\u6570\u636e\u53ef\u4ee5\u4ece\u4e00\u4e2aMySQL\u6570\u636e\u5e93\u670d\u52a1\u5668\u4e3b\u8282\u70b9\u590d\u5236\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u4ece\u8282\u70b9\u3002MySQL \u9ed8\u8ba4\u91c7\u7528\u5f02\u6b65\u590d\u5236\u65b9\u5f0f\uff0c\u8fd9\u6837\u4ece\u8282\u70b9\u4e0d\u7528\u4e00\u76f4\u8bbf\u95ee\u4e3b\u670d\u52a1\u5668\u6765\u66f4\u65b0\u81ea\u5df1\u7684\u6570\u636e\uff0c\u6570\u636e\u7684\u66f4\u65b0\u53ef\u4ee5\u5728\u8fdc\u7a0b\u8fde\u63a5\u4e0a\u8fdb\u884c\uff0c\u4ece\u8282\u70b9\u53ef\u4ee5\u590d\u5236\u4e3b\u6570\u636e\u5e93\u4e2d\u7684\u6240\u6709\u6570\u636e\u5e93\u6216\u8005\u7279\u5b9a\u7684\u6570\u636e\u5e93\uff0c\u6216\u8005\u7279\u5b9a\u7684\u8868\u3002\n\u4e3b\u8981\u7528\u9014\n\n\u8bfb\u5199\u5206\u79bb\n\u5728\u5f00\u53d1\u5de5\u4f5c\u4e2d\uff0c\u6709\u65f6\u5019\u4f1a\u9047\u89c1\u67d0\u4e2asql \u8bed\u53e5\u9700\u8981\u9501\u8868\uff0c\u5bfc\u81f4\u6682\u65f6\u4e0d\u80fd\u4f7f\u7528\u8bfb\u7684\u670d\u52a1\uff0c\u8fd9\u6837\u5c31\u4f1a\u5f71\u54cd\u73b0\u6709\u4e1a\u52a1\uff0c\u4f7f\u7528\u4e3b\u4ece\u590d\u5236\uff0c\u8ba9\u4e3b\u5e93\u8d1f\u8d23\u5199\uff0c\u4ece\u5e93\u8d1f\u8d23\u8bfb\uff0c\u8fd9\u6837\uff0c\u5373\u4f7f\u4e3b\u5e93\u51fa\u73b0\u4e86\u9501\u8868\u7684\u60c5\u666f\uff0c\u901a\u8fc7\u8bfb\u4ece\u5e93\u4e5f\u53ef\u4ee5\u4fdd\u8bc1\u4e1a\u52a1\u7684\u6b63\u5e38\u8fd0\u4f5c\u3002\n\u6570\u636e\u5b9e\u65f6\u5907\u4efd\uff0c\u5f53\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u8282\u70b9\u53d1\u751f\u6545\u969c\u65f6\uff0c\u53ef\u4ee5\u65b9\u4fbf\u7684\u6545\u969c\u5207\u6362\n\u9ad8\u53ef\u7528HA\n\u67b6\u6784\u6269\u5c55\n\u968f\u7740\u7cfb\u7edf\u4e2d\u4e1a\u52a1\u8bbf\u95ee\u91cf\u7684\u589e\u5927\uff0c\u5982\u679c\u662f\u5355\u673a\u90e8\u7f72\u6570\u636e\u5e93\uff0c\u5c31\u4f1a\u5bfc\u81f4I/O\u8bbf\u95ee\u9891\u7387\u8fc7\u9ad8\u3002\u6709\u4e86\u4e3b\u4ece\u590d\u5236\uff0c\u589e\u52a0\u591a\u4e2a\u6570\u636e\u5b58\u50a8\u8282\u70b9\uff0c\u5c06\u8d1f\u8f7d\u5206\u5e03\u5728\u591a\u4e2a\u4ece\u8282\u70b9\u4e0a\uff0c\u964d\u4f4e\u5355\u673a\u78c1\u76d8I/O\u8bbf\u95ee\u7684\u9891\u7387\uff0c\u63d0\u9ad8\u5355\u4e2a\u673a\u5668\u7684I/O\u6027\u80fd\u3002\n\n\u57fa\u672c\u539f\u7406\nslave\u4f1a\u4ecemaster\u8bfb\u53d6binlog\u6765\u8fdb\u884c\u6570\u636e\u540c\u6b65\u3002\n\n\u4e09\u6b65\uff1a\n\nmaster\u5c06\u6539\u53d8\u8bb0\u5f55\u5230\u4e8c\u8fdb\u5236\u65e5\u5fd7(binary log\uff09\u3002\u8fd9\u4e9b\u8bb0\u5f55\u8fc7\u7a0b\u53eb\u505a\u4e8c\u8fdb\u5236\u65e5\u5fd7\u4e8b\u4ef6\uff0cbinary log events;\nslave\u5c06master\u7684binary log events\u62f7\u8d1d\u5230\u5b83\u7684\u4e2d\u7ee7\u65e5\u5fd7\uff08relay log\uff09 ;\nslave\u91cd\u505a\u4e2d\u7ee7\u65e5\u5fd7\u4e2d\u7684\u4e8b\u4ef6\uff0c\u5c06\u6539\u53d8\u5e94\u7528\u5230\u81ea\u5df1\u7684\u6570\u636e\u5e93\u4e2d\u3002MySQL\u590d\u5236\u662f\u5f02\u6b65\u7684\u4e14\u4e32\u884c\u5316\u7684\u3002\n\n\u57fa\u672c\u539f\u5219\n\n\u6bcf\u4e2aslave\u53ea\u6709\u4e00\u4e2amaster\n\n\u6bcf\u4e2aslave\u53ea\u80fd\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u670d\u52a1\u5668ID\n\n\u6bcf\u4e2amaster\u53ef\u4ee5\u6709\u591a\u4e2asalve\n\u590d\u5236\u7684\u6700\u5927\u95ee\u9898\u662f\u5ef6\u8fdf\u3002\n\n\n\u4e00\u4e3b\u4e00\u4ece\u5e38\u89c1\u914d\u7f6e\n\u53c2\u8003\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "MySQL", "slug": "MySQL", "permalink": "/Xuxx_Blogs/tag/MySQL/"}]}, {"title": "Spring Boot\u53d1\u9001\u90ae\u4ef6", "date": "2020-06-03T23:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj25/", "text": "1.\u57fa\u7840\u77e5\u8bc6\n\n\u4ec0\u4e48\u662fSMTP\uff1f\n SMTP\u5168\u79f0\u4e3aSimple Mail Transfer Protocol\uff08\u7b80\u5355\u90ae\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\uff0c\u5b83\u662f\u4e00\u7ec4\u7528\u4e8e\u4ece\u6e90\u5730\u5740\u5230\u76ee\u7684\u5730\u5740\u4f20\u8f93\u90ae\u4ef6\u7684\u89c4\u8303\uff0c\u901a\u8fc7\u5b83\u6765\u63a7\u5236\u90ae\u4ef6\u7684\u4e2d\u8f6c\u65b9\u5f0f\u3002SMTP\u8ba4\u8bc1\u8981\u6c42\u5fc5\u987b\u63d0\u4f9b\u8d26\u53f7\u548c\u5bc6\u7801\u624d\u80fd\u767b\u9646\u670d\u52a1\u5668\uff0c\u5176\u8bbe\u8ba1\u76ee\u7684\u5728\u4e8e\u907f\u514d\u7528\u6237\u53d7\u5230\u5783\u573e\u90ae\u4ef6\u7684\u4fb5\u6270\u3002\n\u4ec0\u4e48\u662fIMAP\uff1f\n IMAP\u5168\u79f0\u4e3aInternet Message Access Protocol\uff08\u4e92\u8054\u7f51\u90ae\u4ef6\u8bbf\u95ee\u534f\u8bae\uff09\uff0cIMAP\u5141\u8bb8\u4ece\u90ae\u4ef6\u670d\u52a1\u5668\u4e0a\u83b7\u53d6\u90ae\u4ef6\u7684\u4fe1\u606f\u3001\u4e0b\u8f7d\u90ae\u4ef6\u7b49\u3002IMAP\u4e0ePOP\u7c7b\u4f3c\uff0c\u90fd\u662f\u4e00\u79cd\u90ae\u4ef6\u83b7\u53d6\u534f\u8bae\u3002\n\u4ec0\u4e48\u662fPOP3\uff1f\n POP3\u5168\u79f0\u4e3aPost Office Protocol 3\uff08\u90ae\u5c40\u534f\u8bae\uff09\uff0cPOP3\u652f\u6301\u5ba2\u6237\u7aef\u8fdc\u7a0b\u7ba1\u7406\u670d\u52a1\u5668\u7aef\u7684\u90ae\u4ef6\u3002POP3\u5e38\u7528\u4e8e\u201c\u79bb\u7ebf\u201d\u90ae\u4ef6\u5904\u7406\uff0c\u5373\u5141\u8bb8\u5ba2\u6237\u7aef\u4e0b\u8f7d\u670d\u52a1\u5668\u90ae\u4ef6\uff0c\u7136\u540e\u670d\u52a1\u5668\u4e0a\u7684\u90ae\u4ef6\u5c06\u4f1a\u88ab\u5220\u9664\u3002\u76ee\u524d\u5f88\u591aPOP3\u7684\u90ae\u4ef6\u670d\u52a1\u5668\u53ea\u63d0\u4f9b\u4e0b\u8f7d\u90ae\u4ef6\u529f\u80fd\uff0c\u670d\u52a1\u5668\u672c\u8eab\u5e76\u4e0d\u5220\u9664\u90ae\u4ef6\uff0c\u8fd9\u79cd\u5c5e\u4e8e\u6539\u8fdb\u7248\u7684POP3\u534f\u8bae\u3002\nIMAP\u548cPOP3\u534f\u8bae\u6709\u4ec0\u4e48\u4e0d\u540c\u5462\uff1f\n \u4e24\u8005\u6700\u5927\u7684\u533a\u522b\u5728\u4e8e\uff0cIMAP\u5141\u8bb8\u53cc\u5411\u901a\u4fe1\uff0c\u5373\u5728\u5ba2\u6237\u7aef\u7684\u64cd\u4f5c\u4f1a\u53cd\u9988\u5230\u670d\u52a1\u5668\u4e0a\uff0c\u4f8b\u5982\u5728\u5ba2\u6237\u7aef\u6536\u53d6\u90ae\u4ef6\u3001\u6807\u8bb0\u5df2\u8bfb\u7b49\u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u4f1a\u8ddf\u7740\u540c\u6b65\u8fd9\u4e9b\u64cd\u4f5c\u3002\u800c\u5bf9\u4e8ePOP\u534f\u8bae\u867d\u7136\u4e5f\u5141\u8bb8\u5ba2\u6237\u7aef\u4e0b\u8f7d\u670d\u52a1\u5668\u90ae\u4ef6\uff0c\u4f46\u662f\u5728\u5ba2\u6237\u7aef\u7684\u64cd\u4f5c\u5e76\u4e0d\u4f1a\u540c\u6b65\u5230\u670d\u52a1\u5668\u4e0a\u9762\u7684\uff0c\u4f8b\u5982\u5728\u5ba2\u6237\u7aef\u6536\u53d6\u6216\u6807\u8bb0\u5df2\u8bfb\u90ae\u4ef6\uff0c\u670d\u52a1\u5668\u4e0d\u4f1a\u540c\u6b65\u8fd9\u4e9b\u64cd\u4f5c\u3002\n\n2.\u8fdb\u9636\u77e5\u8bc6\n\n\u4ec0\u4e48\u662fJavaMailSender\u548cJavaMailSenderImpl\uff1f\nJavaMailSender\u548cJavaMailSenderImpl \u662fSpring\u5b98\u65b9\u63d0\u4f9b\u7684\u96c6\u6210\u90ae\u4ef6\u670d\u52a1\u7684\u63a5\u53e3\u548c\u5b9e\u73b0\u7c7b\uff0c\u4ee5\u7b80\u5355\u9ad8\u6548\u7684\u8bbe\u8ba1\u8457\u79f0\uff0c\u76ee\u524d\u662fJava\u540e\u7aef\u53d1\u9001\u90ae\u4ef6\u548c\u96c6\u6210\u90ae\u4ef6\u670d\u52a1\u7684\u4e3b\u6d41\u5de5\u5177\u3002\n\n\u5982\u4f55\u901a\u8fc7JavaMailSenderImpl\u53d1\u9001\u90ae\u4ef6\uff1f\n\u975e\u5e38\u7b80\u5355\uff0c\u76f4\u63a5\u5728\u4e1a\u52a1\u7c7b\u6ce8\u5165JavaMailSenderImpl\u5e76\u8c03\u7528send\u65b9\u6cd5\u53d1\u9001\u90ae\u4ef6\u3002\u5176\u4e2d\u7b80\u5355\u90ae\u4ef6\u53ef\u4ee5\u901a\u8fc7SimpleMailMessage\u6765\u53d1\u9001\u90ae\u4ef6\uff0c\u800c\u590d\u6742\u7684\u90ae\u4ef6\uff08\u4f8b\u5982\u6dfb\u52a0\u9644\u4ef6\uff09\u53ef\u4ee5\u501f\u52a9MimeMessageHelper\u6765\u6784\u5efaMimeMessage\u53d1\u9001\u90ae\u4ef6\u3002\n\n\n3.\u4f7f\u7528\u6559\u7a0b\n1.\u5f00\u542f\u90ae\u4ef6\u670d\u52a1\n\u767b\u9646\u4f7f\u7528\u7684\u90ae\u7bb1\uff0c\u5728\u8bbe\u7f6e\u4e2d\u6253\u5f00\u5e76\u52fe\u9009POP3/SMTP/IMAP\u670d\u52a1\uff0c\u7136\u540e\u4f1a\u5f97\u5230\u4e00\u4e2a\u6388\u6743\u7801\uff0c\u8fd9\u4e2a\u90ae\u7bb1\u548c\u6388\u6743\u7801\u5c06\u7528\u4f5c\u767b\u9646\u8ba4\u8bc1\u3002\n2.\u521b\u5efaSpring Boot\u9879\u76ee\uff0c\u5f15\u5165\u4f9d\u8d56\n\u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-mail&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n\u914d\u7f6e\nspring.mail.host=smtp.qq.com\nspring.mail.port=465\nspring.mail.username=1820502...@qq.com\n#\u6388\u6743\u7801\nspring.mail.password=***...\nspring.mail.default-encoding=UTF-8\n#\u52a0\u5bc6\u8fde\u63a5\nspring.mail.properties.mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory\n#\u65e5\u5fd7\nspring.mail.properties.mail.debug=true\n\n3.\u53d1\u9001\u90ae\u4ef6\n3.1 \u53d1\u9001\u7b80\u5355\u90ae\u4ef6\n@SpringBootTest\nclass MailApplicationTests {\n\n    @Autowired\n    JavaMailSender javaMailSender;\n\n    @Test\n    void contextLoads() {\n        //\u5199\u90ae\u4ef6\n        SimpleMailMessage message = new SimpleMailMessage();\n        message.setSubject(&quot;\u6d4b\u8bd5\u90ae\u4ef6-\u4e3b\u9898&quot;);\n        message.setText(&quot;\u6d4b\u8bd5\u90ae\u4ef6-\u5185\u5bb9\uff1aHello Word&quot;);\n        message.setFrom(&quot;1820502...@qq.com&quot;);\n        message.setSentDate(new Date());\n        message.setTo(&quot;1913312...@qq.com&quot;);\n        //message.setCc();//\u6284\u9001\n        //message.setBcc();//\u5bc6\u6284\n\n        //\u53d1\u9001\u90ae\u4ef6\n        javaMailSender.send(message);\n    }\n}\n\n3.2 \u53d1\u9001\u5e26\u9644\u4ef6\u7684\u90ae\u4ef6\n@SpringBootTest\nclass MailApplicationTests {\n\n    @Autowired\n    JavaMailSender javaMailSender;\n\n    @Test\n    void test1() throws MessagingException {\n        MimeMessage message = javaMailSender.createMimeMessage();\n\n        MimeMessageHelper messageHelper = new MimeMessageHelper(message, true);\n\n        //\u5199\u90ae\u4ef6\n        messageHelper.setSubject(&quot;\u6d4b\u8bd5\u90ae\u4ef6-\u4e3b\u9898&quot;);\n        messageHelper.setText(&quot;\u6d4b\u8bd5\u90ae\u4ef6-\u5185\u5bb9\uff1aHello Word (\u5e26\u9644\u4ef6)&quot;);\n        //\u6dfb\u52a0\u9644\u4ef6\n        messageHelper.addAttachment(&quot;1.jpg&quot;, new File(&quot;D:\\\\UserData\\\\Pictures\\\\QQ\\\\1.jpg&quot;));\n        messageHelper.setFrom(&quot;1820502...@qq.com&quot;);\n        messageHelper.setSentDate(new Date());\n        messageHelper.setTo(&quot;1913312...@qq.com&quot;);\n\n        //\u53d1\u9001\u90ae\u4ef6\n        javaMailSender.send(message);\n    }\n}\n\n3.3\u53d1\u9001\u5e26\u56fe\u7247\u7684\u90ae\u4ef6\n@SpringBootTest\nclass MailApplicationTests {\n\n    @Autowired\n    JavaMailSender javaMailSender;\n\n    @Test\n    void test2() throws MessagingException {\n        MimeMessage message = javaMailSender.createMimeMessage();\n        MimeMessageHelper messageHelper = new MimeMessageHelper(message, true);\n\n        //\u5199\u90ae\u4ef6\n        messageHelper.setSubject(&quot;\u6d4b\u8bd5\u90ae\u4ef6-\u4e3b\u9898&quot;);\n        messageHelper.setText(&quot;\u6d4b\u8bd5\u90ae\u4ef6-\u5185\u5bb9\uff1aHello Word(\u5e26\u56fe\u7247)\uff0c\u8fd9\u662f\u56fe1\uff1a&lt;img src=&#39;cid:p01&#39;/&gt;\uff0c\u8fd9\u662f\u56fe2\uff1a&lt;img src=&#39;cid:p02&#39;/&gt;&quot;, true);\n        messageHelper.addInline(&quot;p01&quot;, new FileSystemResource(new File(&quot;D:\\\\UserData\\\\Pictures\\\\QQ\\\\1.jpg&quot;)));\n        messageHelper.addInline(&quot;p02&quot;, new FileSystemResource(new File(&quot;D:\\\\UserData\\\\Pictures\\\\QQ\\\\1.jpg&quot;)));\n        messageHelper.setFrom(&quot;1820502...@qq.com&quot;);\n        messageHelper.setSentDate(new Date());\n        messageHelper.setTo(&quot;1913312...@qq.com&quot;);\n\n        //\u53d1\u9001\u90ae\u4ef6\n        javaMailSender.send(message);\n    }\n}\n\n4.\u4f7f\u7528\u6a21\u677f\n4.1\u4f7f\u7528Thymeleaf\n\u52a0\u5165\u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\nmail.html\uff08\u653e\u5728templates\u76ee\u5f55\u4e0b\uff09\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;cn&quot; xmlns:th=&quot;http://www.thymeleaf.org/&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;\u90ae\u4ef6&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div&gt;\n    Hello,&lt;span th:text=&quot;${name}&quot;/&gt;,\u6b22\u8fce\u52a0\u5165XXX\u5927\u5bb6\u5ead\n&lt;/div&gt;\n&lt;div&gt;\n    \u60a8\u7684\u5165\u804c\u4fe1\u606f\u5982\u4e0b:\n&lt;/div&gt;\n&lt;table border=&quot;1&quot;&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u804c\u4f4d&lt;/td&gt;\n        &lt;td&gt;&lt;span th:text=&quot;${position}&quot;/&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u804c\u79f0&lt;/td&gt;\n        &lt;td&gt;&lt;span th:text=&quot;${jobtitle}&quot;/&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u85aa\u8d44&lt;/td&gt;\n        &lt;td&gt;&lt;span th:text=&quot;${salary}&quot;/&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u90e8\u95e8&lt;/td&gt;\n        &lt;td&gt;&lt;span th:text=&quot;${department}&quot;/&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n&lt;div style=&quot;font-size: 24px&quot;&gt;\u5e0c\u671b\u5728\u672a\u6765\u7684\u65e5\u5b50\u91cc\uff0c\u643a\u624b\u5e76\u8fdb\uff01&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n@SpringBootTest\nclass MailApplicationTests {\n\n    @Autowired\n    JavaMailSender javaMailSender;\n\n    @Autowired\n    TemplateEngine templateEngine;//thymeleaf\u6a21\u677f\u5f15\u64ce\n\n    /*\u53d1\u9001\u90ae\u4ef6\u6a21\u677f thymeleaf*/\n    @Test\n    void test3() throws MessagingException {\n        MimeMessage message = javaMailSender.createMimeMessage();\n        MimeMessageHelper messageHelper = new MimeMessageHelper(message,\n        //\u5199\u90ae\u4ef6\n        messageHelper.setSubject(&quot;\u6d4b\u8bd5\u90ae\u4ef6-\u4e3b\u9898&quot;);\n        Context context = new Context();\n        context.setVariable(&quot;name&quot;, &quot;xuxx&quot;);\n        context.setVariable(&quot;position&quot;, &quot;Java\u5f00\u53d1&quot;);\n        context.setVariable(&quot;jobtitle&quot;, &quot;Java\u5f00\u53d1\u521d\u7ea7\u5de5\u7a0b\u5e08&quot;);\n        context.setVariable(&quot;salary&quot;, &quot;13*6k&quot;);\n        context.setVariable(&quot;department&quot;, &quot;\u4ea7\u54c1\u5f00\u53d1\u90e8&quot;);\n        String process = templateEngine.process(&quot;mail.html&quot;, context);\n        messageHelper.setText(process, true);\n        messageHelper.setFrom(&quot;1820502...@qq.com&quot;);\n        messageHelper.setSentDate(new Date());\n        messageHelper.setTo(&quot;1913312...@qq.com&quot;);\n        //\u53d1\u9001\u90ae\u4ef6\n        javaMailSender.send(message);\n    }\n}\n\n4.2\u4f7f\u7528Freemarker\n\u52a0\u5165\u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\nmail.ftl\uff08\u653e\u5728templates\u76ee\u5f55\u4e0b\uff09\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;cn&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;\u90ae\u4ef6&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div&gt;\n    Hello,${name},\u6b22\u8fce\u52a0\u5165XXX\u5927\u5bb6\u5ead\n&lt;/div&gt;\n&lt;div&gt;\n    \u60a8\u7684\u5165\u804c\u4fe1\u606f\u5982\u4e0b:\n&lt;/div&gt;\n&lt;table border=&quot;1&quot;&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u804c\u4f4d&lt;/td&gt;\n        &lt;td&gt;${position}&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u804c\u79f0&lt;/td&gt;\n        &lt;td&gt;${jobtitle}&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u85aa\u8d44&lt;/td&gt;\n        &lt;td&gt;${salary}&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u90e8\u95e8&lt;/td&gt;\n        &lt;td&gt;${department}&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n&lt;div style=&quot;font-size: 24px&quot;&gt;\u5e0c\u671b\u5728\u672a\u6765\u7684\u65e5\u5b50\u91cc\uff0c\u643a\u624b\u5e76\u8fdb\uff01&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n@SpringBootTest\nclass MailApplicationTests {\n\n    @Autowired\n    JavaMailSender javaMailSender;\n\n    /*\u53d1\u9001\u90ae\u4ef6\u6a21\u677f freemarker*/\n    @Test\n    void test4() throws MessagingException, IOException, TemplateException {\n        MimeMessage message = javaMailSender.createMimeMessage();\n        MimeMessageHelper messageHelper = new MimeMessageHelper(message, true);\n\n        //\u5199\u90ae\u4ef6\n        messageHelper.setSubject(\"\u6d4b\u8bd5\u90ae\u4ef6-\u4e3b\u9898\");\n        Configuration configuration = new Configuration(Configuration.VERSION_2_3_29);\n        configuration.setClassLoaderForTemplateLoading(this.getClass().getClassLoader(), \"templates\");\n        Template template = configuration.getTemplate(\"mail.ftl\");\n        Map&lt;String, Object&gt; map = new HashMap();\n        map.put(\"name\", \"xuxx\");\n        map.put(\"position\", \"Java\u5f00\u53d1\");\n        map.put(\"jobtitle\", \"Java\u5f00\u53d1\u521d\u7ea7\u5de5\u7a0b\u5e08\");\n        map.put(\"salary\", \"13*6k\");\n        map.put(\"department\", \"\u4ea7\u54c1\u5f00\u53d1\u90e8\");\n        StringWriter out = new StringWriter();\n        template.process(map, out);\n        messageHelper.setText(out.toString(), true);\n        messageHelper.setFrom(\"1820502...@qq.com\");\n        messageHelper.setSentDate(new Date());\n        messageHelper.setTo(\"1913312...@qq.com\");\n        //\u53d1\u9001\u90ae\u4ef6\n        javaMailSender.send(message);\n    }\n}\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "RabbitMQ\u5b9e\u6218\u6559\u7a0b", "date": "2020-05-31T22:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj24/", "text": "1.MQ\u5f15\u8a00\n1.1 \u4ec0\u4e48\u662fMQ\nMQ(Message Quene) :  \u7ffb\u8bd1\u4e3a \u6d88\u606f\u961f\u5217,\u901a\u8fc7\u5178\u578b\u7684 \u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u6a21\u578b,\u751f\u4ea7\u8005\u4e0d\u65ad\u5411\u6d88\u606f\u961f\u5217\u4e2d\u751f\u4ea7\u6d88\u606f\uff0c\u6d88\u8d39\u8005\u4e0d\u65ad\u7684\u4ece\u961f\u5217\u4e2d\u83b7\u53d6\u6d88\u606f\u3002\u56e0\u4e3a\u6d88\u606f\u7684\u751f\u4ea7\u548c\u6d88\u8d39\u90fd\u662f\u5f02\u6b65\u7684\uff0c\u800c\u4e14\u53ea\u5173\u5fc3\u6d88\u606f\u7684\u53d1\u9001\u548c\u63a5\u6536\uff0c\u6ca1\u6709\u4e1a\u52a1\u903b\u8f91\u7684\u4fb5\u5165,\u8f7b\u677e\u7684\u5b9e\u73b0\u7cfb\u7edf\u95f4\u89e3\u8026\u3002\u522b\u540d\u4e3a \u6d88\u606f\u4e2d\u95f4\u4ef6 \u901a\u8fc7\u5229\u7528\u9ad8\u6548\u53ef\u9760\u7684\u6d88\u606f\u4f20\u9012\u673a\u5236\u8fdb\u884c\u5e73\u53f0\u65e0\u5173\u7684\u6570\u636e\u4ea4\u6d41\uff0c\u5e76\u57fa\u4e8e\u6570\u636e\u901a\u4fe1\u6765\u8fdb\u884c\u5206\u5e03\u5f0f\u7cfb\u7edf\u7684\u96c6\u6210\u3002\n1.2 MQ\u6709\u54ea\u4e9b\n\u5f53\u4eca\u5e02\u9762\u4e0a\u6709\u5f88\u591a\u4e3b\u6d41\u7684\u6d88\u606f\u4e2d\u95f4\u4ef6\uff0c\u5982\u8001\u724c\u7684ActiveMQ\u3001RabbitMQ\uff0c\u7099\u624b\u53ef\u70ed\u7684Kafka\uff0c\u963f\u91cc\u5df4\u5df4\u81ea\u4e3b\u5f00\u53d1RocketMQ\u7b49\u3002\n1.3 \u4e0d\u540cMQ\u7279\u70b9\n\n# 1.ActiveMQ\n        ActiveMQ \u662fApache\u51fa\u54c1\uff0c\u6700\u6d41\u884c\u7684\uff0c\u80fd\u529b\u5f3a\u52b2\u7684\u5f00\u6e90\u6d88\u606f\u603b\u7ebf\u3002\u5b83\u662f\u4e00\u4e2a\u5b8c\u5168\u652f\u6301JMS\u89c4\u8303\u7684\u7684\u6d88\u606f\u4e2d\u95f4\u4ef6\u3002\u4e30\u5bcc\u7684API,\u591a\u79cd\u96c6\u7fa4\u67b6\u6784\u6a21\u5f0f\u8ba9ActiveMQ\u5728\u4e1a\u754c\u6210\u4e3a\u8001\u724c\u7684\u6d88\u606f\u4e2d\u95f4\u4ef6,\u5728\u4e2d\u5c0f\u578b\u4f01\u4e1a\u9887\u53d7\u6b22\u8fce!\n\n# 2.Kafka\n        Kafka\u662fLinkedIn\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u53d1\u5e03-\u8ba2\u9605\u6d88\u606f\u7cfb\u7edf\uff0c\u76ee\u524d\u5f52\u5c5e\u4e8eApache\u9876\u7ea7\u9879\u76ee\u3002Kafka\u4e3b\u8981\u7279\u70b9\u662f\u57fa\u4e8ePull\u7684\u6a21\u5f0f\u6765\u5904\u7406\u6d88\u606f\u6d88\u8d39\uff0c\n        \u8ffd\u6c42\u9ad8\u541e\u5410\u91cf\uff0c\u4e00\u5f00\u59cb\u7684\u76ee\u7684\u5c31\u662f\u7528\u4e8e\u65e5\u5fd7\u6536\u96c6\u548c\u4f20\u8f93\u30020.8\u7248\u672c\u5f00\u59cb\u652f\u6301\u590d\u5236\uff0c\u4e0d\u652f\u6301\u4e8b\u52a1\uff0c\u5bf9\u6d88\u606f\u7684\u91cd\u590d\u3001\u4e22\u5931\u3001\u9519\u8bef\u6ca1\u6709\u4e25\u683c\u8981\u6c42\uff0c\n        \u9002\u5408\u4ea7\u751f\u5927\u91cf\u6570\u636e\u7684\u4e92\u8054\u7f51\u670d\u52a1\u7684\u6570\u636e\u6536\u96c6\u4e1a\u52a1\u3002\n\n# 3.RocketMQ\n        RocketMQ\u662f\u963f\u91cc\u5f00\u6e90\u7684\u6d88\u606f\u4e2d\u95f4\u4ef6\uff0c\u5b83\u662f\u7eafJava\u5f00\u53d1\uff0c\u5177\u6709\u9ad8\u541e\u5410\u91cf\u3001\u9ad8\u53ef\u7528\u6027\u3001\u9002\u5408\u5927\u89c4\u6a21\u5206\u5e03\u5f0f\u7cfb\u7edf\u5e94\u7528\u7684\u7279\u70b9\u3002RocketMQ\u601d\u8def\u8d77\n        \u6e90\u4e8eKafka\uff0c\u4f46\u5e76\u4e0d\u662fKafka\u7684\u4e00\u4e2aCopy\uff0c\u5b83\u5bf9\u6d88\u606f\u7684\u53ef\u9760\u4f20\u8f93\u53ca\u4e8b\u52a1\u6027\u505a\u4e86\u4f18\u5316\uff0c\u76ee\u524d\u5728\u963f\u91cc\u96c6\u56e2\u88ab\u5e7f\u6cdb\u5e94\u7528\u4e8e\u4ea4\u6613\u3001\u5145\u503c\u3001\u6d41\u8ba1\u7b97\u3001\u6d88\n        \u606f\u63a8\u9001\u3001\u65e5\u5fd7\u6d41\u5f0f\u5904\u7406\u3001binglog\u5206\u53d1\u7b49\u573a\u666f\u3002\n\n# 4.RabbitMQ\n        RabbitMQ\u662f\u4f7f\u7528Erlang\u8bed\u8a00\u5f00\u53d1\u7684\u5f00\u6e90\u6d88\u606f\u961f\u5217\u7cfb\u7edf\uff0c\u57fa\u4e8eAMQP\u534f\u8bae\u6765\u5b9e\u73b0\u3002AMQP\u7684\u4e3b\u8981\u7279\u5f81\u662f\u9762\u5411\u6d88\u606f\u3001\u961f\u5217\u3001\u8def\u7531\uff08\u5305\u62ec\u70b9\u5bf9\u70b9\u548c\n        \u53d1\u5e03/\u8ba2\u9605\uff09\u3001\u53ef\u9760\u6027\u3001\u5b89\u5168\u3002AMQP\u534f\u8bae\u66f4\u591a\u7528\u5728\u4f01\u4e1a\u7cfb\u7edf\u5185\u5bf9\u6570\u636e\u4e00\u81f4\u6027\u3001\u7a33\u5b9a\u6027\u548c\u53ef\u9760\u6027\u8981\u6c42\u5f88\u9ad8\u7684\u573a\u666f\uff0c\u5bf9\u6027\u80fd\u548c\u541e\u5410\u91cf\u7684\u8981\u6c42\u8fd8\u5728\n        \u5176\u6b21\u3002\nRabbitMQ\u6bd4Kafka\u53ef\u9760\uff0cKafka\u66f4\u9002\u5408IO\u9ad8\u541e\u5410\u7684\u5904\u7406\uff0c\u4e00\u822c\u5e94\u7528\u5728\u5927\u6570\u636e\u65e5\u5fd7\u5904\u7406\u6216\u5bf9\u5b9e\u65f6\u6027\uff08\u5c11\u91cf\u5ef6\u8fdf\uff09\uff0c\u53ef\u9760\u6027\uff08\u5c11\u91cf\u4e22\u6570\u636e\uff09\u8981\u6c42\u7a0d\u4f4e\u7684\u573a\u666f\u4f7f\u7528\uff0c\u6bd4\u5982ELK\u65e5\u5fd7\u6536\u96c6\u3002\n\n\n2.RabbitMQ \u7684\u5f15\u8a00\n2.1 RabbitMQ\n\u57fa\u4e8eAMQP\u534f\u8bae\uff0cerlang\u8bed\u8a00\u5f00\u53d1\uff0c\u662f\u90e8\u7f72\u6700\u5e7f\u6cdb\u7684\u5f00\u6e90\u6d88\u606f\u4e2d\u95f4\u4ef6,\u662f\u6700\u53d7\u6b22\u8fce\u7684\u5f00\u6e90\u6d88\u606f\u4e2d\u95f4\u4ef6\u4e4b\u4e00\u3002\n\n\n\u5b98\u7f51: https://www.rabbitmq.com/\n\u5b98\u65b9\u6559\u7a0b: https://www.rabbitmq.com/#getstarted\n\n # AMQP \u534f\u8bae\n        AMQP\uff08advanced message queuing protocol\uff09`\u57282003\u5e74\u65f6\u88ab\u63d0\u51fa\uff0c\u6700\u65e9\u7528\u4e8e\u89e3\u51b3\u91d1\u878d\u9886\u4e0d\u540c\u5e73\u53f0\u4e4b\u95f4\u7684\u6d88\u606f\u4f20\u9012\u4ea4\u4e92\u95ee\u9898\u3002\u987e\u540d\u601d\u4e49\uff0cAMQP\u662f\u4e00\u79cd\u534f\u8bae\uff0c\u66f4\u51c6\u786e\u7684\u8bf4\u662f\u4e00\u79cdbinary wire-level protocol\uff08\u94fe\u63a5\u534f\u8bae\uff09\u3002\u8fd9\u662f\u5176\u548cJMS\u7684\u672c\u8d28\u5dee\u522b\uff0cAMQP\u4e0d\u4eceAPI\u5c42\u8fdb\u884c\u9650\u5b9a\uff0c\u800c\u662f\u76f4\u63a5\u5b9a\u4e49\u7f51\u7edc\u4ea4\u6362\u7684\u6570\u636e\u683c\u5f0f\u3002\u8fd9\u4f7f\u5f97\u5b9e\u73b0\u4e86AMQP\u7684provider\u5929\u7136\u6027\u5c31\u662f\u8de8\u5e73\u53f0\u7684\u3002\u4ee5\u4e0b\u662fAMQP\u534f\u8bae\u6a21\u578b:\n\n2.2 RabbitMQ \u7684\u5b89\u88c5\n2.2.1 \u4e0b\u8f7d\n\u5b98\u7f51\u4e0b\u8f7d\u5730\u5740: https://www.rabbitmq.com/download.html![image-20190925220115235](..\\static\\\u7b14\u8bb0\u56fe\u7247\\RibbitMQ\\image-20190925220115235.png)\n\u6700\u65b0\u7248\u672c: 3.7.18\n\n2.2.2 \u4e0b\u8f7d\u7684\u5b89\u88c5\u5305\n\u6ce8\u610f:\u8fd9\u91cc\u7684\u5b89\u88c5\u5305\u662fcentos7\u5b89\u88c5\u7684\u5305\n\n2.2.3 \u5b89\u88c5\u6b65\u9aa4\n\n# 1.\u5c06rabbitmq\u5b89\u88c5\u5305\u4e0a\u4f20\u5230linux\u7cfb\u7edf\u4e2d\n    erlang-22.0.7-1.el7.x86_64.rpm\n    rabbitmq-server-3.7.18-1.el7.noarch.rpm\n\n# 2.\u5b89\u88c5Erlang\u4f9d\u8d56\u5305\n    rpm -ivh erlang-22.0.7-1.el7.x86_64.rpm\n\n# 3.\u5b89\u88c5RabbitMQ\u5b89\u88c5\u5305(\u9700\u8981\u8054\u7f51)\n    yum install -y rabbitmq-server-3.7.18-1.el7.noarch.rpm\n        \u6ce8\u610f:\u9ed8\u8ba4\u5b89\u88c5\u5b8c\u6210\u540e\u914d\u7f6e\u6587\u4ef6\u6a21\u677f\u5728:/usr/share/doc/rabbitmq-server-3.7.18/rabbitmq.config.example\u76ee\u5f55\u4e2d,\u9700\u8981   \n                \u5c06\u914d\u7f6e\u6587\u4ef6\u590d\u5236\u5230/etc/rabbitmq/\u76ee\u5f55\u4e2d,\u5e76\u4fee\u6539\u540d\u79f0\u4e3arabbitmq.config\n# 4.\u590d\u5236\u914d\u7f6e\u6587\u4ef6\n    cp /usr/share/doc/rabbitmq-server-3.7.18/rabbitmq.config.example /etc/rabbitmq/rabbitmq.config\n\n# 5.\u67e5\u770b\u914d\u7f6e\u6587\u4ef6\u4f4d\u7f6e\n    ls /etc/rabbitmq/rabbitmq.config\n\n# 6.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6(\u53c2\u89c1\u4e0b\u56fe:)\n    vim /etc/rabbitmq/rabbitmq.config\n\n\u5c06\u4e0a\u56fe\u4e2d\u914d\u7f6e\u6587\u4ef6\u4e2d\u7ea2\u8272\u90e8\u5206\u53bb\u6389%%,\u4ee5\u53ca\u6700\u540e\u7684,\u9017\u53f7 \u4fee\u6539\u4e3a\u4e0b\u56fe:\n\n\n# 7.\u6267\u884c\u5982\u4e0b\u547d\u4ee4,\u542f\u52a8rabbitmq\u4e2d\u7684\u63d2\u4ef6\u7ba1\u7406\n    rabbitmq-plugins enable rabbitmq_management\n\n    \u51fa\u73b0\u5982\u4e0b\u8bf4\u660e:\n        Enabling plugins on node rabbit@localhost:\n    rabbitmq_management\n    The following plugins have been configured:\n      rabbitmq_management\n      rabbitmq_management_agent\n      rabbitmq_web_dispatch\n    Applying plugin configuration to rabbit@localhost...\n    The following plugins have been enabled:\n      rabbitmq_management\n      rabbitmq_management_agent\n      rabbitmq_web_dispatch\n\n    set 3 plugins.\n    Offline change; changes will take effect at broker restart.\n\n# 8.\u542f\u52a8RabbitMQ\u7684\u670d\u52a1\n    systemctl start rabbitmq-server\n    systemctl restart rabbitmq-server\n    systemctl stop rabbitmq-server\n\n\n# 9.\u67e5\u770b\u670d\u52a1\u72b6\u6001(\u89c1\u4e0b\u56fe:)\n    systemctl status rabbitmq-server\n  \u25cf rabbitmq-server.service - RabbitMQ broker\n     Loaded: loaded (/usr/lib/systemd/system/rabbitmq-server.service; disabled; vendor preset: disabled)\n     Active: active (running) since \u4e09 2019-09-25 22:26:35 CST; 7s ago\n   Main PID: 2904 (beam.smp)\n     Status: \"Initialized\"\n     CGroup: /system.slice/rabbitmq-server.service\n             \u251c\u25002904 /usr/lib64/erlang/erts-10.4.4/bin/beam.smp -W w -A 64 -MBas ageffcbf -MHas ageffcbf -\n             MBlmbcs...\n             \u251c\u25003220 erl_child_setup 32768\n             \u251c\u25003243 inet_gethost 4\n             \u2514\u25003244 inet_gethost 4\n      .........\n\n\n# 10.\u5173\u95ed\u9632\u706b\u5899\u670d\u52a1\n    systemctl disable firewalld\n    Removed syamlink /etc/systemd/system/multi-user.target.wants/firewalld.service.\n    Removed syamlink /etc/systemd/system/dbus-org.fedoraproject.FirewallD1.service.\n    systemctl stop firewalld   \n\n# 11.\u8bbf\u95eeweb\u7ba1\u7406\u754c\u9762\n    http://10.15.0.8:15672/\n\n\n# 12.\u767b\u5f55\u7ba1\u7406\u754c\u9762\n    username:  guest\n    password:  guest\n\n\n3. RabiitMQ \u914d\u7f6e\n3.1RabbitMQ \u7ba1\u7406\u547d\u4ee4\u884c\n\n# 1.\u670d\u52a1\u542f\u52a8\u76f8\u5173\n    systemctl start|restart|stop|status rabbitmq-server\n\n# 2.\u7ba1\u7406\u547d\u4ee4\u884c  \u7528\u6765\u5728\u4e0d\u4f7f\u7528web\u7ba1\u7406\u754c\u9762\u60c5\u51b5\u4e0b\u547d\u4ee4\u64cd\u4f5cRabbitMQ\n    rabbitmqctl  help  \u53ef\u4ee5\u67e5\u770b\u66f4\u591a\u547d\u4ee4\n\n# 3.\u63d2\u4ef6\u7ba1\u7406\u547d\u4ee4\u884c\n    rabbitmq-plugins enable|list|disable\n3.2 web\u7ba1\u7406\u754c\u9762\u4ecb\u7ecd\n3.2.1 overview\u6982\u89c8\n\n\nconnections\uff1a\u65e0\u8bba\u751f\u4ea7\u8005\u8fd8\u662f\u6d88\u8d39\u8005\uff0c\u90fd\u9700\u8981\u4e0eRabbitMQ\u5efa\u7acb\u8fde\u63a5\u540e\u624d\u53ef\u4ee5\u5b8c\u6210\u6d88\u606f\u7684\u751f\u4ea7\u548c\u6d88\u8d39\uff0c\u5728\u8fd9\u91cc\u53ef\u4ee5\u67e5\u770b\u8fde\u63a5\u60c5\u51b5\n\nchannels\uff1a\u901a\u9053\uff0c\u5efa\u7acb\u8fde\u63a5\u540e\uff0c\u4f1a\u5f62\u6210\u901a\u9053\uff0c\u6d88\u606f\u7684\u6295\u9012\u83b7\u53d6\u4f9d\u8d56\u901a\u9053\u3002\n\nExchanges\uff1a\u4ea4\u6362\u673a\uff0c\u7528\u6765\u5b9e\u73b0\u6d88\u606f\u7684\u8def\u7531\n\nQueues\uff1a\u961f\u5217\uff0c\u5373\u6d88\u606f\u961f\u5217\uff0c\u6d88\u606f\u5b58\u653e\u5728\u961f\u5217\u4e2d\uff0c\u7b49\u5f85\u6d88\u8d39\uff0c\u6d88\u8d39\u540e\u88ab\u79fb\u9664\u961f\u5217\u3002\n\n\n3.2.2 Admin\u7528\u6237\u548c\u865a\u62df\u4e3b\u673a\u7ba1\u7406\n1. \u6dfb\u52a0\u7528\u6237\n\n\u4e0a\u9762\u7684Tags\u9009\u9879\uff0c\u5176\u5b9e\u662f\u6307\u5b9a\u7528\u6237\u7684\u89d2\u8272\uff0c\u53ef\u9009\u7684\u6709\u4ee5\u4e0b\u51e0\u4e2a\uff1a\n\n\u8d85\u7ea7\u7ba1\u7406\u5458(administrator)\n\u53ef\u767b\u9646\u7ba1\u7406\u63a7\u5236\u53f0\uff0c\u53ef\u67e5\u770b\u6240\u6709\u7684\u4fe1\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u5bf9\u7528\u6237\uff0c\u7b56\u7565(policy)\u8fdb\u884c\u64cd\u4f5c\u3002\n\n\u76d1\u63a7\u8005(monitoring)\n\u53ef\u767b\u9646\u7ba1\u7406\u63a7\u5236\u53f0\uff0c\u540c\u65f6\u53ef\u4ee5\u67e5\u770brabbitmq\u8282\u70b9\u7684\u76f8\u5173\u4fe1\u606f(\u8fdb\u7a0b\u6570\uff0c\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\uff0c\u78c1\u76d8\u4f7f\u7528\u60c5\u51b5\u7b49)\n\n\u7b56\u7565\u5236\u5b9a\u8005(policymaker)\n\u53ef\u767b\u9646\u7ba1\u7406\u63a7\u5236\u53f0, \u540c\u65f6\u53ef\u4ee5\u5bf9policy\u8fdb\u884c\u7ba1\u7406\u3002\u4f46\u65e0\u6cd5\u67e5\u770b\u8282\u70b9\u7684\u76f8\u5173\u4fe1\u606f(\u4e0a\u56fe\u7ea2\u6846\u6807\u8bc6\u7684\u90e8\u5206)\u3002\n\n\u666e\u901a\u7ba1\u7406\u8005(management)\n\u4ec5\u53ef\u767b\u9646\u7ba1\u7406\u63a7\u5236\u53f0\uff0c\u65e0\u6cd5\u770b\u5230\u8282\u70b9\u4fe1\u606f\uff0c\u4e5f\u65e0\u6cd5\u5bf9\u7b56\u7565\u8fdb\u884c\u7ba1\u7406\u3002\n\n\u5176\u4ed6\n\u65e0\u6cd5\u767b\u9646\u7ba1\u7406\u63a7\u5236\u53f0\uff0c\u901a\u5e38\u5c31\u662f\u666e\u901a\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u3002\n\n\n2. \u521b\u5efa\u865a\u62df\u4e3b\u673a\n\n# \u865a\u62df\u4e3b\u673a\n    \u4e3a\u4e86\u8ba9\u5404\u4e2a\u7528\u6237\u53ef\u4ee5\u4e92\u4e0d\u5e72\u6270\u7684\u5de5\u4f5c\uff0cRabbitMQ\u6dfb\u52a0\u4e86\u865a\u62df\u4e3b\u673a\uff08Virtual Hosts\uff09\u7684\u6982\u5ff5\u3002\u5176\u5b9e\u5c31\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u8bbf\u95ee\u8def\u5f84\uff0c\u4e0d\u540c\u7528\u6237\u4f7f\u7528\u4e0d\u540c\u8def\u5f84\uff0c\u5404\u81ea\u6709\u81ea\u5df1\u7684\u961f\u5217\u3001\u4ea4\u6362\u673a\uff0c\u4e92\u76f8\u4e0d\u4f1a\u5f71\u54cd\u3002\n\n3. \u7ed1\u5b9a\u865a\u62df\u4e3b\u673a\u548c\u7528\u6237\n\u521b\u5efa\u597d\u865a\u62df\u4e3b\u673a\uff0c\u6211\u4eec\u8fd8\u8981\u7ed9\u7528\u6237\u6dfb\u52a0\u8bbf\u95ee\u6743\u9650\uff1a\n\u70b9\u51fb\u6dfb\u52a0\u597d\u7684\u865a\u62df\u4e3b\u673a\uff1a\n\n\u8fdb\u5165\u865a\u62df\u673a\u8bbe\u7f6e\u754c\u9762:\n\n\n4.RabbitMQ \u7684\u7b2c\u4e00\u4e2a\u7a0b\u5e8f\n4.0 AMQP\u534f\u8bae\u7684\u56de\u987e\n\n4.1 RabbitMQ\u652f\u6301\u7684\u6d88\u606f\u6a21\u578b\n\n\n4.2 \u5f15\u5165\u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;com.rabbitmq&lt;/groupId&gt;\n    &lt;artifactId&gt;amqp-client&lt;/artifactId&gt;\n    &lt;version&gt;5.7.2&lt;/version&gt;\n&lt;/dependency&gt;\n\n4.3 \u7b2c\u4e00\u79cd\u6a21\u578b(\u76f4\u8fde)\n\n\u5728\u4e0a\u56fe\u7684\u6a21\u578b\u4e2d\uff0c\u6709\u4ee5\u4e0b\u6982\u5ff5\uff1a\n\nP\uff1a\u751f\u4ea7\u8005\uff0c\u4e5f\u5c31\u662f\u8981\u53d1\u9001\u6d88\u606f\u7684\u7a0b\u5e8f\nC\uff1a\u6d88\u8d39\u8005\uff1a\u6d88\u606f\u7684\u63a5\u53d7\u8005\uff0c\u4f1a\u4e00\u76f4\u7b49\u5f85\u6d88\u606f\u5230\u6765\u3002\nqueue\uff1a\u6d88\u606f\u961f\u5217\uff0c\u56fe\u4e2d\u7ea2\u8272\u90e8\u5206\u3002\u7c7b\u4f3c\u4e00\u4e2a\u90ae\u7bb1\uff0c\u53ef\u4ee5\u7f13\u5b58\u6d88\u606f\uff1b\u751f\u4ea7\u8005\u5411\u5176\u4e2d\u6295\u9012\u6d88\u606f\uff0c\u6d88\u8d39\u8005\u4ece\u5176\u4e2d\u53d6\u51fa\u6d88\u606f\u3002\n\n1. \u5f00\u53d1\u751f\u4ea7\u8005\n//\u521b\u5efa\u8fde\u63a5\u5de5\u5382\n  ConnectionFactory connectionFactory = new ConnectionFactory();\n  //\u8bbe\u7f6e\u8fde\u63a5rabbitmq\u4e3b\u673a\n  connectionFactory.setHost(&quot;192.168.123.128&quot;);\n  //\u8bbe\u7f6e\u8fde\u63a5\u7aef\u53e3\u53f7\n  connectionFactory.setPort(5672);\n  //\u8bbe\u7f6e\u8fde\u63a5\u7684\u865a\u62df\u4e3b\u673a(\u81ea\u5df1\u521b\u5efa\u7684)\n  connectionFactory.setUsername(&quot;ems&quot;);\n  //\u8bbe\u7f6e\u8fde\u63a5\u7684\u865a\u62df\u4e3b\u673a\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\n  connectionFactory.setPassword(&quot;123&quot;);\n  connectionFactory.setVirtualHost(&quot;/ems&quot;);\n  //\u521b\u5efa\u8fde\u63a5\u5bf9\u8c61\n  Connection connection = connectionFactory.newConnection();\n  //\u521b\u5efa\u901a\u9053\n  Channel channel = connection.createChannel();\n  //\u5c06\u901a\u9053\u7ed1\u5b9a\u5230\u961f\u5217\u4e0a\n  //\u53c2\u65701 queue:\u961f\u5217\u540d\u79f0(\u5982\u679c\u4e0d\u5b58\u5728\u5219\u81ea\u52a8\u521b\u5efa) \u53c2\u65702 durable:\u6301\u4e45\u5316\u961f\u5217\uff0c\u5219\u4e3atrue\u3002\u53c2\u65703 exclusive:\u72ec\u5360\u961f\u5217\uff0c\u5219\u4e3atrue\u3002\u53c2\u65704 autoDelete:\u662f\u5426\u5728\u6d88\u8d39\u5b8c\u6210\u540e\u81ea\u52a8\u5220\u9664\u961f\u5217\uff0c\u662f\u5219\u4e3atrue\u3002\u53c2\u65705 arguments:\u961f\u5217\u7684\u5176\u4ed6\u9644\u4ef6\u53c2\u6570\n  channel.queueDeclare(&quot;hello&quot;,true,false,false,null);\n  //\u53d1\u5e03\u6d88\u606f(\u6b64\u65f6\u6ca1\u6709\u4f7f\u7528\u4ea4\u6362\u673a)\n  //\u53c2\u65701: \u4ea4\u6362\u673a\u540d\u79f0 \u53c2\u65702:\u961f\u5217\u540d\u79f0 \u53c2\u65703 :\u4f20\u9012\u6d88\u606f\u989d\u5916\u8bbe\u7f6e \u53c2\u65704 :\u6d88\u606f\u7684\u5177\u4f53\u5185\u5bb9\n  channel.basicPublish(&quot;&quot;,&quot;hello&quot;, null,&quot;hello rabbitmq&quot;.getBytes());\n  channel.close();\n  connection.close();\n\n2. \u5f00\u53d1\u6d88\u8d39\u8005\n//\u521b\u5efa\u8fde\u63a5\u5de5\u5382\n  ConnectionFactory connectionFactory = new ConnectionFactory();\n  //\u8bbe\u7f6e\u8fde\u63a5rabbitmq\u4e3b\u673a\n  connectionFactory.setHost(&quot;192.168.123.128&quot;);\n  //\u8bbe\u7f6e\u8fde\u63a5\u7aef\u53e3\u53f7\n  connectionFactory.setPort(5672);\n  //\u8bbe\u7f6e\u8fde\u63a5\u7684\u865a\u62df\u4e3b\u673a(\u81ea\u5df1\u521b\u5efa\u7684)\n  connectionFactory.setUsername(&quot;ems&quot;);\n  //\u8bbe\u7f6e\u8fde\u63a5\u7684\u865a\u62df\u4e3b\u673a\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\n  connectionFactory.setPassword(&quot;123&quot;);\n  connectionFactory.setVirtualHost(&quot;/ems&quot;);\n  //\u521b\u5efa\u8fde\u63a5\u5bf9\u8c61\n  Connection connection = connectionFactory.newConnection();\n  //\u521b\u5efa\u901a\u9053\n  Channel channel = connection.createChannel();\n  //\u5c06\u901a\u9053\u7ed1\u5b9a\u5230\u961f\u5217\u4e0a\n  channel.queueDeclare(&quot;hello&quot;, true, false, false, null);\n  //\u6d88\u8d39\u6d88\u606f\n  //\u53c2\u65701:queue\u2014\u961f\u5217\u7684\u540d\u79f0\n  //\u53c2\u65702:autoAck\u2014\u5f00\u542f\u6d88\u606f\u7684\u81ea\u52a8\u786e\u8ba4\u673a\u5236\n  //\u53c2\u65703:callback\u2014\u6d88\u8d39\u65f6\u56de\u8c03\u63a5\u53e3\n  channel.basicConsume(&quot;hello&quot;,true,new DefaultConsumer(channel){\n    @Override\n    public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n      System.out.println(new String(body));\n    }\n  });\n\n3. \u53c2\u6570\u8bf4\u660e\nchannel.queueDeclare(&quot;hello&quot;,true,false,false,null);\n  &#39;\u53c2\u65701&#39;:\u7528\u6765\u58f0\u660e\u901a\u9053\u5bf9\u5e94\u7684\u961f\u5217(\u5982\u679c\u4e0d\u5b58\u5728\u5219\u81ea\u52a8\u521b\u5efa)\n  &#39;\u53c2\u65702&#39;:\u7528\u6765\u6307\u5b9a\u662f\u5426\u6301\u4e45\u5316\u961f\u5217\n  &#39;\u53c2\u65703&#39;:\u7528\u6765\u6307\u5b9a\u662f\u5426\u72ec\u5360\u961f\u5217\n  &#39;\u53c2\u65704&#39;:\u7528\u6765\u6307\u5b9a\u662f\u5426\u81ea\u52a8\u5220\u9664\u961f\u5217\n  &#39;\u53c2\u65705&#39;:\u5bf9\u961f\u5217\u7684\u989d\u5916\u914d\u7f6e\n  //\u6d88\u8d39\u8005\u9700\u8981\u548c\u751f\u4ea7\u8005\u7ed1\u5b9a\u4e00\u6837\u7684\u961f\u5217\u4e0a\u624d\u80fd\u8fdb\u884c\n\n\n4.4 \u7b2c\u4e8c\u79cd\u6a21\u578b(work quene)\nWork queues\uff0c\u4e5f\u88ab\u79f0\u4e3a\uff08Task queues\uff09\uff0c\u4efb\u52a1\u6a21\u578b\u3002\u5f53\u6d88\u606f\u5904\u7406\u6bd4\u8f83\u8017\u65f6\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u751f\u4ea7\u6d88\u606f\u7684\u901f\u5ea6\u4f1a\u8fdc\u8fdc\u5927\u4e8e\u6d88\u606f\u7684\u6d88\u8d39\u901f\u5ea6\u3002\u957f\u6b64\u4ee5\u5f80\uff0c\u6d88\u606f\u5c31\u4f1a\u5806\u79ef\u8d8a\u6765\u8d8a\u591a\uff0c\u65e0\u6cd5\u53ca\u65f6\u5904\u7406\u3002\u6b64\u65f6\u5c31\u53ef\u4ee5\u4f7f\u7528work \u6a21\u578b\uff1a\u8ba9\u591a\u4e2a\u6d88\u8d39\u8005\u7ed1\u5b9a\u5230\u4e00\u4e2a\u961f\u5217\uff0c\u5171\u540c\u6d88\u8d39\u961f\u5217\u4e2d\u7684\u6d88\u606f\u3002\u961f\u5217\u4e2d\u7684\u6d88\u606f\u4e00\u65e6\u6d88\u8d39\uff0c\u5c31\u4f1a\u6d88\u5931\uff0c\u56e0\u6b64\u4efb\u52a1\u662f\u4e0d\u4f1a\u88ab\u91cd\u590d\u6267\u884c\u7684\u3002\n\n\u89d2\u8272\uff1a\n\nP\uff1a\u751f\u4ea7\u8005\uff1a\u4efb\u52a1\u7684\u53d1\u5e03\u8005\nC1\uff1a\u6d88\u8d39\u8005-1\uff0c\u9886\u53d6\u4efb\u52a1\u5e76\u5b8c\u6210\u4efb\u52a1\uff0c\u5047\u8bbe\u5b8c\u6210\u901f\u5ea6\u8f83\u6162\nC2\uff1a\u6d88\u8d39\u8005-2\uff1a\u9886\u53d6\u4efb\u52a1\u5e76\u5b8c\u6210\u4efb\u52a1\uff0c\u5047\u8bbe\u5b8c\u6210\u901f\u5ea6\u8f83\u5feb\n\n1. \u5f00\u53d1\u751f\u4ea7\u8005\nchannel.queueDeclare(&quot;hello&quot;, true, false, false, null);\nfor (int i = 0; i &lt; 10; i++) {\n  channel.basicPublish(&quot;&quot;, &quot;hello&quot;, null, (i+&quot;====&gt;:\u6211\u662f\u6d88\u606f&quot;).getBytes());\n}\n\n2.\u5f00\u53d1\u6d88\u8d39\u8005-1\nchannel.queueDeclare(&quot;hello&quot;,true,false,false,null);\nchannel.basicConsume(&quot;hello&quot;,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80051: &quot;+new String(body));\n  }\n});\n\n3.\u5f00\u53d1\u6d88\u8d39\u8005-2\nchannel.queueDeclare(&quot;hello&quot;,true,false,false,null);\nchannel.basicConsume(&quot;hello&quot;,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    try {\n      Thread.sleep(1000);   //\u5904\u7406\u6d88\u606f\u6bd4\u8f83\u6162 \u4e00\u79d2\u5904\u7406\u4e00\u4e2a\u6d88\u606f\n    } catch (InterruptedException e) {\n      e.printStackTrace();\n    }\n    System.out.println(&quot;\u6d88\u8d39\u80052: &quot;+new String(body));  \n  }\n});\n\n4.\u6d4b\u8bd5\u7ed3\u679c\n\n\n\u603b\u7ed3:\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRabbitMQ\u5c06\u6309\u987a\u5e8f\u5c06\u6bcf\u4e2a\u6d88\u606f\u53d1\u9001\u7ed9\u4e0b\u4e00\u4e2a\u4f7f\u7528\u8005\u3002\u5e73\u5747\u800c\u8a00\uff0c\u6bcf\u4e2a\u6d88\u8d39\u8005\u90fd\u4f1a\u6536\u5230\u76f8\u540c\u6570\u91cf\u7684\u6d88\u606f\u3002\u8fd9\u79cd\u5206\u53d1\u6d88\u606f\u7684\u65b9\u5f0f\u79f0\u4e3a\u5faa\u73af\u3002\u5b98\u65b9\u6587\u6863\n\n5.\u6d88\u606f\u81ea\u52a8\u786e\u8ba4\u673a\u5236\nDoing a task can take a few seconds. You may wonder what happens if one of the consumers starts a long task and dies with it only partly done. With our current code, once RabbitMQ delivers a message to the consumer it immediately marks it for deletion. In this case, if you kill a worker we will lose the message it was just processing. We'll also lose all the messages that were dispatched to this particular worker but were not yet handled.\nBut we don't want to lose any tasks. If a worker dies, we'd like the task to be delivered to another worker.\n\nchannel.basicQos(1);//\u4e00\u6b21\u53ea\u63a5\u53d7\u4e00\u6761\u672a\u786e\u8ba4\u7684\u6d88\u606f\n//\u53c2\u65702:\u5173\u95ed\u81ea\u52a8\u786e\u8ba4\u6d88\u606f\nchannel.basicConsume(&quot;hello&quot;,false,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80051: &quot;+new String(body));\n    channel.basicAck(envelope.getDeliveryTag(),false);//\u624b\u52a8\u786e\u8ba4\u6d88\u606f\n  }\n});\n\n\n\u8bbe\u7f6e\u901a\u9053\u4e00\u6b21\u53ea\u80fd\u6d88\u8d39\u4e00\u4e2a\u6d88\u606f\n\n\u5173\u95ed\u6d88\u606f\u7684\u81ea\u52a8\u786e\u8ba4,\u5f00\u542f\u624b\u52a8\u786e\u8ba4\u6d88\u606f\n\n\n\n\n\n4.5 \u7b2c\u4e09\u79cd\u6a21\u578b(fanout)\nfanout \u6247\u51fa \u4e5f\u79f0\u4e3a\u5e7f\u64ad\n\n\u5728\u5e7f\u64ad\u6a21\u5f0f\u4e0b\uff0c\u6d88\u606f\u53d1\u9001\u6d41\u7a0b\u662f\u8fd9\u6837\u7684\uff1a\n\n\u53ef\u4ee5\u6709\u591a\u4e2a\u6d88\u8d39\u8005\n\u6bcf\u4e2a\u6d88\u8d39\u8005\u6709\u81ea\u5df1\u7684queue\uff08\u961f\u5217\uff09\n\u6bcf\u4e2a\u961f\u5217\u90fd\u8981\u7ed1\u5b9a\u5230Exchange\uff08\u4ea4\u6362\u673a\uff09\n\u751f\u4ea7\u8005\u53d1\u9001\u7684\u6d88\u606f\uff0c\u53ea\u80fd\u53d1\u9001\u5230\u4ea4\u6362\u673a\uff0c\u4ea4\u6362\u673a\u6765\u51b3\u5b9a\u8981\u53d1\u7ed9\u54ea\u4e2a\u961f\u5217\uff0c\u751f\u4ea7\u8005\u65e0\u6cd5\u51b3\u5b9a\u3002\n\u4ea4\u6362\u673a\u628a\u6d88\u606f\u53d1\u9001\u7ed9\u7ed1\u5b9a\u8fc7\u7684\u6240\u6709\u961f\u5217\n\u961f\u5217\u7684\u6d88\u8d39\u8005\u90fd\u80fd\u62ff\u5230\u6d88\u606f\u3002\u5b9e\u73b0\u4e00\u6761\u6d88\u606f\u88ab\u591a\u4e2a\u6d88\u8d39\u8005\u6d88\u8d39\n\n1. \u5f00\u53d1\u751f\u4ea7\u8005\n//\u58f0\u660e\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;logs&quot;,&quot;fanout&quot;);//\u5e7f\u64ad \u4e00\u6761\u6d88\u606f\u591a\u4e2a\u6d88\u8d39\u8005\u540c\u65f6\u6d88\u8d39\n//\u53d1\u5e03\u6d88\u606f\nchannel.basicPublish(&quot;logs&quot;,&quot;&quot;,null,&quot;hello&quot;.getBytes());\n\n2. \u5f00\u53d1\u6d88\u8d39\u8005-1\n//\u7ed1\u5b9a\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;logs&quot;,&quot;fanout&quot;);\n//\u521b\u5efa\u4e34\u65f6\u961f\u5217\nString queue = channel.queueDeclare().getQueue();\n//\u5c06\u4e34\u65f6\u961f\u5217\u7ed1\u5b9aexchange\nchannel.queueBind(queue,&quot;logs&quot;,&quot;&quot;);\n//\u5904\u7406\u6d88\u606f\nchannel.basicConsume(queue,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80051: &quot;+new String(body));\n  }\n});\n\n3. \u5f00\u53d1\u6d88\u8d39\u8005-2\n//\u7ed1\u5b9a\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;logs&quot;,&quot;fanout&quot;);\n//\u521b\u5efa\u4e34\u65f6\u961f\u5217\nString queue = channel.queueDeclare().getQueue();\n//\u5c06\u4e34\u65f6\u961f\u5217\u7ed1\u5b9aexchange\nchannel.queueBind(queue,&quot;logs&quot;,&quot;&quot;);\n//\u5904\u7406\u6d88\u606f\nchannel.basicConsume(queue,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80052: &quot;+new String(body));\n  }\n});\n\n4.\u5f00\u53d1\u6d88\u8d39\u8005-3\n//\u7ed1\u5b9a\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;logs&quot;,&quot;fanout&quot;);\n//\u521b\u5efa\u4e34\u65f6\u961f\u5217\nString queue = channel.queueDeclare().getQueue();\n//\u5c06\u4e34\u65f6\u961f\u5217\u7ed1\u5b9aexchange\nchannel.queueBind(queue,&quot;logs&quot;,&quot;&quot;);\n//\u5904\u7406\u6d88\u606f\nchannel.basicConsume(queue,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80053: &quot;+new String(body));\n  }\n});\n\n5. \u6d4b\u8bd5\u7ed3\u679c\n\n\n\n\n4.6 \u7b2c\u56db\u79cd\u6a21\u578b(Routing)\n4.6.1 Routing \u4e4b\u8ba2\u9605\u6a21\u578b-Direct(\u76f4\u8fde)\n\u5728Fanout\u6a21\u5f0f\u4e2d\uff0c\u4e00\u6761\u6d88\u606f\uff0c\u4f1a\u88ab\u6240\u6709\u8ba2\u9605\u7684\u961f\u5217\u90fd\u6d88\u8d39\u3002\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u573a\u666f\u4e0b\uff0c\u6211\u4eec\u5e0c\u671b\u4e0d\u540c\u7684\u6d88\u606f\u88ab\u4e0d\u540c\u7684\u961f\u5217\u6d88\u8d39\u3002\u8fd9\u65f6\u5c31\u8981\u7528\u5230Direct\u7c7b\u578b\u7684Exchange\u3002\n\u5728Direct\u6a21\u578b\u4e0b\uff1a\n\n\u961f\u5217\u4e0e\u4ea4\u6362\u673a\u7684\u7ed1\u5b9a\uff0c\u4e0d\u80fd\u662f\u4efb\u610f\u7ed1\u5b9a\u4e86\uff0c\u800c\u662f\u8981\u6307\u5b9a\u4e00\u4e2aRoutingKey\uff08\u8def\u7531key\uff09\n\u6d88\u606f\u7684\u53d1\u9001\u65b9\u5728 \u5411 Exchange\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u4e5f\u5fc5\u987b\u6307\u5b9a\u6d88\u606f\u7684 RoutingKey\u3002\nExchange\u4e0d\u518d\u628a\u6d88\u606f\u4ea4\u7ed9\u6bcf\u4e00\u4e2a\u7ed1\u5b9a\u7684\u961f\u5217\uff0c\u800c\u662f\u6839\u636e\u6d88\u606f\u7684Routing Key\u8fdb\u884c\u5224\u65ad\uff0c\u53ea\u6709\u961f\u5217\u7684Routingkey\u4e0e\u6d88\u606f\u7684 Routing key\u5b8c\u5168\u4e00\u81f4\uff0c\u624d\u4f1a\u63a5\u6536\u5230\u6d88\u606f\n\n\u6d41\u7a0b:\n\n\u56fe\u89e3\uff1a\n\nP\uff1a\u751f\u4ea7\u8005\uff0c\u5411Exchange\u53d1\u9001\u6d88\u606f\uff0c\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u4f1a\u6307\u5b9a\u4e00\u4e2arouting key\u3002\nX\uff1aExchange\uff08\u4ea4\u6362\u673a\uff09\uff0c\u63a5\u6536\u751f\u4ea7\u8005\u7684\u6d88\u606f\uff0c\u7136\u540e\u628a\u6d88\u606f\u9012\u4ea4\u7ed9 \u4e0erouting key\u5b8c\u5168\u5339\u914d\u7684\u961f\u5217\nC1\uff1a\u6d88\u8d39\u8005\uff0c\u5176\u6240\u5728\u961f\u5217\u6307\u5b9a\u4e86\u9700\u8981routing key \u4e3a error \u7684\u6d88\u606f\nC2\uff1a\u6d88\u8d39\u8005\uff0c\u5176\u6240\u5728\u961f\u5217\u6307\u5b9a\u4e86\u9700\u8981routing key \u4e3a info\u3001error\u3001warning \u7684\u6d88\u606f\n\n1. \u5f00\u53d1\u751f\u4ea7\u8005\n//\u58f0\u660e\u4ea4\u6362\u673a  \u53c2\u65701:\u4ea4\u6362\u673a\u540d\u79f0 \u53c2\u65702:\u4ea4\u6362\u673a\u7c7b\u578b \u57fa\u4e8e\u6307\u4ee4\u7684Routing key\u8f6c\u53d1\nchannel.exchangeDeclare(&quot;logs_direct&quot;,&quot;direct&quot;);\nString key = &quot;&quot;;\n//\u53d1\u5e03\u6d88\u606f\nchannel.basicPublish(&quot;logs_direct&quot;,key,null,(&quot;\u6307\u5b9a\u7684route key&quot;+key+&quot;\u7684\u6d88\u606f&quot;).getBytes());\n\n2.\u5f00\u53d1\u6d88\u8d39\u8005-1\n//\u58f0\u660e\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;logs_direct&quot;,&quot;direct&quot;);\n//\u521b\u5efa\u4e34\u65f6\u961f\u5217\nString queue = channel.queueDeclare().getQueue();\n//\u7ed1\u5b9a\u961f\u5217\u548c\u4ea4\u6362\u673a\nchannel.queueBind(queue,&quot;logs_direct&quot;,&quot;error&quot;);\nchannel.queueBind(queue,&quot;logs_direct&quot;,&quot;info&quot;);\nchannel.queueBind(queue,&quot;logs_direct&quot;,&quot;warn&quot;);\n\n//\u6d88\u8d39\u6d88\u606f\nchannel.basicConsume(queue,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80051: &quot;+new String(body));\n  }\n});\n\n3.\u5f00\u53d1\u6d88\u8d39\u8005-2\n//\u58f0\u660e\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;logs_direct&quot;,&quot;direct&quot;);\n//\u521b\u5efa\u4e34\u65f6\u961f\u5217\nString queue = channel.queueDeclare().getQueue();\n//\u7ed1\u5b9a\u961f\u5217\u548c\u4ea4\u6362\u673a\nchannel.queueBind(queue,&quot;logs_direct&quot;,&quot;error&quot;);\n//\u6d88\u8d39\u6d88\u606f\nchannel.basicConsume(queue,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80052: &quot;+new String(body));\n  }\n});\n\n4.\u6d4b\u8bd5\u751f\u4ea7\u8005\u53d1\u9001Route key\u4e3aerror\u7684\u6d88\u606f\u65f6\n\n\n5.\u6d4b\u8bd5\u751f\u4ea7\u8005\u53d1\u9001Route key\u4e3ainfo\u7684\u6d88\u606f\u65f6\n\n\n\n4.6.2 Routing \u4e4b\u8ba2\u9605\u6a21\u578b-Topic\nTopic\u7c7b\u578b\u7684Exchange\u4e0eDirect\u76f8\u6bd4\uff0c\u90fd\u662f\u53ef\u4ee5\u6839\u636eRoutingKey\u628a\u6d88\u606f\u8def\u7531\u5230\u4e0d\u540c\u7684\u961f\u5217\u3002\u53ea\u4e0d\u8fc7Topic\u7c7b\u578bExchange\u53ef\u4ee5\u8ba9\u961f\u5217\u5728\u7ed1\u5b9aRouting key \u7684\u65f6\u5019\u4f7f\u7528\u901a\u914d\u7b26\uff01\u8fd9\u79cd\u6a21\u578bRoutingkey \u4e00\u822c\u90fd\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u5355\u8bcd\u7ec4\u6210\uff0c\u591a\u4e2a\u5355\u8bcd\u4e4b\u95f4\u4ee5\u201d.\u201d\u5206\u5272\uff0c\u4f8b\u5982\uff1a item.insert\n\n```\u00a0\n\u7edf\u914d\u7b26\n\n    * (star) can substitute for exactly one word.    \u5339\u914d\u4e0d\u591a\u4e0d\u5c11\u6070\u597d1\u4e2a\u8bcd\n    # (hash) can substitute for zero or more words.  \u5339\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u8bcd\n\n\u5982:\n\n    audit.#    \u5339\u914daudit.irs.corporate\u6216\u8005 audit.irs \u7b49\naudit.*   \u53ea\u80fd\u5339\u914d audit.irs\n\n\n\n##### 1.\u5f00\u53d1\u751f\u4ea7\u8005\n\n```java\n//\u751f\u547d\u4ea4\u6362\u673a\u548c\u4ea4\u6362\u673a\u7c7b\u578b topic \u4f7f\u7528\u52a8\u6001\u8def\u7531(\u901a\u914d\u7b26\u65b9\u5f0f)\nchannel.exchangeDeclare(\"topics\",\"topic\");\nString routekey = \"user.save\";//\u52a8\u6001\u8def\u7531key\n//\u53d1\u5e03\u6d88\u606f\nchannel.basicPublish(\"topics\",routekey,null,(\"\u8fd9\u662f\u8def\u7531\u4e2d\u7684\u52a8\u6001\u8ba2\u9605\u6a21\u578b,route key: [\"+routekey+\"]\").getBytes());\n2.\u5f00\u53d1\u6d88\u8d39\u8005-1\nRouting Key\u4e2d\u4f7f\u7528*\u901a\u914d\u7b26\u65b9\u5f0f\n//\u58f0\u660e\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;topics&quot;,&quot;topic&quot;);\n//\u521b\u5efa\u4e34\u65f6\u961f\u5217\nString queue = channel.queueDeclare().getQueue();\n//\u7ed1\u5b9a\u961f\u5217\u4e0e\u4ea4\u6362\u673a\u5e76\u8bbe\u7f6e\u83b7\u53d6\u4ea4\u6362\u673a\u4e2d\u52a8\u6001\u8def\u7531\nchannel.queueBind(queue,&quot;topics&quot;,&quot;user.*&quot;);\n\n//\u6d88\u8d39\u6d88\u606f\nchannel.basicConsume(queue,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80051: &quot;+new String(body));\n  }\n});\n\n3.\u5f00\u53d1\u6d88\u8d39\u8005-2\nRouting Key\u4e2d\u4f7f\u7528#\u901a\u914d\u7b26\u65b9\u5f0f\n//\u58f0\u660e\u4ea4\u6362\u673a\nchannel.exchangeDeclare(&quot;topics&quot;,&quot;topic&quot;);\n//\u521b\u5efa\u4e34\u65f6\u961f\u5217\nString queue = channel.queueDeclare().getQueue();\n//\u7ed1\u5b9a\u961f\u5217\u4e0e\u4ea4\u6362\u673a\u5e76\u8bbe\u7f6e\u83b7\u53d6\u4ea4\u6362\u673a\u4e2d\u52a8\u6001\u8def\u7531\nchannel.queueBind(queue,&quot;topics&quot;,&quot;user.#&quot;);\n\n//\u6d88\u8d39\u6d88\u606f\nchannel.basicConsume(queue,true,new DefaultConsumer(channel){\n  @Override\n  public void handleDelivery(String consumerTag, Envelope envelope, AMQP.BasicProperties properties, byte[] body) throws IOException {\n    System.out.println(&quot;\u6d88\u8d39\u80052: &quot;+new String(body));\n  }\n});\n\n4.\u6d4b\u8bd5\u7ed3\u679c\n\n\n5. SpringBoot\u4e2d\u4f7f\u7528RabbitMQ\n5.0 \u642d\u5efa\u521d\u59cb\u73af\u5883\n1. \u5f15\u5165\u4f9d\u8d56\n&lt;dependency&gt;\n  &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n  &lt;artifactId&gt;spring-boot-starter-amqp&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n2. \u914d\u7f6e\u914d\u7f6e\u6587\u4ef6\nspring:\n  application:\n    name: springboot_rabbitmq\n  rabbitmq:\n    host: 192.168.123.128\n    port: 5672\n    username: ems\n    password: 123\n    virtual-host: /ems\n\nRabbitTemplate  \u7528\u6765\u7b80\u5316\u64cd\u4f5c     \u4f7f\u7528\u65f6\u5019\u76f4\u63a5\u5728\u9879\u76ee\u4e2d\u6ce8\u5165\u5373\u53ef\u4f7f\u7528\n5.1 \u7b2c\u4e00\u79cdhello world\u6a21\u578b\u4f7f\u7528\n\n##### \u5f00\u53d1\u751f\u4ea7\u8005\n@Autowired\nprivate RabbitTemplate rabbitTemplate;\n\n@Test\npublic void testHello(){\n     //\u53c2\u65701:\u961f\u5217\u540d \u53c2\u65702:\u6d88\u606f\u5bf9\u8c61\n rabbitTemplate.convertAndSend(&quot;hello&quot;, &quot;hello word&quot;);\n}\n\n\n##### \u5f00\u53d1\u6d88\u8d39\u8005\n/**\n * @author Xuxx3309\n * @Description hello word\u6a21\u5f0f\n * Queue\u6ce8\u89e3:\u53ef\u4ee5\u914d\u7f6e\u961f\u5217\u540d\u79f0\uff0c\u662f\u5426\u6301\u4e45\u5316\uff0c\u662f\u5426\u72ec\u5360,\u662f\u5426\u81ea\u52a8\u5220\u9664...\n * @create 2020-06-03 2:02\n */\n@Component(&quot;helloCustomer&quot;)\n//\u8ba9\u5f53\u524d\u6d88\u8d39\u8005\u76d1\u542c&quot;hello&quot;\u961f\u5217\n@@RabbitListener(queuesToDeclare = @Queue(name = &quot;hello&quot;, durable = &quot;true&quot;, autoDelete = &quot;false&quot;))\npublic class Customer {\n    //\u5c06\u65b9\u6cd5\u6807\u8bb0\u4e3a\u88abRabbitListener\u6ce8\u91ca\u7684\u7c7b\u4e2d\u7684Rabbit\u6d88\u606f\u4fa6\u542c\u5668\u7684\u76ee\u6807\uff0c\u65b9\u6cd5\u81ea\u5b9a\u4e49\n    @RabbitHandler\n    public void receivel(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u8005\uff1a&quot; + message);\n    }\n}\n\n\n\n5.2 \u7b2c\u4e8c\u79cdwork\u6a21\u578b\u4f7f\u7528\n\n##### \u5f00\u53d1\u751f\u4ea7\u8005\n@Autowired\nprivate RabbitTemplate rabbitTemplate;\n\n/**\n* Work\u6a21\u5f0f\n*/\n@Test\npublic void testWork(){\n  for (int i = 0; i &lt; 10; i++) {\n    rabbitTemplate.convertAndSend(&quot;work&quot;,&quot;hello work!&quot;);\n  }\n}\n\n\n##### \u5f00\u53d1\u6d88\u8d39\u8005\n/**\n * @author Xuxx3309\n * @Description Work\u6a21\u5f0f\n * @create 2020-06-03 2:19\n */\n@Component(&quot;workCustomer&quot;)\npublic class Customer {\n\n    //@RabbitListener\u53ef\u4ee5\u76f4\u63a5\u52a0\u5728\u65b9\u6cd5\u4e0a\uff0c\u7b2c\u4e00\u4e2a\u6d88\u8d39\u8005\n    @RabbitListener(queuesToDeclare = @Queue(&quot;work&quot;))\n    public void receivel1(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u80051:&quot; + message);\n    }\n\n    //\u7b2c\u4e8c\u4e2a\u6d88\u8d39\u8005\n    @RabbitListener(queuesToDeclare = @Queue(&quot;work&quot;))\n    public void receivel2(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u80052:&quot; + message);\n    }\n}\n\n\u8bf4\u660e:\u9ed8\u8ba4\u5728Spring AMQP\u5b9e\u73b0\u4e2dWork\u8fd9\u79cd\u65b9\u5f0f\u5c31\u662f\u516c\u5e73\u8c03\u5ea6,\u5982\u679c\u9700\u8981\u5b9e\u73b0\u80fd\u8005\u591a\u52b3\u9700\u8981\u989d\u5916\u914d\u7f6e\n\n\n\n5.3 Fanout \u5e7f\u64ad\u6a21\u578b\n\n##### \u5f00\u53d1\u751f\u4ea7\u8005\n@Autowired\nRabbitTemplate rabbitTemplate;\n\n/**\n* Fanout \u5e7f\u64ad\u6a21\u5f0f\n*/\n@Test\npublic void testFanout() {\n //\u6b64\u65f6routingKey\u8fd8\u6ca1\u7528\n    rabbitTemplate.convertAndSend(&quot;logs&quot;, &quot;&quot;, &quot;\u5e7f\u64ad\u6a21\u5f0f&quot;);\n}\n\n\n\n\n##### \u5f00\u53d1\u6d88\u8d39\u8005\n/**\n * @author Xuxx3309\n * @Description \u5e7f\u64ad\u6a21\u5f0f, \u9700\u8981\u4ea4\u6362\u673a\n * @create 2020-06-03 2:43\n */\n@Component(&quot;fanoutCustomer&quot;)\npublic class Customer {\n    @RabbitListener(bindings = {\n            @QueueBinding(value = @Queue//\u6b64\u65f6\u6ca1\u914d\u7f6e\u961f\u5217\u540d\u79f0\uff0c\u662f\u4e34\u65f6\u961f\u5217\n                    , exchange = @Exchange(name = &quot;logs&quot;, type = &quot;fanout&quot;))//\u7ed1\u5b9a \u4ea4\u6362\u673a\n    })\n    public void receivel1(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u80051:&quot; + message);\n    }\n\n    @RabbitListener(bindings = {\n            @QueueBinding(value = @Queue\n                    , exchange = @Exchange(name = &quot;logs&quot;, type = &quot;fanout&quot;))\n    })\n    public void receivel2(String message) {\n     System.out.println(&quot;\u6d88\u8d39\u80052:&quot; + message);\n    }\n}\n\n\n\n5.4 Route \u8def\u7531\u6a21\u578b\n\n##### \u5f00\u53d1\u751f\u4ea7\u8005\n@Autowired\nprivate RabbitTemplate rabbitTemplate;\n\n/**\n* Route-directs \u8def\u7531\u6a21\u5f0f\n*/\n@Test\npublic void testRoute() {\n    rabbitTemplate.convertAndSend(&quot;directs&quot;, &quot;info&quot;, &quot;info\u7684\u8def\u7531\u4fe1\u606f&quot;);\n    rabbitTemplate.convertAndSend(&quot;directs&quot;, &quot;error&quot;, &quot;error\u7684\u8def\u7531\u4fe1\u606f&quot;);\n}\n\n\n##### \u5f00\u53d1\u6d88\u8d39\u8005\n/**\n * @author Xuxx3309\n * @Description \u8def\u7531 directs\u6a21\u5f0f\n * @create 2020-06-03 2:59\n */\n@Component(&quot;directsCustomer&quot;)\npublic class Customer {\n    @RabbitListener(bindings = {\n            @QueueBinding(\n                    value = @Queue//\u521b\u5efa\u4e34\u65f6\u961f\u5217\n                    , exchange = @Exchange(name = &quot;directs&quot;, type = &quot;direct&quot;)//\u7ed1\u5b9a\u4ea4\u6362\u673a\n                    , key = {&quot;info&quot;, &quot;error&quot;}\n            )\n    })\n    public void receivel1(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u80051\uff1a&quot; + message);\n    }\n\n    @RabbitListener(bindings = {\n            @QueueBinding(\n                    value = @Queue//\u521b\u5efa\u4e34\u65f6\u961f\u5217\n                    , exchange = @Exchange(name = &quot;directs&quot;, type = &quot;direct&quot;)//\u7ed1\u5b9a\u4ea4\u6362\u673a\n                    , key = {&quot;error&quot;}\n            )\n    })\n    public void receivel2(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u80052\uff1a&quot; + message);\n    }\n}\n\n\n\n5.5 Topic \u8ba2\u9605\u6a21\u578b(\u52a8\u6001\u8def\u7531\u6a21\u578b)\n\n##### \u5f00\u53d1\u751f\u4ea7\u8005\n@Autowired\nprivate RabbitTemplate rabbitTemplate;\n\n/**\n * Route-Topic \u52a8\u6001\u8def\u7531\u6a21\u5f0f\n */\n@Test\npublic void testTopic(){\n  rabbitTemplate.convertAndSend(&quot;topics&quot;, &quot;user.save&quot;, &quot;user.save\u7684\u8def\u7531\u4fe1\u606f&quot;);\n  rabbitTemplate.convertAndSend(&quot;topics&quot;, &quot;order.save.error&quot;, &quot;order.save.error\u7684\u8def\u7531\u4fe1\u606f&quot;);\n}\n\n\n\n\n##### \u5f00\u53d1\u6d88\u8d39\u8005\n/**\n * @author Xuxx3309\n * @Description \u52a8\u6001\u8def\u7531 topic\u6a21\u5f0f\n * &#39;#&#39; \u5339\u914d\u4e00\u4e2a\u83b7\u591a\u4e2a\n * &#39;*&#39; \u5339\u914d\u4e00\u4e2a\n * @create 2020-06-03 3:09\n */\n@Component(&quot;topicCustomer&quot;)\npublic class Customer {\n    @RabbitListener(bindings = {\n            @QueueBinding(\n                    value = @Queue//\u521b\u5efa\u4e34\u65f6\u961f\u5217\n                    , exchange = @Exchange(name = &quot;topics&quot;, type = &quot;topic&quot;)//\u7ed1\u5b9a\u4ea4\u6362\u673a\n                    , key = {&quot;user.save&quot;,&quot;user.#&quot;}\n            )\n    })\n    public void receivel1(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u80051\uff1a&quot; + message);\n    }\n\n    @RabbitListener(bindings = {\n            @QueueBinding(\n                    value = @Queue//\u521b\u5efa\u4e34\u65f6\u961f\u5217\n                    , exchange = @Exchange(name = &quot;topics&quot;, type = &quot;topic&quot;)//\u7ed1\u5b9a\u4ea4\u6362\u673a\n                    , key = {&quot;order.#&quot;,&quot;user.*&quot;}\n         )\n    })\n    public void receivel2(String message) {\n        System.out.println(&quot;\u6d88\u8d39\u80052\uff1a&quot; + message);\n    }\n}\n\n\n\n\n6. MQ\u7684\u5e94\u7528\u573a\u666f\n6.1 \u5f02\u6b65\u5904\u7406\n\u573a\u666f\u8bf4\u660e\uff1a\u7528\u6237\u6ce8\u518c\u540e\uff0c\u9700\u8981\u53d1\u6ce8\u518c\u90ae\u4ef6\u548c\u6ce8\u518c\u77ed\u4fe1,\u4f20\u7edf\u7684\u505a\u6cd5\u6709\u4e24\u79cd 1.\u4e32\u884c\u7684\u65b9\u5f0f 2.\u5e76\u884c\u7684\u65b9\u5f0f\n\n\u4e32\u884c\u65b9\u5f0f: \u5c06\u6ce8\u518c\u4fe1\u606f\u5199\u5165\u6570\u636e\u5e93\u540e,\u53d1\u9001\u6ce8\u518c\u90ae\u4ef6,\u518d\u53d1\u9001\u6ce8\u518c\u77ed\u4fe1,\u4ee5\u4e0a\u4e09\u4e2a\u4efb\u52a1\u5168\u90e8\u5b8c\u6210\u540e\u624d\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 \u8fd9\u6709\u4e00\u4e2a\u95ee\u9898\u662f,\u90ae\u4ef6,\u77ed\u4fe1\u5e76\u4e0d\u662f\u5fc5\u987b\u7684,\u5b83\u53ea\u662f\u4e00\u4e2a\u901a\u77e5,\u800c\u8fd9\u79cd\u505a\u6cd5\u8ba9\u5ba2\u6237\u7aef\u7b49\u5f85\u6ca1\u6709\u5fc5\u8981\u7b49\u5f85\u7684\u4e1c\u897f.\n\n\n\u5e76\u884c\u65b9\u5f0f:\u5c06\u6ce8\u518c\u4fe1\u606f\u5199\u5165\u6570\u636e\u5e93\u540e,\u53d1\u9001\u90ae\u4ef6\u7684\u540c\u65f6,\u53d1\u9001\u77ed\u4fe1,\u4ee5\u4e0a\u4e09\u4e2a\u4efb\u52a1\u5b8c\u6210\u540e,\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef,\u5e76\u884c\u7684\u65b9\u5f0f\u80fd\u63d0\u9ad8\u5904\u7406\u7684\u65f6\u95f4\u3002\n\n\n\u6d88\u606f\u961f\u5217:\u5047\u8bbe\u4e09\u4e2a\u4e1a\u52a1\u8282\u70b9\u5206\u522b\u4f7f\u752850ms,\u4e32\u884c\u65b9\u5f0f\u4f7f\u7528\u65f6\u95f4150ms,\u5e76\u884c\u4f7f\u7528\u65f6\u95f4100ms\u3002\u867d\u7136\u5e76\u884c\u5df2\u7ecf\u63d0\u9ad8\u7684\u5904\u7406\u65f6\u95f4,\u4f46\u662f,\u524d\u9762\u8bf4\u8fc7,\u90ae\u4ef6\u548c\u77ed\u4fe1\u5bf9\u6211\u6b63\u5e38\u7684\u4f7f\u7528\u7f51\u7ad9\u6ca1\u6709\u4efb\u4f55\u5f71\u54cd\uff0c\u5ba2\u6237\u7aef\u6ca1\u6709\u5fc5\u8981\u7b49\u7740\u5176\u53d1\u9001\u5b8c\u6210\u624d\u663e\u793a\u6ce8\u518c\u6210\u529f,\u5e94\u8be5\u662f\u5199\u5165\u6570\u636e\u5e93\u540e\u5c31\u8fd4\u56de.  \u6d88\u606f\u961f\u5217: \u5f15\u5165\u6d88\u606f\u961f\u5217\u540e\uff0c\u628a\u53d1\u9001\u90ae\u4ef6,\u77ed\u4fe1\u4e0d\u662f\u5fc5\u987b\u7684\u4e1a\u52a1\u903b\u8f91\u5f02\u6b65\u5904\u7406\n\n\n\n\u7531\u6b64\u53ef\u4ee5\u770b\u51fa,\u5f15\u5165\u6d88\u606f\u961f\u5217\u540e\uff0c\u7528\u6237\u7684\u54cd\u5e94\u65f6\u95f4\u5c31\u7b49\u4e8e\u5199\u5165\u6570\u636e\u5e93\u7684\u65f6\u95f4+\u5199\u5165\u6d88\u606f\u961f\u5217\u7684\u65f6\u95f4(\u53ef\u4ee5\u5ffd\u7565\u4e0d\u8ba1),\u5f15\u5165\u6d88\u606f\u961f\u5217\u540e\u5904\u7406\u540e,\u54cd\u5e94\u65f6\u95f4\u662f\u4e32\u884c\u76843\u500d,\u662f\u5e76\u884c\u76842\u500d\u3002\n6.2 \u5e94\u7528\u89e3\u8026\n\u573a\u666f\uff1a\u53cc11\u662f\u8d2d\u7269\u72c2\u8282,\u7528\u6237\u4e0b\u5355\u540e,\u8ba2\u5355\u7cfb\u7edf\u9700\u8981\u901a\u77e5\u5e93\u5b58\u7cfb\u7edf,\u4f20\u7edf\u7684\u505a\u6cd5\u5c31\u662f\u8ba2\u5355\u7cfb\u7edf\u8c03\u7528\u5e93\u5b58\u7cfb\u7edf\u7684\u63a5\u53e3.\n\n\u8fd9\u79cd\u505a\u6cd5\u6709\u4e00\u4e2a\u7f3a\u70b9:\n\u5f53\u5e93\u5b58\u7cfb\u7edf\u51fa\u73b0\u6545\u969c\u65f6,\u8ba2\u5355\u5c31\u4f1a\u5931\u8d25\u3002 \u8ba2\u5355\u7cfb\u7edf\u548c\u5e93\u5b58\u7cfb\u7edf\u9ad8\u8026\u5408.  \u5f15\u5165\u6d88\u606f\u961f\u5217\n\n\n\u8ba2\u5355\u7cfb\u7edf:\u7528\u6237\u4e0b\u5355\u540e,\u8ba2\u5355\u7cfb\u7edf\u5b8c\u6210\u6301\u4e45\u5316\u5904\u7406,\u5c06\u6d88\u606f\u5199\u5165\u6d88\u606f\u961f\u5217,\u8fd4\u56de\u7528\u6237\u8ba2\u5355\u4e0b\u5355\u6210\u529f\u3002\n\n\u5e93\u5b58\u7cfb\u7edf:\u8ba2\u9605\u4e0b\u5355\u7684\u6d88\u606f,\u83b7\u53d6\u4e0b\u5355\u6d88\u606f,\u8fdb\u884c\u5e93\u64cd\u4f5c\u3002  \u5c31\u7b97\u5e93\u5b58\u7cfb\u7edf\u51fa\u73b0\u6545\u969c,\u6d88\u606f\u961f\u5217\u4e5f\u80fd\u4fdd\u8bc1\u6d88\u606f\u7684\u53ef\u9760\u6295\u9012,\u4e0d\u4f1a\u5bfc\u81f4\u6d88\u606f\u4e22\u5931.\n\n\n6.3 \u6d41\u91cf\u524a\u5cf0\n\u573a\u666f: \u79d2\u6740\u6d3b\u52a8\uff0c\u4e00\u822c\u4f1a\u56e0\u4e3a\u6d41\u91cf\u8fc7\u5927\uff0c\u5bfc\u81f4\u5e94\u7528\u6302\u6389,\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u4e00\u822c\u5728\u5e94\u7528\u524d\u7aef\u52a0\u5165\u6d88\u606f\u961f\u5217\u3002\n\u4f5c\u7528:\n\u200b           1.\u53ef\u4ee5\u63a7\u5236\u6d3b\u52a8\u4eba\u6570\uff0c\u8d85\u8fc7\u6b64\u4e00\u5b9a\u9600\u503c\u7684\u8ba2\u5355\u76f4\u63a5\u4e22\u5f03(\u6211\u4e3a\u4ec0\u4e48\u79d2\u6740\u4e00\u6b21\u90fd\u6ca1\u6709\u6210\u529f\u8fc7\u5462^^)\n\u200b           2.\u53ef\u4ee5\u7f13\u89e3\u77ed\u65f6\u95f4\u7684\u9ad8\u6d41\u91cf\u538b\u57ae\u5e94\u7528(\u5e94\u7528\u7a0b\u5e8f\u6309\u81ea\u5df1\u7684\u6700\u5927\u5904\u7406\u80fd\u529b\u83b7\u53d6\u8ba2\u5355)\n\n1.\u7528\u6237\u7684\u8bf7\u6c42,\u670d\u52a1\u5668\u6536\u5230\u4e4b\u540e,\u9996\u5148\u5199\u5165\u6d88\u606f\u961f\u5217,\u52a0\u5165\u6d88\u606f\u961f\u5217\u957f\u5ea6\u8d85\u8fc7\u6700\u5927\u503c,\u5219\u76f4\u63a5\u629b\u5f03\u7528\u6237\u8bf7\u6c42\u6216\u8df3\u8f6c\u5230\u9519\u8bef\u9875\u9762.\n2.\u79d2\u6740\u4e1a\u52a1\u6839\u636e\u6d88\u606f\u961f\u5217\u4e2d\u7684\u8bf7\u6c42\u4fe1\u606f\uff0c\u518d\u505a\u540e\u7eed\u5904\u7406.\n\n7. RabbitMQ\u7684\u96c6\u7fa4\n7.1 \u96c6\u7fa4\u67b6\u6784\n7.1.1 \u666e\u901a\u96c6\u7fa4(\u526f\u672c\u96c6\u7fa4)\nAll data/state required for the operation of a RabbitMQ broker is replicated across all nodes. An exception to this are message queues, which by default reside on one node, though they are visible and reachable from all nodes. To replicate queues across nodes in a cluster   --\u6458\u81ea\u5b98\u7f51\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b:RabbitMQ\u4ee3\u7406\u64cd\u4f5c\u6240\u9700\u7684\u6240\u6709\u6570\u636e/\u72b6\u6001\u90fd\u5c06\u8de8\u6240\u6709\u8282\u70b9\u590d\u5236\u3002\u8fd9\u65b9\u9762\u7684\u4e00\u4e2a\u4f8b\u5916\u662f\u6d88\u606f\u961f\u5217\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6d88\u606f\u961f\u5217\u4f4d\u4e8e\u4e00\u4e2a\u8282\u70b9\u4e0a\uff0c\u5c3d\u7ba1\u5b83\u4eec\u53ef\u4ee5\u4ece\u6240\u6709\u8282\u70b9\u770b\u5230\u548c\u8bbf\u95ee\n\n##### \u67b6\u6784\u56fe\n\n\n\u200b   \u6838\u5fc3\u89e3\u51b3\u95ee\u9898:  \u5f53\u96c6\u7fa4\u4e2d\u67d0\u4e00\u65f6\u523bmaster\u8282\u70b9\u5b95\u673a,\u53ef\u4ee5\u5bf9Quene\u4e2d\u4fe1\u606f,\u8fdb\u884c\u5907\u4efd\n\n##### \u96c6\u7fa4\u642d\u5efa\n\n# 0.\u96c6\u7fa4\u89c4\u5212\n node1: 10.15.0.3  mq1  master \u4e3b\u8282\u70b9\n node2: 10.15.0.4  mq2  repl1  \u526f\u672c\u8282\u70b9\n node3: 10.15.0.5  mq3  repl2  \u526f\u672c\u8282\u70b9\n\n# 1.\u514b\u9686\u4e09\u53f0\u673a\u5668\u4e3b\u673a\u540d\u548cip\u6620\u5c04\n vim /etc/hosts\u52a0\u5165:\n      10.15.0.3 mq1\n     10.15.0.4 mq2\n     10.15.0.5 mq3\n node1: vim /etc/hostname \u52a0\u5165:  mq1\n node2: vim /etc/hostname \u52a0\u5165:  mq2\n node3: vim /etc/hostname \u52a0\u5165:  mq3\n\n# 2.\u4e09\u4e2a\u673a\u5668\u5b89\u88c5rabbitmq,\u5e76\u540c\u6b65cookie\u6587\u4ef6,\u5728node1\u4e0a\u6267\u884c:\n scp /var/lib/rabbitmq/.erlang.cookie root@mq2:/var/lib/rabbitmq/\n scp /var/lib/rabbitmq/.erlang.cookie root@mq3:/var/lib/rabbitmq/\n\n# 3.\u67e5\u770bcookie\u662f\u5426\u4e00\u81f4:\n node1: cat /var/lib/rabbitmq/.erlang.cookie \n node2: cat /var/lib/rabbitmq/.erlang.cookie \n node3: cat /var/lib/rabbitmq/.erlang.cookie \n\n# 4.\u540e\u53f0\u542f\u52a8rabbitmq\u6240\u6709\u8282\u70b9\u6267\u884c\u5982\u4e0b\u547d\u4ee4,\u542f\u52a8\u6210\u529f\u8bbf\u95ee\u7ba1\u7406\u754c\u9762:\n rabbitmq-server -detached \n\n# 5.\u5728node2\u548cnode3\u6267\u884c\u52a0\u5165\u96c6\u7fa4\u547d\u4ee4:\n 1.\u5173\u95ed       rabbitmqctl stop_app\n 2.\u52a0\u5165\u96c6\u7fa4    rabbitmqctl join_cluster rabbit@mq1\n 3.\u542f\u52a8\u670d\u52a1    rabbitmqctl start_app\n\n# 6.\u67e5\u770b\u96c6\u7fa4\u72b6\u6001,\u4efb\u610f\u8282\u70b9\u6267\u884c:\n rabbitmqctl cluster_status\n\n# 7.\u5982\u679c\u51fa\u73b0\u5982\u4e0b\u663e\u793a,\u96c6\u7fa4\u642d\u5efa\u6210\u529f:\n Cluster status of node rabbit@mq3 ...\n [{nodes,[{disc,[rabbit@mq1,rabbit@mq2,rabbit@mq3]}]},\n {running_nodes,[rabbit@mq1,rabbit@mq2,rabbit@mq3]},\n {cluster_name,&lt;&lt;\"rabbit@mq1\"&gt;&gt;},\n {partitions,[]},\n {alarms,[{rabbit@mq1,[]},{rabbit@mq2,[]},{rabbit@mq3,[]}]}]\n\n# 8.\u767b\u5f55\u7ba1\u7406\u754c\u9762,\u5c55\u793a\u5982\u4e0b\u72b6\u6001:\n\n\n# 9.\u6d4b\u8bd5\u96c6\u7fa4\u5728node1\u4e0a,\u521b\u5efa\u961f\u5217\n\n\n# 10.\u67e5\u770bnode2\u548cnode3\u8282\u70b9:\n\n\n\n# 11.\u5173\u95ednode1\u8282\u70b9,\u6267\u884c\u5982\u4e0b\u547d\u4ee4,\u67e5\u770bnode2\u548cnode3:\n rabbitmqctl stop_app\n\n\n\n\n\n7.1.2 \u955c\u50cf\u96c6\u7fa4\nThis guide covers mirroring (queue contents replication) of classic queues  --\u6458\u81ea\u5b98\u7f51\nBy default, contents of a queue within a RabbitMQ cluster are located on a single node (the node on which the queue was declared). This is in contrast to exchanges and bindings, which can always be considered to be on all nodes. Queues can optionally be made mirrored across multiple nodes. --\u6458\u81ea\u5b98\u7f51\n\n\u955c\u50cf\u961f\u5217\u673a\u5236\u5c31\u662f\u5c06\u961f\u5217\u5728\u4e09\u4e2a\u8282\u70b9\u4e4b\u95f4\u8bbe\u7f6e\u4e3b\u4ece\u5173\u7cfb\uff0c\u6d88\u606f\u4f1a\u5728\u4e09\u4e2a\u8282\u70b9\u4e4b\u95f4\u8fdb\u884c\u81ea\u52a8\u540c\u6b65\uff0c\u4e14\u5982\u679c\u5176\u4e2d\u4e00\u4e2a\u8282\u70b9\u4e0d\u53ef\u7528\uff0c\u5e76\u4e0d\u4f1a\u5bfc\u81f4\u6d88\u606f\u4e22\u5931\u6216\u670d\u52a1\u4e0d\u53ef\u7528\u7684\u60c5\u51b5\uff0c\u63d0\u5347MQ\u96c6\u7fa4\u7684\u6574\u4f53\u9ad8\u53ef\u7528\u6027\u3002\n\n##### \u96c6\u7fa4\u67b6\u6784\u56fe\n\n\n\n\n##### \u914d\u7f6e\u96c6\u7fa4\u67b6\u6784\n```\n# 0.\u7b56\u7565\u8bf4\u660e\n rabbitmqctl set_policy [-p ] [--priority ] [--apply-to ]    \n -p Vhost\uff1a \u53ef\u9009\u53c2\u6570\uff0c\u9488\u5bf9\u6307\u5b9avhost\u4e0b\u7684queue\u8fdb\u884c\u8bbe\u7f6e\n Name:     policy\u7684\u540d\u79f0\n Pattern: queue\u7684\u5339\u914d\u6a21\u5f0f(\u6b63\u5219\u8868\u8fbe\u5f0f)\n Definition\uff1a\u955c\u50cf\u5b9a\u4e49\uff0c\u5305\u62ec\u4e09\u4e2a\u90e8\u5206ha-mode, ha-params, ha-sync-mode\n\n             ha-mode:\u6307\u660e\u955c\u50cf\u961f\u5217\u7684\u6a21\u5f0f\uff0c\u6709\u6548\u503c\u4e3a all/exactly/nodes\n                     all\uff1a\u8868\u793a\u5728\u96c6\u7fa4\u4e2d\u6240\u6709\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u955c\u50cf\n                     exactly\uff1a\u8868\u793a\u5728\u6307\u5b9a\u4e2a\u6570\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u955c\u50cf\uff0c\u8282\u70b9\u7684\u4e2a\u6570\u7531ha-params\u6307\u5b9a\n                     nodes\uff1a\u8868\u793a\u5728\u6307\u5b9a\u7684\u8282\u70b9\u4e0a\u8fdb\u884c\u955c\u50cf\uff0c\u8282\u70b9\u540d\u79f0\u901a\u8fc7ha-params\u6307\u5b9a\n          ha-params\uff1aha-mode\u6a21\u5f0f\u9700\u8981\u7528\u5230\u7684\u53c2\u6570\n          ha-sync-mode\uff1a\u8fdb\u884c\u961f\u5217\u4e2d\u6d88\u606f\u7684\u540c\u6b65\u65b9\u5f0f\uff0c\u6709\u6548\u503c\u4e3aautomatic\u548cmanual\n          priority\uff1a\u53ef\u9009\u53c2\u6570\uff0cpolicy\u7684\u4f18\u5148\u7ea7\n\n\n1.\u67e5\u770b\u5f53\u524d\u7b56\u7565\n\nrabbitmqctl list_policies\n\n\n2.\u6dfb\u52a0\u7b56\u7565\n\nrabbitmqctl set_policy ha-all '^hello' '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}' \n\u8bf4\u660e:\u7b56\u7565\u6b63\u5219\u8868\u8fbe\u5f0f\u4e3a \u201c^\u201d \u8868\u793a\u6240\u6709\u5339\u914d\u6240\u6709\u961f\u5217\u540d\u79f0  ^hello:\u5339\u914dhello\u5f00\u5934\u961f\u5217\n\n\n3.\u5220\u9664\u7b56\u7565\n\nrabbitmqctl clear_policy ha-all\n\n\n4.\u6d4b\u8bd5\u96c6\u7fa4\n```\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}, {"name": "RibbitMQ", "slug": "RibbitMQ", "permalink": "/Xuxx_Blogs/tag/RibbitMQ/"}]}, {"title": "Spring Boot\u6574\u5408Swagger", "date": "2020-05-27T23:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj23/", "text": "1. Swagger\u7b80\u4ecb\n\u524d\u540e\u7aef\u5206\u79bb\n\n\u524d\u7aef -&gt; \u524d\u7aef\u63a7\u5236\u5c42\u3001\u89c6\u56fe\u5c42\n\u540e\u7aef -&gt; \u540e\u7aef\u63a7\u5236\u5c42\u3001\u670d\u52a1\u5c42\u3001\u6570\u636e\u8bbf\u95ee\u5c42\n\u524d\u540e\u7aef\u901a\u8fc7API\u8fdb\u884c\u4ea4\u4e92\n\u524d\u540e\u7aef\u76f8\u5bf9\u72ec\u7acb\u4e14\u677e\u8026\u5408\n\n\u4ea7\u751f\u7684\u95ee\u9898\n\n\u524d\u540e\u7aef\u96c6\u6210\uff0c\u524d\u7aef\u6216\u8005\u540e\u7aef\u65e0\u6cd5\u505a\u5230\u201c\u53ca\u65f6\u534f\u5546\uff0c\u5c3d\u65e9\u89e3\u51b3\u201d\uff0c\u6700\u7ec8\u5bfc\u81f4\u95ee\u9898\u96c6\u4e2d\u7206\u53d1\n\n\u89e3\u51b3\u65b9\u6848\n\n\u9996\u5148\u5b9a\u4e49schema [ \u8ba1\u5212\u7684\u63d0\u7eb2 ]\uff0c\u5e76\u5b9e\u65f6\u8ddf\u8e2a\u6700\u65b0\u7684API\uff0c\u964d\u4f4e\u96c6\u6210\u98ce\u9669\n\nSwagger\n\n\u53f7\u79f0\u4e16\u754c\u4e0a\u6700\u6d41\u884c\u7684API\u6846\u67b6\nRestful Api \u6587\u6863\u5728\u7ebf\u81ea\u52a8\u751f\u6210\u5668 =&gt; API \u6587\u6863 \u4e0eAPI \u5b9a\u4e49\u540c\u6b65\u66f4\u65b0\n\u76f4\u63a5\u8fd0\u884c\uff0c\u5728\u7ebf\u6d4b\u8bd5API\n\u652f\u6301\u591a\u79cd\u8bed\u8a00 \uff08\u5982\uff1aJava\uff0cPHP\u7b49\uff09\n\u5b98\u7f51\uff1ahttps://swagger.io/\n\n2. Spring Boot\u96c6\u6210Swagger\nSpring Boot\u96c6\u6210Swagger -&gt; springfox\uff0c\u4e24\u4e2ajar\u5305\n\nSpringfox-swagger2\nswagger-springmvc\n\n\u4f7f\u7528Swagger\n\u8981\u6c42\uff1ajdk 1.8 + \u5426\u5219swagger2\u65e0\u6cd5\u8fd0\u884c\n\u6b65\u9aa4\uff1a\n1\u3001\u65b0\u5efa\u4e00\u4e2aSpring Boot-web\u9879\u76ee\n2\u3001\u6dfb\u52a0Maven\u4f9d\u8d56\n&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger2 --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n    &lt;artifactId&gt;springfox-swagger2&lt;/artifactId&gt;\n    &lt;version&gt;2.9.2&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;!-- https://mvnrepository.com/artifact/io.springfox/springfox-swagger-ui --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;io.springfox&lt;/groupId&gt;\n    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;\n    &lt;version&gt;2.9.2&lt;/version&gt;\n&lt;/dependency&gt;\n\n3\u3001\u7f16\u5199HelloController\uff0c\u6d4b\u8bd5\u786e\u4fdd\u8fd0\u884c\u6210\u529f\uff01\n4\u3001\u8981\u4f7f\u7528Swagger\uff0c\u9700\u8981\u7f16\u5199\u4e00\u4e2a\u914d\u7f6e\u7c7b-SwaggerConfig\u6765\u914d\u7f6e Swagger\n@Configuration\n@EnableSwagger2// \u5f00\u542fSwagger2\npublic class SwaggerConfig {  }\n\n5\u3001\u8bbf\u95ee\u6d4b\u8bd5 \uff1ahttp://localhost:8080/swagger-ui.html \uff0c\u53ef\u4ee5\u770b\u5230swagger\u7684\u754c\u9762\uff1b\n\n3. \u914d\u7f6eSwagger\n1\u3001Swagger\u5b9e\u4f8bBean\u662fDocket\uff0c\u6240\u4ee5\u901a\u8fc7\u914d\u7f6eDocket\u5b9e\u4f8b\u6765\u914d\u7f6eSwaggger\u3002\n@Bean //\u914d\u7f6edocket\u4ee5\u914d\u7f6eSwagger\u5177\u4f53\u53c2\u6570\npublic Docket docket() {   \n    return new Docket(DocumentationType.SWAGGER_2);\n}\n\n2\u3001\u53ef\u4ee5\u901a\u8fc7apiInfo()\u5c5e\u6027\u914d\u7f6e\u6587\u6863\u4fe1\u606f\n//\u914d\u7f6eAPI\u63cf\u8ff0\u4fe1\u606f&gt;&gt;&gt;ApiInfo\n    private ApiInfo apiInfo() {\n        //\u4f5c\u8005\u4fe1\u606f\n        Contact contact = new Contact(&quot;Xuxx&quot;, &quot;\u6682\u65e0&quot;, &quot;xuxx3319@gmail.com&quot;);\n        return new ApiInfo(\n                &quot;API\u4fe1\u606f&quot;,\n                &quot;ApI\u63cf\u8ff0&quot;,\n                &quot;v1.0&quot;,\n                &quot;\u670d\u52a1\u6761\u6b3e\u7f51\u5740&quot;,\n                contact,\n                &quot;Apache 2.0&quot;,\n                &quot;http://www.apache.org/licenses/LICENSE-2.0&quot;,\n                new ArrayList&lt;VendorExtension&gt;());\n    }\n\n3\u3001Docket \u5b9e\u4f8b\u5173\u8054\u4e0a apiInfo()\n//\u914d\u7f6eSwagger\u7684Docket\n@Bean\npublic Docket docket() {\n    return new Docket(DocumentationType.SWAGGER_2)\n        .apiInfo(apiInfo());\n}\n\n4\u3001\u91cd\u542f\u9879\u76ee\uff0c\u8bbf\u95ee\u6d4b\u8bd5 http://localhost:8080/swagger-ui.html  \u770b\u4e0b\u6548\u679c\uff1b\n\n4. \u914d\u7f6e\u626b\u63cf\u63a5\u53e3\n1\u3001\u6784\u5efaDocket\u65f6\u901a\u8fc7select()\u65b9\u6cd5\u914d\u7f6e\u600e\u4e48\u626b\u63cf\u63a5\u53e3\u3002\n//\u914d\u7f6eSwagger\u7684Docket\n    @Bean\n    public Docket docket() {\n        return new Docket(DocumentationType.SWAGGER_2)\n                .apiInfo(apiInfo())\n                .select()\n                //RequestHandlerSelectors \u914d\u7f6e\u8981\u626b\u63cf\u7684\u63a5\u53e3\n                .apis(RequestHandlerSelectors.basePackage(&quot;com.xuxx.swagger.controller&quot;))\n                .build();\n    }\n\n2\u3001\u91cd\u542f\u9879\u76ee\u6d4b\u8bd5\uff0c\u7531\u4e8e\u914d\u7f6e\u6839\u636e\u5305\u7684\u8def\u5f84\u626b\u63cf\u63a5\u53e3\uff0c\u6240\u4ee5\u53ea\u80fd\u770b\u5230\u4e00\u4e2a\u7c7b\n3\u3001\u9664\u4e86\u901a\u8fc7\u5305\u8def\u5f84\u914d\u7f6e\u626b\u63cf\u63a5\u53e3\u5916\uff0c\u8fd8\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u5176\u4ed6\u65b9\u5f0f\u626b\u63cf\u63a5\u53e3\uff0c\u8fd9\u91cc\u6ce8\u91ca\u4e00\u4e0b\u6240\u6709\u7684\u914d\u7f6e\u65b9\u5f0f\uff1a\n//any:\u626b\u63cf\u5168\u90e8\n//none:\u5168\u90e8\u4e0d\u626b\u63cf\n//basePackage:\u6307\u5b9a\u8981\u626b\u63cf\u7684\u5305 \n//withMethodAnnotation:\u626b\u63cf\u5e26\u6ce8\u89e3\u7684\u65b9\u6cd5,\u4f8b:withMethodAnnotation(GetMapping.class)\n//withClassAnnotation:\u626b\u63cf\u5e26\u6ce8\u89e3\u7684\u7c7b,\u4f8b:withClassAnnotation(RestController.class)\n\n4\u3001\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u53ef\u4ee5\u914d\u7f6e\u63a5\u53e3\u626b\u63cf\u8fc7\u6ee4\uff1a\n@Bean\npublic Docket docket() {   \nreturn new Docket(DocumentationType.SWAGGER_2)\n    .apiInfo(apiInfo())\n    .select()// select():\u914d\u7f6e\u626b\u63cf\u63a5\u53e3, RequestHandlerSelectors:\u914d\u7f6e\u5982\u4f55\u626b\u63cf\u63a5\u53e3\n    .apis(RequestHandlerSelectors.basePackage(&quot;com.xuxx.swagger.controller&quot;))\n    //\u914d\u7f6e\u5982\u4f55\u901a\u8fc7path\u8fc7\u6ee4,\u5373\u8fd9\u91cc\u53ea\u626b\u63cf\u8bf7\u6c42\u4ee5&#39;/api/&#39;\u4e3a\u524d\u7f00\u7684\u63a5\u53e3\n    .paths(PathSelectors.ant(&quot;/api/**&quot;))\n    .build();\n}\n\n5\u3001\u8fd9\u91cc\u7684\u53ef\u9009\u503c\u8fd8\u6709\nany() //\u4efb\u4f55\u8bf7\u6c42\u90fd\u626b\u63cf\nnone() //\u4efb\u4f55\u8bf7\u6c42\u90fd\u4e0d\u626b\u63cf\nregex(final String pathRegex) //\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u63a7\u5236\nant(final String antPattern) //\u901a\u8fc7ant()\u5339\u914d\n\n5. \u914d\u7f6eSwagger\u5f00\u5173\n1\u3001\u901a\u8fc7enable()\u65b9\u6cd5\u914d\u7f6e\u662f\u5426\u542f\u7528swagger\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u4e0d\u80fd\u8bbf\u95eeswagger\n@Bean\npublic Docket docket() {\n   return new Docket(DocumentationType.SWAGGER_2)\n      .apiInfo(apiInfo())\n      .enable(false) //\u914d\u7f6e\u662f\u5426\u542f\u7528swagger\uff0c\u5982\u679c\u662ffalse\uff0c\u5219\u4e0d\u80fd\u8bbf\u95eeswagger\n      .select()// select():\u914d\u7f6e\u626b\u63cf\u63a5\u53e3, RequestHandlerSelectors:\u914d\u7f6e\u5982\u4f55\u626b\u63cf\u63a5\u53e3\n      .apis(RequestHandlerSelectors.basePackage(&quot;com.xuxx.swagger.controller&quot;))\n      //\u914d\u7f6e\u5982\u4f55\u901a\u8fc7path\u8fc7\u6ee4,\u5373\u8fd9\u91cc\u53ea\u626b\u63cf\u8bf7\u6c42\u4ee5&#39;/api/&#39;\u4e3a\u524d\u7f00\u7684\u63a5\u53e3\n    .paths(PathSelectors.ant(&quot;/api/**&quot;))\n      .build();\n}\n\n2\u3001\u5982\u4f55\u52a8\u6001\u914d\u7f6e\u5f53\u9879\u76ee\u5904\u4e8edev\u3001test\u73af\u5883\u65f6\u4f7f\u7528swagger\uff0c\u5904\u4e8eprod\u65f6\u4e0d\u663e\u793a\uff1f\n@Bean\n//environment:\u8868\u793a\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u7684\u73af\u5883\u7684\u63a5\u53e3\u3002\npublic Docket docket(Environment environment) {\n\n    //\u914d\u7f6e\u8981\u4f7f\u7528swagger\u7684\u73af\u5883\n    Profiles profiles = Profiles.of(&quot;dev&quot;, &quot;test&quot;);\n    //\u5224\u65ad\u5f53\u524d\u662f\u5426\u5904\u4e8e\u8be5\u73af\u5883\n    //\u901a\u8fc7enable()\u63a5\u6536\u6b64\u53c2\u6570\u5224\u65ad\u662f\u5426\u4f7f\u7528swagger\n    boolean flag = environment.acceptsProfiles(profiles);\n\n   return new Docket(DocumentationType.SWAGGER_2)\n      .apiInfo(apiInfo())\n      .enable(flag) //\u914d\u7f6e\u662f\u5426\u542f\u7528swagger\uff0c\u5982\u679c\u662ffalse\uff0c\u5728\u6d4f\u89c8\u5668\u5c06\u65e0\u6cd5\u8bbf\u95ee\n      .select()// \u901a\u8fc7.select()\u65b9\u6cd5\uff0c\u53bb\u914d\u7f6e\u626b\u63cf\u63a5\u53e3,RequestHandlerSelectors\u914d\u7f6e\u5982\u4f55\u626b\u63cf\u63a5\u53e3\n      .apis(RequestHandlerSelectors.basePackage(&quot;com.xuxx.swagger.controller&quot;))\n       //\u914d\u7f6e\u5982\u4f55\u901a\u8fc7path\u8fc7\u6ee4,\u5373\u8fd9\u91cc\u53ea\u626b\u63cf\u8bf7\u6c42\u4ee5&#39;/api/&#39;\u4e3a\u524d\u7f00\u7684\u63a5\u53e3\n      .paths(PathSelectors.ant(&quot;/api/**&quot;))\n      .build();\n}\n\n3\u3001\u53ef\u4ee5\u5728\u9879\u76ee\u4e2d\u589e\u52a0\u4e00\u4e2adev\u7684\u914d\u7f6e\u6587\u4ef6\u67e5\u770b\u6548\u679c\uff01\napplication.properties\nspring.profiles.active=dev\n\napplication-dev.properties\nserver.port=8081\n\n\n\u5982\u679c\u73af\u5883\u4e0d\u662fdev\u6216\u8005test,swagger\u4fbf\u5173\u95ed\u3002\n6. \u914d\u7f6eAPI\u5206\u7ec4\n1\u3001\u5982\u679c\u6ca1\u6709\u914d\u7f6e\u5206\u7ec4\uff0c\u9ed8\u8ba4\u662fdefault\u3002\u901a\u8fc7groupName()\u65b9\u6cd5\u5373\u53ef\u914d\u7f6e\u5206\u7ec4\uff1a\n@Bean\npublic Docket docket(Environment environment) {\n   return new Docket(DocumentationType.SWAGGER_2)\n       .apiInfo(apiInfo())\n      .groupName(&quot;A&quot;) // \u914d\u7f6e\u5206\u7ec4\n       // \u7701\u7565....\n}\n\n2\u3001\u91cd\u542f\u9879\u76ee\u67e5\u770b\u5206\u7ec4\n3\u3001\u5982\u4f55\u914d\u7f6e\u591a\u4e2a\u5206\u7ec4\uff1f\u914d\u7f6e\u591a\u4e2a\u5206\u7ec4\u53ea\u9700\u8981\u914d\u7f6e\u591a\u4e2adocket\u5373\u53ef\uff1a\n@Bean\npublic Docket docket1(){\n   return new Docket(DocumentationType.SWAGGER_2).groupName(&quot;A&quot;);\n}\n@Bean\npublic Docket docket2(){\n   return new Docket(DocumentationType.SWAGGER_2).groupName(&quot;B&quot;);\n}\n\n4\u3001\u91cd\u542f\u9879\u76ee\u67e5\u770b\u5373\u53ef\n\n7. \u5b9e\u4f53\u914d\u7f6e\n1\u3001\u65b0\u5efa\u4e00\u4e2a\u5b9e\u4f53\u7c7b\n@ApiModel(&quot;\u7528\u6237\u5b9e\u4f53\u7c7b-user&quot;)\npublic class User {\n    @ApiModelProperty(&quot;\u7528\u6237\u540d&quot;)\n    public String username;\n    @ApiModelProperty(&quot;\u5bc6\u7801&quot;)\n    public String password;\n}\n\n2\u3001\u53ea\u8981\u8fd9\u4e2a\u5b9e\u4f53\u5728\u8bf7\u6c42\u63a5\u53e3\u7684\u8fd4\u56de\u503c\u4e0a\uff08\u5373\u4f7f\u662f\u6cdb\u578b\uff09\uff0c\u90fd\u80fd\u6620\u5c04\u5230\u5b9e\u4f53\u9879\u4e2d\uff1a\n@GetMapping(&quot;/getUser&quot;)\npublic User getUser(){\n   return new User();\n}\n\n3\u3001\u91cd\u542f\u67e5\u770b\u6d4b\u8bd5\n\n\u6ce8\uff1a\u5e76\u4e0d\u662f\u56e0\u4e3a@ApiModel\u8fd9\u4e2a\u6ce8\u89e3\u8ba9\u5b9e\u4f53\u663e\u793a\u5728\u8fd9\u91cc\u4e86\uff0c\u800c\u662f\u53ea\u8981\u51fa\u73b0\u5728\u63a5\u53e3\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u4e0a\u7684\u5b9e\u4f53\u90fd\u4f1a\u663e\u793a\u5728\u8fd9\u91cc\uff0c\u800c@ApiModel\u548c@ApiModelProperty\u8fd9\u4e24\u4e2a\u6ce8\u89e3\u53ea\u662f\u4e3a\u5b9e\u4f53\u6dfb\u52a0\u6ce8\u91ca\u7684\u3002\n\n@ApiModel\u4e3a\u7c7b\u6dfb\u52a0\u6ce8\u91ca\n\n\n@ApiModelProperty\u4e3a\u7c7b\u5c5e\u6027\u6dfb\u52a0\u6ce8\u91ca\n\n8. \u5e38\u7528\u6ce8\u89e3\nSwagger\u7684\u6240\u6709\u6ce8\u89e3\u5b9a\u4e49\u5728io.swagger.annotations\u5305\u4e0b\n\u4e0b\u9762\u5217\u4e00\u4e9b\u7ecf\u5e38\u7528\u5230\u7684\uff0c\u672a\u5217\u4e3e\u51fa\u6765\u7684\u53ef\u4ee5\u53e6\u884c\u67e5\u9605\u8bf4\u660e\uff1a\n\n\nSwagger\u6ce8\u89e3\n\u7b80\u5355\u8bf4\u660e\n\n\n\n\n@Api(tags = \"xxx\u6a21\u5757\u8bf4\u660e\")\n\u4f5c\u7528\u5728\u6a21\u5757\u7c7b\u4e0a,\u4e3a\u63a5\u53e3\u6dfb\u52a0\u6807\u7b7e\n\n\n@ApiOperation(vale=\"xxx\u63a5\u53e3\u8bf4\u660e\"\uff0ctags=\"xxx\"\uff0cnotes=\"\u63a5\u53e3\u7684\u8be6\u7ec6\u63cf\u8ff0\")\n\u4f5c\u7528\u5728\u63a5\u53e3\u65b9\u6cd5\u4e0a,vale:\u6dfb\u52a0\u8bf4\u660e,tage:\u6dfb\u52a0\u6807\u7b7e\n\n\n@ApiModel(\"xxxPOJO\u8bf4\u660e\")\n\u4f5c\u7528\u5728\u6a21\u578b\u7c7b\u4e0a\uff1a\u5982VO\u3001BO\n\n\n@ApiModelProperty(value = \"xxx\u5c5e\u6027\u8bf4\u660e\",hidden = true)\n\u4f5c\u7528\u5728\u7c7b\u65b9\u6cd5\u548c\u5c5e\u6027\u4e0a\uff0chidden\u8bbe\u7f6e\u4e3atrue\u53ef\u4ee5\u9690\u85cf\u8be5\u5c5e\u6027\n\n\n@ApiParam(\"xxx\u53c2\u6570\u8bf4\u660e\")\n\u4f5c\u7528\u5728\u53c2\u6570\u3001\u65b9\u6cd5\u548c\u5b57\u6bb5\u4e0a\uff0c\u7c7b\u4f3c@ApiModelProperty\n\n\n\n\u4e5f\u53ef\u4ee5\u7ed9\u8bf7\u6c42\u7684\u63a5\u53e3\u914d\u7f6e\u4e00\u4e9b\u6ce8\u91ca\n@ApiOperation(value = &quot;api\u63a5\u53e3-getUsername&quot;,tags =&quot;\u5c5e\u4e8exxx\u7684\u63a5\u53e3&quot;,notes = &quot;\u63a5\u53e3\u7684\u8be6\u7ec6\u63cf\u8ff0&quot;)\n@PostMapping(&quot;/getUsername&quot;)\n@ResponseBody\npublic String getUsername(@ApiParam(&quot;\u8fd9\u4e2ausername\u4f1a\u88ab\u8fd4\u56de&quot;)String username){\n   return username;\n}\n\n\u8fd9\u6837\u7684\u8bdd\uff0c\u53ef\u4ee5\u7ed9\u4e00\u4e9b\u6bd4\u8f83\u96be\u7406\u89e3\u7684\u5c5e\u6027\u6216\u8005\u63a5\u53e3\uff0c\u589e\u52a0\u4e00\u4e9b\u914d\u7f6e\u4fe1\u606f\uff0c\u8ba9\u4eba\u66f4\u5bb9\u6613\u9605\u8bfb\uff01\n\u76f8\u8f83\u4e8e\u4f20\u7edf\u7684Postman\u6216Curl\u65b9\u5f0f\u6d4b\u8bd5\u63a5\u53e3\uff0c\u4f7f\u7528swagger\u7b80\u76f4\u5c31\u662f\u50bb\u74dc\u5f0f\u64cd\u4f5c\uff0c\u4e0d\u9700\u8981\u989d\u5916\u8bf4\u660e\u6587\u6863(\u5199\u5f97\u597d\u672c\u8eab\u5c31\u662f\u6587\u6863)\u800c\u4e14\u66f4\u4e0d\u5bb9\u6613\u51fa\u9519\uff0c\u53ea\u9700\u8981\u5f55\u5165\u6570\u636e\u7136\u540e\u70b9\u51fbExecute\uff0c\u5982\u679c\u518d\u914d\u5408\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u53ef\u4ee5\u8bf4\u57fa\u672c\u5c31\u4e0d\u9700\u8981\u4eba\u4e3a\u64cd\u4f5c\u4e86\u3002\nSwagger\u662f\u4e2a\u4f18\u79c0\u7684\u5de5\u5177\uff0c\u73b0\u5728\u56fd\u5185\u5df2\u7ecf\u6709\u5f88\u591a\u7684\u4e2d\u5c0f\u578b\u4e92\u8054\u7f51\u516c\u53f8\u90fd\u5728\u4f7f\u7528\u5b83\uff0c\u76f8\u8f83\u4e8e\u4f20\u7edf\u7684\u8981\u5148\u51faWord\u63a5\u53e3\u6587\u6863\u518d\u6d4b\u8bd5\u7684\u65b9\u5f0f\uff0c\u663e\u7136\u8fd9\u6837\u4e5f\u66f4\u7b26\u5408\u73b0\u5728\u7684\u5feb\u901f\u8fed\u4ee3\u5f00\u53d1\u884c\u60c5\u3002\u5f53\u7136\u4e86\uff0c\u63d0\u9192\u4e0b\u5927\u5bb6\u5728\u6b63\u5f0f\u73af\u5883\u8981\u8bb0\u5f97\u5173\u95edSwagger\uff0c\u4e00\u6765\u51fa\u4e8e\u5b89\u5168\u8003\u8651\uff0c\u4e8c\u6765\u4e5f\u53ef\u4ee5\u8282\u7701\u8fd0\u884c\u65f6\u5185\u5b58\u3002\n\u62d3\u5c55\uff1a\u5176\u4ed6\u76ae\u80a4\n\u53ef\u4ee5\u5bfc\u5165\u4e0d\u540c\u7684\u5305\u5b9e\u73b0\u4e0d\u540c\u7684\u76ae\u80a4\u5b9a\u4e49\uff1a\n1\u3001\u9ed8\u8ba4\u7684   \u8bbf\u95ee http://localhost:8080/swagger-ui.html\n&lt;dependency&gt;   \n    &lt;groupId&gt;io.springfox&lt;/groupId&gt;   \n    &lt;artifactId&gt;springfox-swagger-ui&lt;/artifactId&gt;   \n    &lt;version&gt;2.9.2&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n2\u3001bootstrap-ui  \u8bbf\u95ee http://localhost:8080/doc.html\n&lt;!-- \u5f15\u5165swagger-bootstrap-ui\u5305 /doc.html--&gt;\n&lt;dependency&gt;   \n    &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;   \n    &lt;artifactId&gt;swagger-bootstrap-ui&lt;/artifactId&gt;   \n    &lt;version&gt;1.9.1&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n3\u3001Layui-ui   \u8bbf\u95ee http://localhost:8080/docs.html\n&lt;!-- \u5f15\u5165swagger-ui-layer\u5305 /docs.html--&gt;\n&lt;dependency&gt;   \n    &lt;groupId&gt;com.github.caspar-chen&lt;/groupId&gt;   \n    &lt;artifactId&gt;swagger-ui-layer&lt;/artifactId&gt;   \n    &lt;version&gt;1.1.3&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n4\u3001mg-ui   \u8bbf\u95ee http://localhost:8080/document.html\n&lt;!-- \u5f15\u5165swagger-ui-layer\u5305 /document.html--&gt;\n&lt;dependency&gt;   \n    &lt;groupId&gt;com.zyplayer&lt;/groupId&gt;   \n    &lt;artifactId&gt;swagger-mg-ui&lt;/artifactId&gt;   \n    &lt;version&gt;1.0.6&lt;/version&gt;\n&lt;/dependency&gt;\n\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/Xuxx_Blogs/tag/Spring/"}, {"name": "Swagger", "slug": "Swagger", "permalink": "/Xuxx_Blogs/tag/Swagger/"}]}, {"title": "Spring Boot\u6574\u5408Security", "date": "2020-05-18T15:10:00-00.00", "path": "/Xuxx_Blogs/archives/bj22/", "text": "1.Spring Security\u5165\u95e8\n1.Spring Security\u521d\u4f53\u9a8c\n1.\u5f15\u5165\u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n2.Controller\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;hello&quot;)\n    public String hello() {\n        return &quot;Hello Security!&quot;;\n    }\n}\n\n3.\u6d4b\u8bd5\n\u6b64\u65f6\u542f\u52a8\u9879\u76ee\uff0c\u8bbf\u95eehttp://localhost:8080/hello\uff0c\u6b64\u65f6\u4f1a\u53d1\u73b0\uff0c\u4f1a\u81ea\u52a8\u91cd\u5b9a\u5411\u5230http://localhost:8080/login,\u4e5f\u5c31\u662f\u8bf4hello\u63a5\u53e3\u88abSecurity\u4fdd\u62a4\u8d77\u6765\u4e86\uff0c\u4e0d\u80fd\u76f4\u63a5\u8bbf\u95ee\u4e86\u3002\n\n\n\u8f93\u5165\u7528\u6237\u540d\uff08user\uff09\u548c\u5bc6\u7801\uff08\u6bcf\u6b21\u751f\u6210\u7684\u5bc6\u7801\u90fd\u4e0d\u4e00\u6837\uff09\uff08\u5b9e\u9645\u4e0a\u5c31\u662fUUID\uff09\uff0c\u767b\u5f55\u540e\u4fbf\u80fd\u8bbf\u95ee\u63a5\u53e3\u4e86\u3002\n2.\u624b\u52a8\u914d\u7f6eSecurity\u7528\u6237\u548c\u5bc6\u7801\n1.\u7b2c\u4e00\u79cd\uff1a\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\nspring.security.user.name=xuxx\nspring.security.user.password=123\nspring.security.user.roles=admin\n\n\u914d\u7f6e\u540e\uff0cSecurity\u4fbf\u4e0d\u4f1a\u518d\u751f\u6210\u5bc6\u7801\u4e86\uff0c\u5f53\u7136\u4e5f\u4e0d\u4f1a\u5728\u63a7\u5236\u53f0\u6253\u5370\u4e86\uff0c\u6240\u4ee5\u6b64\u65f6\u518d\u767b\u5f55\u4fbf\u53ea\u80fd\u4f7f\u7528\u914d\u7f6e\u7684\u7528\u6237\uff08xuxx\uff09\u548c\u5bc6\u7801(123)\u4e86\u3002\n2.\u7b2c\u4e8c\u79cd\uff1a\u7f16\u5199\u914d\u7f6e\u7c7b\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    /*\n    Spring Security 5\u4e4b\u540e\u5bc6\u7801\u5fc5\u987b\u8981\u52a0\u5bc6\uff0c\u6240\u4ee5\u8981\u914d\u7f6ePasswordEncoder\n    */\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        //\u5bc6\u7801\u7f16\u7801\u5668\uff0c\u5bc6\u7801\u4e0d\u52a0\u5bc6\uff0cNoOpPasswordEncoder\u5df2\u8fc7\u671f\n        return NoOpPasswordEncoder.getInstance();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        //\u57fa\u4e8e\u5185\u5b58\u7684\u8ba4\u8bc1\n        auth.inMemoryAuthentication()\n                .withUser(&quot;xuxx&quot;).password(&quot;123&quot;).roles(&quot;admin&quot;)\n                .and()\n                .withUser(&quot;test&quot;).password(&quot;123&quot;).roles(&quot;user&quot;);\n    }\n}\n\n\u7531\u4e8e Spring Security \u652f\u6301\u591a\u79cd\u6570\u636e\u6e90\uff0c\u4f8b\u5982\u5185\u5b58\u3001\u6570\u636e\u5e93\u3001LDAP \u7b49\uff0c\u8fd9\u4e9b\u4e0d\u540c\u6765\u6e90\u7684\u6570\u636e\u88ab\u5171\u540c\u5c01\u88c5\u6210\u4e86\u4e00\u4e2a UserDetailService \u63a5\u53e3\uff0c\u4efb\u4f55\u5b9e\u73b0\u4e86\u8be5\u63a5\u53e3\u7684\u5bf9\u8c61\u90fd\u53ef\u4ee5\u4f5c\u4e3a\u8ba4\u8bc1\u6570\u636e\u6e90\u3002\n\u56e0\u6b64\u8fd8\u53ef\u4ee5\u901a\u8fc7\u91cd\u5199 WebSecurityConfigurerAdapter \u4e2d\u7684 userDetailsService \u65b9\u6cd5\u6765\u63d0\u4f9b\u4e00\u4e2a UserDetailService \u5b9e\u4f8b\u8fdb\u800c\u914d\u7f6e\u591a\u4e2a\u7528\u6237\uff1a\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return NoOpPasswordEncoder.getInstance();\n    }\n\n    //\u4e0e\u4e0a\u9762\u4e00\u6837\uff0c\u4e5f\u662f\u57fa\u4e8e\u5185\u5b58\u7684\u5b9a\u4e49\u7528\u6237\u7684\u65b9\u6cd5\n    @Bean\n    protected UserDetailsService userDetailsService() {\n        InMemoryUserDetailsManager manager = new InMemoryUserDetailsManager();\n        manager.createUser(User.withUsername(&quot;xuxx&quot;).password(&quot;123&quot;).roles(&quot;admin&quot;).build());\n        manager.createUser(User.withUsername(&quot;test&quot;).password(&quot;123&quot;).roles(&quot;user&quot;).build());\n        return manager;\n    }\n}\n\n\u4e24\u79cd\u57fa\u4e8e\u5185\u5b58\u5b9a\u4e49\u7528\u6237\u7684\u65b9\u6cd5\uff0c\u4efb\u9009\u4e00\u4e2a\u5373\u53ef\u3002\n2.Spring Security\u5165\u95e8\n\u770b\u770b Spring Security \u767b\u5f55\u6d41\u7a0b\n1.HttpSecurity\u7684\u914d\u7f6e\n\u8fd8\u662f\u5728\u4e4b\u524d\u7684\u914d\u7f6e\u7c7b\u4e2d\u8fdb\u884c\u914d\u7f6e\npackage com.xuxx.security.config;\n\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.password.NoOpPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    /*\n    Spring5\u4e4b\u540e\u5bc6\u7801\u5fc5\u987b\u8981\u52a0\u5bc6\uff0c\u6240\u4ee5\u5fc5\u987b\u914d\u7f6ePasswordEncoder\n    */\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        //\u5bc6\u7801\u7f16\u7801\u5668\uff0c\u5bc6\u7801\u4e0d\u52a0\u5bc6\uff0cNoOpPasswordEncoder\u4ee5\u8fc7\u671f.\n        return NoOpPasswordEncoder.getInstance();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        //\u57fa\u4e8e\u5185\u5b58\u7684\u8ba4\u8bc1\n        auth.inMemoryAuthentication()\n                .withUser(&quot;xuxx&quot;).password(&quot;123&quot;).roles(&quot;admin&quot;)\n                .and()\n                .withUser(&quot;test&quot;).password(&quot;123&quot;).roles(&quot;users&quot;);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()//\u5f00\u542f\u6388\u6743\u8bf7\u6c42\u914d\u7f6e\n                .antMatchers(&quot;/admin/**&quot;)//\u8981\u62e6\u622a\u7684\u8bf7\u6c42\u8def\u5f84\n                .hasRole(&quot;admin&quot;)//\u6240\u9700\u8981\u7684\u89d2\u8272(\u4e00\u4e2a)\n                .antMatchers(&quot;/users/**&quot;)\n                .hasAnyRole(&quot;admin&quot;, &quot;users&quot;)//\u6240\u9700\u8981\u7684\u89d2\u8272(\u5176\u4e2d\u4e00\u4e2a)\n               //.antMatchers().access(&quot;hasAnyRole(&#39;admin&#39;,&#39;user&#39;)&quot;)//\u548c\u4e0a\u9762\u6548\u679c\u4e00\u6837\n                .anyRequest()//\u5269\u4e0b\u7684\u5176\u4ed6\u7684\u8bf7\u6c42\n                .authenticated()//\u8ba4\u8bc1\u540e\u8bbf\u95ee\n                .and()\n                .formLogin()//\u8868\u5355\u767b\u5f55\n                .loginProcessingUrl(&quot;/doLogin&quot;)//\u8fdb\u884c\u767b\u5f55\u5904\u7406\u7684Url\n                .permitAll()//\u5141\u8bb8\u767b\u5f55\u76f8\u5173\u7684\u6240\u6709\u8bf7\u6c42\n                .and()\n                .csrf()\n                .disable();//\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u5173\u95edcsrf(\u8de8\u57df)\u4fdd\u62a4\n    }\n}\n\n\u5728Controller\u4e2d\u6dfb\u52a0\u4e24\u4e2a\u63a5\u53e3\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;hello&quot;)\n    public String hello() {\n        return &quot;Hello Security!&quot;;\n    }\n\n    @GetMapping(&quot;admin/hello&quot;)\n    public String admin() {\n        return &quot;Hello admin\u7528\u6237&quot;;\n    }\n\n    @GetMapping(&quot;user/hello&quot;)\n    public String users() {\n        return &quot;Hello user\u7528\u6237&quot;;\n    }\n\n\u6d4b\u8bd5\u7ed3\u679c:\n\u4f7f\u7528xuxx\u767b\u5f55\u65f6\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5b9a\u4e49\u7684\u4e09\u4e2a\u63a5\u53e3\n\u4f7f\u7528test\u767b\u5f55\u65f6\uff0c\u53ea\u53ef\u4ee5\u8bbf\u95eehello\u548cuser/hello,\u8bbf\u95eeadmin/hello\u65f6\u62a5\u9519403(\u6743\u9650\u4e0d\u8db3)\n\n\u6b64\u65f6\u53d1\u73b0\u914d\u7f6e\u7684loginProcessingUrl(\"/doLogin\")\u8fd8\u6ca1\u7528\u4e0a\uff0c\u90a3\u4e48\u5c31\u7528\u4e00\u7528\uff0c\u6253\u5f00Insomnia\n\u4f7f\u7528POST\u65b9\u5f0f\u8bbf\u95eehttp://localhost:8080/doLogin?username=xuxx&amp;password=123\n\n\u867d\u7136\u62a5\u4e86404,\u5f53\u65f6\u5176\u5b9e\u5df2\u7ecf\u767b\u5f55\u6210\u529f\u4e86\uff0c404\u53ea\u662f\u56e0\u4e3aSecurity\u767b\u5f55\u6210\u529f\u540e\u5f80http://localhost:8080/\u8df3\u8f6c\uff0c\u4f46\u662f\u8fd9\u4e2a\u8def\u5f84\u4e0b\u6ca1\u6709\u4e1c\u897f\uff0c\u6240\u4ee5404\u4e86\uff0c\u4e0d\u4fe1\u7684\u8bdd\u518d\u8bbf\u95ee\u4e00\u4e0b\u914d\u7f6e\u7684\u63a5\u53e3\uff0c\u6210\u529f\u4e86\u3002\n\n2.\u767b\u5f55\u7684\u8be6\u7ec6\u914d\u7f6e\n\u5c5e\u4e8eHttpSecurity\u4e2d\u7684\u914d\u7f6e\npackage com.xuxx.security.config;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.security.authentication.*;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.crypto.password.NoOpPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.web.AuthenticationEntryPoint;\nimport org.springframework.security.web.authentication.AuthenticationFailureHandler;\nimport org.springframework.security.web.authentication.AuthenticationSuccessHandler;\nimport org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    /*\n    Spring 5\u4e4b\u540e\u5bc6\u7801\u5fc5\u987b\u8981\u52a0\u5bc6\uff0c\u6240\u4ee5\u5fc5\u987b\u914d\u7f6ePasswordEncoder\n    */\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        //\u5bc6\u7801\u7f16\u7801\u5668\uff0c\u5bc6\u7801\u4e0d\u52a0\u5bc6\uff0cNoOpPasswordEncoder\u4ee5\u8fc7\u671f.\n        return NoOpPasswordEncoder.getInstance();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        //\u57fa\u4e8e\u5185\u5b58\u7684\u8ba4\u8bc1\n        auth.inMemoryAuthentication()\n                .withUser(&quot;xuxx&quot;).password(&quot;123&quot;).roles(&quot;admin&quot;)\n                .and()\n                .withUser(&quot;test&quot;).password(&quot;123&quot;).roles(&quot;user&quot;);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()//\u5f00\u542f\u6388\u6743\u8bf7\u6c42\u914d\u7f6e\n                .antMatchers(&quot;/admin/**&quot;)//\u8981\u62e6\u622a\u7684\u8bf7\u6c42\u8def\u5f84\n                .hasRole(&quot;admin&quot;)//\u6240\u9700\u8981\u7684\u89d2\u8272(\u4e00\u4e2a)\n                .antMatchers(&quot;/user/**&quot;)\n                .hasAnyRole(&quot;admin&quot;, &quot;user&quot;)//\u6240\u9700\u8981\u7684\u89d2\u8272(\u5176\u4e2d\u4e00\u4e2a)\n//                .antMatchers(&quot;/user/**&quot;).access(&quot;hasAnyRole(&#39;admin&#39;,&#39;user&#39;)&quot;)//\u548c\u4e0a\u9762\u4e24\u884c\u6548\u679c\u4e00\u6837\n                .anyRequest()//\u5269\u4e0b\u7684\u5176\u4ed6\u8bf7\u6c42\n                .authenticated()//\u8ba4\u8bc1\u540e\u8bbf\u95ee\n                .and()\n                .formLogin()//\u8868\u5355\u767b\u5f55\n                .loginProcessingUrl(&quot;/doLogin&quot;)//\u8fdb\u884c\u767b\u5f55\u5904\u7406\u7684Url\n//                .loginPage(&quot;/login&quot;)//\u767b\u5f55\u9875\u9762\u7684Url\uff0c\u53ef\u4ee5\u914d\u7f6e\u81ea\u5df1\u7684\u767b\u5f55\u9875\u9762\n//                .usernameParameter(&quot;uname&quot;)//\u7528\u6237\u540d\u7684key\uff0c\u9ed8\u8ba4username\n//                .passwordParameter(&quot;pass&quot;)//\u5bc6\u7801\u7684key\uff0c\u9ed8\u8ba4password\n//                .successForwardUrl(&quot;/index&quot;)//\u767b\u5f55\u6210\u529f\u81ea\u52a8\u8df3\u8f6c\uff0c\u4e00\u822c\u7528\u4e8e\u524d\u540e\u7aef\u4e0d\u5206\n                //\u767b\u5f55\u6210\u529f\u7684\u5904\u7406\uff0c\u4e00\u822c\u7528\u4e8e\u524d\u540e\u7aef\u5206\u79bb\n                .successHandler(new AuthenticationSuccessHandler() {\n                    //authentication\u4e2d\u4fdd\u5b58\u4e86\u767b\u5f55\u6210\u529f\u7684\u7528\u6237\u4fe1\u606f\n                    @Override\n                    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,\n                                                        Authentication authentication) throws IOException, ServletException {\n                        response.setContentType(&quot;application/json;charset=utf-8&quot;);\n                        PrintWriter out = response.getWriter();\n                        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                        map.put(&quot;status&quot;, 200);\n                        map.put(&quot;msg&quot;, authentication.getPrincipal());\n                        out.write(new ObjectMapper().writeValueAsString(map));\n                        out.flush();\n                        out.close();\n                    }\n                })\n//                .failureForwardUrl(&quot;/login_error&quot;)//\u767b\u5f55\u5931\u8d25\u81ea\u52a8\u8df3\u8f6c\n                //\u767b\u5f55\u5931\u8d25\u7684\u5904\u7406\n                .failureHandler(new AuthenticationFailureHandler() {\n                    @Override\n                    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException {\n                        response.setContentType(&quot;application/json;charset=utf-8&quot;);\n                        PrintWriter out = response.getWriter();\n                        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                        map.put(&quot;status&quot;, 401);\n                        //\u6839\u636e\u5f02\u5e38\u7c7b\u578b\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u76f8\u5173\u5f02\u5e38\u53ef\u4ee5\u67e5\u770bAuthenticationException\u7684\u5b50\u7c7b\n                        if (exception instanceof LockedException) {\n                            map.put(&quot;msg&quot;, &quot;\u8d26\u6237\u88ab\u9501\u5b9a\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                            //Security\u5c4f\u853d\u4e86UsernameNotFoundException\uff0c\u629b\u51faUsernameNotFoundException\u4e5f\u4f1a\u53d8\u6210BadCredentialsException\uff0c\u9632\u6b62\u649e\u5e93\n                        } else if (exception instanceof BadCredentialsException) {\n                            map.put(&quot;msg&quot;, &quot;\u7528\u6237\u540d\u6216\u5bc6\u7801\u8f93\u5165\u9519\u8bef\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else if (exception instanceof DisabledException) {\n                            map.put(&quot;msg&quot;, &quot;\u8d26\u6237\u88ab\u7981\u7528\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else if (exception instanceof AccountExpiredException) {\n                            map.put(&quot;msg&quot;, &quot;\u8d26\u6237\u4ee5\u8fc7\u671f\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else if (exception instanceof CredentialsExpiredException) {\n                            map.put(&quot;msg&quot;, &quot;\u5bc6\u7801\u4ee5\u8fc7\u671f\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else {\n                            map.put(&quot;msg&quot;, &quot;\u56e0\u672a\u77e5\u539f\u56e0\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        }\n                        out.write(new ObjectMapper().writeValueAsString(map));\n                        out.flush();\n                        out.close();\n                    }\n                })\n                .permitAll()//\u5141\u8bb8\u767b\u5f55\u76f8\u5173\u7684\u6240\u6709\u8bf7\u6c42\n                .and()\n                .logout()//\u6ce8\u9500\u767b\u5f55\n                .logoutUrl(&quot;/logout&quot;)\n                //.logoutSuccessUrl(&quot;/login&quot;)//\u6ce8\u9500\u6210\u529f\u540e\u81ea\u52a8\u8df3\u8f6c\n                .logoutSuccessHandler(new LogoutSuccessHandler() {//\u6ce8\u9500\u6210\u529f\u7684\u56de\u8c03\n                    @Override\n                    public void onLogoutSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n                        response.setContentType(&quot;application/json;charset=utf-8&quot;);\n                        PrintWriter out = response.getWriter();\n                        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                        map.put(&quot;status&quot;, 200);\n                        map.put(&quot;msg&quot;, &quot;\u6ce8\u9500\u6210\u529f&quot;);\n                        out.write(new ObjectMapper().writeValueAsString(map));\n                        out.flush();\n                        out.close();\n                    }\n                })\n                .and()\n                .csrf()\n                .disable()//\u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u5148\u5173\u95edcsrf(\u8de8\u57df)\u4fdd\u62a4\n                //\u672a\u8ba4\u8bc1\u5904\u7406\u65b9\u6848\uff0c\u8fd9\u91cc\u662f\u7ed9\u524d\u7aef\u4e00\u4e2a\u5c1a\u672a\u767b\u5f55\u7684\u63d0\u793a\uff0c\u524d\u7aef\u6839\u636e\u63d0\u793a\u4fe1\u606f\uff0c\u518d\u51b3\u5b9a\u9875\u9762\u8df3\u8f6c\u3002\n                .exceptionHandling()\n                .authenticationEntryPoint(new AuthenticationEntryPoint() {\n                    @Override\n                    public void commence(HttpServletRequest request, HttpServletResponse response, AuthenticationException authException) throws IOException, ServletException {\n                        response.setContentType(&quot;application/json;charset=utf-8&quot;);\n                        PrintWriter out = response.getWriter();\n                        out.write(&quot;\u5c1a\u672a\u767b\u5f55\uff0c\u8bf7\u5148\u767b\u5f55&quot;);\n                        out.flush();\n                        out.close();\n                    }\n                });\n    }\n}\n\n\u6d4b\u8bd5\uff1a\n\n\n\n3.\u6ce8\u9500\u767b\u5f55\u914d\u7f6e\n\u4e0e\u767b\u5f55\u8868\u5355\u914d\u7f6e\u4e00\u6837\uff0c\u8fd8\u662f\u5c5e\u4e8eHttpSecurity\u4e2d\u7684\u914d\u7f6e\npackage com.xuxx.security.config;\n\nimport com.fasterxml.jackson.databind.ObjectMapper;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.authentication.*;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.AuthenticationException;\nimport org.springframework.security.crypto.password.NoOpPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.web.authentication.AuthenticationFailureHandler;\nimport org.springframework.security.web.authentication.AuthenticationSuccessHandler;\nimport org.springframework.security.web.authentication.logout.LogoutSuccessHandler;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport java.io.IOException;\nimport java.io.PrintWriter;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    /*\n    Spring5\u4e4b\u540e\u5bc6\u7801\u5fc5\u987b\u8981\u52a0\u5bc6\uff0c\u6240\u4ee5\u5fc5\u987b\u914d\u7f6ePasswordEncoder\n    */\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        //\u5bc6\u7801\u7f16\u7801\u5668\uff0c\u5bc6\u7801\u4e0d\u52a0\u5bc6\uff0cNoOpPasswordEncoder\u4ee5\u8fc7\u671f.\n        return NoOpPasswordEncoder.getInstance();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        //\u57fa\u4e8e\u5185\u5b58\u7684\u8ba4\u8bc1\n        auth.inMemoryAuthentication()\n                .withUser(&quot;xuxx&quot;).password(&quot;123&quot;).roles(&quot;admin&quot;)\n                .and()\n                .withUser(&quot;test&quot;).password(&quot;123&quot;).roles(&quot;user&quot;);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()//\u5f00\u542f\u6388\u6743\u8bf7\u6c42\u914d\u7f6e\n                .antMatchers(&quot;/admin/**&quot;)//\u8981\u62e6\u622a\u7684\u8bf7\u6c42\u8def\u5f84\n                .hasRole(&quot;admin&quot;)//\u6240\u9700\u8981\u7684\u89d2\u8272(\u4e00\u4e2a)\n                .antMatchers(&quot;/user/**&quot;)\n                .hasAnyRole(&quot;admin&quot;, &quot;user&quot;)//\u6240\u9700\u8981\u7684\u89d2\u8272(\u5176\u4e2d\u4e00\u4e2a)\n//                .antMatchers().access(&quot;hasAnyRole(&#39;admin&#39;,&#39;user&#39;)&quot;)//\u548c\u4e0a\u9762\u6548\u679c\u4e00\u6837\n                .anyRequest()//\u5269\u4e0b\u7684\u5176\u4ed6\u8bf7\u6c42\n                .authenticated()//\u8ba4\u8bc1\u540e\u8bbf\u95ee\n                .and()\n                .formLogin()//\u8868\u5355\u767b\u5f55\n                .loginProcessingUrl(&quot;/doLogin&quot;)//\u8fdb\u884c\u767b\u5f55\u5904\u7406\u7684Url\n//                .loginPage(&quot;/login&quot;)//\u767b\u5f55\u9875\u9762\u7684Url\uff0c\u53ef\u4ee5\u914d\u7f6e\u81ea\u5df1\u7684\u767b\u5f55\u9875\u9762\n//                .usernameParameter(&quot;uname&quot;)//\u7528\u6237\u540d\u7684key\uff0c\u9ed8\u8ba4username\n//                .passwordParameter(&quot;pass&quot;)//\u5bc6\u7801\u7684key\uff0c\u9ed8\u8ba4password\n//                .successForwardUrl(&quot;/index&quot;)//\u767b\u5f55\u6210\u529f\u81ea\u52a8\u8df3\u8f6c\uff0c\u4e00\u822c\u7528\u4e8e\u524d\u540e\u7aef\u4e0d\u5206\n                .successHandler(new AuthenticationSuccessHandler() {//\u767b\u5f55\u6210\u529f\u7684\u5904\u7406\uff0c\u4e00\u822c\u7528\u4e8e\u524d\u540e\u7aef\u5206\u79bb\n                    //authentication\u4e2d\u4fdd\u5b58\u4e86\u767b\u5f55\u6210\u529f\u7684\u7528\u6237\u4fe1\u606f\n                    @Override\n                    public void onAuthenticationSuccess(HttpServletRequest request, HttpServletResponse response,\n                                                        Authentication authentication) throws IOException, ServletException {\n                        response.setContentType(&quot;application/json;charset=utf-8&quot;);\n                        PrintWriter out = response.getWriter();\n                        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                        map.put(&quot;status&quot;, 200);\n                        map.put(&quot;msg&quot;, authentication.getPrincipal());\n                        out.write(new ObjectMapper().writeValueAsString(map));\n                        out.flush();\n                        out.close();\n                    }\n                })\n//                .failureForwardUrl(&quot;/login_error&quot;)//\u767b\u5f55\u5931\u8d25\u81ea\u52a8\u8df3\u8f6c\n                .failureHandler(new AuthenticationFailureHandler() {//\u767b\u5f55\u5931\u8d25\u7684\u5904\u7406\n                    @Override\n                    public void onAuthenticationFailure(HttpServletRequest request, HttpServletResponse response, AuthenticationException exception) throws IOException, ServletException {\n                        response.setContentType(&quot;application/json;charset=utf-8&quot;);\n                        PrintWriter out = response.getWriter();\n                        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                        map.put(&quot;status&quot;, 401);\n                        //\u6839\u636e\u5f02\u5e38\u7c7b\u578b\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0c\u76f8\u5173\u5f02\u5e38\u53ef\u4ee5\u67e5\u770bAuthenticationException\u7684\u5b50\u7c7b\n                        if (exception instanceof LockedException) {\n                            map.put(&quot;msg&quot;, &quot;\u8d26\u6237\u88ab\u9501\u5b9a\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        //Security\u5c4f\u853d\u4e86UsernameNotFoundException\uff0c\u629b\u51faUsernameNotFoundException\u4e5f\u4f1a\u53d8\u6210BadCredentialsException\uff0c\u9632\u6b62\u649e\u5e93\n                        } else if (exception instanceof BadCredentialsException) {\n                            map.put(&quot;msg&quot;, &quot;\u7528\u6237\u540d\u6216\u5bc6\u7801\u8f93\u5165\u9519\u8bef\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else if (exception instanceof DisabledException) {\n                            map.put(&quot;msg&quot;, &quot;\u8d26\u6237\u88ab\u7981\u7528\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else if (exception instanceof AccountExpiredException) {\n                            map.put(&quot;msg&quot;, &quot;\u8d26\u6237\u4ee5\u8fc7\u671f\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else if (exception instanceof CredentialsExpiredException) {\n                            map.put(&quot;msg&quot;, &quot;\u5bc6\u7801\u4ee5\u8fc7\u671f\uff0c\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        } else {\n                            map.put(&quot;msg&quot;, &quot;\u56e0\u672a\u77e5\u539f\u56e0\u767b\u5f55\u5931\u8d25\uff01&quot;);\n                        }\n                        out.write(new ObjectMapper().writeValueAsString(map));\n                        out.flush();\n                        out.close();\n                    }\n                })\n                .permitAll()//\u5141\u8bb8\u767b\u5f55\u76f8\u5173\u7684\u6240\u6709\u8bf7\u6c42\n                .and()\n                .logout()//\u6ce8\u9500\u767b\u5f55\n                .logoutUrl(&quot;/logout&quot;)\n                //.logoutSuccessUrl(&quot;/login&quot;)//\u6ce8\u9500\u6210\u529f\u540e\u81ea\u52a8\u8df3\u8f6c\n                .logoutSuccessHandler(new LogoutSuccessHandler() {//\u6ce8\u9500\u6210\u529f\u7684\u56de\u8c03\n                    @Override\n                    public void onLogoutSuccess(HttpServletRequest request, HttpServletResponse response, Authentication authentication) throws IOException, ServletException {\n                        response.setContentType(&quot;application/json;charset=utf-8&quot;);\n                        PrintWriter out = response.getWriter();\n                        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n                        map.put(&quot;status&quot;, 200);\n                        map.put(&quot;msg&quot;, &quot;\u6ce8\u9500\u6210\u529f&quot;);\n                        out.write(new ObjectMapper().writeValueAsString(map));\n                        out.flush();\n                        out.close();\n                    }\n                })\n                .and()\n                .csrf()\n                .disable();//\u4e3a\u4e86\u65b9\u4fbf\u6d4b\u8bd5\uff0c\u5148\u5173\u95edcsrf(\u8de8\u57df)\u4fdd\u62a4\n    }\n}\n\n\u6d4b\u8bd5\uff1a\u5148\u767b\u5f55\uff0c\u518d\u8bbf\u95eehttp://localhost:8080/logout(GET\uff0cPOST\u90fd\u884c)\n\n4.\u591a\u4e2aHttpSecurity\n\u8981\u5148\u53bb\u9664\u4e0a\u9762\u914d\u7f6e\u7684\u5355\u4e2a\u7684HttpSecurity\n\npackage com.xuxx.security.config;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.core.annotation.Order;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.password.NoOpPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\n/**\n * \u591a\u4e2aHttp Security\u7684\u914d\u7f6e\n */\n@Configuration\npublic class MultiHttpSecurity {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return NoOpPasswordEncoder.getInstance();\n    }\n\n    //\u591a\u4e2aHttp Security\u53ef\u4ee5\u5171\u4eab\n    @Autowired\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(\"xuxx\").password(\"123\").roles(\"admin\")\n                .and()\n                .withUser(\"test\").password(\"123\").roles(\"user\");\n    }\n\n    @Configuration\n    @Order(1)//\u5b58\u5728\u591a\u4e2a\u76f8\u540c\u7684bean\u65f6\u5c31\u5b58\u5728\u4f18\u5148\u7ea7\u7684\u95ee\u9898\n    public static class AdminSecurity extends WebSecurityConfigurerAdapter {\n        @Override\n        protected void configure(HttpSecurity http) throws Exception {\n            //\u53ea\u4f1a\u62e6\u622a\u7b26\u5408/admin/**\u7684\u6240\u6709\u8bf7\u6c42\n            http.antMatcher(\"/admin/**\").authorizeRequests().anyRequest().hasRole(\"admin\");\n        }\n    }\n\n    @Configuration\n    //@Order//\u4e0d\u914d\u7f6eorder\u65f6\u662f\u4f18\u5148\u7ea7\u6700\u4f4e\u7684,2\u768431\u6b21\u65b9-1\n    public static class OtherSecurity extends WebSecurityConfigurerAdapter {\n        @Override\n        protected void configure(HttpSecurity http) throws Exception {\n            http.authorizeRequests().anyRequest().authenticated()\n                    .and()\n                    .formLogin()\n                    .loginProcessingUrl(\"/doLogin\")\n                    .permitAll()\n                    .and()\n                    .csrf()\n                    .disable();\n        }\n    }\n}\n\u6d4b\u8bd5\n\n\n\u56e0\u4e3a\u4f7f\u7528xuxx\u767b\u5f55\u4e86\uff0c\u8bbf\u95ee\u5176\u4ed6\u63a5\u53e3\u4e5f\u662f\u53ef\u4ee5\u7684\u3002\n\u518d\u4f7f\u7528test\u767b\u5f55\u8bd5\u8bd5\n\n\n5.\u5bc6\u7801\u52a0\u5bc6\n\u4e0a\u9762\u7684\u4f8b\u5b50\u90fd\u662f\u4f7f\u7528\u7684\u660e\u6587\u5bc6\u7801\uff0c\u8fd9\u662f\u975e\u5e38\u4e0d\u5b89\u5168\u7684\uff0c\u6240\u4ee5\u8fd8\u662f\u52a0\u5bc6\u4e0b\u5427\u3002\n\u7531Spring Security\u63d0\u4f9b\u7684BCryptPasswordEncoder\u91c7\u7528SHA-256+\u968f\u673a\u76d0+\u5bc6\u94a5\u5bf9\u660e\u6587\u5bc6\u7801\u8fdb\u884c\u52a0\u5bc6\u3002SHA\u7cfb\u5217\u662f\u54c8\u5e0c\u7b97\u6cd5\uff0c\u4e0d\u662f\u52a0\u5bc6\u7b97\u6cd5\uff0c\u4f7f\u7528\u52a0\u5bc6\u7b97\u6cd5\u610f\u5473\u7740\u53ef\u4ee5\u89e3\u5bc6\uff08\u8fd9\u4e2a\u4e0e\u7f16\u7801/\u89e3\u7801\u4e00\u6837\uff09\uff0c\u4f46\u662f\u91c7\u7528\u54c8\u5e0c\u5904\u7406\uff0c\u5176\u8fc7\u7a0b\u662f\u4e0d\u53ef\u9006\u7684\u3002\n\n\u52a0\u5bc6(encode)\uff1a\u6ce8\u518c\u7528\u6237\u65f6\uff0c\u4f7f\u7528SHA-256+\u968f\u673a\u76d0+\u5bc6\u94a5\u628a\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801\u8fdb\u884c\u54c8\u5e0c\u5904\u7406\uff0c\u5f97\u5230\u5bc6\u7801\u7684\u54c8\u5e0c\u503c\uff0c\u7136\u540e\u5c06\u5176\u5b58\u5165\u6570\u636e\u5e93\u4e2d\u3002\n\n\u5bc6\u7801\u5339\u914d(matches)\uff1a\u7528\u6237\u767b\u5f55\u65f6\uff0c\u5bc6\u7801\u5339\u914d\u9636\u6bb5\u5e76\u6ca1\u6709\u8fdb\u884c\u5bc6\u7801\u89e3\u5bc6\uff08\u56e0\u4e3a\u5bc6\u7801\u7ecf\u8fc7Hash\u5904\u7406\uff0c\u662f\u4e0d\u53ef\u9006\u7684\uff09\uff0c\u800c\u662f\u4f7f\u7528\u76f8\u540c\u7684\u7b97\u6cd5\u628a\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801\u8fdb\u884c\u54c8\u5e0c\u5904\u7406\uff0c\u5f97\u5230\u5bc6\u7801\u7684hash\u503c\uff0c\u7136\u540e\u5c06\u5176\u4e0e\u4ece\u6570\u636e\u5e93\u4e2d\u67e5\u8be2\u5230\u7684\u5bc6\u7801\u54c8\u5e0c\u503c\u8fdb\u884c\u6bd4\u8f83\u3002\u5982\u679c\u4e24\u8005\u76f8\u540c\uff0c\u8bf4\u660e\u7528\u6237\u8f93\u5165\u7684\u5bc6\u7801\u6b63\u786e\u3002\n\n\n\u8fd9\u6b63\u662f\u4e3a\u4ec0\u4e48\u5904\u7406\u5bc6\u7801\u65f6\u8981\u7528\u54c8\u5e0c\u7b97\u6cd5\uff0c\u800c\u4e0d\u7528\u52a0\u5bc6\u7b97\u6cd5\u3002\u56e0\u4e3a\u8fd9\u6837\u5904\u7406\u540e\uff0c\u5373\u4f7f\u6570\u636e\u5e93\u6cc4\u6f0f\uff0c\u9ed1\u5ba2\u4e5f\u5f88\u96be\u7834\u89e3\u5bc6\u7801\uff08\u53ea\u80fd\u7528\u5f69\u8679\u8868\uff09\u3002\n\u5148\u770b\u770b\u6548\u679c\n@SpringBootTest\nclass SecurityApplicationTests {\n\n    @Test\n    void contextLoads() {\n        for (int i = 0; i &lt; 10; i++) {\n            //\u6784\u9020\u65b9\u6cd5\u53ef\u4ee5\u4f20\u5165\u5f3a\u5ea6(\u5bc6\u94a5\u8fed\u4ee3\u6b21\u6570)\u9ed8\u8ba4\u4e3a10\u6b21\n            BCryptPasswordEncoder passwordEncoder = new BCryptPasswordEncoder();\n            System.out.println(passwordEncoder.encode(&quot;123&quot;));\n        }\n    }\n}\n\n\u867d\u7136\u53ea\u662f\u52a0\u5bc6123,\u4f46\u662f\u6bcf\u6b21\u7684\u7ed3\u679c\u90fd\u4e0d\u540c\u3002\n\n$2a$10$cGdG1DACEh2t4AekoCiZ1OyJWHbT4N3kFtSGDg85XNjn6SFb2cDYG\n$2a$10$nFCK0tHN3lDXCi8ptZd64usYbxU8gKTRiOSTZ8o1uvfEqWB5C9fwu\n$2a$10$1uP74goNp/gwHZehn3Lqfeyz51BnLGCG5xg63zRnIDTZoMa7lJeje\n$2a$10$N4CdezU05HFf05cK.eTh3uSuzS6NV1gODD9h3nNdmK71Fp81mYMwy\n$2a$10$/tdqqGfDrHh3Jx6IbGOLeu7hJ86IVYljImUDfrzQP5EsVbx70Sy/q\n$2a$10$bK6ItziD2vcMdvgiUZ5PkudaMxkswnz7RhEKnCsmhl/bGFWGnA0XG\n$2a$10$MIBXmxMyQFtrQ4awOtELXOBAvE8d1B54gCsv0kG6mPM9EooY35MPq\n$2a$10$0zCKSIqQVMhJM8OGs/35tOne2EZK/oj.v6LXjkH1FlYPNRdipjdhu\n$2a$10$9x/3T.nAUM1YOWhhR1xORuZEbRad5mc3.Rh6MBE2pPkNGUIUG9mYa\n$2a$10$xprjfwyAndoCSO3uFjS5ce7lLslmnKo7fNo/jOuEifN4PEZjy8ZTu\n\u7b80\u5355\u4f7f\u7528\u4e00\u4e0b\uff0c\u6539\u9020\u4e0a\u9762\u7684MultiHttpSecurity\uff0c\u5c06\u660e\u6587\u5bc6\u7801\u6362\u6210\u4f7f\u7528BCryptPasswordEncoder\u751f\u6210\u7684\u52a0\u5bc6\u540e\u7684\u5bc6\u7801\uff0c\u5f53\u7136\uff0c\u8981\u6ce8\u5165\u7684PasswordEncoder\u4e5f\u8981\u6362\u6210BCryptPasswordEncoder\u3002\n\n/**\n * \u591a\u4e2aHttp Security\u7684\u914d\u7f6e\n */\n@Configuration\n@EnableGlobalMethodSecurity(prePostEnabled = true, securedEnabled = true)\npublic class MultiHttpSecurity {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n//        return NoOpPasswordEncoder.getInstance();\n        return new BCryptPasswordEncoder();\n    }\n\n    //\u591a\u4e2aHttp Security\u53ef\u4ee5\u5171\u4eab\n    @Autowired\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n//                .withUser(\"xuxx\").password(\"123\").roles(\"admin\")              .withUser(\"xuxx\").password(\"$2a$10$gqUyIaadTdNQYVq7M1iRFO4Wl/sdvCPBvrBUwlX7u8qjbRFU7EoRK\").roles(\"admin\")\n                .and()\n//                .withUser(\"test\").password(\"123\").roles(\"user\");             .withUser(\"test\").password(\"$2a$10$tKe91qK4VcLRfS0rQ2THaeF/beXZKq283HaYJdogaOIVbiB7HaQ0u\").roles(\"user\");\n    }\n\n    @Configuration\n    @Order(1)//\u5b58\u5728\u591a\u4e2a\u76f8\u540c\u7684bean\u65f6\u5c31\u5b58\u5728\u4f18\u5148\u7ea7\u7684\u95ee\u9898\n    public static class AdminSecurity extends WebSecurityConfigurerAdapter {\n        @Override\n        protected void configure(HttpSecurity http) throws Exception {\n            //\u53ea\u4f1a\u62e6\u622a\u7b26\u5408/admin/**\u7684\u6240\u6709\u8bf7\u6c42\n            http.antMatcher(\"/admin/**\").authorizeRequests().anyRequest().hasRole(\"admin\");\n        }\n    }\n\n    @Configuration\n    //@Order//\u4e0d\u914d\u7f6eorder\u65f6\u662f\u4f18\u5148\u7ea7\u6700\u4f4e\u7684,2\u768431\u6b21\u65b9-1\n    public static class OtherSecurity extends WebSecurityConfigurerAdapter {\n        @Override\n        protected void configure(HttpSecurity http) throws Exception {\n            http.authorizeRequests().anyRequest().authenticated()\n                    .and()\n                    .formLogin()\n                    .loginProcessingUrl(\"/doLogin\")\n                    .permitAll()\n                    .and()\n                    .csrf()\n                    .disable();\n        }\n    }\n}\n\u6d4b\u8bd5\uff1a\u6b64\u65f6\u5bc6\u7801\u8fd8\u662f\u4f7f\u7528123\u4f9d\u65e7\u53ef\u4ee5\u767b\u5f55\uff0c\u4f46\u662f\u5982\u679c\u6b64\u65f6\u8981\u5b58\u50a8\u7684\u5bc6\u7801\u7684\u8bdd\uff0c\u90a3\u4e48\u8981\u5b58\u50a8\u7684\u5bc6\u7801\u5df2\u7ecf\u52a0\u5bc6\u4e86\u3002\n\n6.\u65b9\u6cd5\u5b89\u5168\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b, Spring Security \u5e76\u4e0d\u542f\u7528\u65b9\u6cd5\u7ea7\u7684\u5b89\u5168\u7ba1\u63a7. \u542f\u7528\u65b9\u6cd5\u7ea7\u7684\u7ba1\u63a7\u540e, \u53ef\u4ee5\u9488\u5bf9\u4e0d\u540c\u7684\u65b9\u6cd5\u901a\u8fc7\u6ce8\u89e3\u8bbe\u7f6e\u4e0d\u540c\u7684\u8bbf\u95ee\u6761\u4ef6.\n\u542f\u7528\u65b9\u6cd5\u7ea7\u7684\u7ba1\u63a7\u4ee3\u7801\u662f, \u5728\u4e00\u4e2aSecurity\u914d\u7f6e\u7c7b, \u52a0\u4e0a@EnableGlobalMethodSecurity() \u6ce8\u89e3, \u901a\u8fc7@EnableGlobalMethodSecurity\u7684\u53c2\u6570\u5f00\u542f\u76f8\u5e94\u7684\u65b9\u6cd5\u7ea7\u7684\u7ba1\u63a7.\n/**\n * \u591a\u4e2aHttp Security\u7684\u914d\u7f6e\n */\n@Configuration\n@EnableGlobalMethodSecurity(jsr250Enabled = true, securedEnabled = true, prePostEnabled = true)\npublic class MultiHttpSecurity {}\n\nSpring Security \u652f\u6301\u4e09\u79cd\u65b9\u6cd5\u7ea7\u6ce8\u89e3, \u5206\u522b\u662f JSR-250 \u6ce8\u89e3/@Secured \u6ce8\u89e3/prePostEnabled\u6ce8\u89e3. \u8fd9\u4e9b\u6ce8\u89e3\u4e0d\u4ec5\u53ef\u4ee5\u76f4\u63a5\u52a0 controller \u65b9\u6cd5\u4e0a, \u4e5f\u53ef\u4ee5\u6ce8\u89e3 Service \u6216 DAO \u7c7b\u4e2d\u7684\u65b9\u6cd5.\nJSR-250 \u6ce8\u89e3\n\u901a\u8fc7 @EnableGlobalMethodSecurity(jsr250Enabled = true), \u5f00\u542f JSR-250 \u6ce8\u89e3.\n\n@DenyAll \u6ce8\u89e3\uff1a\u62d2\u7edd\u6240\u6709\u7684\u8bbf\u95ee\n@PermitAll \u6ce8\u89e3\uff1a\u8fd0\u884c\u6240\u6709\u8bbf\u95ee\n@RolesAllowed({\"USER\",\"ADMIN\"})\uff1a\u8be5\u65b9\u6cd5\u53ea\u5141\u8bb8\u6709 ROLE_USER \u6216 ROLE_ADMIN \u89d2\u8272\u7684\u7528\u6237\u8bbf\u95ee.\n\n@Secured \u6ce8\u89e3\n\u901a\u8fc7 @EnableGlobalMethodSecurity(securedEnabled = true), \u5f00\u542f @Secured \u6ce8\u89e3.\n\u53ea\u6709\u6ee1\u8db3\u89d2\u8272\u7684\u7528\u6237\u624d\u80fd\u8bbf\u95ee\u88ab\u6ce8\u89e3\u7684\u65b9\u6cd5, \u5426\u5219\u5c06\u4f1a\u629b\u51fa AccessDenied (\u7981\u6b62\u8bbf\u95ee)\u5f02\u5e38.\n\u4f8b:\n@Secured(&quot;ROLE_TELLER&quot;,&quot;ROLE_ADMIN&quot;)//\u8be5\u65b9\u6cd5\u53ea\u5141\u8bb8 ROLE_TELLER \u6216 ROLE_ADMIN \u89d2\u8272\u7684\u7528\u6237\u8bbf\u95ee.\n@Secured(&quot;IS_AUTHENTICATED_ANONYMOUSLY&quot;)//\u8be5\u65b9\u6cd5\u5141\u8bb8\u533f\u540d\u7528\u6237\u8bbf\u95ee.\n\n@PreAuthorize \u7c7b\u578b\u7684\u6ce8\u89e3(\u652f\u6301 Spring \u8868\u8fbe\u5f0f)\n@EnableGlobalMethodSecurity(prePostEnabled = true), \u5f00\u542f prePostEnabled \u76f8\u5173\u7684\u6ce8\u89e3.\nJSR-250 \u548c @Secured \u6ce8\u89e3\u529f\u80fd\u8f83\u5f31, \u4e0d\u652f\u6301 Spring EL \u8868\u8fbe\u5f0f. \n\u63a8\u8350\u4f7f\u7528 @PreAuthorize \u7c7b\u578b\u7684\u6ce8\u89e3.\n \u5177\u4f53\u67094\u4e2a\u6ce8\u89e3.\n\n@PreAuthorize \u6ce8\u89e3\uff1a\u5728\u65b9\u6cd5\u8c03\u7528\u4e4b\u524d, \u57fa\u4e8e\u8868\u8fbe\u5f0f\u7ed3\u679c\u6765\u9650\u5236\u65b9\u6cd5\u7684\u4f7f\u7528.\n@PostAuthorize \u6ce8\u89e3\uff1a \u5141\u8bb8\u65b9\u6cd5\u8c03\u7528, \u4f46\u662f\u5982\u679c\u8868\u8fbe\u5f0f\u7ed3\u679c\u4e3a false, \u5c06\u629b\u51fa\u4e00\u4e2a\u5b89\u5168\u6027\u5f02\u5e38.\n@PostFilter \u6ce8\u89e3\uff1a\u5141\u8bb8\u65b9\u6cd5\u8c03\u7528, \u4f46\u5fc5\u8981\u6309\u7167\u8868\u8fbe\u5f0f\u6765\u8fc7\u6ee4\u65b9\u6cd5\u7684\u7ed3\u679c.\n@PreFilter \u6ce8\u89e3,\uff1a\u5141\u8bb8\u65b9\u6cd5\u8c03\u7528, \u4f46\u5fc5\u987b\u5728\u8fdb\u5165\u65b9\u6cd5\u4e4b\u524d\u8fc7\u6765\u8f93\u5165\u503c.\n\n\u4f8b:\n@PreAuthorize(&quot;hasRole(&#39;ADMIN&#39;)&quot;) //\u5fc5\u987b\u5177\u6709ROLE_ADMIN \u89d2\u8272\npublic void addBook(Book book);\n\n//\u5fc5\u987b\u540c\u65f6\u5177\u5907 ROLE_ADMIN \u548c ROLE_DBA \u89d2\u8272\n@PreAuthorize(&quot;hasRole(&#39;ADMIN&#39;) AND hasRole(&#39;DBA&#39;)&quot;)\npublic void addBook(Book book);\n\n@PreAuthorize (&quot;#book.owner == authentication.name&quot;)\npublic void deleteBook(Book book);\n\n@PostAuthorize (&quot;returnObject.owner == authentication.name&quot;)\npublic Book getBook();\n\n@PreAuthorize \u8868\u8fbe\u5f0f\n\nreturnObject \u4fdd\u7559\u540d\n\u5bf9\u4e8e @PostAuthorize \u548c @PostFilter \u6ce8\u89e3, \u53ef\u4ee5\u5728\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528 returnObject \u4fdd\u7559\u540d, returnObject \u4ee3\u8868\u7740\u88ab\u6ce8\u89e3\u65b9\u6cd5\u7684\u8fd4\u56de\u503c, \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 returnObject \u4fdd\u7559\u540d\u5bf9\u6ce8\u89e3\u65b9\u6cd5\u7684\u7ed3\u679c\u8fdb\u884c\u9a8c\u8bc1.\n@PostAuthorize (&quot;returnObject.owner == authentication.name&quot;)\npublic Book getBook();\n\n\n\u8868\u8fbe\u5f0f\u4e2d\u7684 # \u53f7\n\u5728\u8868\u8fbe\u5f0f\u4e2d, \u53ef\u4ee5\u4f7f\u7528 #argument123 \u7684\u5f62\u5f0f\u6765\u4ee3\u8868\u6ce8\u89e3\u65b9\u6cd5\u4e2d\u7684\u53c2\u6570 argument123.\n@PreAuthorize (&quot;#book.owner == authentication.name&quot;)\npublic void deleteBook(Book book);\n\n/*\u8fd8\u6709\u4e00\u79cd #argument123 \u7684\u5199\u6cd5, \u5373\u4f7f\u7528 Spring Security @P\u6ce8\u89e3\u6765\u4e3a\u65b9\u6cd5\u53c2\u6570\u8d77\u522b\u540d, \u7136\u540e\u5728 @PreAuthorize \u7b49\u6ce8\u89e3\u8868\u8fbe\u5f0f\u4e2d\u4f7f\u7528\u8be5\u522b\u540d. \u4e0d\u63a8\u8350\u8fd9\u79cd\u5199\u6cd5, \u4ee3\u7801\u53ef\u8bfb\u6027\u8f83\u5dee.*/\n\n@PreAuthorize(&quot;#c.name == authentication.name&quot;)\npublic void doSomething(@P(&quot;c&quot;) Contact contact);\n\n\n\u5185\u7f6e\u8868\u8fbe\u5f0f\u6709:\n| \u8868\u8fbe\u5f0f                                                       | \u5907\u6ce8                                                         |\n | ------------------------------------------------------------ | :----------------------------------------------------------- |\n | hasRole([role])                                              | \u5982\u679c\u6709\u5f53\u524d\u89d2\u8272, \u5219\u8fd4\u56de true(\u4f1a\u81ea\u52a8\u52a0\u4e0a ROLE \u524d\u7f00)           |\n | hasAnyRole([role1, role2])                                   | \u5982\u679c\u6709\u4efb\u4e00\u89d2\u8272\u5373\u53ef\u901a\u8fc7\u6821\u9a8c, \u8fd4\u56detrue,(\u4f1a\u81ea\u52a8\u52a0\u4e0a ROLE \u524d\u7f00) |\n | hasAuthority([authority])                                    | \u5982\u679c\u6709\u6307\u5b9a\u6743\u9650, \u5219\u8fd4\u56de true                                  |\n | hasAnyAuthority([authority1, authority2])                    | \u5982\u679c\u6709\u4efb\u4e00\u6307\u5b9a\u6743\u9650, \u5219\u8fd4\u56detrue                               |\n | principal                                                    | \u83b7\u53d6\u5f53\u524d\u7528\u6237\u7684 principal \u4e3b\u4f53\u5bf9\u8c61                            |\n | authentication                                               | \u83b7\u53d6\u5f53\u524d\u7528\u6237\u7684 authentication \u5bf9\u8c61,                          |\n | permitAll                                                    | \u603b\u662f\u8fd4\u56de true, \u8868\u793a\u5168\u90e8\u5141\u8bb8                                  |\n | denyAll                                                      | \u603b\u662f\u8fd4\u56de false, \u4ee3\u8868\u5168\u90e8\u62d2\u7edd                                 |\n | isAnonymous()                                                | \u5982\u679c\u662f\u533f\u540d\u8bbf\u95ee, \u8fd4\u56detrue                                     |\n | isRememberMe()                                               | \u5982\u679c\u662fremember-me \u81ea\u52a8\u8ba4\u8bc1, \u5219\u8fd4\u56de true                      |\n | isAuthenticated()                                            | \u5982\u679c\u4e0d\u662f\u533f\u540d\u8bbf\u95ee, \u5219\u8fd4\u56detrue                                 |\n | isFullAuthenticated()                                        | \u5982\u679c\u4e0d\u662f\u533f\u540d\u8bbf\u95ee\u6216remember-me\u8ba4\u8bc1\u767b\u9646, \u5219\u8fd4\u56detrue            |\n | hasPermission(Object target, Object permission)              |                                                              |\n | hasPermission(Object target, String targetType, Object permission) |                                                              |\n\n\n\u5b8c\u6574\u6f14\u793a\uff1a\n/**\n * \u591a\u4e2aHttp Security\u7684\u914d\u7f6e\n * \u6b64\u65f6@EnableGlobalMethodSecurity\u5f00\u542f\u4e862\u79cd\u65b9\u6cd5\u5b89\u5168\u7684\u6ce8\u89e3\uff0c@Secured\u6ce8\u89e3\u3001@PreAuthorize \u7c7b\u578b\u7684\u6ce8\u89e3\n */\n@Configuration\n@EnableGlobalMethodSecurity(securedEnabled = true, prePostEnabled = true)\npublic class MultiHttpSecurity {\n    ...//\u5185\u5bb9\u540c\u4e0a\n}\n\n@Service\npublic class MethodService {\n\n    @PreAuthorize(&quot;hasAnyRole(&#39;admin&#39;,&#39;user&#39;)&quot;)\n    public String hello() {\n        return &quot;Hello&quot;;\n    }\n\n    @PreAuthorize(&quot;hasRole(&#39;admin&#39;)&quot;)\n    public String admin() {\n        return &quot;Hello Admin&quot;;\n    }\n\n    @Secured(&quot;ROLE_user&quot;)\n    public String user() {\n        return &quot;Hello User&quot;;\n    }\n}\n\n@RestController\npublic class HelloController {\n    @Autowired\n    private MethodService methodService;\n\n    @GetMapping(&quot;hello_both&quot;)\n    public String hello_both() {\n        return methodService.hello();\n    }\n\n    @GetMapping(&quot;hello_user&quot;)\n    public String hello_users() {\n        return methodService.user();\n    }\n\n    @GetMapping(&quot;hello_admin&quot;)\n    public String hello_admin() {\n        return methodService.admin();\n    }\n}\n\n\u6d4b\u8bd5\uff1a\n\u4f7f\u7528test\u767b\u5f55\u65f6\uff0c\u53ef\u4ee5\u8c03\u7528hello_both\u3001hello_user\uff0c\u8c03\u7528hello_admin\u65f6403\u3002\n\n\u4f7f\u7528xuxx\u767b\u5f55\u65f6\uff0c\u4e09\u4e2a\u63a5\u53e3\u90fd\u53ef\u4ee5\u8bbf\u95ee\u3002\n7.\u89d2\u8272\u7ee7\u627f\n\u5728Security\u914d\u7f6e\u7c7b\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u4ee3\u7801\n/**\n * \u89d2\u8272\u7ee7\u627f\n * @return\n */\n@Bean\nRoleHierarchy roleHierarchy() {\n    RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();\n    String hierarchy = &quot;ROLE_dba &gt; ROLE_admin \\n ROLE_admin &gt; ROLE_user&quot;;\n    roleHierarchy.setHierarchy(hierarchy);\n    return roleHierarchy;\n}\n\nSpringSecurity \u5728\u89d2\u8272\u7ee7\u627f\u4e0a\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u5199\u6cd5\uff0c\u5728 Spring Boot2.0.8\uff08\u5bf9\u5e94 Spring Security5.0.11\uff09\u4e0a\u9762\u662f\u4e00\u79cd\u5199\u6cd5\uff0c\u4ece Spring Boot2.1.0\uff08\u5bf9\u5e94 Spring Security5.1.1\uff09\u53c8\u662f\u53e6\u5916\u4e00\u79cd\u5199\u6cd5\u3002\n1.\u4ee5\u524d\u7684\u5199\u6cd5\n\u8fd9\u91cc\u8bf4\u7684\u4ee5\u524d\u5199\u6cd5\uff0c\u5c31\u662f\u6307 SpringBoot2.0.8\uff08\u542b\uff09\u4e4b\u524d\u7684\u5199\u6cd5\uff0c\u5728\u4e4b\u524d\u7684\u5199\u6cd5\u4e2d\uff0c\u89d2\u8272\u7ee7\u627f\u53ea\u9700\u8981\u5f00\u53d1\u8005\u63d0\u4f9b\u4e00\u4e2a RoleHierarchy \u63a5\u53e3\u7684\u5b9e\u4f8b\u5373\u53ef\uff0c\u4f8b\u5982\u4e0b\u9762\u8fd9\u6837\uff1a\n@BeanRoleHierarchy roleHierarchy() {    \n    RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();    \n    String hierarchy = &quot;ROLE_dba &gt; ROLE_admin ROLE_admin &gt; ROLE_user&quot;;\n    roleHierarchy.setHierarchy(hierarchy);    \n    return roleHierarchy;\n}\n\n\u5728\u8fd9\u91cc\u63d0\u4f9b\u4e86\u4e00\u4e2a RoleHierarchy \u63a5\u53e3\u7684\u5b9e\u4f8b\uff0c\u4f7f\u7528\u5b57\u7b26\u4e32\u6765\u63cf\u8ff0\u4e86\u89d2\u8272\u4e4b\u95f4\u7684\u7ee7\u627f\u5173\u7cfb\uff0c ROLE_dba \u5177\u5907 ROLE_admin \u7684\u6240\u6709\u6743\u9650\uff0c\u800c ROLE_admin \u5219\u5177\u5907 ROLE_user \u7684\u6240\u6709\u6743\u9650\uff0c\u7ee7\u627f\u4e0e\u7ee7\u627f\u4e4b\u95f4\u7528\u4e00\u4e2a\u7a7a\u683c\u9694\u5f00\u3002\u63d0\u4f9b\u4e86\u8fd9\u4e2a Bean \u4e4b\u540e\uff0c\u4ee5\u540e\u6240\u6709\u5177\u5907 ROLE_user \u89d2\u8272\u624d\u80fd\u8bbf\u95ee\u7684\u8d44\u6e90\uff0c ROLE_dba \u548c ROLE_admin \u4e5f\u90fd\u80fd\u8bbf\u95ee\uff0c\u5177\u5907 ROLE_amdin \u89d2\u8272\u624d\u80fd\u8bbf\u95ee\u7684\u8d44\u6e90\uff0c ROLE_dba \u4e5f\u80fd\u8bbf\u95ee\u3002\n2.\u73b0\u5728\u7684\u5199\u6cd5\n\u4f46\u662f\u4e0a\u9762\u8fd9\u79cd\u5199\u6cd5\u4ec5\u9650\u4e8e Spring Boot2.0.8\uff08\u542b\uff09\u4e4b\u524d\u7684\u7248\u672c\uff0c\u5728\u4e4b\u540e\u7684\u7248\u672c\u4e2d\uff0c\u8fd9\u79cd\u5199\u6cd5\u5219\u4e0d\u88ab\u652f\u6301\uff0c\u65b0\u7248\u7684\u5199\u6cd5\u662f\u4e0b\u9762\u8fd9\u6837\uff1a\n\n@BeanRoleHierarchy roleHierarchy() {    \n    RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();    \n    String hierarchy = \"ROLE_dba &gt; ROLE_admin \\n ROLE_admin &gt; ROLE_user\";\n    roleHierarchy.setHierarchy(hierarchy);    \n    return roleHierarchy;\n}\n\u53d8\u5316\u4e3b\u8981\u5c31\u662f\u5206\u9694\u7b26\uff0c\u5c06\u539f\u6765\u7528\u7a7a\u683c\u9694\u5f00\u7684\u5730\u65b9\uff0c\u73b0\u5728\u7528\u6362\u884c\u7b26\u4e86\u3002\u8fd9\u91cc\u8868\u8fbe\u5f0f\u7684\u542b\u4e49\u4f9d\u7136\u548c\u4e0a\u9762\u4e00\u6837\uff0c\u4e0d\u518d\u8d58\u8ff0\u3002\n\u4e0a\u9762\u4e24\u79cd\u4e0d\u540c\u5199\u6cd5\u90fd\u662f\u914d\u7f6e\u89d2\u8272\u7684\u7ee7\u627f\u5173\u7cfb\uff0c\u914d\u7f6e\u5b8c\u6210\u540e\uff0c\u63a5\u4e0b\u6765\u6307\u5b9a\u89d2\u8272\u548c\u8d44\u6e90\u7684\u5bf9\u5e94\u5173\u7cfb\u5373\u53ef\uff0c\u5982\u4e0b\uff1a\n\n@Overrideprotected void configure(HttpSecurity http) throws Exception {\n    http.authorizeRequests()\n    .antMatchers(\"/admin/**\").hasRole(\"admin\")\n    .antMatchers(\"/db/**\").hasRole(\"dba\")\n    .antMatchers(\"/user/**\").hasRole(\"user\")\n    .and().formLogin()\n    .loginProcessingUrl(\"/doLogin\")\n    .permitAll()\n    .and().csrf().disable();\n}\n\u8fd9\u4e2a\u8868\u793a /db/** \u683c\u5f0f\u7684\u8def\u5f84\u9700\u8981\u5177\u5907 dba \u89d2\u8272\u624d\u80fd\u8bbf\u95ee\uff0c /admin/** \u683c\u5f0f\u7684\u8def\u5f84\u5219\u9700\u8981\u5177\u5907 admin \u89d2\u8272\u624d\u80fd\u8bbf\u95ee\uff0c /user/** \u683c\u5f0f\u7684\u8def\u5f84\uff0c\u5219\u9700\u8981\u5177\u5907 user \u89d2\u8272\u624d\u80fd\u8bbf\u95ee\uff0c\u6b64\u65f6\u63d0\u4f9b\u76f8\u5173\u63a5\u53e3\uff0c\u4f1a\u53d1\u73b0dba \u9664\u4e86\u8bbf\u95ee /db/** \uff0c\u4e5f\u80fd\u8bbf\u95ee /admin/** \u548c /user/** \uff0cadmin \u89d2\u8272\u9664\u4e86\u8bbf\u95ee /admin/** \uff0c\u4e5f\u80fd\u8bbf\u95ee /user/** \uff0cuser \u89d2\u8272\u5219\u53ea\u80fd\u8bbf\u95ee /user/** \u3002\n8.\u57fa\u4e8e\u6570\u636e\u5e93\u7684\u8ba4\u8bc1\n\u4e4b\u524d\u7684\u7528\u6237\u548c\u5bc6\u7801\u90fd\u662f\u5728\u4ee3\u7801\u6216\u8005\u914d\u7f6e\u6587\u4ef6\u4e2d\u5199\u6b7b\u7684\uff0c\u4e00\u822c\u4e0d\u6ee1\u8db3\u5f00\u53d1\u7684\u9700\u8981\u3002\nSpring Security \u652f\u6301\u591a\u79cd\u4e0d\u540c\u7684\u6570\u636e\u6e90\uff0c\u8fd9\u4e9b\u4e0d\u540c\u7684\u6570\u636e\u6e90\u6700\u7ec8\u90fd\u5c06\u88ab\u5c01\u88c5\u6210 UserDetailsService \u7684\u5b9e\u4f8b\uff0c\u9664\u4e86\u4f7f\u7528\u7cfb\u7edf\u9ed8\u8ba4\u63d0\u4f9b\u7684 UserDetailsService \u5b9e\u4f8b\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u81ea\u5df1\u5c01\u88c5\u3002\u4f8b\u5982InMemoryUserDetailsManager\u3001JdbcUserDetailsManager\u3002\n\u67e5\u770b\u8be6\u60c5\uff1a\nSpring Security \u57fa\u4e8e\u6570\u636e\u5e93\u7684\u8ba4\u8bc1\nSpring Security+Spring Data Jpa\uff0c\u57fa\u4e8e\u6570\u636e\u5e93\u7684\u8ba4\u8bc1\n\u8fd9\u91cc\u662f\u4f7f\u7528Mybatis\u64cd\u4f5c\u6570\u636e\u5e93\uff0c\u6ca1\u5565\u8bf4\u7684\uff0c\u4e0a\u4ee3\u7801\uff01\uff01\n\u9996\u5148\u51c6\u5907\u597d\u6570\u636e\u5e93\n--\u53d6\u6d88\u5916\u952e\u7ea6\u675f:\nSET FOREIGN_KEY_CHECKS=0;\n-- ----------------------------\n-- Table structure for role\n-- ----------------------------\nDROP TABLE IF EXISTS `role`;\nCREATE TABLE `role` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(32) DEFAULT NULL,\n  `nameZh` varchar(32) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of role\n-- ----------------------------\nINSERT INTO `role` VALUES (&#39;1&#39;, &#39;dba&#39;, &#39;\u6570\u636e\u5e93\u7ba1\u7406\u5458&#39;);\nINSERT INTO `role` VALUES (&#39;2&#39;, &#39;admin&#39;, &#39;\u7cfb\u7edf\u7ba1\u7406\u5458&#39;);\nINSERT INTO `role` VALUES (&#39;3&#39;, &#39;user&#39;, &#39;\u7528\u6237&#39;);\n-- ----------------------------\n-- Table structure for user\n-- ----------------------------\nDROP TABLE IF EXISTS `user`;\nCREATE TABLE `user` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `username` varchar(32) DEFAULT NULL,\n  `password` varchar(255) DEFAULT NULL,\n  `enabled` tinyint(1) DEFAULT NULL,\n  `locked` tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of user\n-- ----------------------------\nINSERT INTO `user` VALUES (&#39;1&#39;, &#39;root&#39;, &#39;$2a$10$RMuFXGQ5AtH4wOvkUqyvuecpqUSeoxZYqilXzbz50dceRsga.WYiq&#39;, &#39;1&#39;, &#39;0&#39;);\nINSERT INTO `user` VALUES (&#39;2&#39;, &#39;admin&#39;, &#39;$2a$10$RMuFXGQ5AtH4wOvkUqyvuecpqUSeoxZYqilXzbz50dceRsga.WYiq&#39;, &#39;1&#39;, &#39;0&#39;);\nINSERT INTO `user` VALUES (&#39;3&#39;, &#39;xuxx&#39;, &#39;$2a$10$RMuFXGQ5AtH4wOvkUqyvuecpqUSeoxZYqilXzbz50dceRsga.WYiq&#39;, &#39;1&#39;, &#39;0&#39;);\n-- ----------------------------\n-- Table structure for user_role\n-- ----------------------------\nDROP TABLE IF EXISTS `user_role`;\nCREATE TABLE `user_role` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `uid` int(11) DEFAULT NULL,\n  `rid` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of user_role\n-- ----------------------------\nINSERT INTO `user_role` VALUES (&#39;1&#39;, &#39;1&#39;, &#39;1&#39;);\nINSERT INTO `user_role` VALUES (&#39;2&#39;, &#39;1&#39;, &#39;2&#39;);\nINSERT INTO `user_role` VALUES (&#39;3&#39;, &#39;2&#39;, &#39;2&#39;);\nINSERT INTO `user_role` VALUES (&#39;4&#39;, &#39;3&#39;, &#39;3&#39;);\nSET FOREIGN_KEY_CHECKS=1;\n\n\u4f9d\u8d56\n&lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;2.1.1&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;version&gt;5.1.27&lt;/version&gt;\n        &lt;/dependency&gt;\n\n\u914d\u7f6e\u6587\u4ef6application.yml\nspring:\n  datasource:\n    username: root\n    password: root\n    type: com.zaxxer.hikari.HikariDataSource\n    url: jdbc:mysql://127.0.0.1:3306/security?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.jdbc.Driver\nmybatis:\n  #mapper.xml\u8def\u5f84\n  mapper-locations: classpath:mapper/*.xml\n  #\u522b\u540d\u5305\u626b\u63cf\n  type-aliases-package: com.xuxx.security_demo.bean\n\nlogging:\n  level:\n    #\u6253\u5370mapper\u5305\u7684SQL\u8bed\u53e5\n    com.xuxx.security_demo.mapper: debug\n\nbean\npackage com.xuxx.security_demo.bean;\n\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\n\n/**\n * \u7ee7\u627fUserDetails\u662f\u4e3a\u4e86\u5411Spring Security\u63d0\u4f9b\u6838\u5fc3\u7528\u6237\u4fe1\u606f\n * \u540c\u65f6\uff0cUserDetails\u4e5f\u662f\u4e00\u4e2a\u89c4\u8303\n */\npublic class User implements Serializable, UserDetails {\n    private Integer id;\n    private String username;\n    private String password;\n    private Boolean enabled;\n    private Boolean locked;\n\n    private List&lt;Role&gt; roleList;\n\n    /***\n     * \u5224\u65ad\u5e10\u6237\u662f\u5426\u672a\u8fc7\u671f\n     */\n    @Override\n    public boolean isAccountNonExpired() {\n        //\u6211\u7684\u6570\u636e\u5e93\u6ca1\u5199\u8fd9\u4e2a\u5b57\u6bb5\n        return true;\n    }\n\n    /***\n     * \u5224\u65ad\u5e10\u6237\u662f\u5426\u672a\u9501\u5b9a\n     */\n    @Override\n    public boolean isAccountNonLocked() {\n        return !locked;\n    }\n\n    /**\n     * \u5224\u65ad\u51ed\u8bc1\u662f\u5426\u672a\u8fc7\u671f\n     */\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u5df2\u542f\u7528\n     */\n    @Override\n    public boolean isEnabled() {\n        return enabled;\n    }\n\n    /**\n     * \u83b7\u53d6\u5df2\u6388\u4e88\u7528\u6237\u7684\u6743\u9650(\u89d2\u8272)\uff0c\u4e0d\u80fd\u8fd4\u56denulL\u3002\n     * SimpleGrantedAuthority\uff1aGrantedAuthority\u7684\u7b80\u5355\u5b9e\u73b0\u3002\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b58\u50a8\u5df2\u6388\u4e88\u7684\u6743\u9650(\u89d2\u8272)\uff0c\u8981\u4ee5\u2018ROLE_\u2019\u5f00\u5934\u3002\n     */\n    @Override\n    public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() {\n        List&lt;SimpleGrantedAuthority&gt; authorities = new ArrayList&lt;&gt;();\n        for (Role role : roleList) {\n            authorities.add(new SimpleGrantedAuthority(&quot;ROLE_&quot; + role.getName()));\n        }\n        return authorities;\n    }\n\n    public List&lt;Role&gt; getRoleList() {\n        return roleList;\n    }\n\n    public void setRoleList(List&lt;Role&gt; roleList) {\n        this.roleList = roleList;\n    }\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public void setEnabled(Boolean enabled) {\n        this.enabled = enabled;\n    }\n\n    public void setLocked(Boolean locked) {\n        this.locked = locked;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;User{&quot; +\n                &quot;id=&quot; + id +\n                &quot;, username=&#39;&quot; + username + &#39;\\&#39;&#39; +\n                &quot;, password=&#39;&quot; + password + &#39;\\&#39;&#39; +\n                &quot;, enabled=&quot; + enabled +\n                &quot;, locked=&quot; + locked +\n                &quot;, roleList=&quot; + roleList +\n                &#39;}&#39;;\n    }\n}\n\npackage com.xuxx.security_demo.bean;\n\nimport java.io.Serializable;\n\npublic class Role implements Serializable {\n    private Integer id;\n    private String name;\n    private String nameZh;\n\n    private User user;\n\n    public User getUser() {\n        return user;\n    }\n\n    public void setUser(User user) {\n        this.user = user;\n    }\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getNameZh() {\n        return nameZh;\n    }\n\n    public void setNameZh(String nameZh) {\n        this.nameZh = nameZh;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;Role{&quot; +\n                &quot;id=&quot; + id +\n                &quot;, name=&#39;&quot; + name + &#39;\\&#39;&#39; +\n                &quot;, nameZh=&#39;&quot; + nameZh + &#39;\\&#39;&#39; +\n                &quot;, user=&quot; + user +\n                &#39;}&#39;;\n    }\n}\n\nMapper\npackage com.xuxx.security_demo.mapper;\n\nimport com.xuxx.security_demo.bean.Role;\nimport com.xuxx.security_demo.bean.User;\nimport org.apache.ibatis.annotations.Mapper;\n\nimport java.util.List;\n\n@Mapper\npublic interface UserMapper {\n    /**\n     * \u6839\u636eusername\u67e5\u8be2User\n     * @param username \u7528\u6237\u540d\n     * @return\n     */\n    @Select(&quot;select * from user where username = #{username}&quot;)\n    User loadUserByUsername(String username);\n\n    /**\n     * \u6839\u636euserID\u67e5\u8be2User\u7684\u89d2\u8272\n     * @param id \u7528\u6237ID\n     * @return\n     */\n    @Select(&quot;select * from role r where r.id in (select rid from user_role where uid = #{id})&quot;)\n    List&lt;Role&gt; getUserRolesById(Integer id);\n}\n\nService\npackage com.xuxx.security_demo.service;\n\nimport com.xuxx.security_demo.bean.User;\nimport com.xuxx.security_demo.mapper.UserMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class UserService implements UserDetailsService {\n    @Autowired\n    private UserMapper userMapper;\n\n    /**\n     * \u4e0d\u7528\u81ea\u5df1\u5224\u65ad\u767b\u5f55\u6210\u529f\u4e0e\u5426\uff0c\u53ea\u9700\u8981\u53bb\u6570\u636e\u5e93\u67e5\u8be2\u3002\n     * @param username\n     * @return\n     * @throws UsernameNotFoundException\n     */\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        User user = userMapper.loadUserByUsername(username);\n        if (user == null) {\n            //UsernameNotFoundException\u4f1a\u81ea\u52a8\u8f6c\u6362\u4e3aBadCredentialsException\u7684\n            throw new UsernameNotFoundException(&quot;\u7528\u6237\u4e0d\u5b58\u5728\uff01&quot;);\n        }\n        user.setRoleList(userMapper.getUserRolesById(user.getId()));\n        return user;\n    }\n}\n\nController\npackage com.xuxx.security_demo.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;hello&quot;)\n    public String hello() {\n        return &quot;hello security&quot;;\n    }\n\n    @GetMapping(&quot;dba/hello&quot;)\n    public String dba() {\n        return &quot;hello dba&quot;;\n    }\n\n    @GetMapping(&quot;admin/hello&quot;)\n    public String admin() {\n        return &quot;hello admin&quot;;\n    }\n\n    @GetMapping(&quot;user/hello&quot;)\n    public String user() {\n        return &quot;hello user&quot;;\n    }\n}\n\n\u914d\u7f6e\u7c7b\npackage com.xuxx.security_demo.config;\n\nimport com.xuxx.security_demo.service.UserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchy;\nimport org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Autowired\n    UserService userService;\n\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    /**\n     * \u89d2\u8272\u7ee7\u627f\n     *\n     * @return\n     */\n    @Bean\n    RoleHierarchy roleHierarchy() {\n        RoleHierarchyImpl roleHierarchy = new RoleHierarchyImpl();\n        String hierarchy = &quot;ROLE_dba &gt; ROLE_admin \\n ROLE_admin &gt; ROLE_user&quot;;\n        roleHierarchy.setHierarchy(hierarchy);\n        return roleHierarchy;\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.userDetailsService(userService);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .antMatchers(&quot;/dba/**&quot;).hasRole(&quot;dba&quot;)\n                .antMatchers(&quot;/admin/**&quot;).hasRole(&quot;admin&quot;)\n                .antMatchers(&quot;/user/**&quot;).hasRole(&quot;user&quot;)\n                .anyRequest().authenticated()\n                .and()\n                .formLogin()\n                .loginProcessingUrl(&quot;/doLogin&quot;)\n                .permitAll()\n                .and()\n                .csrf()\n                .disable();\n    }\n}\n\n\u5927\u529f\u544a\u6210\u3002\n9.\u6dfb\u52a0\u81ea\u5b9a\u4e49Filter-\u4f8b\uff1a\u6dfb\u52a0\u767b\u5f55\u9a8c\u8bc1\u7801\nhttps://mp.weixin.qq.com/s/aaop_dS9UIOgTtQd0hl_tw\n1.\u51c6\u5907\u9a8c\u8bc1\u7801\n/**\n * \u751f\u6210\u9a8c\u8bc1\u7801\u7684\u5de5\u5177\u7c7b\n */\npublic class VerifyCode {\n\n    private int width = 100;// \u751f\u6210\u9a8c\u8bc1\u7801\u56fe\u7247\u7684\u5bbd\u5ea6\n    private int height = 50;// \u751f\u6210\u9a8c\u8bc1\u7801\u56fe\u7247\u7684\u9ad8\u5ea6\n    private String[] fontNames = { &quot;\u5b8b\u4f53&quot;, &quot;\u6977\u4f53&quot;, &quot;\u96b6\u4e66&quot;, &quot;\u5fae\u8f6f\u96c5\u9ed1&quot; };\n    private Color bgColor = new Color(255, 255, 255);// \u5b9a\u4e49\u9a8c\u8bc1\u7801\u56fe\u7247\u7684\u80cc\u666f\u989c\u8272\u4e3a\u767d\u8272\n    private Random random = new Random();\n    private String codes = &quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;;\n    private String text;// \u8bb0\u5f55\u968f\u673a\u5b57\u7b26\u4e32\n\n    /**\n     * \u83b7\u53d6\u4e00\u4e2a\u968f\u610f\u989c\u8272\n     *\n     * @return\n     */\n    private Color randomColor() {\n        int red = random.nextInt(150);\n        int green = random.nextInt(150);\n        int blue = random.nextInt(150);\n        return new Color(red, green, blue);\n    }\n\n    /**\n     * \u83b7\u53d6\u4e00\u4e2a\u968f\u673a\u5b57\u4f53\n     *\n     * @return\n     */\n    private Font randomFont() {\n        String name = fontNames[random.nextInt(fontNames.length)];\n        int style = random.nextInt(4);\n        int size = random.nextInt(5) + 24;\n        return new Font(name, style, size);\n    }\n\n    /**\n     * \u83b7\u53d6\u4e00\u4e2a\u968f\u673a\u5b57\u7b26\n     *\n     * @return\n     */\n    private char randomChar() {\n        return codes.charAt(random.nextInt(codes.length()));\n    }\n\n    /**\n     * \u521b\u5efa\u4e00\u4e2a\u7a7a\u767d\u7684BufferedImage\u5bf9\u8c61\n     *\n     * @return\n     */\n    private BufferedImage createImage() {\n        BufferedImage image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);\n        Graphics2D g2 = (Graphics2D) image.getGraphics();\n        g2.setColor(bgColor);// \u8bbe\u7f6e\u9a8c\u8bc1\u7801\u56fe\u7247\u7684\u80cc\u666f\u989c\u8272\n        g2.fillRect(0, 0, width, height);\n        return image;\n    }\n\n    public BufferedImage getImage() {\n        BufferedImage image = createImage();\n        Graphics2D g2 = (Graphics2D) image.getGraphics();\n        StringBuffer sb = new StringBuffer();\n        for (int i = 0; i &lt; 4; i++) {\n            String s = randomChar() + &quot;&quot;;\n            sb.append(s);\n            g2.setColor(randomColor());\n            g2.setFont(randomFont());\n            float x = i * width * 1.0f / 4;\n            g2.drawString(s, x, height - 15);\n        }\n        this.text = sb.toString();\n        drawLine(image);\n        return image;\n    }\n\n    /**\n     * \u7ed8\u5236\u5e72\u6270\u7ebf\n     *\n     * @param image\n     */\n    private void drawLine(BufferedImage image) {\n        Graphics2D g2 = (Graphics2D) image.getGraphics();\n        int num = 5;\n        for (int i = 0; i &lt; num; i++) {\n            int x1 = random.nextInt(width);\n            int y1 = random.nextInt(height);\n            int x2 = random.nextInt(width);\n            int y2 = random.nextInt(height);\n            g2.setColor(randomColor());\n            g2.setStroke(new BasicStroke(1.5f));\n            g2.drawLine(x1, y1, x2, y2);\n        }\n    }\n\n    public String getText() {\n        return text;\n    }\n\n    public static void output(BufferedImage image, OutputStream out) throws IOException {\n        ImageIO.write(image, &quot;JPEG&quot;, out);\n    }\n}\n\n\u5c31\u662f\u753b\u4e00\u4e2a\u7b80\u5355\u7684\u9a8c\u8bc1\u7801\uff0c\u901a\u8fc7\u6d41\u5c06\u9a8c\u8bc1\u7801\u5199\u5230\u524d\u7aef\u9875\u9762\uff0c\u63d0\u4f9b\u9a8c\u8bc1\u7801\u7684 Controller \u5982\u4e0b\uff1a\n@RestController\npublic class VerifyCodeController {\n    @GetMapping(&quot;/vercode&quot;)\n    public void code(HttpServletRequest req, HttpServletResponse resp) throws IOException {\n        VerifyCode vc = new VerifyCode();\n        BufferedImage image = vc.getImage();\n        String text = vc.getText();\n        HttpSession session = req.getSession();\n        session.setAttribute(&quot;index_code&quot;, text);\n        VerifyCode.output(image, resp.getOutputStream());\n    }\n}\n\n2.\u81ea\u5b9a\u4e49Filter\n@Component\npublic class VerifyCodeFilter extends GenericFilterBean {\n    private String defaultFilterProcessUrl = &quot;/doLogin&quot;;\n\n    @Override\n    public void doFilter(ServletRequest req, ServletResponse res, FilterChain chain)\n            throws IOException, ServletException {\n        HttpServletRequest request = (HttpServletRequest) req;\n        HttpServletResponse response = (HttpServletResponse) res;\n        if (&quot;POST&quot;.equalsIgnoreCase(request.getMethod()) &amp;&amp; defaultFilterProcessUrl.equals(request.getServletPath())) {\n            // \u9a8c\u8bc1\u7801\u9a8c\u8bc1\n            String requestCaptcha = request.getParameter(&quot;code&quot;);\n            String genCaptcha = (String) request.getSession().getAttribute(&quot;index_code&quot;);\n            if (StringUtils.isEmpty(requestCaptcha))\n                throw new AuthenticationServiceException(&quot;\u9a8c\u8bc1\u7801\u4e0d\u80fd\u4e3a\u7a7a!&quot;);\n            if (!genCaptcha.toLowerCase().equals(requestCaptcha.toLowerCase())) {\n                throw new AuthenticationServiceException(&quot;\u9a8c\u8bc1\u7801\u9519\u8bef!&quot;);\n            }\n        }\n        chain.doFilter(request, response);\n    }\n}\n\n\u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668\u7ee7\u627f\u81ea GenericFilterBean\uff0c\u5e76\u5b9e\u73b0\u5176\u4e2d\u7684 doFilter \u65b9\u6cd5\uff0c\u5728 doFilter \u65b9\u6cd5\u4e2d\uff0c\u5f53\u8bf7\u6c42\u65b9\u6cd5\u662f POST\uff0c\u5e76\u4e14\u8bf7\u6c42\u5730\u5740\u662f /doLogin \u65f6\uff0c\u83b7\u53d6\u53c2\u6570\u4e2d\u7684 code \u5b57\u6bb5\u503c\uff0c\u8be5\u5b57\u6bb5\u4fdd\u5b58\u4e86\u7528\u6237\u4ece\u524d\u7aef\u9875\u9762\u4f20\u6765\u7684\u9a8c\u8bc1\u7801\uff0c\u7136\u540e\u83b7\u53d6 session \u4e2d\u4fdd\u5b58\u7684\u9a8c\u8bc1\u7801\uff0c\u5982\u679c\u7528\u6237\u6ca1\u6709\u4f20\u6765\u9a8c\u8bc1\u7801\uff0c\u5219\u629b\u51fa\u9a8c\u8bc1\u7801\u4e0d\u80fd\u4e3a\u7a7a\u5f02\u5e38\uff0c\u5982\u679c\u7528\u6237\u4f20\u5165\u4e86\u9a8c\u8bc1\u7801\uff0c\u5219\u5224\u65ad\u9a8c\u8bc1\u7801\u662f\u5426\u6b63\u786e\uff0c\u5982\u679c\u4e0d\u6b63\u786e\u5219\u629b\u51fa\u5f02\u5e38\uff0c\u5426\u5219\u6267\u884c chain.doFilter(request, response); \u4f7f\u8bf7\u6c42\u7ee7\u7eed\u5411\u4e0b\u8d70\u3002\n3.\u914d\u7f6eFilter\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    VerifyCodeFilter verifyCodeFilter;\n    ...\n    ...\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n\n        http.addFilterBefore(verifyCodeFilter, UsernamePasswordAuthenticationFilter.class);\n\n        http.authorizeRequests()\n                .antMatchers(&quot;/admin/**&quot;).hasRole(&quot;admin&quot;)\n                ...\n                ...\n                .permitAll()\n                .and()\n                .csrf().disable();\n    }\n}\n\n3.\u52a8\u6001\u6743\u9650\u914d\u7f6e\n\u76ee\u7684\u662f\u5b9e\u73b0Spring Security\u4eceDB\u4e2d\u52a0\u8f7dURL\u7684\u76f8\u5173\u6743\u9650\uff0c\u4e14\u5f53DB\u4e2d\u914d\u7f6e\u53d1\u751f\u66f4\u6539\u65f6\uff0c\u53ef\u4ee5\u8ba9\u8fd0\u884c\u4e2d\u7684\u9879\u76ee\u65e0\u9700\u91cd\u542f\uff0c\u52a8\u6001\u66f4\u6539\u8bbf\u95ee\u6743\u9650\u3002\n1.\u6570\u636e\u5e93\n\u5728\u4e4b\u524d\u7684\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e86\u4e24\u5f20\u8868\uff0cmenu\u548cmenu_role\n--\u53d6\u6d88\u5916\u952e\u7ea6\u675f:\nSET FOREIGN_KEY_CHECKS=0;\n-- ----------------------------\n-- Table structure for role\n-- ----------------------------\nDROP TABLE IF EXISTS `role`;\nCREATE TABLE `role` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `name` varchar(32) DEFAULT NULL,\n  `nameZh` varchar(32) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of role\n-- ----------------------------\nINSERT INTO `role` VALUES (&#39;1&#39;, &#39;dba&#39;, &#39;\u6570\u636e\u5e93\u7ba1\u7406\u5458&#39;);\nINSERT INTO `role` VALUES (&#39;2&#39;, &#39;admin&#39;, &#39;\u7cfb\u7edf\u7ba1\u7406\u5458&#39;);\nINSERT INTO `role` VALUES (&#39;3&#39;, &#39;user&#39;, &#39;\u666e\u901a\u7528\u6237&#39;);\n-- ----------------------------\n-- Table structure for user\n-- ----------------------------\nDROP TABLE IF EXISTS `user`;\nCREATE TABLE `user` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `username` varchar(32) DEFAULT NULL,\n  `password` varchar(255) DEFAULT NULL,\n  `enabled` tinyint(1) DEFAULT NULL,\n  `locked` tinyint(1) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of user\n-- ----------------------------\nINSERT INTO `user` VALUES (&#39;1&#39;, &#39;root&#39;, &#39;$2a$10$RMuFXGQ5AtH4wOvkUqyvuecpqUSeoxZYqilXzbz50dceRsga.WYiq&#39;, &#39;1&#39;, &#39;0&#39;);\nINSERT INTO `user` VALUES (&#39;2&#39;, &#39;admin&#39;, &#39;$2a$10$RMuFXGQ5AtH4wOvkUqyvuecpqUSeoxZYqilXzbz50dceRsga.WYiq&#39;, &#39;1&#39;, &#39;0&#39;);\nINSERT INTO `user` VALUES (&#39;3&#39;, &#39;xuxx&#39;, &#39;$2a$10$RMuFXGQ5AtH4wOvkUqyvuecpqUSeoxZYqilXzbz50dceRsga.WYiq&#39;, &#39;1&#39;, &#39;0&#39;);\n-- ----------------------------\n-- Table structure for user_role\n-- ----------------------------\nDROP TABLE IF EXISTS `user_role`;\nCREATE TABLE `user_role` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `uid` int(11) DEFAULT NULL,\n  `rid` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=5 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of user_role\n-- ----------------------------\nINSERT INTO `user_role` VALUES (&#39;1&#39;, &#39;1&#39;, &#39;1&#39;);\nINSERT INTO `user_role` VALUES (&#39;2&#39;, &#39;1&#39;, &#39;2&#39;);\nINSERT INTO `user_role` VALUES (&#39;3&#39;, &#39;2&#39;, &#39;2&#39;);\nINSERT INTO `user_role` VALUES (&#39;4&#39;, &#39;3&#39;, &#39;3&#39;);\nSET FOREIGN_KEY_CHECKS=1;\n-- ----------------------------\n-- Table structure for menu\n-- ----------------------------\nDROP TABLE IF EXISTS `menu`;\nCREATE TABLE `menu` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `pattern` varchar(128) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of menu\n-- ----------------------------\nINSERT INTO `menu`(`id`, `pattern`) VALUES (1, &#39;/dba/**&#39;);\nINSERT INTO `menu`(`id`, `pattern`) VALUES (2, &#39;/admin/**&#39;);\nINSERT INTO `menu`(`id`, `pattern`) VALUES (3, &#39;/user/**&#39;);\n-- ----------------------------\n-- Table structure for menu_role\n-- ----------------------------\nDROP TABLE IF EXISTS `menu_role`;\nCREATE TABLE `menu_role` (\n  `id` int(11) NOT NULL AUTO_INCREMENT,\n  `mid` int(11) DEFAULT NULL,\n  `rid` int(11) DEFAULT NULL,\n  PRIMARY KEY (`id`)\n) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;\n-- ----------------------------\n-- Records of menu_role\n-- ----------------------------\nINSERT INTO `menu_role`(`id`, `mid`, `rid`) VALUES (1, 1, 1);\nINSERT INTO `menu_role`(`id`, `mid`, `rid`) VALUES (2, 2, 2);\nINSERT INTO `menu_role`(`id`, `mid`, `rid`) VALUES (3, 3, 3);\n\n2.\u4f9d\u8d56\n&lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;2.1.1&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;version&gt;5.1.27&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n            &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n\n3.application.yml\nspring:\n  datasource:\n    username: root\n    password: root\n    type: com.zaxxer.hikari.HikariDataSource\n    url: jdbc:mysql://127.0.0.1:3306/security?useUnicode=true&amp;characterEncoding=utf-8&amp;serverTimezone=Asia/Shanghai\n    driver-class-name: com.mysql.jdbc.Driver\nmybatis:\n  #mapper.xml\u8def\u5f84\n  #mapper-locations: classpath:mapper/*.xml\n  #\u522b\u540d\u5305\u626b\u63cf\n  type-aliases-package: com.xuxx.security_db_dynamic.bean\n\nlogging:\n  level:\n    #\u6253\u5370mapper\u5305\u7684SQL\u8bed\u53e5\n    com.xuxx.security_db_dynamic.mapper: debug\n\n4.bean\npackage com.xuxx.security_db_dynamic.bean;\n\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.security.core.authority.SimpleGrantedAuthority;\nimport org.springframework.security.core.userdetails.UserDetails;\n\nimport java.io.Serializable;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.List;\n\n/**\n * \u7ee7\u627fUserDetails\u662f\u4e3a\u4e86\u5411Spring Security\u63d0\u4f9b\u6838\u5fc3\u7528\u6237\u4fe1\u606f\n * \u540c\u65f6\uff0cUserDetails\u4e5f\u662f\u4e00\u4e2a\u89c4\u8303\n */\npublic class User implements Serializable, UserDetails {\n    private Integer id;\n    private String username;\n    private String password;\n    private Boolean enabled;\n    private Boolean locked;\n\n    private List&lt;Role&gt; roleList;\n\n    /***\n     * \u5224\u65ad\u5e10\u6237\u662f\u5426\u672a\u8fc7\u671f\n     */\n    @Override\n    public boolean isAccountNonExpired() {\n        //\u6b64\u65f6\u6570\u636e\u5e93\u6ca1\u5b9a\u4e49\u8fd9\u4e2a\u5b57\u6bb5\n        return true;\n    }\n\n    /***\n     * \u5224\u65ad\u5e10\u6237\u662f\u5426\u672a\u9501\u5b9a\n     */\n    @Override\n    public boolean isAccountNonLocked() {\n        return !locked;\n    }\n\n    /**\n     * \u5224\u65ad\u51ed\u8bc1\u662f\u5426\u672a\u8fc7\u671f\n     */\n    @Override\n    public boolean isCredentialsNonExpired() {\n        return true;\n    }\n\n    /**\n     * \u5224\u65ad\u662f\u5426\u5df2\u542f\u7528\n     */\n    @Override\n    public boolean isEnabled() {\n        return enabled;\n    }\n\n    /**\n     * \u83b7\u53d6\u5df2\u6388\u4e88\u7528\u6237\u7684\u6743\u9650(\u89d2\u8272)\uff0c\u4e0d\u80fd\u8fd4\u56denulL\u3002\n     * SimpleGrantedAuthority\uff1aGrantedAuthority\u7684\u7b80\u5355\u5b9e\u73b0\u3002\u4ee5\u5b57\u7b26\u4e32\u5f62\u5f0f\u5b58\u50a8\u5df2\u6388\u4e88\u7684\u6743\u9650(\u89d2\u8272)\uff0c\u8981\u4ee5\u2018ROLE_\u2019\u5f00\u5934\u3002\n     */\n    @Override\n    public Collection&lt;? extends GrantedAuthority&gt; getAuthorities() {\n        List&lt;SimpleGrantedAuthority&gt; authorities = new ArrayList&lt;&gt;();\n        for (Role role : roleList) {\n            authorities.add(new SimpleGrantedAuthority(&quot;ROLE_&quot; + role.getName()));\n        }\n        return authorities;\n    }\n\n    public List&lt;Role&gt; getRoleList() {\n        return roleList;\n    }\n\n    public void setRoleList(List&lt;Role&gt; roleList) {\n        this.roleList = roleList;\n    }\n\n    public Integer getId() {\n        return id;\n    }\n\n    public void setId(Integer id) {\n        this.id = id;\n    }\n\n    public String getUsername() {\n        return username;\n    }\n\n    public void setUsername(String username) {\n        this.username = username;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n\n    public void setEnabled(Boolean enabled) {\n        this.enabled = enabled;\n    }\n\n    public void setLocked(Boolean locked) {\n        this.locked = locked;\n    }\n\n    @Override\n    public String toString() {\n        return &quot;User{&quot; +\n                &quot;id=&quot; + id +\n                &quot;, username=&#39;&quot; + username + &#39;\\&#39;&#39; +\n                &quot;, password=&#39;&quot; + password + &#39;\\&#39;&#39; +\n                &quot;, enabled=&quot; + enabled +\n                &quot;, locked=&quot; + locked +\n                &quot;, roleList=&quot; + roleList +\n                &#39;}&#39;;\n    }\n}\n\npackage com.xuxx.security_db_dynamic.bean;\n\nimport lombok.Data;\n\nimport java.io.Serializable;\n\n@Data\npublic class Role implements Serializable {\n    private Integer id;\n    private String name;\n    private String nameZh;\n}\n\npackage com.xuxx.security_db_dynamic.bean;\n\nimport lombok.Data;\n\nimport java.util.List;\n\n@Data\npublic class Menu {\n    private Integer id;\n    private String pattern;\n    private List&lt;Role&gt; roles;\n}\n\n5.Mapper\npackage com.xuxx.security_db_dynamic.mapper;\n\nimport com.xuxx.security_db_dynamic.bean.Role;\nimport com.xuxx.security_db_dynamic.bean.User;\nimport org.apache.ibatis.annotations.Select;\n\nimport java.util.List;\n\n@Mapper\npublic interface UserMapper {\n\n    @Select(&quot;select * from user where username =#{username} &quot;)\n    User loadUserByUsername(String username);\n\n    @Select(&quot;select * from role r where r.id in (select rid from user_role where uid = #{id}) &quot;)\n    List&lt;Role&gt; getRolesById(Integer id);\n}\n\npackage com.xuxx.security_db_dynamic.mapper;\n\nimport com.xuxx.security_db_dynamic.bean.Menu;\nimport com.xuxx.security_db_dynamic.bean.Role;\nimport org.apache.ibatis.annotations.*;\nimport org.apache.ibatis.mapping.FetchType;\n\nimport java.util.List;\n\n@Mapper\npublic interface MenuMapper {\n\n    /**\n     * \u67e5\u8be2\u6240\u6709\u7684menu\n     * @return\n     */\n    @Select(&quot;select m.*,r.id as rid,r.name as rname, r.nameZh as rnameZh from menu m left join menu_role mr on m.id = mr.id left join role r on mr.rid = r.id &quot;)\n    @Results(id = &quot;menuResultMap&quot;, value = {\n            @Result(column = &quot;id&quot;, property = &quot;id&quot;, id = true),\n            @Result(column = &quot;pattern&quot;, property = &quot;pattern&quot;),\n            @Result(column = &quot;rid&quot;, property = &quot;roles&quot;,\n                    many = @Many(select = &quot;com.xuxx.security_db_dynamic.mapper.MenuMapper.findRolesByMenuId&quot;, fetchType = FetchType.EAGER))\n    })\n    List&lt;Menu&gt; getAllMenus();\n\n    /**\n     * \u6839\u636emenuID\u67e5\u8be2roles\n     * @param id\n     * @return\n     */\n    @Select(&quot;select * from role where id = #{id}&quot;)\n    List&lt;Role&gt; findRolesByMenuId(Integer id);\n}\n\n6.Service\npackage com.xuxx.security_db_dynamic.service;\n\nimport com.xuxx.security_db_dynamic.bean.User;\nimport com.xuxx.security_db_dynamic.mapper.UserMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.core.userdetails.UserDetails;\nimport org.springframework.security.core.userdetails.UserDetailsService;\nimport org.springframework.security.core.userdetails.UsernameNotFoundException;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class UserService implements UserDetailsService {\n\n    @Autowired\n    UserMapper userMapper;\n\n    @Override\n    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {\n        User user = userMapper.loadUserByUsername(username);\n        if (user == null) {\n            throw new UsernameNotFoundException(&quot;\u7528\u6237\u4e0d\u5b58\u5728&quot;);\n        }\n        user.setRoleList(userMapper.getRolesById(user.getId()));\n        return user;\n    }\n}\n\npackage com.xuxx.security_db_dynamic.service;\n\nimport com.xuxx.security_db_dynamic.bean.Menu;\nimport com.xuxx.security_db_dynamic.mapper.MenuMapper;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\n\n@Service\npublic class MenuService {\n\n    @Autowired\n    MenuMapper menuMapper;\n\n    public List&lt;Menu&gt; getAllMenus() {\n        return menuMapper.getAllMenus();\n    }\n}\n\n7.Controller\npackage com.xuxx.security_db_dynamic.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n\n    @GetMapping(&quot;/hello&quot;)\n    public String hello() {\n        return &quot;Hello&quot;;\n    }\n\n    @GetMapping(&quot;/dba/hello&quot;)\n    public String db() {\n        return &quot;Hello dba&quot;;\n    }\n\n    @GetMapping(&quot;/admin/hello&quot;)\n    public String admin() {\n        return &quot;Hello admin&quot;;\n    }\n\n    @GetMapping(&quot;/user/hello&quot;)\n    public String user() {\n        return &quot;Hello user&quot;;\n    }\n}\n\n8.\u914d\u7f6e\u7c7b\npackage com.xuxx.security_db_dynamic.config;\n\nimport com.xuxx.security_db_dynamic.bean.Menu;\nimport com.xuxx.security_db_dynamic.bean.Role;\nimport com.xuxx.security_db_dynamic.service.MenuService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.security.access.ConfigAttribute;\nimport org.springframework.security.access.SecurityConfig;\nimport org.springframework.security.web.FilterInvocation;\nimport org.springframework.security.web.access.intercept.FilterInvocationSecurityMetadataSource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.AntPathMatcher;\n\nimport java.util.Collection;\nimport java.util.List;\n\n/**\n * \u6839\u636e\u4f20\u6765\u7684\u8bf7\u6c42\u5730\u5740\uff0c\u5206\u6790\u51fa\u8be5\u8bf7\u6c42\u6240\u9700\u8981\u7684\u6743\u9650(\u89d2\u8272)\n */\n@Component\npublic class MyFilter implements FilterInvocationSecurityMetadataSource {\n\n    //\u8def\u5f84\u5339\u914d\u5668\n    AntPathMatcher pathMatcher = new AntPathMatcher();\n\n    @Autowired\n    MenuService menuService;\n\n    //\u6839\u636e\u8bf7\u6c42\u5730\u5740\u5206\u6790\u6240\u9700\u8981\u7684\u6743\u9650(\u89d2\u8272)\n    @Override\n    public Collection&lt;ConfigAttribute&gt; getAttributes(Object object) throws IllegalArgumentException {\n        //\u62ff\u5230\u8bf7\u6c42\u7684URl\n        String requestUrl = ((FilterInvocation) object).getRequestUrl();\n        List&lt;Menu&gt; allMenus = menuService.getAllMenus();\n        for (Menu menu : allMenus) {\n            //\u5982\u679c\u8bf7\u6c42\u7684URL\u548c\u5b9a\u4e49\u7684\u89c4\u5219\u5339\u914d\u4e0a\u4e86\n            if (pathMatcher.match(menu.getPattern(), requestUrl)) {\n                List&lt;Role&gt; roles = menu.getRoles();\n                String[] rolesStr = new String[roles.size()];\n                //\u5c06\u8bf7\u6c42\u7684URL\u6240\u9700\u8981\u7684\u6240\u6709role\u8f6c\u6210\u5b57\u7b26\u4e32\u6570\u7ec4\n                for (int i = 0; i &lt; roles.size(); i++) {\n                    rolesStr[i] = &quot;ROLE_&quot; + roles.get(i).getName();\n                }\n                return SecurityConfig.createList(rolesStr);\n            }\n        }\n        //\u5982\u679c\u8def\u5f84\u5339\u914d\u4e0d\u4e0a\uff0c\u8fd4\u56deROLE_login(\u76f8\u5f53\u4e8e\u81ea\u5b9a\u4e49\u7684\u4e00\u4e2a\u6807\u8bb0)\uff0c\u5219\u767b\u5f55\u540e\u53ef\u4ee5\u8bbf\u95ee\uff08\u81ea\u5b9a\u4e49\u7684\uff09\n        return SecurityConfig.createList(&quot;ROLE_LOGIN&quot;);\n    }\n\n    @Override\n    public Collection&lt;ConfigAttribute&gt; getAllConfigAttributes() {\n        return null;\n    }\n\n    @Override//\u662f\u5426\u652f\u6301\n    public boolean supports(Class&lt;?&gt; clazz) {\n        return true;\n    }\n}\n\npackage com.xuxx.security_db_dynamic.config;\n\nimport org.springframework.security.access.AccessDecisionManager;\nimport org.springframework.security.access.AccessDeniedException;\nimport org.springframework.security.access.ConfigAttribute;\nimport org.springframework.security.authentication.AnonymousAuthenticationToken;\nimport org.springframework.security.authentication.InsufficientAuthenticationException;\nimport org.springframework.security.core.Authentication;\nimport org.springframework.security.core.GrantedAuthority;\nimport org.springframework.stereotype.Component;\n\nimport java.util.Collection;\n\n/**\n * \u5224\u65ad\u5f53\u524d\u7528\u6237\u662f\u5426\u5177\u5907\u5176\u8bbf\u95ee\u8def\u5f84\u7684\u6743\u9650(\u89d2\u8272)\n */\n@Component\npublic class MyAccessDecisionManager implements AccessDecisionManager {\n    /**\n     * @param authentication   \u4fdd\u5b58\u4e86\u5f53\u524d\u767b\u5f55\u7528\u6237\u4fe1\u606f(\u5df2\u7ecf\u6709\u54ea\u4e9b\u89d2\u8272)\n     * @param object           (FilterInvocation\u5bf9\u8c61\uff0c\u662fMyfilter\u7c7b\u7684getAttributes\u65b9\u6cd5\u4e2d\u7684object\u53c2\u6570)\u7528\u6765\u83b7\u53d6\u5f53\u524d\u8bf7\u6c42\u5bf9\u8c61\n     * @param configAttributes \u662fMyfilter\u7c7b\u7684getAttributes\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\uff0c\u8bf7\u6c42\u9700\u8981\u54ea\u4e9b\u89d2\u8272\n     * @throws AccessDeniedException\n     * @throws InsufficientAuthenticationException\n     */\n    @Override\n    public void decide(Authentication authentication, Object object, Collection&lt;ConfigAttribute&gt; configAttributes) throws AccessDeniedException, InsufficientAuthenticationException {\n        for (ConfigAttribute attribute : configAttributes) {\n            if (&quot;ROLE_LOGIN&quot;.equals(attribute.getAttribute())) {\n                //AnonymousAuthenticationToken\u533f\u540d\u8eab\u4efd\u9a8c\u8bc1\u4ee4\u724c(\u672a\u767b\u5f55)\n                if (authentication instanceof AnonymousAuthenticationToken) {\n                    throw new AccessDeniedException(&quot;\u975e\u6cd5\u8bf7\u6c42\uff01&quot;);\n                } else {\n                    //\u5df2\u767b\u5f55\n                    return;\n                }\n            }\n            //\u5982\u679c\u5177\u5907\u6240\u9700\u7684\u89d2\u8272\n            Collection&lt;? extends GrantedAuthority&gt; authorities = authentication.getAuthorities();\n            for (GrantedAuthority authority : authorities) {\n                //\u5982\u679c\u5df2\u5177\u5907\u89d2\u8272\u5b58\u5728\u4e00\u4e2a\u6240\u9700\u89d2\u8272\u5c31\u901a\u8fc7(\u4e5f\u53ef\u4ee5\u914d\u7f6e\u5176\u4ed6\u9a8c\u8bc1\u65b9\u5f0f\uff0c\u4f8b\u5982\uff1a\u6240\u9700\u591a\u4e2a\u89d2\u8272\u65f6\uff0c\u5fc5\u987b\u4e0e\u5df2\u5177\u5907\u89d2\u8272\u4e00\u4e00\u5339\u914d)\n                if (authority.getAuthority().equals(attribute.getAttribute())) {\n                    //return\u5c31\u4f1a\u9a8c\u8bc1\u901a\u8fc7\n                    return;\n                }\n            }\n            //\u6b64\u65f6\u767b\u5f55\u7684root,\u8bbf\u95ee\u7684/admin/hello\n            //authorities:[ROLE_dba, ROLE_admin]\n            //System.out.println(&quot;authorities:&quot; + authorities.toString());\n            //object:FilterInvocation: URL: /admin/hello\n            //System.out.println(&quot;object:&quot; + object.toString());\n            //configAttributes:[ROLE_admin]\n            //System.out.println(&quot;configAttributes:&quot; + configAttributes.toString());\n        }\n        throw new AccessDeniedException(&quot;\u975e\u6cd5\u8bf7\u6c42\uff01&quot;);\n    }\n\n    @Override//\u662f\u5426\u652f\u6301\n    public boolean supports(ConfigAttribute attribute) {\n        return true;\n    }\n\n    @Override//\u662f\u5426\u652f\u6301\n    public boolean supports(Class&lt;?&gt; clazz) {\n        return true;\n    }\n}\n\npackage com.xuxx.security_db_dynamic.config;\n\nimport com.xuxx.security_db_dynamic.service.UserService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.security.config.annotation.ObjectPostProcessor;\nimport org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\nimport org.springframework.security.config.annotation.web.builders.HttpSecurity;\nimport org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\nimport org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\nimport org.springframework.security.crypto.password.PasswordEncoder;\nimport org.springframework.security.web.access.intercept.FilterSecurityInterceptor;\n\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    UserService userService;\n    @Autowired\n    MyFilter myFilter;\n    @Autowired\n    MyAccessDecisionManager myAccessDecisionManager;\n\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return new BCryptPasswordEncoder();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.userDetailsService(userService);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .withObjectPostProcessor(new ObjectPostProcessor&lt;FilterSecurityInterceptor&gt;() {\n                    @Override\n                    public &lt;O extends FilterSecurityInterceptor&gt; O postProcess(O object) {\n                        object.setAccessDecisionManager(myAccessDecisionManager);\n                        object.setSecurityMetadataSource(myFilter);\n                        return object;\n                    }\n                })\n                .and()\n                .formLogin()\n                .permitAll()\n                .and()\n                .csrf().disable();\n    }\n}\n\n\u6b64\u65f6\u4fbf\u53ef\u4ee5\u8fdb\u884c\u52a8\u6001\u7684\u6743\u9650\u63a7\u5236\u4e86\uff0c\u4fee\u6539\u6570\u636e\u5e93\u4fbf\u53ef\u4ee5\u6539\u53d8\u5404\u7528\u6237\u6743\u9650\u7b49\u3002\n\u5927\u529f\u544a\u6210\uff01\uff01\u7d2f\u6b7b\u4e86...\n4.Spring Security\u7ed3\u5408OAuth2\n1.\u4f9d\u8d56\n\n\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/Xuxx_Blogs/tag/Spring/"}, {"name": "Security", "slug": "Security", "permalink": "/Xuxx_Blogs/tag/Security/"}]}, {"title": "Spring Boot\u6574\u5408WebSocket", "date": "2020-05-17T23:20:00-00.00", "path": "/Xuxx_Blogs/archives/bj21/", "text": "1.\u4ec0\u4e48\u662fWebSocket?\nWebSocket \u662f HTML5 \u5f00\u59cb\u63d0\u4f9b\u7684\u4e00\u79cd\u5728\u5355\u4e2a TCP \u8fde\u63a5\u4e0a\u8fdb\u884c\u5168\u53cc\u5de5\u901a\u8baf\u7684\u534f\u8bae\u3002\nWebSocket \u4f7f\u5f97\u5ba2\u6237\u7aef\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\u53d8\u5f97\u66f4\u52a0\u7b80\u5355\uff0c\u5141\u8bb8\u670d\u52a1\u7aef\u4e3b\u52a8\u5411\u5ba2\u6237\u7aef\u63a8\u9001\u6570\u636e\u3002\u5728 WebSocket API \u4e2d\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u53ea\u9700\u8981\u5b8c\u6210\u4e00\u6b21\u63e1\u624b\uff0c\u4e24\u8005\u4e4b\u95f4\u5c31\u76f4\u63a5\u53ef\u4ee5\u521b\u5efa\u6301\u4e45\u6027\u7684\u8fde\u63a5\uff0c\u5e76\u8fdb\u884c\u53cc\u5411\u6570\u636e\u4f20\u8f93\u3002\n\u5728 WebSocket API \u4e2d\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u53ea\u9700\u8981\u505a\u4e00\u4e2a\u63e1\u624b\u7684\u52a8\u4f5c\uff0c\u7136\u540e\uff0c\u6d4f\u89c8\u5668\u548c\u670d\u52a1\u5668\u4e4b\u95f4\u5c31\u5f62\u6210\u4e86\u4e00\u6761\u5feb\u901f\u901a\u9053\u3002\u4e24\u8005\u4e4b\u95f4\u5c31\u76f4\u63a5\u53ef\u4ee5\u6570\u636e\u4e92\u76f8\u4f20\u9001\u3002\nimg\n\nUpgrade: websocket\nConnection: Upgrade\n\u8865\u5145\uff1a\nSockJs\nSockJS\u662f\u4e00\u4e2aJavaScript\u5e93\uff0c\u4e3a\u4e86\u5e94\u5bf9\u8bb8\u591a\u6d4f\u89c8\u5668\u4e0d\u652f\u6301WebSocket\u534f\u8bae\u7684\u95ee\u9898\uff0c\u8bbe\u8ba1\u4e86\u5907\u9009SockJs\u3002SockJS \u662f WebSocket \u6280\u672f\u7684\u4e00\u79cd\u6a21\u62df\u3002SockJS\u4f1a\u5c3d\u53ef\u80fd\u5bf9\u5e94 WebSocket API\uff0c\u4f46\u5982\u679cWebSocket \u6280\u672f\u4e0d\u53ef\u7528\u7684\u8bdd\uff0c\u4f1a\u81ea\u52a8\u964d\u4e3a\u8f6e\u8be2\u7684\u65b9\u5f0f\u3002\nStompjs\nSTOMP\u2014\u2014 Simple Text Oriented Message Protocol\u2014\u2014\u9762\u5411\u6d88\u606f\u7684\u7b80\u5355\u6587\u672c\u534f\u8bae\u3002\nSockJS \u4e3a WebSocket \u63d0\u4f9b\u4e86 \u5907\u9009\u65b9\u6848\u3002\u4f46\u65e0\u8bba\u54ea\u79cd\u573a\u666f\uff0c\u5bf9\u4e8e\u5b9e\u9645\u5e94\u7528\u6765\u8bf4\uff0c\u8fd9\u79cd\u901a\u4fe1\u5f62\u5f0f\u5c42\u7ea7\u8fc7\u4f4e\u3002 STOMP\u534f\u8bae\uff0c\u6765\u4e3a\u6d4f\u89c8\u5668 \u548c server \u95f4\u7684 \u901a\u4fe1\u589e\u52a0\u9002\u5f53\u7684\u6d88\u606f\u8bed\u4e49\u3002\nWebSocket\u3001SockJs\u3001STOMP\u4e09\u8005\u5173\u7cfb\n\u7b80\u800c\u8a00\u4e4b\uff0cWebSocket \u662f\u5e95\u5c42\u534f\u8bae\uff0cSockJS \u662fWebSocket \u7684\u5907\u9009\u65b9\u6848\uff0c\u4e5f\u662f\u5e95\u5c42\u534f\u8bae\uff0c\u800c STOMP \u662f\u57fa\u4e8e WebSocket\uff08SockJS\uff09\u7684\u4e0a\u5c42\u534f\u8bae\u3002\n1\u3001HTTP\u534f\u8bae\u89e3\u51b3\u4e86 web \u6d4f\u89c8\u5668\u53d1\u8d77\u8bf7\u6c42\u4ee5\u53ca web \u670d\u52a1\u5668\u54cd\u5e94\u8bf7\u6c42\u7684\u7ec6\u8282\uff0c\u5047\u8bbe HTTP \u534f\u8bae \u5e76\u4e0d\u5b58\u5728\uff0c\u53ea\u80fd\u4f7f\u7528 TCP \u5957\u63a5\u5b57\u6765 \u7f16\u5199 web \u5e94\u7528\u3002\n2\u3001\u76f4\u63a5\u4f7f\u7528 WebSocket\uff08SockJS\uff09 \u5c31\u5f88\u7c7b\u4f3c\u4e8e \u4f7f\u7528 TCP \u5957\u63a5\u5b57\u6765\u7f16\u5199 web \u5e94\u7528\uff0c\u56e0\u4e3a\u6ca1\u6709\u9ad8\u5c42\u534f\u8bae\uff0c\u5c31\u9700\u8981\u6211\u4eec\u5b9a\u4e49\u5e94\u7528\u95f4\u6240\u53d1\u9001\u6d88\u606f\u7684\u8bed\u4e49\uff0c\u8fd8\u9700\u8981\u786e\u4fdd\u8fde\u63a5\u7684\u4e24\u7aef\u90fd\u80fd\u9075\u5faa\u8fd9\u4e9b\u8bed\u4e49\uff1b\n3\u3001\u540cHTTP\u5728TCP \u5957\u63a5\u5b57\u4e0a\u6dfb\u52a0\u8bf7\u6c42-\u54cd\u5e94\u6a21\u578b\u5c42\u4e00\u6837\uff0cSTOMP\u5728WebSocket \u4e4b\u4e0a\u63d0\u4f9b\u4e86\u4e00\u4e2a\u57fa\u4e8e\u5e27\u7684\u7ebf\u8def\u683c\u5f0f\u5c42\uff0c\u7528\u6765\u5b9a\u4e49\u6d88\u606f\u8bed\u4e49\uff1b\n2.WebSocket\u5b9e\u73b0\u5728\u7ebf\u7fa4\u804a\n\n\u4f9d\u8d56\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n&lt;!-- https://mvnrepository.com/artifact/org.webjars/sockjs-client --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;sockjs-client&lt;/artifactId&gt;\n    &lt;version&gt;1.1.2&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- https://mvnrepository.com/artifact/org.webjars/stomp-websocket --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;stomp-websocket&lt;/artifactId&gt;\n    &lt;version&gt;2.3.3&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- https://mvnrepository.com/artifact/org.webjars.bower/jquery --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;jquery&lt;/artifactId&gt;\n    &lt;version&gt;3.4.1&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!--WebJars\u662f\u5c06\u5ba2\u6237\u7aef\uff08\u6d4f\u89c8\u5668\uff09\u8d44\u6e90\uff08JS\uff0cCss\u7b49\uff09\u6253\u6210jar\u5305\u6587\u4ef6\uff0c\u4ee5\u5bf9\u8d44\u6e90\u8fdb\u884c\u7edf\u4e00\u4f9d\u8d56\u7ba1\u7406\u3002--&gt;\n&lt;!-- https://mvnrepository.com/artifact/org.webjars/webjars-locator-core --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;webjars-locator-core&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n\n\u914d\u7f6e\u7c7b\n@Configuration\n@EnableWebSocketMessageBroker//\u5f00\u542f\u6d88\u606f\u4ee3\u7406\npublic class WebSocketConfig implements WebSocketMessageBrokerConfigurer {\n\n    @Override\n    public void configureMessageBroker(MessageBrokerRegistry registry) {\n       //\u6d88\u606f\u4ee3\u7406\u524d\u7f00\uff08\u53d1\u9001\u6d88\u606f\u5230\u5916\u90e8 \u7684\u524d\u7f00\uff09\n        registry.enableSimpleBroker(&quot;/topic&quot;);\n        //\u63a5\u6536\u5916\u90e8\u6d88\u606f \u7684\u524d\u7f00\n        registry.setApplicationDestinationPrefixes(&quot;/app&quot;);\n    }\n\n    @Override\n    public void registerStompEndpoints(StompEndpointRegistry registry) {\n        //\u5efa\u7acb\u8fde\u63a5\u70b9\n        registry.addEndpoint(&quot;/chat&quot;).withSockJS();\n    }\n}\n\n\nbean\n\n@Data\npublic class Message {\n    private String name;\n    private String content;\n}\n\nController\n\n@Controller\npublic class GreetingController {\n\n    //\u6d88\u606f\u6620\u5c04\u8def\u5f84\n    @MessageMapping(\"/hello\")\n    //\u8f6c\u53d1\u5230\"/topic/greetings\",\u6b64\u65f6\u4fbf\u7531\u914d\u7f6e\u7684\u6d88\u606f\u4ee3\u7406\u8fdb\u884c\u5e7f\u64ad\n    @SendTo(\"/topic/greetings\")\n    public Message greeting(Message message) {\n        return message;\n    }\n\n    /*@Autowired\n    SimpMessagingTemplate simpMessagingTemplate;//\u6d88\u606f\u53d1\u9001\u6a21\u677f\n\n    @MessageMapping(\"/hello\")\n    public void greeting(Message message) {\n        simpMessagingTemplate.convertAndSend(\"/topic/greetings\", message);//\u6b64\u65f6\u4e0e\u4e0a\u9762\u7684\u662f\u4e00\u6837\u7684\u6548\u679c\n    }*/\n}\n\n\u804a\u5929\u9875\u9762chat.html\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;\u7fa4\u804a&lt;/title&gt;\n    &lt;script src=&quot;/webjars/jquery/jquery.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;/webjars/sockjs-client/sockjs.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;/webjars/stomp-websocket/stomp.min.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;\u8bf7\u8f93\u5165\u7528\u6237\u540d&lt;/td&gt;\n        &lt;td&gt;&lt;input type=&quot;text&quot; id=&quot;name&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;&lt;input type=&quot;button&quot; id=&quot;connect&quot; value=&quot;\u8fde\u63a5&quot;&gt;&lt;/td&gt;\n        &lt;td&gt;&lt;input type=&quot;button&quot; id=&quot;disconnect&quot; value=&quot;\u65ad\u5f00\u8fde\u63a5&quot; disabled=&quot;disabled&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n&lt;div id=&quot;chat&quot; style=&quot;display: none&quot;&gt;\n    &lt;table&gt;\n        &lt;tr&gt;\n            &lt;td&gt;\u8bf7\u8f93\u5165\u804a\u5929\u5185\u5bb9&lt;/td&gt;\n            &lt;td&gt;&lt;input type=&quot;text&quot; id=&quot;content&quot;&gt;&lt;/td&gt;\n            &lt;td&gt;&lt;input type=&quot;button&quot; id=&quot;send&quot; value=&quot;\u53d1\u9001&quot;&gt;&lt;/td&gt;\n        &lt;/tr&gt;\n    &lt;/table&gt;\n    &lt;div id=&quot;conversation&quot;&gt;\u7fa4\u804a\u8fdb\u884c\u4e2d...&lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\n    $(function () {\n        $(&quot;#connect&quot;).click(function () {\n            connect();\n        })\n\n        $(&quot;#disconnect&quot;).click(function () {\n            if (stompClient != null) {\n                stompClient.disconnect();\n            }\n            setConnected(false);\n        });\n\n        $(&quot;#send&quot;).click(function () {\n            stompClient.send(&#39;/app/hello&#39;, {},\n                JSON.stringify({&#39;name&#39;: $(&quot;#name&quot;).val(), &#39;content&#39;: $(&quot;#content&quot;).val()}))\n        });\n\n        var stompClient = null;\n\n        function connect() {\n            if (!$(&quot;#name&quot;).val()) {\n                return;\n            }\n            var socket = new SockJS(&quot;/chat&quot;);\n            stompClient = Stomp.over(socket);\n            stompClient.connect({}, function (success) {\n                setConnected(true);//\u8bbe\u7f6e\u6309\u94ae\u72b6\u6001\n                stompClient.subscribe(&#39;/topic/greetings&#39;, function (msg) {\n                    showGreeting(JSON.parse(msg.body));\n                })\n            });\n        }\n\n        function setConnected(flag) {\n            $(&quot;#connect&quot;).prop(&quot;disabled&quot;, flag);\n            $(&quot;#disconnect&quot;).prop(&quot;disabled&quot;, !flag);\n            if (flag) {\n                $(&quot;#chat&quot;).show();\n            } else {\n                $(&quot;#chat&quot;).hide();\n            }\n        }\n\n        function showGreeting(msg) {\n            $(&quot;#conversation&quot;).append(&#39;&lt;div&gt;&#39; + msg.name + &#39;:&#39; + msg.content + &#39;&lt;/div&gt;&#39;);\n        }\n    })\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n\u6d4b\u8bd5\u7ed3\u679c\n\n\n\n\n\n3.WebSocket\u5b9e\u73b0\u5728\u7ebf\u79c1\u804a\n\n\u4f9d\u8d56\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-websocket&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n&lt;!-- https://mvnrepository.com/artifact/org.webjars/sockjs-client --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;sockjs-client&lt;/artifactId&gt;\n    &lt;version&gt;1.1.2&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- https://mvnrepository.com/artifact/org.webjars/stomp-websocket --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;stomp-websocket&lt;/artifactId&gt;\n    &lt;version&gt;2.3.3&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!-- https://mvnrepository.com/artifact/org.webjars.bower/jquery --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;jquery&lt;/artifactId&gt;\n    &lt;version&gt;3.4.1&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;!--WebJars\u662f\u5c06\u5ba2\u6237\u7aef\uff08\u6d4f\u89c8\u5668\uff09\u8d44\u6e90\uff08JS\uff0cCss\u7b49\uff09\u6253\u6210jar\u5305\u6587\u4ef6\uff0c\u4ee5\u5bf9\u8d44\u6e90\u8fdb\u884c\u7edf\u4e00\u4f9d\u8d56\u7ba1\u7406\u3002--&gt;\n&lt;!-- https://mvnrepository.com/artifact/org.webjars/webjars-locator-core --&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.webjars&lt;/groupId&gt;\n    &lt;artifactId&gt;webjars-locator-core&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n\n\u914d\u7f6e\u7c7b\n/*Security\u914d\u7f6e\u7c7b*/\n@Configuration\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n    @Bean\n    PasswordEncoder passwordEncoder() {\n        return NoOpPasswordEncoder.getInstance();\n    }\n\n    @Override\n    protected void configure(AuthenticationManagerBuilder auth) throws Exception {\n        auth.inMemoryAuthentication()\n                .withUser(&quot;xuxx&quot;)\n                .password(&quot;123&quot;)\n                .roles(&quot;admin&quot;)\n                .and()\n                .withUser(&quot;xu&quot;)\n                .password(&quot;123&quot;)\n                .roles(&quot;user&quot;);\n    }\n\n    @Override\n    protected void configure(HttpSecurity http) throws Exception {\n        http.authorizeRequests()\n                .anyRequest()\n                .authenticated()\n                .and()\n                .formLogin()\n                .permitAll();\n    }\n}\n\n/*WebSocket\u914d\u7f6e\u7c7b*/\n@Configuration\n@EnableWebSocketMessageBroker//\u5f00\u542f\u6d88\u606f\u4ee3\u7406\npublic class WebSocketConfig implements WebSocketMessageBrokerConfigurer {\n\n    @Override\n    public void configureMessageBroker(MessageBrokerRegistry registry) {\n        //\u53d1\u5230/topic\u8ba4\u4e3a\u662f\u7fa4\u804a\u6d88\u606f\uff0c\u53d1\u5230/queue\u8ba4\u4e3a\u662f\u5355\u804a\u6d88\u606f\n        registry.enableSimpleBroker(&quot;/topic&quot;, &quot;/queue&quot;);//\u53d1\u9001\u6d88\u606f\u5230\u5916\u90e8 \u7684\u524d\u7f00\n        registry.setApplicationDestinationPrefixes(&quot;/app&quot;);//\u63a5\u6536\u5916\u90e8\u6d88\u606f \u7684\u524d\u7f00\n    }\n\n    @Override\n    public void registerStompEndpoints(StompEndpointRegistry registry) {\n        registry.addEndpoint(&quot;/chat&quot;).withSockJS();\n    }\n}\n\n\nbean\n@Data\npublic class Chat {\n    private String from;\n    private String to;\n    private String content;\n}\n\n\nController\n\n@Controller\npublic class GreetingController {\n\n    @MessageMapping(\"/chat\")\n    //principal\u4e3a\u7528\u6237\u4fe1\u606f\n    public void chat(Principal principal, Chat chat) {\n        chat.setFrom(principal.getName());\n        simpMessagingTemplate.convertAndSendToUser(chat.getTo(), \"/queue/chat\", chat);\n    }\n\n}\n\n\u804a\u5929\u9875\u9762onlinechat.html\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;\u79c1\u804a&lt;/title&gt;\n    &lt;script src=&quot;/webjars/jquery/jquery.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;/webjars/sockjs-client/sockjs.min.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;/webjars/stomp-websocket/stomp.min.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;input type=&quot;button&quot; id=&quot;connect&quot; value=&quot;\u8fde\u63a5&quot;&gt;\n&lt;input type=&quot;button&quot; id=&quot;disconnect&quot; value=&quot;\u65ad\u5f00\u8fde\u63a5&quot; disabled=&quot;disabled&quot;&gt;\n&lt;hr/&gt;\n\u6d88\u606f\u5185\u5bb9\uff1a&lt;input type=&quot;text&quot; id=&quot;content&quot;&gt;\n&lt;hr/&gt;\n\u76ee\u6807\u7528\u6237\uff1a&lt;input type=&quot;text&quot; id=&quot;to&quot;&gt;\n&lt;hr/&gt;\n&lt;input type=&quot;button&quot; value=&quot;\u53d1\u9001&quot; id=&quot;send&quot;&gt;\n&lt;div id=&quot;conversation&quot;&gt;&lt;/div&gt;\n&lt;script&gt;\n    $(function () {\n        $(&quot;#connect&quot;).click(function () {\n            connect();\n        })\n\n        $(&quot;#disconnect&quot;).click(function () {\n            if (stompClient != null) {\n                stompClient.disconnect();\n            }\n            setConnected(false);\n        });\n\n        $(&quot;#send&quot;).click(function () {\n            stompClient.send(&#39;/app/chat&#39;, {},\n                JSON.stringify({&#39;to&#39;: $(&quot;#to&quot;).val(), &#39;content&#39;: $(&quot;#content&quot;).val()}))\n        });\n\n        var stompClient = null;\n\n        function connect() {\n            var socket = new SockJS(&quot;/chat&quot;);\n            stompClient = Stomp.over(socket);\n            stompClient.connect({}, function (success) {\n                setConnected(true);//\u8bbe\u7f6e\u6309\u94ae\u72b6\u6001\n                stompClient.subscribe(&#39;/user/queue/chat&#39;, function (msg) {//\u70b9\u5bf9\u70b9\u9700\u8981\u52a0\u524d\u7f00\n                    showGreeting(JSON.parse(msg.body));\n                })\n            });\n        }\n\n        function setConnected(flag) {\n            $(&quot;#connect&quot;).prop(&quot;disabled&quot;, flag);\n            $(&quot;#disconnect&quot;).prop(&quot;disabled&quot;, !flag);\n            if (flag) {\n                $(&quot;#chat&quot;).show();\n            } else {\n                $(&quot;#chat&quot;).hide();\n            }\n        }\n\n        function showGreeting(msg) {\n            $(&quot;#conversation&quot;).append(&#39;&lt;div&gt;&#39; + msg.from + &#39;:&#39; + msg.content + &#39;&lt;/div&gt;&#39;);\n        }\n    })\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n\u6d4b\u8bd5\u7ed3\u679c\n\n\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/Xuxx_Blogs/tag/Spring/"}, {"name": "WebSocket", "slug": "WebSocket", "permalink": "/Xuxx_Blogs/tag/WebSocket/"}]}, {"title": "Spring Boot\u6784\u5efaREST\u670d\u52a1", "date": "2020-05-16T02:20:00-00.00", "path": "/Xuxx_Blogs/archives/bj20/", "text": "1.\u57fa\u7840\u7248\n\n\u4f9d\u8d56\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-rest&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;/groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;version&gt;5.1.27&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n    &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n\n\u914d\u7f6e\nspring:\n  datasource:\n    username: root\n    password: root\n    url: jdbc:mysql://127.0.0.1:3306/jpa?useUnicode=true&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai\n    type: com.zaxxer.hikari.HikariDataSource\n\n  jpa:\n    database: mysql #\u8fde\u63a5\u6570\u636e\u5e93\u7c7b\u578b\n    database-platform: org.hibernate.dialect.MySQL57Dialect #\u914d\u7f6e\u9ed8\u8ba4\u5f15\u64ce\n    hibernate:\n      ddl-auto: update\n    show-sql: true\n\n\n\n\n\u5b9e\u4f53\u7c7b\n@Data\n@Entity(name = &quot;user_jpa&quot;)\npublic class User {\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    public Integer id;\n    public String name;\n    public Integer age;\n}\n\n\ndao\npublic interface UserDao extends JpaRepository&lt;User, Integer&gt; {\n}\n\n\n\u6d4b\u8bd5\n\n\u67e5\u8be2\uff08GET\u8bf7\u6c42\uff09\n\u6279\u91cf\u67e5\u8be2 \u6279\u91cf\u67e5\u8be2\n\u5206\u9875\u67e5\u8be2\n\u5206\u9875\u67e5\u8be2\n\u5206\u9875+\u6392\u5e8f\n\u5206\u9875+\u6392\u5e8f\n\u5355\u4e2a\u67e5\u8be2\n\u5355\u4e2a\u67e5\u8be2\n\n\u4fdd\u5b58\uff08POST\u8bf7\u6c42\uff09\n\u4fdd\u5b58\n\n\u66f4\u65b0\uff08PUT\u8bf7\u6c42\uff09\n\u66f4\u65b0\n\n\u5220\u9664\uff08DELETE\u8bf7\u6c42\uff09\n\u5220\u9664\n\n\n\n\n\u5230\u6b64\u5c31\u662f\u4e00\u4e2a\u57fa\u7840\u7248\u7684REST\u670d\u52a1\u4e86\u3002\n2.\u8fdb\u9636\u7248\n1.\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\n\u4fee\u6539dao\npublic interface UserDao extends JpaRepository&lt;User, Integer&gt; {\n    List&lt;User&gt; findByNameContaining(@Param(&quot;name&quot;) String name);\n}\n\n\u91cd\u542f\u9879\u76ee\uff0c\u8bbf\u95eehttp://localhost:8080/users/search\n\n\u6b64\u65f6\u4fbf\u53ef\u4ee5\u770b\u5230\u6240\u6709\u7684\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5(\u9ed8\u8ba4\u8def\u5f84\u5c31\u662f\u65b9\u6cd5\u540d)\u3002\n\u8bbf\u95ee\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5findByNameContaining\n\n\u7531\u4e8eJPA\u7684\u5173\u952e\u5b57\u547d\u540d\u4e00\u822c\u8f83\u957f\uff0c\u4e3a\u4e86\u66f4\u52a0\u4fbf\u6377\uff0c\u53ef\u4ee5\u5728\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\u4e0a\u4f7f\u7528@RestResource\u6ce8\u89e3\n@RestResource\u53c2\u6570:\n\nexported:\u662f\u5426\u66b4\u9732\uff0c\u9ed8\u8ba4\u4e3atrue\n\npath:\u8bbf\u95ee\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\u7684\u8def\u5f84\n\nrel:\u5728\u751f\u6210\u5230\u6b64\u8d44\u6e90\u7684\u94fe\u63a5\u65f6\u8981\u4f7f\u7528\u7684rel\u503c\u3002\n\npublic interface UserDao extends JpaRepository&lt;User, Integer&gt; {\n    @RestResource(path = &quot;byname&quot;, rel = &quot;findByName&quot;)\n    List&lt;User&gt; findByNameContaining(@Param(&quot;name&quot;) String name);\n}\n\n\n2.\u81ea\u5b9a\u4e49\u8bf7\u6c42\u8def\u5f84\u3001\u7ed3\u679c key \u503c\n\uff081\uff09\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u8bf7\u6c42\u8def\u5f84\u90fd\u662f\u5b9e\u4f53\u7c7b\u540d\u5c0f\u5199\u52a0 @RepositoryRestResource\n@RepositoryRestResource\u53c2\u6570\uff1a\n\npath\uff1a\u8868\u793a\u5c06\u6240\u6709\u8bf7\u6c42\u8def\u5f84\u4e2d\u7684 (\u4f8b:)uesrs\uff0c\u5982 http://localhost:8080/us\ncollectionResourceRel\uff1a\u8868\u793a\u5c06\u8fd4\u56de\u7684 JSON \u96c6\u5408\u4e2d\u7684(\u4f8b:)uesrs \u96c6\u5408\u7684 key\u3002\nitemResourceRel \uff1a\u8868\u793a\u5c06\u8fd4\u56de\u7684 JSON \u96c6\u5408\u4e2d\u7684\u5355\u4e2a(\u4f8b:)uesr \u7684 key\u3002\nexported:\u662f\u5426\u66b4\u9732\uff0c\u9ed8\u8ba4\u4e3atrue\n\n@RepositoryRestResource(collectionResourceRel = &quot;userlist&quot;, itemResourceRel = &quot;u&quot;)\npublic interface UserDao extends JpaRepository&lt;User, Integer&gt; {\n    @RestResource(path = &quot;byname&quot;, rel = &quot;findByName&quot;)\n    List&lt;User&gt; findByNameContaining(@Param(&quot;name&quot;) String name);\n}\n\n\n3.\u914d\u7f6eREST\n\n\u914d\u7f6e\u6587\u4ef6\n\n#rest \u914d\u7f6e\n  data:\n    rest:\n      #\u6dfb\u52a0\u7edf\u4e00\u524d\u7f00\n      base-path: api\n\n\u914d\u7f6e\u540ehttp://localhost:8080/users--&gt;http://localhost:8080/api/users\n#rest \u914d\u7f6e\n  data:\n    rest:\n      #\u6dfb\u52a0\u7edf\u4e00\u524d\u7f00\n      base-path: api\n      #\u662f\u5426\u5728\u521b\u5efa\u5b9e\u4f53\u540e\u8fd4\u56de\u8bb0\u5f55\uff0c\u9ed8\u8ba4\u4e3atrue\n      return-body-on-create: true\n      #\u662f\u5426\u5728\u66f4\u65b0\u5b9e\u4f53\u540e\u8fd4\u56de\u8bb0\u5f55\uff0c\u9ed8\u8ba4\u4e3atrue\n      return-body-on-update: true\n      #\u6bcf\u9875\u7684\u9ed8\u8ba4\u5927\u5c0f\uff0c\u9ed8\u8ba420\n      default-page-size: 20\n      ......\n\n\n\u7f16\u5199\u914d\u7f6e\u7c7b\uff08\u4f18\u5148\u7ea7\u66f4\u9ad8\uff09\n\n/**\n * rest\u7684\u914d\u7f6e\u7c7b\n */\n@Configuration\npublic class RestConfig implements RepositoryRestConfigurer {\n    @Override\n    public void configureRepositoryRestConfiguration(RepositoryRestConfiguration config) {\n        config.setBasePath(&quot;api&quot;).setDefaultPageSize(20);//\u94fe\u5f0f\u7f16\u7a0b\uff0c\u53ef\u4ee5\u914d\u7f6e\u591a\u4e2a\n    }\n}\n\n4.\u914d\u7f6e CORS\uff08\u89e3\u51b3\u8de8\u57df\u8bf7\u6c42\u95ee\u9898\uff09\n\u5177\u4f53\u53c2\u8003Spring Boot\u901a\u8fc7CROS\u5b9e\u73b0\u8de8\u57df\uff09\n\n\u5355\u72ec\u914d\u7f6e\uff1a\u6dfb\u52a0@CrossOrigin\u6ce8\u89e3\n\n\u5168\u5c40\u914d\u7f6e\uff1a\u7f16\u5199\u914d\u7f6e\u7c7b\uff0c\u91cd\u5199addCorsMappings\u65b9\u6cd5\n\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "Spring Boot\u6574\u5408Spring Data JPA", "date": "2020-05-13T01:20:00-00.00", "path": "/Xuxx_Blogs/archives/bj19/", "text": "1.\u4e86\u89e3JPA\n1. JPA\u662f\u4ec0\u4e48\n\nJava Persistence API\uff1a\u7528\u4e8e\u5bf9\u8c61\u6301\u4e45\u5316\u7684 API\nJava EE 5.0 \u5e73\u53f0\u6807\u51c6\u7684 ORM \u89c4\u8303\uff0c\u4f7f\u5f97\u5e94\u7528\u7a0b\u5e8f\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u8bbf\u95ee\u6301\u4e45\u5c42\nimg\n\n2. JPA\u548cHibernate\u7684\u5173\u7cfb\n\nJPA \u662f Hibernate \u7684\u4e00\u4e2a\u62bd\u8c61\uff08\u5c31\u50cfJDBC\u548cJDBC\u9a71\u52a8\u7684\u5173\u7cfb\uff09\uff1b\nJPA \u662f\u89c4\u8303\uff1aJPA \u672c\u8d28\u4e0a\u5c31\u662f\u4e00\u79cd ORM \u89c4\u8303\uff0c\u4e0d\u662fORM \u6846\u67b6\uff0c\u8fd9\u662f\u56e0\u4e3a JPA \u5e76\u672a\u63d0\u4f9b ORM \u5b9e\u73b0\uff0c\u5b83\u53ea\u662f\u5236\u8ba2\u4e86\u4e00\u4e9b\u89c4\u8303\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e9b\u7f16\u7a0b\u7684 API \u63a5\u53e3\uff0c\u4f46\u5177\u4f53\u5b9e\u73b0\u5219\u7531 ORM \u5382\u5546\u63d0\u4f9b\u5b9e\u73b0\uff1b\nHibernate \u662f\u5b9e\u73b0\uff1aHibernate \u9664\u4e86\u4f5c\u4e3a ORM \u6846\u67b6\u4e4b\u5916\uff0c\u5b83\u4e5f\u662f\u4e00\u79cd JPA \u5b9e\u73b0\n\u4ece\u529f\u80fd\u4e0a\u6765\u8bf4\uff0c JPA \u662f Hibernate \u529f\u80fd\u7684\u4e00\u4e2a\u5b50\u96c6\n\n3. JPA\u7684\u4f9b\u5e94\u5546\nJPA \u7684\u76ee\u6807\u4e4b\u4e00\u662f\u5236\u5b9a\u4e00\u4e2a\u53ef\u4ee5\u7531\u5f88\u591a\u4f9b\u5e94\u5546\u5b9e\u73b0\u7684 API\uff0cHibernate 3.2+\u3001TopLink 10.1+ \u4ee5\u53ca OpenJPA \u90fd\u63d0\u4f9b\u4e86 JPA \u7684\u5b9e\u73b0\uff0cJpa \u4f9b\u5e94\u5546\u6709\u5f88\u591a\uff0c\u5e38\u89c1\u7684\u6709\u5982\u4e0b\u56db\u79cd\uff1a\n\nHibernate\nJPA \u7684\u59cb\u4f5c\u4fd1\u8005\u5c31\u662f Hibernate \u7684\u4f5c\u8005\uff0cHibernate \u4ece 3.2 \u5f00\u59cb\u517c\u5bb9 JPA\u3002\nOpenJPA\nOpenJPA \u662f Apache \u7ec4\u7ec7\u63d0\u4f9b\u7684\u5f00\u6e90\u9879\u76ee\u3002\nTopLink\nTopLink \u4ee5\u524d\u9700\u8981\u6536\u8d39\uff0c\u5982\u4eca\u5f00\u6e90\u4e86\u3002\nEclipseLink\n\n4. JPA\u7684\u4f18\u52bf\n\n\u6807\u51c6\u5316: \u63d0\u4f9b\u76f8\u540c\u7684 API\uff0c\u8fd9\u4fdd\u8bc1\u4e86\u57fa\u4e8eJPA \u5f00\u53d1\u7684\u4f01\u4e1a\u5e94\u7528\u80fd\u591f\u7ecf\u8fc7\u5c11\u91cf\u7684\u4fee\u6539\u5c31\u80fd\u591f\u5728\u4e0d\u540c\u7684 JPA \u6846\u67b6\u4e0b\u8fd0\u884c\u3002\n\u7b80\u5355\u6613\u7528\uff0c\u96c6\u6210\u65b9\u4fbf: JPA \u7684\u4e3b\u8981\u76ee\u6807\u4e4b\u4e00\u5c31\u662f\u63d0\u4f9b\u66f4\u52a0\u7b80\u5355\u7684\u7f16\u7a0b\u6a21\u578b\uff0c\u5728 JPA \u6846\u67b6\u4e0b\u521b\u5efa\u5b9e\u4f53\u548c\u521b\u5efa Java \u7c7b\u4e00\u6837\u7b80\u5355\uff0c\u53ea\u9700\u8981\u4f7f\u7528 javax.persistence.Entity \u8fdb\u884c\u6ce8\u89e3\uff1bJPA \u7684\u6846\u67b6\u548c\u63a5\u53e3\u4e5f\u90fd\u975e\u5e38\u7b80\u5355\u3002\n\u53ef\u5ab2\u7f8eJDBC\u7684\u67e5\u8be2\u80fd\u529b: JPA\u7684\u67e5\u8be2\u8bed\u8a00\u662f\u9762\u5411\u5bf9\u8c61\u7684\uff0cJPA\u5b9a\u4e49\u4e86\u72ec\u7279\u7684JPQL\uff0c\u800c\u4e14\u80fd\u591f\u652f\u6301\u6279\u91cf\u66f4\u65b0\u548c\u4fee\u6539\u3001JOIN\u3001GROUP BY\u3001HAVING \u7b49\u901a\u5e38\u53ea\u6709 SQL \u624d\u80fd\u591f\u63d0\u4f9b\u7684\u9ad8\u7ea7\u67e5\u8be2\u7279\u6027\uff0c\u751a\u81f3\u8fd8\u80fd\u591f\u652f\u6301\u5b50\u67e5\u8be2\u3002\n\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7684\u9ad8\u7ea7\u7279\u6027: JPA \u4e2d\u80fd\u591f\u652f\u6301\u9762\u5411\u5bf9\u8c61\u7684\u9ad8\u7ea7\u7279\u6027\uff0c\u5982\u7c7b\u4e4b\u95f4\u7684\u7ee7\u627f\u3001\u591a\u6001\u548c\u7c7b\u4e4b\u95f4\u7684\u590d\u6742\u5173\u7cfb\uff0c\u6700\u5927\u9650\u5ea6\u7684\u4f7f\u7528\u9762\u5411\u5bf9\u8c61\u7684\u6a21\u578b\n\n5. JPA\u5305\u542b\u7684\u6280\u672f\n\nORM \u6620\u5c04\u5143\u6570\u636e\uff1aJPA \u652f\u6301 XML \u548c JDK 5.0 \u6ce8\u89e3\u4e24\u79cd\u5143\u6570\u636e\u7684\u5f62\u5f0f\uff0c\u5143\u6570\u636e\u63cf\u8ff0\u5bf9\u8c61\u548c\u8868\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u6846\u67b6\u636e\u6b64\u5c06\u5b9e\u4f53\u5bf9\u8c61\u6301\u4e45\u5316\u5230\u6570\u636e\u5e93\u8868\u4e2d\u3002\n\nJPA \u7684 API\uff1a\u7528\u6765\u64cd\u4f5c\u5b9e\u4f53\u5bf9\u8c61\uff0c\u6267\u884cCRUD\u64cd\u4f5c\uff0c\u6846\u67b6\u5728\u540e\u53f0\u5b8c\u6210\u6240\u6709\u7684\u4e8b\u60c5\uff0c\u5f00\u53d1\u8005\u4ece\u7e41\u7410\u7684 JDBC \u548c SQL \u4ee3\u7801\u4e2d\u89e3\u8131\u51fa\u6765\u3002\n\n\u67e5\u8be2\u8bed\u8a00\uff08JPQL\uff09\uff1a\u8fd9\u662f\u6301\u4e45\u5316\u64cd\u4f5c\u4e2d\u5f88\u91cd\u8981\u7684\u4e00\u4e2a\u65b9\u9762\uff0c\u901a\u8fc7\u9762\u5411\u5bf9\u8c61\u800c\u975e\u9762\u5411\u6570\u636e\u5e93\u7684\u67e5\u8be2\u8bed\u8a00\u67e5\u8be2\u6570\u636e\uff0c\u907f\u514d\u7a0b\u5e8f\u548c\u5177\u4f53\u7684 SQL \u7d27\u5bc6\u8026\u5408\u3002\n## Spring Data\n\n\nSpring Data \u662f Spring \u7684\u4e00\u4e2a\u5b50\u9879\u76ee\u3002\u7528\u4e8e\u7b80\u5316\u6570\u636e\u5e93\u8bbf\u95ee\uff0c\u652f\u6301NoSQL \u548c \u5173\u7cfb\u6570\u636e\u5b58\u50a8\u3002\u5176\u4e3b\u8981\u76ee\u6807\u662f\u4f7f\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u53d8\u5f97\u65b9\u4fbf\u5feb\u6377\u3002Spring Data \u5177\u6709\u5982\u4e0b\u7279\u70b9\uff1a\n\nSpringData \u9879\u76ee\u652f\u6301 NoSQL \u5b58\u50a8\uff1a\nMongoDB \uff08\u6587\u6863\u6570\u636e\u5e93\uff09\nNeo4j\uff08\u56fe\u5f62\u6570\u636e\u5e93\uff09\nRedis\uff08\u952e/\u503c\u5b58\u50a8\uff09\nHbase\uff08\u5217\u65cf\u6570\u636e\u5e93\uff09\nSpringData \u9879\u76ee\u6240\u652f\u6301\u7684\u5173\u7cfb\u6570\u636e\u5b58\u50a8\u6280\u672f\uff1a\nJDBC\nJPA\nSpring Data Jpa \u81f4\u529b\u4e8e\u51cf\u5c11\u6570\u636e\u8bbf\u95ee\u5c42 (DAO) \u7684\u5f00\u53d1\u91cf. \u5f00\u53d1\u8005\u552f\u4e00\u8981\u505a\u7684\uff0c\u5c31\u662f\u58f0\u660e\u6301\u4e45\u5c42\u7684\u63a5\u53e3\uff0c\u5176\u4ed6\u90fd\u4ea4\u7ed9 Spring Data JPA \u6765\u5e2e\u4f60\u5b8c\u6210\uff01\n\u6846\u67b6\u600e\u4e48\u53ef\u80fd\u4ee3\u66ff\u5f00\u53d1\u8005\u5b9e\u73b0\u4e1a\u52a1\u903b\u8f91\u5462\uff1f\u6bd4\u5982\uff1a\u5f53\u6709\u4e00\u4e2a UserDao.findUserById() \u8fd9\u6837\u4e00\u4e2a\u65b9\u6cd5\u58f0\u660e\uff0c\u5927\u81f4\u5e94\u8be5\u80fd\u5224\u65ad\u51fa\u8fd9\u662f\u6839\u636e\u7ed9\u5b9a\u6761\u4ef6\u7684 ID \u67e5\u8be2\u51fa\u6ee1\u8db3\u6761\u4ef6\u7684 User \u5bf9\u8c61\u3002Spring Data JPA \u505a\u7684\u4fbf\u662f\u89c4\u8303\u65b9\u6cd5\u7684\u540d\u5b57\uff0c\u6839\u636e\u7b26\u5408\u89c4\u8303\u7684\u540d\u5b57\u6765\u786e\u5b9a\u65b9\u6cd5\u9700\u8981\u5b9e\u73b0\u4ec0\u4e48\u6837\u7684\u903b\u8f91\u3002\n\n\u8865\u5145\uff1a\n\u5173\u4e8e JPQL\n\nJPQL\u8bed\u8a00\uff0c\u5373 Java Persistence Query Language \u7684\u7b80\u79f0\u3002JPQL \u662f\u4e00\u79cd\u548c SQL \u975e\u5e38\u7c7b\u4f3c\u7684\u4e2d\u95f4\u6027\u548c\u5bf9\u8c61\u5316\u67e5\u8be2\u8bed\u8a00\uff0c\u5b83\u6700\u7ec8\u4f1a\u88ab\u7f16\u8bd1\u6210\u9488\u5bf9\u4e0d\u540c\u5e95\u5c42\u6570\u636e\u5e93\u7684 SQL \u67e5\u8be2\uff0c\u4ece\u800c\u5c4f\u853d\u4e0d\u540c\u6570\u636e\u5e93\u7684\u5dee\u5f02\u3002JPQL\u8bed\u8a00\u7684\u8bed\u53e5\u53ef\u4ee5\u662f select \u8bed\u53e5\u3001update \u8bed\u53e5\u6216delete\u8bed\u53e5\uff0c\u5b83\u4eec\u90fd\u901a\u8fc7 Query \u63a5\u53e3\u5c01\u88c5\u6267\u884c\u3002\nQuery\u63a5\u53e3\u5c01\u88c5\u4e86\u6267\u884c\u6570\u636e\u5e93\u67e5\u8be2\u7684\u76f8\u5173\u65b9\u6cd5\u3002\u8c03\u7528 EntityManager \u7684 createQuery\u3001create NamedQuery \u53ca createNativeQuery \u65b9\u6cd5\u53ef\u4ee5\u83b7\u5f97\u67e5\u8be2\u5bf9\u8c61\uff0c\u8fdb\u800c\u53ef\u8c03\u7528 Query \u63a5\u53e3\u7684\u76f8\u5173\u65b9\u6cd5\u6765\u6267\u884c\u67e5\u8be2\u64cd\u4f5c\u3002\nQuery\u63a5\u53e3\u7684\u4e3b\u8981\u65b9\u6cd5\u5982\u4e0b\uff1a\n\n\nint executeUpdate(); | \u7528\u4e8e\u6267\u884cupdate\u6216delete\u8bed\u53e5\u3002\nList getResultList(); | \u7528\u4e8e\u6267\u884cselect\u8bed\u53e5\u5e76\u8fd4\u56de\u7ed3\u679c\u96c6\u5b9e\u4f53\u5217\u8868\u3002\nObject getSingleResult(); | \u7528\u4e8e\u6267\u884c\u53ea\u8fd4\u56de\u5355\u4e2a\u7ed3\u679c\u5b9e\u4f53\u7684select\u8bed\u53e5\u3002\nQuery setFirstResult(int startPosition); | \u7528\u4e8e\u8bbe\u7f6e\u4ece\u54ea\u4e2a\u5b9e\u4f53\u8bb0\u5f55\u5f00\u59cb\u8fd4\u56de\u67e5\u8be2\u7ed3\u679c\u3002\nQuery setMaxResults(int maxResult); | \u7528\u4e8e\u8bbe\u7f6e\u8fd4\u56de\u7ed3\u679c\u5b9e\u4f53\u7684\u6700\u5927\u6570\u3002\u4e0esetFirstResult\u7ed3\u5408\u4f7f\u7528\u53ef\u5b9e\u73b0\u5206\u9875\u67e5\u8be2\u3002\nQuery setFlushMode(FlushModeType flushMode); | \u8bbe\u7f6e\u67e5\u8be2\u5bf9\u8c61\u7684Flush\u6a21\u5f0f\u3002\u53c2\u6570\u53ef\u4ee5\u53d62\u4e2a\u679a\u4e3e\u503c\uff1aFlushModeType.AUTO \u4e3a\u81ea\u52a8\u66f4\u65b0\u6570\u636e\u5e93\u8bb0\u5f55\uff0cFlushMode Type.COMMIT \u4e3a\u76f4\u5230\u63d0\u4ea4\u4e8b\u52a1\u65f6\u624d\u66f4\u65b0\u6570\u636e\u5e93\u8bb0\u5f55\u3002\nsetHint(String hintName, Object value); | \u8bbe\u7f6e\u4e0e\u67e5\u8be2\u5bf9\u8c61\u76f8\u5173\u7684\u7279\u5b9a\u4f9b\u5e94\u5546\u53c2\u6570\u6216\u63d0\u793a\u4fe1\u606f\u3002\u53c2\u6570\u540d\u53ca\u5176\u53d6\u503c\u9700\u8981\u53c2\u8003\u7279\u5b9a JPA \u5b9e\u73b0\u5e93\u63d0\u4f9b\u5546\u7684\u6587\u6863\u3002\u5982\u679c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u65e0\u6548\u5c06\u629b\u51faIllegalArgumentException\u5f02\u5e38\u3002\nsetParameter(int position, Object value); | \u4e3a\u67e5\u8be2\u8bed\u53e5\u7684\u6307\u5b9a\u4f4d\u7f6e\u53c2\u6570\u8d4b\u503c\u3002Position \u6307\u5b9a\u53c2\u6570\u5e8f\u53f7\uff0cvalue \u4e3a\u8d4b\u7ed9\u53c2\u6570\u7684\u503c\u3002\nsetParameter(int position, Date d, TemporalType type); | \u4e3a\u67e5\u8be2\u8bed\u53e5\u7684\u6307\u5b9a\u4f4d\u7f6e\u53c2\u6570\u8d4b Date \u503c\u3002Position \u6307\u5b9a\u53c2\u6570\u5e8f\u53f7\uff0cvalue \u4e3a\u8d4b\u7ed9\u53c2\u6570\u7684\u503c\uff0ctemporalType \u53d6 TemporalType \u7684\u679a\u4e3e\u5e38\u91cf\uff0c\u5305\u62ec DATE\u3001TIME \u53ca TIMESTAMP \u4e09\u4e2a\uff0c\uff0c\u7528\u4e8e\u5c06 Java \u7684 Date \u578b\u503c\u4e34\u65f6\u8f6c\u6362\u4e3a\u6570\u636e\u5e93\u652f\u6301\u7684\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\uff08java.sql.Date\u3001java.sql.Time\u53cajava.sql.Timestamp\uff09\u3002\nsetParameter(int position, Calendar c, TemporalType type); | \u4e3a\u67e5\u8be2\u8bed\u53e5\u7684\u6307\u5b9a\u4f4d\u7f6e\u53c2\u6570\u8d4b Calenda r\u503c\u3002position \u6307\u5b9a\u53c2\u6570\u5e8f\u53f7\uff0cvalue \u4e3a\u8d4b\u7ed9\u53c2\u6570\u7684\u503c\uff0ctemporalType \u7684\u542b\u4e49\u53ca\u53d6\u820d\u540c\u524d\u3002\nsetParameter(String name, Object value); | \u4e3a\u67e5\u8be2\u8bed\u53e5\u7684\u6307\u5b9a\u540d\u79f0\u53c2\u6570\u8d4b\u503c\u3002\nsetParameter(String name, Date d, TemporalType type); | \u4e3a\u67e5\u8be2\u8bed\u53e5\u7684\u6307\u5b9a\u540d\u79f0\u53c2\u6570\u8d4b Date \u503c,\u7528\u6cd5\u540c\u524d\u3002\nsetParameter(String name, Calendar c, TemporalType type); | \u4e3a\u67e5\u8be2\u8bed\u53e5\u7684\u6307\u5b9a\u540d\u79f0\u53c2\u6570\u8bbe\u7f6eCalendar\u503c\u3002name\u4e3a\u53c2\u6570\u540d\uff0c\u5176\u5b83\u540c\u524d\u3002\u8be5\u65b9\u6cd5\u8c03\u7528\u65f6\u5982\u679c\u53c2\u6570\u4f4d\u7f6e\u6216\u53c2\u6570\u540d\u4e0d\u6b63\u786e\uff0c\u6216\u8005\u6240\u8d4b\u7684\u53c2\u6570\u503c\u7c7b\u578b\u4e0d\u5339\u914d\uff0c\u5c06\u629b\u51fa IllegalArgumentException \u5f02\u5e38\u3002\n\nJPQL \u4e3e\u4f8b\n\u548c\u5728 SQL \u4e2d\u4e00\u6837\uff0cJPQL \u4e2d\u7684 select \u8bed\u53e5\u7528\u4e8e\u6267\u884c\u67e5\u8be2\u3002\u5176\u8bed\u6cd5\u53ef\u8868\u793a\u4e3a\uff1a\nselect_clause form_clause [where_clause] [groupby_clause] [having_clause] [orderby_clause]\n\u5176\u4e2d\uff1a\n\nfrom \u5b50\u53e5\u662f\u67e5\u8be2\u8bed\u53e5\u7684\u5fc5\u9009\u5b50\u53e5\u3002\nselect \u7528\u6765\u6307\u5b9a\u67e5\u8be2\u8fd4\u56de\u7684\u7ed3\u679c\u5b9e\u4f53\u6216\u5b9e\u4f53\u7684\u67d0\u4e9b\u5c5e\u6027\u3002\nfrom \u5b50\u53e5\u58f0\u660e\u67e5\u8be2\u6e90\u5b9e\u4f53\u7c7b\uff0c\u5e76\u6307\u5b9a\u6807\u8bc6\u7b26\u53d8\u91cf\uff08\u76f8\u5f53\u4e8eSQL\u8868\u7684\u522b\u540d\uff09\u3002\n\u5982\u679c\u4e0d\u5e0c\u671b\u8fd4\u56de\u91cd\u590d\u5b9e\u4f53\uff0c\u53ef\u4f7f\u7528\u5173\u952e\u5b57 distinct \u4fee\u9970\u3002select\u3001from \u90fd\u662f JPQL \u7684\u5173\u952e\u5b57\uff0c\u901a\u5e38\u5168\u5927\u5199\u6216\u5168\u5c0f\u5199\uff0c\u5efa\u8bae\u4e0d\u8981\u5927\u5c0f\u5199\u6df7\u7528\u3002\n\n\u5728 JPQL \u4e2d\uff0c\u67e5\u8be2\u6240\u6709\u5b9e\u4f53\u7684 JPQL \u67e5\u8be2\u8bed\u53e5\u5f88\u7b80\u5355\uff0c\u5982\u4e0b\uff1a\nselect o from Order o \u6216 select o from Order as o\n\u8fd9\u91cc\u5173\u952e\u5b57 as \u53ef\u4ee5\u7701\u53bb\uff0c\u6807\u8bc6\u7b26\u53d8\u91cf\u7684\u547d\u540d\u89c4\u8303\u4e0e Java \u6807\u8bc6\u7b26\u76f8\u540c\uff0c\u4e14\u533a\u5206\u5927\u5c0f\u5199,\u8c03\u7528 EntityManager \u7684 createQuery() \u65b9\u6cd5\u53ef\u521b\u5efa\u67e5\u8be2\u5bf9\u8c61\uff0c\u63a5\u7740\u8c03\u7528 Query \u63a5\u53e3\u7684 getResultList() \u65b9\u6cd5\u5c31\u53ef\u83b7\u5f97\u67e5\u8be2\u7ed3\u679c\u96c6\uff0c\u5982\u4e0b\uff1a\n\nQuery query = entityManager.createQuery( \"select o from Order o\"); List orders = query.getResultList();Iterator iterator = orders.iterator();while(iterator.hasNext() ) {  // \u5904\u7406Order}\n\u5176\u4ed6\u65b9\u6cd5\u7684\u4e0e\u6b64\u7c7b\u4f3c\uff0c\u8fd9\u91cc\u4e0d\u518d\u8d58\u8ff0\u3002\n2.\u4f7f\u7528JPA\n1.\u7b80\u5355\u4f7f\u7528\n&lt;!--\u4f9d\u8d56--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;/groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;version&gt;5.1.27&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n    &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n    &lt;optional&gt;true&lt;/optional&gt;\n&lt;/dependency&gt;\n\n# \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u53ca\u6570\u636e\u5e93\u9a71\u52a8\nspring.datasource.type=com.zaxxer.hikari.HikariDataSource\nspring.datasource.username=root\nspring.datasource.password=root\nspring.datasource.url=jdbc:mysql://localhost:3306/test?useSSL=false&amp;serverTimezone=Asia/Shanghai\n\n#jpa\nspring.jpa.database=mysql\nspring.jpa.database-platform=mysql\n# \u751f\u6210\u65b9\u5f0f update \u8fd0\u884c\u65f6\u5728\u6570\u636e\u5e93\u751f\u6210\u8868\uff0c\u82e5\u6709\u66f4\u65b0\u5219\u53bb\u66f4\u65b0\u6570\u636e\nspring.jpa.hibernate.ddl-auto=update\n# \u63a7\u5236\u53f0\u5c55\u793a JPA \u6846\u67b6\u751f\u6210\u7684sql\u8bed\u53e5\nspring.jpa.show-sql=true\n# \u4f7f\u7528JPA \u521b\u5efa\u8868\u65f6\uff0c\u9ed8\u8ba4\u4f7f\u7528\u7684\u5b58\u50a8\u5f15\u64ce\u662fMyISAM\uff0c\u901a\u8fc7\u6307\u5b9a\u6570\u636e\u5e93\u7248\u672c\uff0c\u53ef\u4ee5\u4f7f\u7528InnoDB\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect\n\n##\u662f\u5426\u81ea\u52a8\u751f\u6210dd\n#spring.jpa.generate-ddl=true\n# \u683c\u5f0f\u5316sql\u8bed\u53e5\n#spring.jpa.properties.hibernate-format_sql=true\n# \u89e3\u51b3 hibernate multiple merge \u95ee\u9898\n#spring.jpa.properties.hibernate.event.merge.entity_copy_observer = allow\n\n/**\n * @author Xuxx3309\n * @Description\n * @create 2020-05-15 0:41\n */\n@Data\n//\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7c7b\u540d\u5373\u8868\u540d\n@Entity(name = &quot;t_book&quot;)\npublic class Book {\n    //\u6807\u6ce8\u4e3b\u952e\u5b57\u6bb5\n    @Id\n    //\u4e3b\u952e\u81ea\u589e\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    //@Column(name = &quot;id&quot;, length = 50, nullable = false)\n    private Integer id;\n    //@Column(name = &quot;name&quot;, length = 50, nullable = false)\n    private String name;\n    private String author;\n}\n\n/**\n * @author Xuxx3309\n * @Description\n * @create 2020-05-15 0:51\n */\npublic interface BookDao extends JpaRepository&lt;Book, Integer&gt; {\n}\n\n\u8865\u5145\uff1a\n\u4e0e\u7ee7\u627f Repository \u63a5\u53e3\u7b49\u4ef7\u7684\u4e00\u79cd\u65b9\u5f0f\u662f\u5728\u6301\u4e45\u5c42\u63a5\u53e3\u4e0a\u4f7f\u7528 @RepositoryDefinition \u6ce8\u89e3\uff0c\u5e76\u4e3a\u5176\u6307\u5b9a domainClass \u548c idClass \u5c5e\u6027\u3002\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a\n@RepositoryDefinition(domainClass = Book.class, idClass = Inetger.class)\npublic interface BookDao{\n}\n\n//\u6d4b\u8bd5JPA\u4e2d\u81ea\u5e26\u7684\u65b9\u6cd5\n\n@SpringBootTest\nclass JpaApplicationTests {\n    @Autowired\n    BookDao bookDao;\n\n    @Test\n    void testSave() {\n        Book book = new Book();\n        book.setName(&quot;JAVA\u5f00\u53d1\u6307\u5357&quot;);\n        book.setAuthor(&quot;Xuxx&quot;);\n        Book save_book = bookDao.save(book);\n        System.out.println(save_book);\n    }\n\n    @Test\n    public void testUpdate() {\n        Book book = new Book();\n        book.setId(1);\n        book.setName(&quot;JAVA\u5f00\u53d1\u6307\u5357&quot;);\n        book.setAuthor(&quot;X&quot;);\n        //saveAndFlush:\u6570\u636e\u5e93\u4e2d\u6709\uff08\u6839\u636eid\u5224\u65ad\uff09\u5c31\u66f4\u65b0\uff0c\u6ca1\u6709\u5c31\u6dfb\u52a0\n        Book saveAndFlush = bookDao.saveAndFlush(book);\n        System.out.println(saveAndFlush);\n    }\n\n    @Test\n    public void testDaelete() {\n        bookDao.deleteById(1);\n    }\n\n    @Test\n    public void testFind1() {\n        Optional&lt;Book&gt; book1 = bookDao.findById(1);\n        System.out.println(book1.get());\n\n        List&lt;Book&gt; books = bookDao.findAll();\n        for (Book book : books) {\n            System.out.println(book);\n        }\n    }\n\n    /**\n     * \u6392\u5e8f\n     */\n    @Test\n    public void testFind2() {\n        Sort sort = Sort.by(Sort.Direction.DESC, &quot;id&quot;);\n        List&lt;Book&gt; books = bookDao.findAll(sort);\n        for (Book book : books) {\n            System.out.println(book);\n        }\n    }\n\n    /**\n     * \u5206\u9875\n     */\n    @Test\n    public void testFind3() {\n        //of\u53c2\u6570\uff1a1.\u7b2c\u51e0\u9875\uff08\u4ece0\u5f00\u59cb\uff09 2.\u6bcf\u9875\u51e0\u6761\n        Pageable pageable = PageRequest.of(0, 2);\n        Page&lt;Book&gt; page = bookDao.findAll(pageable);\n        System.out.println(&quot;\u603b\u8bb0\u5f55\u6570\uff1a&quot; + page.getTotalElements());\n        System.out.println(&quot;\u603b\u9875\u6570\uff1a&quot; + page.getTotalPages());\n        System.out.println(&quot;\u5f53\u524d\u9875\u6570\uff08\u4ece0\u5f00\u59cb\uff09\uff1a&quot; + page.getNumber());\n        System.out.println(&quot;\u6bcf\u9875\u8bb0\u5f55\u6570\uff1a&quot; + page.getSize());\n        System.out.println(&quot;\u5f53\u524d\u9875\u4e2d\u5b58\u5728\u7684\u8bb0\u5f55\u6570\uff1a&quot; + page.getNumberOfElements());\n        System.out.println(&quot;\u662f\u5426\u662f\u9996\u9875\uff1a&quot; + page.isFirst());\n        System.out.println(&quot;\u662f\u5426\u662f\u5c3e\u9875\u9875\uff1a&quot; + page.isLast());\n        System.out.println(&quot;\u67e5\u8be2\u7ed3\u679c\uff1a&quot; + page.getContent());\n        for (Book book : page) {\n            System.out.println(book);\n        }\n    }\n\n    /**\n     * \u6392\u5e8f+\u5206\u9875\n     */\n    @Test\n    public void testFind4() {\n        Sort sort = Sort.by(Sort.Direction.DESC, &quot;id&quot;);\n        Pageable pageable = PageRequest.of(0, 2, sort);\n        Page&lt;Book&gt; page = bookDao.findAll(pageable);\n        for (Book book : page) {\n            System.out.println(book);\n        }\n    }\n}\n\n2.\u5173\u952e\u5b57\u81ea\u5b9a\u4e49\u67e5\u8be2\u65b9\u6cd5\n\u65b9\u6cd5\u5b9a\u4e49\u89c4\u8303\n1.\u7b80\u5355\u6761\u4ef6\u67e5\u8be2\n\n\u6309\u7167 Spring Data \u7684\u89c4\u8303\uff0c\u67e5\u8be2\u65b9\u6cd5\u4ee5 find | read | get \u5f00\u5934\n\u6d89\u53ca\u6761\u4ef6\u67e5\u8be2\u65f6\uff0c\u6761\u4ef6\u7684\u5c5e\u6027\u7528\u6761\u4ef6\u5173\u952e\u5b57\u8fde\u63a5\uff0c\u8981\u6ce8\u610f\u7684\u662f\uff1a\u6761\u4ef6\u5c5e\u6027\u4ee5\u9996\u5b57\u6bcd\u5927\u5199\n\u652f\u6301\u5c5e\u6027\u7684\u7ea7\u8054\u67e5\u8be2. \u82e5\u5f53\u524d\u7c7b\u6709\u7b26\u5408\u6761\u4ef6\u7684\u5c5e\u6027, \u5219\u4f18\u5148\u4f7f\u7528, \u800c\u4e0d\u4f7f\u7528\u7ea7\u8054\u5c5e\u6027. \u82e5\u9700\u8981\u4f7f\u7528\u7ea7\u8054\u5c5e\u6027, \u5219\u5c5e\u6027\u4e4b\u95f4\u4f7f\u7528 _ \u8fdb\u884c\u8fde\u63a5.\n\n\u67e5\u8be2\u4e3e\u4f8b\uff1a\n1.\u6309\u7167id\u67e5\u8be2\n\nUser getUserById(Long id);\n2.\u67e5\u8be2\u6240\u6709\u5e74\u9f84\u5c0f\u4e8e90\u5c81\u7684\u4eba\n\nList&lt;User&gt; findByAgeLessThan(Long age);\n3.\u67e5\u8be2\u6240\u6709\u59d3\u8d75\u7684\u4eba\uff08\u4ee5\u8d75\u5f00\u5934\uff09\n\nList&lt;User&gt; findByUsernameStartingWith(String u);\n4.\u67e5\u8be2\u6240\u6709\u59d3\u8d75\u7684\u3001\u5e76\u4e14id\u5927\u4e8e50\u7684\u4eba\n\nList&lt;User&gt; findByUsernameStartingWithAndIdGreaterThan(String name, Long id);\n5.\u67e5\u8be2\u6240\u6709\u59d3\u540d\u4e2d\u5305\u542b\u201d\u4e0a\u201d\u5b57\u7684\u4eba\n\nList&lt;User&gt; findByUsernameContaining(String name);\n6.\u67e5\u8be2\u6240\u6709\u59d3\u8d75\u7684\u6216\u8005\u5e74\u9f84\u5927\u4e8e90\u5c81\u7684\n\nList&lt;User&gt; findByUsernameStartingWithOrAgeGreaterThan(String name, Long age);\n7.\u67e5\u8be2\u6240\u6709\u89d2\u8272\u4e3a1\u7684\u7528\u6237\n\nList&lt;User&gt; findByRole_Id(Long id);\n8.\u6a21\u7cca\u67e5\u8be2\uff08\u53ef\u4ee5\u76f4\u63a5\u7528 \u4f8b5\uff09\n\n//\u8c03\u7528\u65f6\u8981\u52a0 \"%\"+name+\"%\"\nList&lt;User&gt; findByNameLike(String name);\n2.\u652f\u6301\u7684\u5173\u952e\u5b57\n\u652f\u6301\u7684\u67e5\u8be2\u5173\u952e\u5b57\u5982\u4e0b\u56fe\uff1a\n\n3.\u67e5\u8be2\u65b9\u6cd5\u6d41\u7a0b\u89e3\u6790\n\u4e3a\u4ec0\u4e48\u5199\u4e0a\u65b9\u6cd5\u540d\uff0cJPA\u5c31\u77e5\u9053\u4f60\u60f3\u5e72\u561b\u4e86\u5462\uff1f\u5047\u5982\u521b\u5efa\u5982\u4e0b\u7684\u67e5\u8be2\uff1afindByUserDepUuid()\uff0c\u6846\u67b6\u5728\u89e3\u6790\u8be5\u65b9\u6cd5\u65f6\uff0c\u9996\u5148\u5254\u9664 findBy\uff0c\u7136\u540e\u5bf9\u5269\u4e0b\u7684\u5c5e\u6027\u8fdb\u884c\u89e3\u6790\uff0c\u5047\u8bbe\u67e5\u8be2\u5b9e\u4f53\u4e3aDoc\uff1a\n\n\u5148\u5224\u65ad userDepUuid \uff08\u6839\u636e POJO \u89c4\u8303\uff0c\u9996\u5b57\u6bcd\u53d8\u4e3a\u5c0f\u5199\uff09\u662f\u5426\u4e3a\u67e5\u8be2\u5b9e\u4f53\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u5982\u679c\u662f\uff0c\u5219\u8868\u793a\u6839\u636e\u8be5\u5c5e\u6027\u8fdb\u884c\u67e5\u8be2\uff1b\u5982\u679c\u6ca1\u6709\u8be5\u5c5e\u6027\uff0c\u7ee7\u7eed\u7b2c\u4e8c\u6b65\uff1b\n\u4ece\u53f3\u5f80\u5de6\u622a\u53d6\u7b2c\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5b57\u7b26\u4e32(\u6b64\u5904\u4e3aUuid)\uff0c\u7136\u540e\u68c0\u67e5\u5269\u4e0b\u7684\u5b57\u7b26\u4e32\u662f\u5426\u4e3a\u67e5\u8be2\u5b9e\u4f53\u7684\u4e00\u4e2a\u5c5e\u6027\uff0c\u5982\u679c\u662f\uff0c\u5219\u8868\u793a\u6839\u636e\u8be5\u5c5e\u6027\u8fdb\u884c\u67e5\u8be2\uff1b\u5982\u679c\u6ca1\u6709\u8be5\u5c5e\u6027\uff0c\u5219\u91cd\u590d\u7b2c\u4e8c\u6b65\uff0c\u7ee7\u7eed\u4ece\u53f3\u5f80\u5de6\u622a\u53d6\uff1b\u6700\u540e\u5047\u8bbe user \u4e3a\u67e5\u8be2\u5b9e\u4f53\u7684\u4e00\u4e2a\u5c5e\u6027\uff1b\n\u63a5\u7740\u5904\u7406\u5269\u4e0b\u90e8\u5206\uff08DepUuid\uff09\uff0c\u5148\u5224\u65ad user \u6240\u5bf9\u5e94\u7684\u7c7b\u578b\u662f\u5426\u6709depUuid\u5c5e\u6027\uff0c\u5982\u679c\u6709\uff0c\u5219\u8868\u793a\u8be5\u65b9\u6cd5\u6700\u7ec8\u662f\u6839\u636e \u201c Doc.user.depUuid\u201d \u7684\u53d6\u503c\u8fdb\u884c\u67e5\u8be2\uff1b\u5426\u5219\u7ee7\u7eed\u6309\u7167\u6b65\u9aa4 2 \u7684\u89c4\u5219\u4ece\u53f3\u5f80\u5de6\u622a\u53d6\uff0c\u6700\u7ec8\u8868\u793a\u6839\u636e \u201cDoc.user.dep.uuid\u201d \u7684\u503c\u8fdb\u884c\u67e5\u8be2\u3002\n\u53ef\u80fd\u4f1a\u5b58\u5728\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u6bd4\u5982 Doc\u5305\u542b\u4e00\u4e2a user \u7684\u5c5e\u6027\uff0c\u4e5f\u6709\u4e00\u4e2a userDep \u5c5e\u6027\uff0c\u6b64\u65f6\u4f1a\u5b58\u5728\u6df7\u6dc6\u3002\u53ef\u4ee5\u660e\u786e\u5728\u5c5e\u6027\u4e4b\u95f4\u52a0\u4e0a \u201c_\u201d \u4ee5\u663e\u5f0f\u8868\u8fbe\u610f\u56fe\uff0c\u6bd4\u5982 \u201cfindByUser_DepUuid()\u201d \u6216\u8005 \u201cfindByUserDep_uuid()\u201d\n\u8fd8\u6709\u4e00\u4e9b\u7279\u6b8a\u7684\u53c2\u6570\uff1a\u4f8b\u5982\u5206\u9875\u6216\u6392\u5e8f\u7684\u53c2\u6570\uff1a\n\n\nPage&lt;UserModel&gt; findByName(String name, Pageable pageable);  List&lt;UserModel&gt; findByName(String name, Sort sort);\n@Query\u6ce8\u89e3\n\u6709\u7684\u65f6\u5019\uff0c\u8fd9\u91cc\u63d0\u4f9b\u7684\u67e5\u8be2\u5173\u952e\u5b57\u5e76\u4e0d\u80fd\u6ee1\u8db3\u6211\u4eec\u7684\u67e5\u8be2\u9700\u6c42\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528 @Query \u5173\u952e\u5b57\uff0c\u6765\u81ea\u5b9a\u4e49\u67e5\u8be2 SQL\uff0c\u4f8b\u5982\u67e5\u8be2Id\u6700\u5927\u7684User\uff1a\n\n@Query(\"select u from t_user u where id=(select max(id) from t_user)\")\nUser getMaxIdUser();\n\u5982\u679c\u67e5\u8be2\u6709\u53c2\u6570\u7684\u8bdd\uff0c\u53c2\u6570\u6709\u4e24\u79cd\u4e0d\u540c\u7684\u4f20\u9012\u65b9\u5f0f:\n1.\u5229\u7528\u4e0b\u6807\u7d22\u5f15\u4f20\u53c2\uff0c\u7d22\u5f15\u53c2\u6570\u5982\u4e0b\u6240\u793a\uff0c\u7d22\u5f15\u503c\u4ece1\u5f00\u59cb\uff0c\u67e5\u8be2\u4e2d \u201d?X\u201d \u4e2a\u6570\u9700\u8981\u4e0e\u65b9\u6cd5\u5b9a\u4e49\u7684\u53c2\u6570\u4e2a\u6570\u76f8\u4e00\u81f4\uff0c\u5e76\u4e14\u987a\u5e8f\u4e5f\u8981\u4e00\u81f4\uff1a\n\n@Query(\"select u from t_user u where id&gt;?1 and username like ?2\")\nList&lt;User&gt; selectUserByParam(Long id, String name);\n2.\u547d\u540d\u53c2\u6570\uff08\u63a8\u8350\uff09\uff1a\u8fd9\u79cd\u65b9\u5f0f\u53ef\u4ee5\u5b9a\u4e49\u597d\u53c2\u6570\u540d\uff0c\u8d4b\u503c\u65f6\u91c7\u7528@Param(\u201c\u53c2\u6570\u540d\u201d)\uff0c\u800c\u4e0d\u7528\u7ba1\u987a\u5e8f\uff1a\n\n@Query(\"select u from t_user u where id&gt;:id and username like :name\")\nList&lt;User&gt; selectUserByParam2(@Param(\"name\") String name, @Param(\"id\") Long id);\n\u67e5\u8be2\u65f6\u5019\uff0c\u4e5f\u53ef\u4ee5\u662f\u4f7f\u7528\u539f\u751f\u7684SQL\u67e5\u8be2\uff0c\u5982\u4e0b\uff1a\n\n@Query(value = \"select * from t_user\",nativeQuery = true)\nList&lt;User&gt; selectAll();\n@Modifying\u6ce8\u89e3\n\u6d89\u53ca\u5230\u6570\u636e\u4fee\u6539\u64cd\u4f5c\uff0c\u53ef\u4ee5\u4f7f\u7528 @Modifying \u6ce8\u89e3\uff0c@Query \u4e0e @Modifying \u8fd9\u4e24\u4e2a annotation\u4e00\u8d77\u58f0\u660e\uff0c\u53ef\u5b9a\u4e49\u4e2a\u6027\u5316\u66f4\u65b0\u64cd\u4f5c\uff0c\u4f8b\u5982\u6d89\u53ca\u67d0\u4e9b\u5b57\u6bb5\u66f4\u65b0\u65f6\u6700\u4e3a\u5e38\u7528\uff0c\u793a\u4f8b\u5982\u4e0b\uff1a\n\n@Modifying\n@Query(\"update t_user set age=:age where id&gt;:id\")\nint updateUserById(@Param(\"age\") Long age, @Param(\"id\") Long id);\n\u6ce8\u610f\uff1a\n\n\u53ef\u4ee5\u901a\u8fc7\u81ea\u5b9a\u4e49\u7684 JPQL \u5b8c\u6210 UPDATE \u548c DELETE \u64cd\u4f5c. \u6ce8\u610f: JPQL \u4e0d\u652f\u6301\u4f7f\u7528 INSERT\n\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\u5e94\u8be5\u662f int\uff0c\u8868\u793a\u66f4\u65b0\u8bed\u53e5\u6240\u5f71\u54cd\u7684\u884c\u6570\n\u5728\u8c03\u7528\u7684\u5730\u65b9\u5fc5\u987b\u52a0\u4e8b\u52a1\uff0c\u6ca1\u6709\u4e8b\u52a1\u4e0d\u80fd\u6b63\u5e38\u6267\u884c\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b, Spring Data \u7684\u6bcf\u4e2a\u65b9\u6cd5\u4e0a\u6709\u4e8b\u52a1, \u4f46\u90fd\u662f\u4e00\u4e2a\u53ea\u8bfb\u4e8b\u52a1. \u4ed6\u4eec\u4e0d\u80fd\u5b8c\u6210\u4fee\u6539\u64cd\u4f5c\n\n@Transactional \u6ce8\u89e3\n\u8bf4\u5230\u8fd9\u91cc\uff0c\u518d\u6765\u987a\u4fbf\u8bf4\u8bf4Spring Data \u4e2d\u7684\u4e8b\u52a1\u95ee\u9898\uff1a\n\nSpring Data \u63d0\u4f9b\u4e86\u9ed8\u8ba4\u7684\u4e8b\u52a1\u5904\u7406\u65b9\u5f0f\uff0c\u5373\u6240\u6709\u7684\u67e5\u8be2\u5747\u58f0\u660e\u4e3a\u53ea\u8bfb\u4e8b\u52a1\u3002\n\u5bf9\u4e8e\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5\uff0c\u5982\u9700\u6539\u53d8 Spring Data \u63d0\u4f9b\u7684\u4e8b\u52a1\u9ed8\u8ba4\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u65b9\u6cd5\u4e0a\u6dfb\u52a0 @Transactional \u6ce8\u89e3\u3002\n\u8fdb\u884c\u591a\u4e2a Repository \u64cd\u4f5c\u65f6\uff0c\u4e5f\u5e94\u8be5\u4f7f\u5b83\u4eec\u5728\u540c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u5904\u7406\uff0c\u6309\u7167\u5206\u5c42\u67b6\u6784\u7684\u601d\u60f3\uff0c\u8fd9\u90e8\u5206\u5c5e\u4e8e\u4e1a\u52a1\u903b\u8f91\u5c42\uff0c\u56e0\u6b64\uff0c\u9700\u8981\u5728Service \u5c42\u5b9e\u73b0\u5bf9\u591a\u4e2a Repository \u7684\u8c03\u7528\uff0c\u5e76\u5728\u76f8\u5e94\u7684\u65b9\u6cd5\u4e0a\u58f0\u660e\u4e8b\u52a1\u3002\n\n3. Spring Boot\u6574\u5408JPA\u591a\u6570\u636e\u6e90\n&lt;!--\u4f9d\u8d56--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;/groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;version&gt;5.1.27&lt;/version&gt;\n&lt;/dependency&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;\n    &lt;artifactId&gt;lombok&lt;/artifactId&gt;\n    &lt;optional&gt;true&lt;/optional&gt;\n&lt;/dependency&gt;\n\n# \u914d\u7f6e\u6570\u636e\u5e93\u8fde\u63a5\u6c60\u53ca\u6570\u636e\u5e93\u9a71\u52a8\nspring.datasource.one.type=com.zaxxer.hikari.HikariDataSource\nspring.datasource.one.username=root\nspring.datasource.one.password=root\n#\u4f7f\u7528Hikari\u7684\u8bdd\u8981\u8bb2url\u6362\u6210jdbcurl\uff0cDruid\u76f4\u63a5\u4f7f\u7528url\nspring.datasource.one.jdbcurl=jdbc:mysql://localhost:3306/test?useSSL=false&amp;serverTimezone=Asia/Shanghai\n\nspring.datasource.two.type=com.zaxxer.hikari.HikariDataSource\nspring.datasource.two.username=root\nspring.datasource.two.password=root\nspring.datasource.two.jdbcurl=jdbc:mysql://localhost:3306/test2?useSSL=false&amp;serverTimezone=Asia/Shanghai\n#\u4e0e\u5355\u6570\u636e\u6e90\u4e0d\u540c\u7684\u662f \u5728jpa\u540e\u90fd\u8981\u52a0\u4e0aproperties\nspring.jpa.properties.database=mysql\nspring.jpa.properties.database-platform=mysql\nspring.jpa.properties.hibernate.ddl-auto=update\nspring.jpa.properties.show-sql=true\nspring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57Dialect\n\n/**\n * @author Xuxx3309\n * @Description \u914d\u7f6e\u6570\u636e\u6e90\n * @create 2020-05-16 0:30\n */\n@Configuration\npublic class DataSourceConfig {\n\n    @Bean\n    @Primary//\u4f18\u5148\u8003\u8651\u88ab\u6ce8\u89e3\u7684\u5bf9\u8c61\u6ce8\u5165\n    @ConfigurationProperties(prefix = &quot;spring.datasource.one&quot;)\n    DataSource dsOne() {\n        //\u6b64\u5904\u4f7f\u7528Hikari\n        return DataSourceBuilder.create().type(HikariDataSource.class).build();\n        //\u4f7f\u7528Druid DataSource\n//        return DruidDataSourceBuilder.create().build();\n    }\n\n    @Bean\n    @ConfigurationProperties(prefix = &quot;spring.datasource.two&quot;)\n    DataSource dsTwo() {\n        return DataSourceBuilder.create().type(HikariDataSource.class).build();\n    }\n}\n\n/**\n * @author Xuxx3309\n * @Description \u914d\u7f6ejpa1\n * @create 2020-05-16 0:39\n */\n@Configuration\n@EnableJpaRepositories(basePackages = &quot;com.xuxx.jpa2.dao1&quot;,\n        entityManagerFactoryRef = &quot;localContainerEntityManagerFactoryBeanOne&quot;,\n        transactionManagerRef = &quot;platformTransactionManagerOne&quot;)\npublic class JpaConfigOne {\n    @Autowired\n    @Qualifier(&quot;dsOne&quot;)\n    DataSource dsOne;\n\n    @Autowired\n    JpaProperties jpaProperties;\n\n    @Bean\n    @Primary\n    LocalContainerEntityManagerFactoryBean localContainerEntityManagerFactoryBeanOne(EntityManagerFactoryBuilder builder) {\n        return builder.dataSource(dsOne)\n                .properties(jpaProperties.getProperties())\n                .persistenceUnit(&quot;pu1&quot;)\n                .packages(&quot;com.xuxx.jpa2.bean&quot;)\n                .build();\n    }\n\n    /**\n     * PlatformTransactionManager\u662fJpaTransactionManager\u7684\u9876\u5c42\u7236\u7c7b\n     *\n     * @param builder\n     * @return\n     */\n    @Bean\n    PlatformTransactionManager platformTransactionManagerOne(EntityManagerFactoryBuilder builder) {\n        return new JpaTransactionManager(localContainerEntityManagerFactoryBeanOne((builder)).getObject());\n    }\n}\n\n/**\n * @author Xuxx3309\n * @Description \u914d\u7f6ejpa2\n * @create 2020-05-16 0:39\n */\n@Configuration\n@EnableJpaRepositories(basePackages = &quot;com.xuxx.jpa2.dao2&quot;,\n        entityManagerFactoryRef = &quot;localContainerEntityManagerFactoryBeanTwo&quot;,\n        transactionManagerRef = &quot;platformTransactionManagerTwo&quot;)\npublic class JpaConfigTwo {\n    @Autowired\n    @Qualifier(&quot;dsOne&quot;)\n    DataSource dsOne;\n\n    @Autowired\n    JpaProperties jpaProperties;\n\n    @Bean\n    LocalContainerEntityManagerFactoryBean localContainerEntityManagerFactoryBeanTwo(EntityManagerFactoryBuilder builder) {\n        return builder.dataSource(dsOne)\n                .properties(jpaProperties.getProperties())\n                .persistenceUnit(&quot;pu1&quot;)\n                .packages(&quot;com.xuxx.jpa2.bean&quot;)\n                .build();\n    }\n\n    @Bean\n    PlatformTransactionManager platformTransactionManagerTwo(EntityManagerFactoryBuilder builder) {\n        return new JpaTransactionManager(localContainerEntityManagerFactoryBeanTwo((builder)).getObject());\n    }\n}\n\n/**\n * @author Xuxx3309\n * @Description\n * @create 2020-05-16 1:46\n */\npublic interface BookDao1 extends JpaRepository&lt;Book, Integer&gt; {\n}\n\n/**\n * @author Xuxx3309\n * @Description\n * @create 2020-05-16 1:47\n */\npublic interface BookDao2 extends JpaRepository&lt;Book, Integer&gt; {\n}\n\n@SpringBootTest\nclass Jpa2ApplicationTests {\n    @Autowired\n    BookDao1 bookDao1;\n    @Autowired\n    BookDao2 bookDao2;\n\n    @Test\n    public void test() {\n        List&lt;Book&gt; dao1All = bookDao1.findAll();\n        System.out.println(dao1All);\n        System.out.println(&quot;-------------&quot;);\n        List&lt;Book&gt; dao2All = bookDao2.findAll();\n        System.out.println(dao2All);\n    }\n}\n\n\u6d4b\u8bd5\uff1a\n\n[Book(id=1, name=11, author=11), Book(id=2, name=22, author=22), Book(id=6, name=33, author=33), Book(id=7, name=44, author=44), Book(id=8, name=1, author=1), Book(id=9, name=JAVA, author=Xuxx), Book(id=10, name=JAVA1, author=Xuxx), Book(id=11, name=JAVA2, author=Xuxx)]\n-------------\n[Book(id=1, name=11, author=11), Book(id=2, name=22, author=22), Book(id=6, name=33, author=33), Book(id=7, name=44, author=44), Book(id=8, name=1, author=1), Book(id=9, name=JAVA, author=Xuxx), Book(id=10, name=JAVA1, author=Xuxx), Book(id=11, name=JAVA2, author=Xuxx)]\n4.Repository\u63a5\u53e3\n\u6765\u770b Repository \u7684\u4e00\u4e2a\u7ee7\u627f\u5173\u7cfb\u56fe\uff1a\n   img\n\u53ef\u4ee5\u770b\u5230\uff0c\u5b9e\u73b0\u7c7b\u4e0d\u5c11\u3002\u90a3\u4e48\u5230\u5e95\u5982\u4f55\u7406\u89e3 Repository \u5462\uff1f\n\nRepository \u63a5\u53e3\u662f Spring Data \u7684\u4e00\u4e2a\u6838\u5fc3\u63a5\u53e3\uff0c\u5b83\u4e0d\u63d0\u4f9b\u4efb\u4f55\u65b9\u6cd5\uff0c\u5f00\u53d1\u8005\u9700\u8981\u5728\u81ea\u5df1\u5b9a\u4e49\u7684\u63a5\u53e3\u4e2d\u58f0\u660e\u9700\u8981\u7684\u65b9\u6cd5 public interface Repository&lt;T, ID extends Serializable&gt; { }\n\u82e5\u6211\u4eec\u5b9a\u4e49\u7684\u63a5\u53e3\u7ee7\u627f\u4e86 Repository, \u5219\u8be5\u63a5\u53e3\u4f1a\u88ab IOC \u5bb9\u5668\u8bc6\u522b\u4e3a\u4e00\u4e2a Repository Bean\uff0c\u8fdb\u800c\u7eb3\u5165\u5230 IOC \u5bb9\u5668\u4e2d\uff0c\u8fdb\u800c\u53ef\u4ee5\u5728\u8be5\u63a5\u53e3\u4e2d\u5b9a\u4e49\u6ee1\u8db3\u4e00\u5b9a\u89c4\u8303\u7684\u65b9\u6cd5\u3002\nSpring Data\u53ef\u4ee5\u8ba9\u6211\u4eec\u53ea\u5b9a\u4e49\u63a5\u53e3\uff0c\u53ea\u8981\u9075\u5faa Spring Data \u7684\u89c4\u8303\uff0c\u5c31\u65e0\u9700\u5199\u5b9e\u73b0\u7c7b\u3002\n\u4e0e\u7ee7\u627f Repository \u7b49\u4ef7\u7684\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u5728\u6301\u4e45\u5c42\u63a5\u53e3\u4e0a\u4f7f\u7528 @RepositoryDefinition \u6ce8\u89e3\uff0c\u5e76\u4e3a\u5176\u6307\u5b9a domainClass \u548c idClass \u5c5e\u6027\u3002\u50cf\u4e0b\u9762\u8fd9\u6837\uff1a\n\n\n@RepositoryDefinition(domainClass = User.class, idClass = Long.class)public interface UserDao{    User findById(Long id);    List&lt;User&gt; findAll();}\n\u57fa\u7840\u7684 Repository \u63d0\u4f9b\u4e86\u6700\u57fa\u672c\u7684\u6570\u636e\u8bbf\u95ee\u529f\u80fd\uff0c\u5176\u51e0\u4e2a\u5b50\u63a5\u53e3\u5219\u6269\u5c55\u4e86\u4e00\u4e9b\u529f\u80fd\uff0c\u5b83\u7684\u51e0\u4e2a\u5e38\u7528\u7684\u5b9e\u73b0\u7c7b\u5982\u4e0b\uff1a\n\nCrudRepository\uff1a \u7ee7\u627f Repository\uff0c\u5b9e\u73b0\u4e86\u4e00\u7ec4 CRUD \u76f8\u5173\u7684\u65b9\u6cd5\nPagingAndSortingRepository\uff1a \u7ee7\u627f CrudRepository\uff0c\u5b9e\u73b0\u4e86\u4e00\u7ec4\u5206\u9875\u6392\u5e8f\u76f8\u5173\u7684\u65b9\u6cd5\nJpaRepository\uff1a \u7ee7\u627f PagingAndSortingRepository\uff0c\u5b9e\u73b0\u4e00\u7ec4 JPA \u89c4\u8303\u76f8\u5173\u7684\u65b9\u6cd5\n\u81ea\u5b9a\u4e49\u7684 XxxxRepository \u9700\u8981\u7ee7\u627f JpaRepository\uff0c\u8fd9\u6837\u7684 XxxxRepository \u63a5\u53e3\u5c31\u5177\u5907\u4e86\u901a\u7528\u7684\u6570\u636e\u8bbf\u95ee\u63a7\u5236\u5c42\u7684\u80fd\u529b\u3002\nJpaSpecificationExecutor\uff1a\u4e0d\u5c5e\u4e8eRepository\u4f53\u7cfb\uff0c\u5b9e\u73b0\u4e00\u7ec4 JPA Criteria \u67e5\u8be2\u76f8\u5173\u7684\u65b9\u6cd5\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}, {"name": "JPA", "slug": "JPA", "permalink": "/Xuxx_Blogs/tag/JPA/"}]}, {"title": "Spring Boot\u6574\u5408Mybatis", "date": "2020-05-12T22:20:00-00.00", "path": "/Xuxx_Blogs/archives/bj17/", "text": "1.\u57fa\u672c\u4f7f\u7528\n1.\u4f9d\u8d56\n\n&lt;dependency&gt;\n    &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;2.1.1&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n    &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;1.1.20&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;/groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;version&gt;5.1.27&lt;/version&gt;\n&lt;/dependency&gt;\n2.\u914d\u7f6e\u6570\u636e\u6e90\nspring.datasource.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.url=jdbc:mysql:///test?useSSL=false&amp;serverTimezone=Asia/Shanghai\nspring.datasource.username=root\nspring.datasource.password=root\n\n3.\u5199\u4ee3\u7801\nUser\n@Data\npublic class User {\n    private Integer id;\n    private String username;\n    private String address;\n}\n\nUserMapper\n//\u5355\u4e2aMapper\u53ef\u4ee5\u76f4\u63a5\u52a0@Mapper\uff0c\u4e5f\u53ef\u4ee5\u5728\u542f\u52a8\u7c7b\u4e0a\u52a0//@MapperScan(basePackages = &quot;com.xuxx.mybatis.mapper&quot;)\n@Mapper\npublic interface UserMapper {\n//    @Select(&quot;select * from user &quot;)\n    List&lt;User&gt; getAllUsers();\n}\n\nMapper.xml\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;!DOCTYPE mapper\n        PUBLIC &quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;\n        &quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;&gt;\n&lt;mapper namespace=&quot;com.xuxx.mybatis.mapper.UserMapper&quot;&gt;\n    &lt;select id=&quot;getAllUsers&quot; resultType=&quot;com.xuxx.mybatis.bean.User&quot;&gt;\n        select * from user\n    &lt;/select&gt;\n&lt;/mapper&gt;\n\n\u8865\u5145\uff1a\n\u6b64\u65f6Mapper.xml\u4f1a\u88abMaven\u5ffd\u7565\uff0c\u8fd0\u884c\u4f1a\u62a5\u9519org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.xuxx.mybatis.mapper.UserMapper.getAllUsers\n\u89e3\u51b3\u65b9\u6cd5\uff1a\uff08\u4e09\u79cd\u65b9\u5f0f\u4efb\u9009\u5176\u4e00\u5373\u53ef\uff09\n\n\u5728resources\u76ee\u5f55\u4e0b\u521b\u5efa\u4e0eMapper\u4f4d\u7f6e\u5bf9\u5e94\u7684\u591a\u7ea7\u76ee\u5f55com/xuxx/mybatis/mapper,\u5e76\u5c06Mapper.xml\u653e\u5230\u521b\u5efa\u7684\u76ee\u5f55\u4e0b\n\n\u5728pom.xml\u6587\u4ef6\u4e2d\u914d\u7f6e\u4e0d\u5ffd\u7565\u9700\u8981\u7684xml\u6587\u4ef6\n&lt;build&gt;\n    ....\n&lt;!--\u8ba9maven\u4e0d\u5ffd\u7565Mapper.xml--&gt;\n        &lt;resources&gt;\n            &lt;resource&gt;\n                &lt;directory&gt;src/main/java&lt;/directory&gt;\n                &lt;includes&gt;\n                    &lt;include&gt;**/*.xml&lt;/include&gt;\n                &lt;/includes&gt;\n            &lt;/resource&gt;\n            &lt;resource&gt;\n                &lt;directory&gt;src/main/resources&lt;/directory&gt;\n            &lt;/resource&gt;\n        &lt;/resources&gt;\n\n\n\u5728resources\u76ee\u5f55\u4e0b\u521b\u5efa\u81ea\u5b9a\u4e49\u76ee\u5f55\uff0c\u5e76\u5728application.properties\u4e2d\u914d\u7f6e\n#\u5c06Mapper.xml\u6587\u4ef6\u653e\u5728resources\u76ee\u5f55\u7684mapper\u4e0b\uff0c\u518d\u6307\u5b9amapper.xml\u4f4d\u7f6e\nmybatis.mapper-locations=classpath:mapper/*.xml\n\n\n\n\u6d4b\u8bd5\n@SpringBootTest\nclass MybatisApplicationTests {\n\n    @Autowired\n    UserMapper userMapper;\n\n    @Test\n    void contextLoads() {\n        List&lt;User&gt; users = userMapper.getAllUsers();\n        System.out.println(users);\n    }\n}\n\n\u7ed3\u679c\n\n[User(id=1, username=xu, address=\u56db\u5ddd), User(id=6, username=xu2, address=\u56db\u5ddd)]\n2.\u914d\u7f6e\u591a\u6570\u636e\u6e90\n1.\u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;org.mybatis.spring.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;mybatis-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;2.1.1&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n    &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n    &lt;version&gt;1.1.20&lt;/version&gt;\n&lt;/dependency&gt;\n\n&lt;dependency&gt;\n    &lt;groupId&gt;mysql&lt;/groupId&gt;\n    &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n    &lt;scope&gt;runtime&lt;/scope&gt;\n    &lt;version&gt;5.1.27&lt;/version&gt;\n&lt;/dependency&gt;\n\n2.\u914d\u7f6e\u591a\u6570\u636e\u6e90\n#\u914d\u7f6e\u591a\u6570\u636e\u6e90\nspring.datasource.one.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.one.url=jdbc:mysql:///test?useSSL=false&amp;serverTimezone=Asia/Shanghai\nspring.datasource.one.username=root\nspring.datasource.one.password=root\n\nspring.datasource.two.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.two.url=jdbc:mysql:///test2?useSSL=false&amp;serverTimezone=Asia/Shanghai\nspring.datasource.two.username=root\nspring.datasource.two.password=root\n\n3.\u5199\u4ee3\u7801\nDataSourceConfig\n@Configuration\npublic class DataSourceConfig {\n    @Bean\n    @ConfigurationProperties(prefix = &quot;spring.datasource.one&quot;)\n    DataSource dsOne() {\n        return DruidDataSourceBuilder.create().build();\n    }\n\n    @Bean\n    @ConfigurationProperties(prefix = &quot;spring.datasource.two&quot;)\n    DataSource dsTwo() {\n        return DruidDataSourceBuilder.create().build();\n    }\n}\n\nMybatisConfigOne\n@Configuration\n@MapperScan(basePackages = &quot;com.xuxx.mybatis2.mapper1&quot;, sqlSessionFactoryRef = &quot;sqlSessionFactoryOne&quot;\n        , sqlSessionTemplateRef = &quot;sqlSessionTemplateOne&quot;)\npublic class MybatisConfigOne {\n    @Resource(name = &quot;dsOne&quot;)\n    DataSource dsOne;\n\n    @Bean\n    SqlSessionFactory sqlSessionFactoryOne() {\n        SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\n        try {\n            bean.setDataSource(dsOne);\n            return bean.getObject();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    @Bean\n    SqlSessionTemplate sqlSessionTemplateOne() {\n        return new SqlSessionTemplate(sqlSessionFactoryOne());\n    }\n}\n\nMybatisConfigTwo\n@Configuration\n@MapperScan(basePackages = &quot;com.xuxx.mybatis2.mapper2&quot;, sqlSessionFactoryRef = &quot;sqlSessionFactoryTwo&quot;\n        , sqlSessionTemplateRef = &quot;sqlSessionTemplateTwo&quot;)\npublic class MybatisConfigTwo {\n    @Resource(name = &quot;dsTwo&quot;)\n    DataSource dsTwo;\n\n    @Bean\n    SqlSessionFactory sqlSessionFactoryTwo() {\n        SqlSessionFactoryBean bean = new SqlSessionFactoryBean();\n        try {\n            bean.setDataSource(dsTwo);\n            return bean.getObject();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        return null;\n    }\n\n    @Bean\n    SqlSessionTemplate sqlSessionTemplateTwo() {\n        return new SqlSessionTemplate(sqlSessionFactoryTwo());\n    }\n}\n\n\u5230\u6b64\uff0c\u591a\u6570\u636e\u6e90\u5c31\u914d\u7f6e\u597d\u4e86\uff0c\u4f7f\u7528\u6570\u636e\u6e901\u5c31\u5728\u5305mapper1\u4e0b\uff0c\u4f7f\u7528\u6570\u636e\u6e902\u5c31\u5728\u5305mapper2\u4e0b\u3002\n\u6d4b\u8bd5\u4e00\u4e0b\nUser\n@Data\npublic class User {\n    private Integer id;\n    private String username;\n    private String address;\n}\n\ncom\\xuxx\\mybatis2\\mapper1\\UserMapper1.java\npublic interface UserMapper1 {\n    @Select(&quot;select * from user &quot;)\n    List&lt;User&gt; getAllUsers();\n}\n\ncom\\xuxx\\mybatis2\\mapper2\\UserMapper2.java\npublic interface UserMapper2 {\n    @Select(&quot;select * from user &quot;)\n    List&lt;User&gt; getAllUsers();\n}\n\n\u6d4b\u8bd5\u7c7b\n@SpringBootTest\nclass Mybatis2ApplicationTests {\n    @Autowired\n    UserMapper1 userMapper1;\n    @Autowired\n    UserMapper2 userMapper2;\n\n    @Test\n    void contextLoads() {\n        List&lt;User&gt; users1 = userMapper1.getAllUsers();\n        System.out.println(&quot;user1\uff1a&quot;+users1);\n        List&lt;User&gt; users2 = userMapper2.getAllUsers();\n        System.out.println(&quot;user2\uff1a&quot;+users2);\n    }\n\n}\n\n\u63a7\u5236\u53f0\n\nuser1\uff1a[User(id=1, username=xu, address=\u56db\u5ddd), User(id=6, username=xu2, address=\u56db\u5ddd)]\nuser2\uff1a[User(id=1, username=zhangsan, address=\u56db\u5ddd2), User(id=2, username=lisi, address=\u5317\u4eac2), User(id=3, username=xuxx, address=\u56db\u5ddd2)]\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}, {"name": "Mybatis", "slug": "Mybatis", "permalink": "/Xuxx_Blogs/tag/Mybatis/"}]}, {"title": "Spring Boot\u6574\u5408Spring JDBC Template", "date": "2020-05-12T16:20:00-00.00", "path": "/Xuxx_Blogs/archives/bj18/", "text": "1.\u7b80\u5355\u4f7f\u7528\n1.\u6dfb\u52a0\u4f9d\u8d56\n&lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;version&gt;5.1.27&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!--\u4e5f\u53ef\u4ee5\u53ea\u5f15\u5165druid\uff0c\u4f46\u662f\u914d\u7f6e\u591a\u6570\u636e\u6e90\u8981starter--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;1.1.20&lt;/version&gt;\n        &lt;/dependency&gt;\n\n2.\u914d\u7f6e\u6570\u636e\u6e90\nspring.datasource.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.url=jdbc:mysql://127.0.0.1:3306/test\nspring.datasource.username=root\nspring.datasource.password=root\n\n3.\u5199\u4ee3\u7801\n//bean\n@Data\npublic class User {\n    private Integer id;\n    private String username;\n    private String address;\n}\n\n@Service\npublic class UserService {\n    @Autowired\n    private JdbcTemplate jdbcTemplate;\n    //\u6dfb\u52a0\n    public Integer adduser(User user) {\n        return jdbcTemplate.update(&quot;insert into user (username,address) values (?,?)&quot;,\n                user.getUsername(), user.getAddress());\n    }\n    //\u66f4\u65b0\n    public Integer updateUserById(User user) {\n        return jdbcTemplate.update(&quot;update user set username = ?,address = ? where id = ? &quot;,\n                user.getUsername(), user.getAddress(), user.getId());\n\n    }\n    //\u5220\u9664\n    public Integer delUserById(Integer id) {\n        return jdbcTemplate.update(&quot;delete from user where id = ? &quot;, id);\n    }\n\n    //\u67e5\u8be2\n    //\u5b57\u6bb5\u540d\u4e0e\u5c5e\u6027\u540d\u4e0d\u4e00\u81f4\u65f6\uff0c\u9700\u8981\u624b\u52a8\u6620\u5c04\n    public List&lt;User&gt; getAllUsers01() {\n        return jdbcTemplate.query(&quot;select * from user&quot;, new RowMapper&lt;User&gt;() {\n            @Override\n            public User mapRow(ResultSet rs, int rowNum) throws SQLException {\n                //ResultSet\u5df2\u7ecf\u8fdb\u884c\u4e86\u6e38\u6807\u79fb\u52a8\u4e86\uff08\u4e0d\u7528\u518d\u8c03\u7528next()\uff09\n                User user = new User();\n                int id = rs.getInt(&quot;id&quot;);\n                String username = rs.getString(&quot;username&quot;);\n                String address = rs.getString(&quot;address&quot;);\n                user.setId(id);\n                user.setUsername(username);\n                user.setAddress(address);\n                return user;\n            }\n        });\n    }\n\n    //\u5b57\u6bb5\u540d\u4e0e\u5c5e\u6027\u540d\u4e00\u81f4\u65f6\uff0c\u81ea\u52a8\u6620\u5c04\n    public List&lt;User&gt; getAllUsers() {\n        return jdbcTemplate.query(&quot;select * from user&quot;, new BeanPropertyRowMapper&lt;&gt;(User.class));\n    }\n\n    //\u67e5\u8be2\u5355\u4e2a\n    public User getUserById(Integer id) {\n        return jdbcTemplate.queryForObject(&quot;select * from user where id = ? &quot;, new BeanPropertyRowMapper&lt;&gt;(User.class), id);\n    }\n}\n\n@SpringBootTest\nclass JdbctemplateApplicationTests {\n    @Autowired\n    private UserService userService;\n\n    @Test\n    void contextLoads1() {\n        User user = new User();\n        user.setUsername(&quot;xuxx&quot;);\n        user.setAddress(&quot;\u56db\u5ddd&quot;);\n        Integer adduser = userService.adduser(user);\n        if (adduser == 1) {\n            System.out.println(&quot;\u6dfb\u52a0\u6267\u884c\u6210\u529f&quot;);\n        }\n    }\n\n    @Test\n    void contextLoads2() {\n        User user = new User();\n        user.setId(4);\n        user.setUsername(&quot;xuxx02&quot;);\n        user.setAddress(&quot;\u56db\u5ddd02&quot;);\n        Integer adduser = userService.updateUserById(user);\n        if (adduser == 1) {\n            System.out.println(&quot;\u66f4\u65b0\u6267\u884c\u6210\u529f&quot;);\n        }\n    }\n\n    @Test\n    void contextLoads3() {\n        if (userService.delUserById(4) == 1) {\n            System.out.println(&quot;\u5220\u9664\u6267\u884c\u6210\u529f&quot;);\n        }\n    }\n\n    @Test\n    void contextLoads5() {\n        User user = userService.getUserById(1);\n        System.out.println(user);\n    }\n}\n\n2.\u6574\u5408\u591a\u6570\u636e\u6e90\n1.\u6dfb\u52a0\u4f9d\u8d56\n&lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-jdbc&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;/dependency&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;mysql&lt;/groupId&gt;\n            &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n            &lt;scope&gt;runtime&lt;/scope&gt;\n            &lt;version&gt;5.1.27&lt;/version&gt;\n        &lt;/dependency&gt;\n        &lt;!--\u4e5f\u53ef\u4ee5\u53ea\u5f15\u5165druid\uff0c\u4f46\u662f\u914d\u7f6e\u591a\u6570\u636e\u6e90\u8981starter--&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;\n            &lt;version&gt;1.1.20&lt;/version&gt;\n        &lt;/dependency&gt;\n\n2.\u914d\u7f6e\u591a\u6570\u636e\u6e90\n#\u914d\u7f6e\u591a\u6570\u636e\u6e90\uff0c\u6b64\u65f6\u6570\u636e\u6e90\u76f8\u5173\u7684\u81ea\u52a8\u5316\u914d\u7f6e\u5931\u6548\uff08key\u4e0d\u80fd\u88ab\u8bc6\u522b\u4e86\uff09\nspring.datasource.one.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.one.url=jdbc:mysql://127.0.0.1:3306/test\nspring.datasource.one.username=root\nspring.datasource.one.password=root\n\nspring.datasource.two.type=com.alibaba.druid.pool.DruidDataSource\nspring.datasource.two.url=jdbc:mysql://127.0.0.1:3306/test2\nspring.datasource.two.username=root\nspring.datasource.two.password=root\n\n3.\u5199\u4ee3\u7801\n\n\u914d\u7f6eDataSource\n\n@Configuration\npublic class DataSourceConfig {\n\n    @Bean\n    @ConfigurationProperties(prefix = &quot;spring.datasource.one&quot;)\n    DataSource dataSource1() {\n        return DruidDataSourceBuilder.create().build();\n    }\n\n    @Bean\n    @ConfigurationProperties(prefix = &quot;spring.datasource.two&quot;)\n    DataSource dataSource2() {\n        return DruidDataSourceBuilder.create().build();\n    }\n\n}\n\n\n\u914d\u7f6eJdbcTemplate\n\n@Configuration\npublic class JdbcTemplateConfig {\n\n    @Bean\n    JdbcTemplate jdbcTemplate1(@Qualifier(&quot;dataSource1&quot;) DataSource ds1) {\n        return new JdbcTemplate(ds1);\n    }\n\n    @Bean\n    JdbcTemplate jdbcTemplate2(@Qualifier(&quot;dataSource2&quot;) DataSource ds2) {\n        return new JdbcTemplate(ds2);\n    }\n}\n\n\nService\uff08beanh\u8fd8\u662fUser\uff09\n\n@Service\npublic class UserService2 {\n    @Autowired\n    @Qualifier(&quot;jdbcTemplate1&quot;)\n    JdbcTemplate jdbcTemplate1;\n\n    @Resource(name = &quot;jdbcTemplate2&quot;)\n    JdbcTemplate jdbcTemplate2;\n\n    public List&lt;User&gt; getAllUsers1() {\n        return jdbcTemplate1.query(&quot;select * from user&quot;, new BeanPropertyRowMapper&lt;&gt;(User.class));\n    }\n\n    public List&lt;User&gt; getAllUsers2() {\n        return jdbcTemplate2.query(&quot;select * from user&quot;, new BeanPropertyRowMapper&lt;&gt;(User.class));\n    }\n}\n\n\n\u6d4b\u8bd5\n\n@SpringBootTest\nclass JdbctemplateApplicationTests2 {\n    @Autowired\n    private UserService2 userService2;\n\n    @Test\n    void test1() {\n        List&lt;User&gt; users1 = userService2.getAllUsers1();\n        System.out.println(users1);\n        System.out.println(&quot;----------------------&quot;);\n        List&lt;User&gt; users2 = userService2.getAllUsers2();\n        System.out.println(users2);\n    }\n}\n\n\u8865\u5145\uff1a\u7531\u4e8e\u914d\u7f6e\u4e86\u591a\u6570\u636e\u6e90\uff0c\u6240\u4ee5\u5728\u6ce8\u5165JdbcTemplate\u65f6\uff0c\u9700\u8981\u5982\u4e0b\n@Autowired\n@Qualifier(&quot;jdbcTemplate1&quot;)//\u914d\u7f6e\u4e86\u591a\u6570\u636e\u6e90\u540e\nprivate JdbcTemplate jdbcTemplate;\n//\u6216\u8005\n@Resource(name = &quot;jdbcTemplate2&quot;)\nprivate JdbcTemplate jdbcTemplate2;\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}, {"name": "Jdbc Template", "slug": "Jdbc Template", "permalink": "/Xuxx_Blogs/tag/Jdbc Template/"}]}, {"title": "Spring Boot\u6574\u5408AOP", "date": "2020-05-11T02:10:00-00.00", "path": "/Xuxx_Blogs/archives/bj16/", "text": "\u4e00\u3001\u524d\u8a00\n\u4f17\u6240\u5468\u77e5\uff0cspring\u6700\u6838\u5fc3\u7684\u4e24\u4e2a\u529f\u80fd\u662faop\u548cioc\uff0c\u5373\u9762\u5411\u5207\u9762\u548c\u63a7\u5236\u53cd\u8f6c\u3002\u672c\u6587\u4f1a\u8bb2\u4e00\u8bb2SpringBoot\u5982\u4f55\u4f7f\u7528AOP\u5b9e\u73b0\u9762\u5411\u5207\u9762\u7684\u8fc7\u7a0b\u539f\u7406\u3002\n\u4e8c\u3001\u4f55\u4e3aaop\naop\u5168\u79f0Aspect Oriented Programming\uff0c\u9762\u5411\u5207\u9762\uff0cAOP\u4e3b\u8981\u5b9e\u73b0\u7684\u76ee\u7684\u662f\u9488\u5bf9\u4e1a\u52a1\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u5207\u9762\u8fdb\u884c\u63d0\u53d6\uff0c\u5b83\u6240\u9762\u5bf9\u7684\u662f\u5904\u7406\u8fc7\u7a0b\u4e2d\u7684\u67d0\u4e2a\u6b65\u9aa4\u6216\u9636\u6bb5\uff0c\u4ee5\u83b7\u5f97\u903b\u8f91\u8fc7\u7a0b\u4e2d\u5404\u90e8\u5206\u4e4b\u95f4\u4f4e\u8026\u5408\u6027\u7684\u9694\u79bb\u6548\u679c\u3002\u5176\u4e0e\u8bbe\u8ba1\u6a21\u5f0f\u5b8c\u6210\u7684\u4efb\u52a1\u5dee\u4e0d\u591a\uff0c\u662f\u63d0\u4f9b\u53e6\u4e00\u79cd\u89d2\u5ea6\u6765\u601d\u8003\u7a0b\u5e8f\u7684\u7ed3\u6784\uff0c\u6765\u5f25\u8865\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e0d\u8db3\u3002\n\u3000\u3000\u901a\u4fd7\u70b9\u8bb2\u5c31\u662f\u63d0\u4f9b\u4e00\u4e2a\u4e3a\u4e00\u4e2a\u4e1a\u52a1\u5b9e\u73b0\u63d0\u4f9b\u5207\u9762\u6ce8\u5165\u7684\u673a\u5236\uff0c\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5728\u4e1a\u52a1\u8fd0\u884c\u4e2d\u5c06\u5b9a\u4e49\u597d\u7684\u5207\u9762\u901a\u8fc7\u5207\u5165\u70b9\u7ed1\u5b9a\u5230\u4e1a\u52a1\u4e2d\uff0c\u4ee5\u5b9e\u73b0\u5c06\u4e00\u4e9b\u7279\u6b8a\u7684\u903b\u8f91\u7ed1\u5b9a\u5230\u6b64\u4e1a\u52a1\u4e2d\u3002\n\u3000\u3000\u4e3e\u4e2a\u6817\u5b50\uff0c\u9879\u76ee\u4e2d\u6709\u8bb0\u5f55\u64cd\u4f5c\u65e5\u5fd7\u7684\u9700\u6c42\u3001\u6216\u8005\u6d41\u7a0b\u53d8\u66f4\u662f\u8bb0\u5f55\u53d8\u66f4\u5c65\u5386\uff0c\u65e0\u975e\u5c31\u662f\u63d2\u8868\u64cd\u4f5c\uff0c\u5f88\u7b80\u5355\u7684\u4e00\u4e2asave\u64cd\u4f5c\uff0c\u90fd\u662f\u4e00\u4e9b\u8bb0\u5f55\u65e5\u5fd7\u6216\u8005\u5176\u4ed6\u8f85\u52a9\u6027\u7684\u4ee3\u7801\u3002\u4e00\u904d\u53c8\u4e00\u904d\u7684\u91cd\u5199\u548c\u8c03\u7528\u3002\u4e0d\u4ec5\u6d6a\u8d39\u4e86\u65f6\u95f4\uff0c\u53c8\u5c06\u9879\u76ee\u53d8\u5f97\u66f4\u52a0\u7684\u5197\u4f59\uff0c\u5b9e\u5728\u5f97\u4e0d\u507f\u5931\u3002\n\u3000\u3000\u6240\u4ee5\u5c31\u9700\u8981\u9762\u5411\u5207\u9762aop\u5c31\u51fa\u573a\u4e86\u3002\n\u4e09\u3001aop\u76f8\u5173\u540d\u8bcd\n\u8981\u7406\u89e3SpringBoot\u6574\u5408aop\u7684\u5b9e\u73b0\uff0c\u5c31\u5fc5\u987b\u5148\u5bf9\u9762\u5411\u5207\u9762\u5b9e\u73b0\u7684\u4e00\u4e9baop\u7684\u540d\u79f0\u6709\u6240\u4e86\u89e3\uff0c\u4e0d\u7136\u4e5f\u662f\u4e91\u91cc\u96fe\u91cc\u3002\n\n\u5207\u9762\uff08Aspect\uff09\uff1a\u4e00\u4e2a\u5173\u6ce8\u70b9\u7684\u6a21\u5757\u5316\u3002\u4ee5\u6ce8\u89e3@Aspect\u7684\u5f62\u5f0f\u653e\u5728\u7c7b\u4e0a\u65b9\uff0c\u58f0\u660e\u4e00\u4e2a\u5207\u9762\u3002\n\n\u8fde\u63a5\u70b9\uff08Joinpoint\uff09\uff1a\u5728\u7a0b\u5e8f\u6267\u884c\u8fc7\u7a0b\u4e2d\u67d0\u4e2a\u7279\u5b9a\u7684\u70b9\uff0c\u6bd4\u5982\u67d0\u65b9\u6cd5\u8c03\u7528\u7684\u65f6\u5019\u6216\u8005\u5904\u7406\u5f02\u5e38\u7684\u65f6\u5019\u90fd\u53ef\u4ee5\u662f\u8fde\u63a5\u70b9\u3002\n\n\u901a\u77e5\uff08Advice\uff09\uff1a\u901a\u77e5\u589e\u5f3a\uff0c\u9700\u8981\u5b8c\u6210\u7684\u5de5\u4f5c\u53eb\u505a\u901a\u77e5\uff0c\u5c31\u662f\u4f60\u5199\u7684\u4e1a\u52a1\u903b\u8f91\u4e2d\u9700\u8981\u6bd4\u5982\u4e8b\u52a1\u3001\u65e5\u5fd7\u7b49\u5148\u5b9a\u4e49\u597d\uff0c\u7136\u540e\u9700\u8981\u7684\u5730\u65b9\u518d\u53bb\u7528\u3002\n\u4e3b\u8981\u5305\u62ec5\u4e2a\u6ce8\u89e3\uff1aBefore\uff0cAfter\uff0cAfterReturning\uff0cAfterThrowing\uff0cAround\u3002\n@Before\uff1a\u5728\u5207\u70b9\u65b9\u6cd5\u4e4b\u524d\u6267\u884c\u3002\n@After\uff1a\u5728\u5207\u70b9\u65b9\u6cd5\u4e4b\u540e\u6267\u884c\n@AfterReturning\uff1a\u5207\u70b9\u65b9\u6cd5\u8fd4\u56de\u540e\u6267\u884c\n@AfterThrowing\uff1a\u5207\u70b9\u65b9\u6cd5\u629b\u5f02\u5e38\u6267\u884c\n@Around\uff1a\u5c5e\u4e8e\u73af\u7ed5\u589e\u5f3a\uff0c\u80fd\u63a7\u5236\u5207\u70b9\u6267\u884c\u524d\uff0c\u6267\u884c\u540e\uff0c\u7528\u8fd9\u4e2a\u6ce8\u89e3\u540e\uff0c\u7a0b\u5e8f\u629b\u5f02\u5e38\uff0c\u4f1a\u5f71\u54cd@AfterThrowing\u8fd9\u4e2a\u6ce8\u89e3\n\n\u5207\u70b9\uff08Pointcut\uff09\uff1a\u5176\u5b9e\u5c31\u662f\u7b5b\u9009\u51fa\u7684\u8fde\u63a5\u70b9\uff0c\u5339\u914d\u8fde\u63a5\u70b9\u7684\u65ad\u8a00\uff0c\u4e00\u4e2a\u7c7b\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u662f\u8fde\u63a5\u70b9\uff0c\u4f46\u53c8\u4e0d\u5168\u9700\u8981\uff0c\u4f1a\u7b5b\u9009\u51fa\u67d0\u4e9b\u4f5c\u4e3a\u8fde\u63a5\u70b9\u505a\u4e3a\u5207\u70b9\u3002\u5982\u679c\u8bf4\u901a\u77e5\u5b9a\u4e49\u4e86\u5207\u9762\u7684\u52a8\u4f5c\u6216\u8005\u6267\u884c\u65f6\u673a\u7684\u8bdd\uff0c\u5207\u70b9\u5219\u5b9a\u4e49\u4e86\u6267\u884c\u7684\u5730\u70b9\u3002\u5207\u5165\u70b9\u8868\u8fbe\u5f0f\u5982\u4f55\u548c\u8fde\u63a5\u70b9\u5339\u914d\u662fAOP\u7684\u6838\u5fc3\uff1aSpring\u7f3a\u7701\u4f7f\u7528AspectJ\u5207\u5165\u70b9\u8bed\u6cd5\u3002\n\n\u5f15\u5165\uff08Introduction\uff09\uff1a\u5728\u4e0d\u6539\u53d8\u4e00\u4e2a\u73b0\u6709\u7c7b\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u4e3a\u8be5\u7c7b\u6dfb\u52a0\u5c5e\u6027\u548c\u65b9\u6cd5,\u53ef\u4ee5\u5728\u65e0\u9700\u4fee\u6539\u73b0\u6709\u7c7b\u7684\u524d\u63d0\u4e0b\uff0c\u8ba9\u5b83\u4eec\u5177\u6709\u65b0\u7684\u884c\u4e3a\u548c\u72b6\u6001\u3002\u5176\u5b9e\u5c31\u662f\u628a\u5207\u9762\uff08\u4e5f\u5c31\u662f\u65b0\u65b9\u6cd5\u5c5e\u6027\uff1a\u901a\u77e5\u5b9a\u4e49\u7684\uff09\u7528\u5230\u76ee\u6807\u7c7b\u4e2d\u53bb\u3002\n\n\u76ee\u6807\u5bf9\u8c61\uff08Target Object\uff09\uff1a\u88ab\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u5207\u9762\u6240\u901a\u77e5\u7684\u5bf9\u8c61\u3002\u4e5f\u88ab\u79f0\u505a\u88ab\u901a\u77e5\uff08adviced\uff09\u5bf9\u8c61\u3002\u65e2\u7136Spring AOP\u662f\u901a\u8fc7\u8fd0\u884c\u65f6\u4ee3\u7406\u5b9e\u73b0\u7684\uff0c\u8fd9\u4e2a\u5bf9\u8c61\u6c38\u8fdc\u662f\u4e00\u4e2a\u88ab\u4ee3\u7406\uff08proxied\uff09\u5bf9\u8c61\u3002\n\nAOP\u4ee3\u7406\uff08AOP Proxy\uff09\uff1aAOP\u6846\u67b6\u521b\u5efa\u7684\u5bf9\u8c61\uff0c\u7528\u6765\u5b9e\u73b0\u5207\u9762\u5951\u7ea6\uff08\u4f8b\u5982\u901a\u77e5\u65b9\u6cd5\u6267\u884c\u7b49\u7b49\uff09\u3002\u5728Spring\u4e2d\uff0cAOP\u4ee3\u7406\u53ef\u4ee5\u662fJDK\u52a8\u6001\u4ee3\u7406\u6216\u8005CGLIB\u4ee3\u7406\u3002\n\n\u7ec7\u5165\uff08Weaving\uff09\uff1a\u628a\u5207\u9762\u8fde\u63a5\u5230\u5176\u5b83\u7684\u5e94\u7528\u7a0b\u5e8f\u7c7b\u578b\u6216\u8005\u5bf9\u8c61\u4e0a\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u88ab\u901a\u77e5\u7684\u5bf9\u8c61\u3002\u8fd9\u4e9b\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\uff08\u4f8b\u5982\u4f7f\u7528AspectJ\u7f16\u8bd1\u5668\uff09\uff0c\u7c7b\u52a0\u8f7d\u65f6\u548c\u8fd0\u884c\u65f6\u5b8c\u6210\u3002Spring\u548c\u5176\u4ed6\u7eafJava AOP\u6846\u67b6\u4e00\u6837\uff0c\u5728\u8fd0\u884c\u65f6\u5b8c\u6210\u7ec7\u5165\u3002\n\u5176\u4e2d\u91cd\u8981\u7684\u540d\u8bcd\u6709\uff1a\u5207\u9762\uff08Aspect\uff09\uff0c\u5207\u5165\u70b9\uff08Pointcut\uff09\n\n\n\u56db\u3001\u4ee3\u7801\u5b9e\u73b0\n&lt;!--\u5f15\u5165AOP\u4f9d\u8d56--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-aop&lt;/artifactId&gt;\n    &lt;version&gt;2.1.6.RELEASE&lt;/version&gt;\n&lt;/dependency&gt;\n\n//\u6a21\u62df\u4e00\u4e0bservice\n@Service\npublic class UserService {\n    public String getUsernameById(Integer id) {\n        System.out.println(&quot;\u88ab\u589e\u5f3a\u65b9\u6cd5&gt;&gt;&gt;   getUsernameById&quot;);\n//        int i = 1 / 0;\n        return &quot;xuxx - &quot; + id;\n    }\n\n    public void deleteUserById(Integer id) {\n        System.out.println(&quot;deleteUserById  &quot; + id);\n    }\n}\n\n@RestController\npublic class UserController {\n    @Autowired\n    UserService service;\n\n    @GetMapping(&quot;/getuser&quot;)\n    public String getUsernameById(Integer id) {\n        return service.getUsernameById(1);\n    }\n\n    @DeleteMapping(&quot;/deluser&quot;)\n    public void deleteUserById(Integer id) {\n        service.deleteUserById(1);\n    }\n}\n\n//\u5207\u9762\u7c7b\n@Component\n@Aspect//\u5207\u9762\npublic class LogComponent {\n    /**\n     * \u5b9a\u4e49\u5207\u5165\u70b9\n     * \u6b64\u5904\u662fcom.xuxx.aop.service\u5305\u4e0b\u7684\u4efb\u610f\u53c2\u6570\u3001\u4efb\u610f\u8fd4\u56de\u503c\u7684\u4efb\u610f\u65b9\u6cd5\n     */\n    @Pointcut(&quot;execution(* com.xuxx.aop.service.*.*(..))&quot;)\n    public void pc1() {\n    }\n\n    /**\n     * \u524d\u7f6e\u901a\u77e5\uff0c\u5728\u65b9\u6cd5\u6267\u884c\u4e4b\u524d\u6267\u884c\n     */\n    @Before(&quot;pc1()&quot;)\n    public void before(JoinPoint joinPoint) {\n        String methodName = joinPoint.getSignature().getName();\n        System.out.println(&quot;Before&gt;&gt;&gt;   &quot; + methodName);\n    }\n\n    /**\n     * \u540e\u7f6e\u901a\u77e5\uff0c\u5728\u65b9\u6cd5\u6267\u884c\u4e4b\u540e\u6267\u884c\uff08\u65e0\u8bba\u662f\u5426\u53d1\u751f\u5f02\u5e38\uff09\u8fd8\u4e0d\u80fd\u8bbf\u95ee\u76ee\u6807\u65b9\u6cd5\u6267\u884c\u7684\u7ed3\u679c\n     */\n    @After(&quot;pc1()&quot;)\n    public void after(JoinPoint joinPoint) {\n        String methodName = joinPoint.getSignature().getName();\n        System.out.println(&quot;After&gt;&gt;&gt;   &quot; + methodName);\n    }\n\n    /**\n     * \u8fd4\u56de\u901a\u77e5\uff0c\u5728\u65b9\u6cd5\u6b63\u5e38\u7ed3\u675f\u540e \u8fd4\u56de\u7ed3\u679c\u4e4b\u540e\u6267\u884c \u53ef\u4ee5\u8bbf\u95ee\u65b9\u6cd5\u7684\u8fd4\u56de\u503c\n     */\n    @AfterReturning(value = &quot;pc1()&quot;, returning = &quot;result&quot;)\n    public void afterReturning(JoinPoint joinPoint, Object result) {\n        String methodName = joinPoint.getSignature().getName();\n        System.out.println(&quot;AfterReturning&gt;&gt;&gt;   &quot; + methodName + &quot;-----result&gt;&gt;&gt;&quot; + result);\n    }\n\n    /**\n     * \u5f02\u5e38\u901a\u77e5\uff0c\u5728\u65b9\u6cd5\u629b\u51fa\u5f02\u5e38\u4e4b\u540e\u6267\u884c\n     * \u53ef\u4ee5\u8bbf\u95ee\u5230\u5f02\u5e38\u5bf9\u8c61\uff0c\u800c\u4e14\u53ef\u4ee5\u6307\u5b9a\u5728\u51fa\u73b0\u7279\u5b9a\u5f02\u5e38\u65f6\u518d\u901a\u77e5\u4ee3\u7801\u3002\n     */\n    @AfterThrowing(value = &quot;pc1()&quot;, throwing = &quot;t&quot;)\n    public void afterThrowing(JoinPoint joinPoint, Throwable t) {\n        String methodName = joinPoint.getSignature().getName();\n        System.out.println(&quot;AfterThrowing&gt;&gt;&gt;   &quot; + methodName + &quot; -----Throwable&gt;&gt;&gt;   &quot; + t.getMessage());\n    }\n\n    /**\n     * \u73af\u7ed5\u901a\u77e5\uff0c\u56f4\u7ed5\u7740\u65b9\u6cd5\u6267\u884c\n     * \u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u52a8\u6001\u4ee3\u7406\uff0c\u5305\u542b\u4e86\u6574\u4e2a\u901a\u77e5\u7684\u8fc7\u7a0b\u3002\n     * proceed\u65b9\u6cd5\u7c7b\u4f3c\u4e8e\u4f7f\u7528\u52a8\u6001\u4ee3\u7406\u65f6\u7684invoke\u65b9\u6cd5\n     * \u73af\u7ed5\u901a\u77e5\u548c\u5176\u4ed6\u901a\u77e5\u4e00\u8d77\u4f7f\u7528\u65f6\u8981\u8003\u8651\u987a\u5e8f\u95ee\u9898\n     */\n    @Around(value = &quot;pc1()&quot;)\n    public Object around(ProceedingJoinPoint pjp) {\n        Object result = null;\n        String methodName = pjp.getSignature().getName();\n        try {\n            System.out.println(&quot;Around&gt;&gt;&gt;  \u524d\u7f6e\u901a\u77e5\u8fd4\u56de\u6267\u884c\u7684\u65b9\u6cd5:&quot; + methodName + &quot; --- \u65b9\u6cd5\u53c2\u6570:&quot; + Arrays.asList(pjp.getArgs()));\n            result = pjp.proceed();\n            System.out.println(&quot;Around&gt;&gt;&gt;  \u8fd4\u56de\u901a\u77e5\u7684\u7ed3\u679c\u662f:&quot; + result);\n        } catch (Throwable throwable) {\n            throwable.printStackTrace();\n            System.out.println(&quot;Around&gt;&gt;&gt;  \u5f02\u5e38\u8fd4\u56de&quot;);\n        }\n        System.out.println(&quot;Around&gt;&gt;&gt;  \u540e\u7f6e\u901a\u77e5:&quot; + methodName);\n        result = &quot;Around&gt;&gt;&gt;  \u5982\u679c\u8981\u6539\u53d8\u8fd4\u56de\u503c\uff0c\u6ce8\u610f\u7c7b\u578b\u8f6c\u6362\u5f02\u5e38&quot;;\n        return result;\n    }\n}\n\nSpring \u57fa\u4e8e\u6ce8\u89e3\u7684AOP\u914d\u7f6e\u6ce8\u610f\u4e8b\u9879\n\u901a\u77e5\u7c7b\u65b9\u6cd5\u7684\u6267\u884c\u987a\u5e8f\n\n\u57fa\u4e8eXML:\n\u524d\u7f6e\u901a\u77e5(Before) \u2192 \u8fd4\u56de\u901a\u77e5(AfterRunning)/\u5f02\u5e38\u901a\u77e5(AfterThrowing) \u2192 \u540e\u7f6e\u901a\u77e5(After)\n\u57fa\u4e8e\u6ce8\u89e3\n\u524d\u7f6e\u901a\u77e5(Before) \u2192 \u540e\u7f6e\u901a\u77e5(After) \u2192 \u8fd4\u56de\u901a\u77e5(AfterRunning)/\u5f02\u5e38\u901a\u77e5(AfterThrowing)\n\n\u6240\u4ee5\uff0c\u57fa\u4e8e\u6ce8\u89e3\u7684AOP\u914d\u7f6e\u901a\u77e5\u7c7b\u7684\u65b9\u6cd5\u6700\u597d\u5355\u72ec\u4f7f\u7528\u73af\u7ed5\u901a\u77e5(Around)\n\u8865\u5145\uff1a\u57fa\u4e8e\u6ce8\u89e3\u7684\u6267\u884c\u987a\u5e8f\n1.\u8fdb\u5165\u73af\u7ed5\u901a\u77e5(Around)\n2.\u524d\u7f6e\u901a\u77e5(Before)\n3.\u9000\u51fa\u73af\u7ed5\u901a\u77e5(Around)\n4.\u540e\u7f6e\u901a\u77e5(After)\n5.\u8fd4\u56de\u901a\u77e5(AfterRunning)/\u5f02\u5e38\u901a\u77e5(AfterThrowing)\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "JSP\u548cMVC\u5f00\u53d1\u6a21\u5f0f", "date": "2020-05-08T22:10:00-00.00", "path": "/Xuxx_Blogs/archives/bj15/", "text": "1.JSP\n\n1. \u6307\u4ee4\n    * \u4f5c\u7528\uff1a\u7528\u4e8e\u914d\u7f6eJSP\u9875\u9762\uff0c\u5bfc\u5165\u8d44\u6e90\u6587\u4ef6\n    * \u683c\u5f0f\uff1a\n        &lt;%@ \u6307\u4ee4\u540d\u79f0 \u5c5e\u6027\u540d1=\u5c5e\u6027\u503c1 \u5c5e\u6027\u540d2=\u5c5e\u6027\u503c2 ... %&gt;\n    * \u5206\u7c7b\uff1a\n        1. page     \uff1a \u914d\u7f6eJSP\u9875\u9762\u7684\n            * contentType\uff1a\u7b49\u540c\u4e8eresponse.setContentType()\n                1. \u8bbe\u7f6e\u54cd\u5e94\u4f53\u7684mime\u7c7b\u578b\u4ee5\u53ca\u5b57\u7b26\u96c6\n                2. \u8bbe\u7f6e\u5f53\u524djsp\u9875\u9762\u7684\u7f16\u7801\uff08\u53ea\u80fd\u662f\u9ad8\u7ea7\u7684IDE\u624d\u80fd\u751f\u6548\uff0c\u5982\u679c\u4f7f\u7528\u4f4e\u7ea7\u5de5\u5177\uff0c\u5219\u9700\u8981\u8bbe\u7f6epageEncoding\u5c5e\u6027\u8bbe\u7f6e\u5f53\u524d\u9875\u9762\u7684\u5b57\u7b26\u96c6\uff09\n            * import\uff1a\u5bfc\u5305\n            * errorPage\uff1a\u5f53\u524d\u9875\u9762\u53d1\u751f\u5f02\u5e38\u540e\uff0c\u4f1a\u81ea\u52a8\u8df3\u8f6c\u5230\u6307\u5b9a\u7684\u9519\u8bef\u9875\u9762\n            * isErrorPage\uff1a\u6807\u8bc6\u5f53\u524d\u4e5f\u662f\u662f\u5426\u662f\u9519\u8bef\u9875\u9762\u3002\n                * true\uff1a\u662f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u5bf9\u8c61exception\n                * false\uff1a\u5426\u3002\u9ed8\u8ba4\u503c\u3002\u4e0d\u53ef\u4ee5\u4f7f\u7528\u5185\u7f6e\u5bf9\u8c61exception\n        2. include  \uff1a \u9875\u9762\u5305\u542b\u7684\u3002\u5bfc\u5165\u9875\u9762\u7684\u8d44\u6e90\u6587\u4ef6\n            * &lt;%@include file=\"top.jsp\"%&gt;\n        3. taglib   \uff1a \u5bfc\u5165\u8d44\u6e90\n            * &lt;%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %&gt;\n                * prefix\uff1a\u524d\u7f00\uff0c\u81ea\u5b9a\u4e49\u7684\n2. \u6ce8\u91ca:\n    1. html\u6ce8\u91ca\uff1a\n        &lt;!-- --&gt;:\u53ea\u80fd\u6ce8\u91cahtml\u4ee3\u7801\u7247\u6bb5\n    2. jsp\u6ce8\u91ca\uff1a\u63a8\u8350\u4f7f\u7528\n        &lt;%-- --%&gt;\uff1a\u53ef\u4ee5\u6ce8\u91ca\u6240\u6709\n3. \u5185\u7f6e\u5bf9\u8c61\n    * \u5728jsp\u9875\u9762\u4e2d\u4e0d\u9700\u8981\u521b\u5efa\uff0c\u76f4\u63a5\u4f7f\u7528\u7684\u5bf9\u8c61\n    * \u4e00\u5171\u67099\u4e2a\uff1a\n            \u53d8\u91cf\u540d                 \u771f\u5b9e\u7c7b\u578b                        \u4f5c\u7528\n        * pageContext               PageContext                 \u5f53\u524d\u9875\u9762\u5171\u4eab\u6570\u636e\uff0c\u8fd8\u53ef\u4ee5\u83b7\u53d6\u5176\u4ed6\u516b\u4e2a\u5185\u7f6e\u5bf9\u8c61\n        * request                   HttpServletRequest          \u4e00\u6b21\u8bf7\u6c42\u8bbf\u95ee\u7684\u591a\u4e2a\u8d44\u6e90(\u8f6c\u53d1)\n        * session                   HttpSession                 \u4e00\u6b21\u4f1a\u8bdd\u7684\u591a\u4e2a\u8bf7\u6c42\u95f4\n        * application               ServletContext              \u6240\u6709\u7528\u6237\u95f4\u5171\u4eab\u6570\u636e\n        * response                  HttpServletResponse         \u54cd\u5e94\u5bf9\u8c61\n        * page                      Object                      \u5f53\u524d\u9875\u9762(Servlet)\u7684\u5bf9\u8c61  this\n        * out                       JspWriter                   \u8f93\u51fa\u5bf9\u8c61\uff0c\u6570\u636e\u8f93\u51fa\u5230\u9875\u9762\u4e0a\n        * config                    ServletConfig               Servlet\u7684\u914d\u7f6e\u5bf9\u8c61\n        * exception                 Throwable                   \u5f02\u5e38\u5bf9\u8c61\n\n\n\n\u200b\n2.MVC\uff1a\u5f00\u53d1\u6a21\u5f0f\n\n1. jsp\u6f14\u53d8\u5386\u53f2\n    1. \u65e9\u671f\u53ea\u6709servlet\uff0c\u53ea\u80fd\u4f7f\u7528response\u8f93\u51fa\u6807\u7b7e\u6570\u636e\uff0c\u975e\u5e38\u9ebb\u70e6\n    2. \u540e\u6765\u53c8jsp\uff0c\u7b80\u5316\u4e86Servlet\u7684\u5f00\u53d1\uff0c\u5982\u679c\u8fc7\u5ea6\u4f7f\u7528jsp\uff0c\u5728jsp\u4e2d\u5373\u5199\u5927\u91cf\u7684java\u4ee3\u7801\uff0c\u6709\u5199html\u8868\uff0c\u9020\u6210\u96be\u4e8e\u7ef4\u62a4\uff0c\u96be\u4e8e\u5206\u5de5\u534f\u4f5c\n    3. \u518d\u540e\u6765\uff0cjava\u7684web\u5f00\u53d1\uff0c\u501f\u9274mvc\u5f00\u53d1\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7a0b\u5e8f\u7684\u8bbe\u8ba1\u66f4\u52a0\u5408\u7406\u6027\n\n2. MVC\uff1a\n    1. M\uff1aModel\uff0c\u6a21\u578b\u3002JavaBean\n        * \u5b8c\u6210\u5177\u4f53\u7684\u4e1a\u52a1\u64cd\u4f5c\uff0c\u5982\uff1a\u67e5\u8be2\u6570\u636e\u5e93\uff0c\u5c01\u88c5\u5bf9\u8c61\n    2. V\uff1aView\uff0c\u89c6\u56fe\u3002JSP\n        * \u5c55\u793a\u6570\u636e\n    3. C\uff1aController\uff0c\u63a7\u5236\u5668\u3002Servlet\n        * \u83b7\u53d6\u7528\u6237\u7684\u8f93\u5165\n        * \u8c03\u7528\u6a21\u578b\n        * \u5c06\u6570\u636e\u4ea4\u7ed9\u89c6\u56fe\u8fdb\u884c\u5c55\u793a\n    * \u4f18\u7f3a\u70b9\uff1a\n        1. \u4f18\u70b9\uff1a\n            1. \u8026\u5408\u6027\u4f4e\uff0c\u65b9\u4fbf\u7ef4\u62a4\uff0c\u53ef\u4ee5\u5229\u4e8e\u5206\u5de5\u534f\u4f5c\n            2. \u91cd\u7528\u6027\u9ad8\n\n        2. \u7f3a\u70b9\uff1a\n            1. \u4f7f\u5f97\u9879\u76ee\u67b6\u6784\u53d8\u5f97\u590d\u6742\uff0c\u5bf9\u5f00\u53d1\u4eba\u5458\u8981\u6c42\u9ad8\n\n\n\n\n\n\n3.EL\u8868\u8fbe\u5f0f\n\n1. \u6982\u5ff5\uff1aExpression Language \u8868\u8fbe\u5f0f\u8bed\u8a00\n2. \u4f5c\u7528\uff1a\u66ff\u6362\u548c\u7b80\u5316jsp\u9875\u9762\u4e2djava\u4ee3\u7801\u7684\u7f16\u5199\n3. \u8bed\u6cd5\uff1a${\u8868\u8fbe\u5f0f}\n4. \u6ce8\u610f\uff1a\n    * jsp\u9ed8\u8ba4\u652f\u6301el\u8868\u8fbe\u5f0f\u7684\u3002\u5982\u679c\u8981\u5ffd\u7565el\u8868\u8fbe\u5f0f\n        1. \u8bbe\u7f6ejsp\u4e2dpage\u6307\u4ee4\u4e2d\uff1aisELIgnored=\"true\" \u5ffd\u7565\u5f53\u524djsp\u9875\u9762\u4e2d\u6240\u6709\u7684el\u8868\u8fbe\u5f0f\n        2. \\${\u8868\u8fbe\u5f0f} \uff1a\u5ffd\u7565\u5f53\u524d\u8fd9\u4e2ael\u8868\u8fbe\u5f0f\n5. \u4f7f\u7528\uff1a\n    1. \u8fd0\u7b97\uff1a\n        * \u8fd0\u7b97\u7b26\uff1a\n            1. \u7b97\u6570\u8fd0\u7b97\u7b26\uff1a + - * /(div) %(mod)\n            2. \u6bd4\u8f83\u8fd0\u7b97\u7b26\uff1a &gt; &lt; &gt;= &lt;= == !=\n            3. \u903b\u8f91\u8fd0\u7b97\u7b26\uff1a &amp;&amp;(and) ||(or) !(not)\n            4. \u7a7a\u8fd0\u7b97\u7b26\uff1a empty\n                * \u529f\u80fd\uff1a\u7528\u4e8e\u5224\u65ad\u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4\u5bf9\u8c61\u662f\u5426\u4e3anull\u6216\u8005\u957f\u5ea6\u662f\u5426\u4e3a0\n                * ${empty list}:\u5224\u65ad\u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4\u5bf9\u8c61\u662f\u5426\u4e3anull\u6216\u8005\u957f\u5ea6\u4e3a0\n                * ${not empty str}:\u8868\u793a\u5224\u65ad\u5b57\u7b26\u4e32\u3001\u96c6\u5408\u3001\u6570\u7ec4\u5bf9\u8c61\u662f\u5426\u4e0d\u4e3anull \u5e76\u4e14 \u957f\u5ea6&gt;0\n    2. \u83b7\u53d6\u503c\n        1. el\u8868\u8fbe\u5f0f\u53ea\u80fd\u4ece\u57df\u5bf9\u8c61\u4e2d\u83b7\u53d6\u503c\n        2. \u8bed\u6cd5\uff1a\n            1. ${\u57df\u540d\u79f0.\u952e\u540d}\uff1a\u4ece\u6307\u5b9a\u57df\u4e2d\u83b7\u53d6\u6307\u5b9a\u952e\u7684\u503c\n                * \u57df\u540d\u79f0\uff1a\n                    1. pageScope        --&gt; pageContext\n                    2. requestScope     --&gt; request\n                    3. sessionScope     --&gt; session\n                    4. applicationScope --&gt; application\uff08ServletContext\uff09\n                * \u4e3e\u4f8b\uff1a\u5728request\u57df\u4e2d\u5b58\u50a8\u4e86name=\u5f20\u4e09\n                * \u83b7\u53d6\uff1a${requestScope.name}\n\n            2. ${\u952e\u540d}\uff1a\u8868\u793a\u4f9d\u6b21\u4ece\u6700\u5c0f\u7684\u57df\u4e2d\u67e5\u627e\u662f\u5426\u6709\u8be5\u952e\u5bf9\u5e94\u7684\u503c\uff0c\u76f4\u5230\u627e\u5230\u4e3a\u6b62\u3002\n        3. \u83b7\u53d6\u5bf9\u8c61\u3001List\u96c6\u5408\u3001Map\u96c6\u5408\u7684\u503c\n            1. \u5bf9\u8c61\uff1a${\u57df\u540d\u79f0.\u952e\u540d.\u5c5e\u6027\u540d}\n                    * \u672c\u8d28\u4e0a\u4f1a\u53bb\u8c03\u7528\u5bf9\u8c61\u7684getter\u65b9\u6cd5\n\n            2. List\u96c6\u5408\uff1a${\u57df\u540d\u79f0.\u952e\u540d[\u7d22\u5f15]}\n\n            3. Map\u96c6\u5408\uff1a\n                    * ${\u57df\u540d\u79f0.\u952e\u540d.key\u540d\u79f0}\n                    * ${\u57df\u540d\u79f0.\u952e\u540d[\"key\u540d\u79f0\"]}\n    3. \u9690\u5f0f\u5bf9\u8c61\uff1a\n        * el\u8868\u8fbe\u5f0f\u4e2d\u670911\u4e2a\u9690\u5f0f\u5bf9\u8c61\n        * pageContext\uff1a\n            * \u83b7\u53d6jsp\u5176\u4ed6\u516b\u4e2a\u5185\u7f6e\u5bf9\u8c61\n             * ${pageContext.request.contextPath}\uff1a\u52a8\u6001\u83b7\u53d6\u865a\u62df\u76ee\u5f55\n\n\n\n\u200b\n4.JSTL\n\n1. \u6982\u5ff5\uff1aJavaServer Pages Tag Library  JSP\u6807\u51c6\u6807\u7b7e\u5e93\n    * \u662f\u7531Apache\u7ec4\u7ec7\u63d0\u4f9b\u7684\u5f00\u6e90\u7684\u514d\u8d39\u7684jsp\u6807\u7b7e      &lt;\u6807\u7b7e&gt;\n\n2. \u4f5c\u7528\uff1a\u7528\u4e8e\u7b80\u5316\u548c\u66ff\u6362jsp\u9875\u9762\u4e0a\u7684java\u4ee3\u7801      \n\n3. \u4f7f\u7528\u6b65\u9aa4\uff1a\n    1. \u5bfc\u5165jstl\u76f8\u5173jar\u5305\n    2. \u5f15\u5165\u6807\u7b7e\u5e93\uff1ataglib\u6307\u4ee4\uff1a  &lt;%@ taglib %&gt;\n    3. \u4f7f\u7528\u6807\u7b7e\n\n4. \u5e38\u7528\u7684JSTL\u6807\u7b7e\n    1. if:\u76f8\u5f53\u4e8ejava\u4ee3\u7801\u7684if\u8bed\u53e5\n        1. \u5c5e\u6027\uff1a\n            * test \u5fc5\u987b\u5c5e\u6027\uff0c\u63a5\u53d7boolean\u8868\u8fbe\u5f0f\n                * \u5982\u679c\u8868\u8fbe\u5f0f\u4e3atrue\uff0c\u5219\u663e\u793aif\u6807\u7b7e\u4f53\u5185\u5bb9\uff0c\u5982\u679c\u4e3afalse\uff0c\u5219\u4e0d\u663e\u793a\u6807\u7b7e\u4f53\u5185\u5bb9\n                * \u4e00\u822c\u60c5\u51b5\u4e0b\uff0ctest\u5c5e\u6027\u503c\u4f1a\u7ed3\u5408el\u8868\u8fbe\u5f0f\u4e00\u8d77\u4f7f\u7528\n         2. \u6ce8\u610f\uff1a\n             * c:if\u6807\u7b7e\u6ca1\u6709else\u60c5\u51b5\uff0c\u60f3\u8981else\u60c5\u51b5\uff0c\u5219\u53ef\u4ee5\u5728\u5b9a\u4e49\u4e00\u4e2ac:if\u6807\u7b7e\n    2. choose:\u76f8\u5f53\u4e8ejava\u4ee3\u7801\u7684switch\u8bed\u53e5\n        1. \u4f7f\u7528choose\u6807\u7b7e\u58f0\u660e                     \u76f8\u5f53\u4e8eswitch\u58f0\u660e\n        2. \u4f7f\u7528when\u6807\u7b7e\u505a\u5224\u65ad                  \u76f8\u5f53\u4e8ecase\n        3. \u4f7f\u7528otherwise\u6807\u7b7e\u505a\u5176\u4ed6\u60c5\u51b5\u7684\u58f0\u660e        \u76f8\u5f53\u4e8edefault\n\n    3. foreach:\u76f8\u5f53\u4e8ejava\u4ee3\u7801\u7684for\u8bed\u53e5\n        1.\u5b8c\u6210\u91cd\u590d\u7684\u64cd\u4f5c\n            for(inti=0;i&lt;10;i++){...}\n            *\u5c5e\u6027:\n                begin:\u5f00\u59cb\u503c\n                end:\u7ed3\u675f\u503c\n                var:\u4e34\u65f6\u53d8\u91cf\n                step:\u6b65\u957f\n                varStatus :\u5faa\u73af\u72b6\u6001\u5bf9\u8c61\n                    index:\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u4ecee\u5f00\u59cb\n                    count :\u5faa\u73af\u6b21\u6570\uff0c\u4ece1\u5f00\u59cb\n        2. \u4fbf\u5386\u5bb9\u5668\n            List&lt;User&gt; list;\n            for(User user : list){...}\n            *\u5c5e\u6027:\n                items :\u5bb9\u5668\u5bf9\u8c61\n                var :\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u4e34\u65f6\u53d8\u91cf\n                varStatus :\u5faa\u73af\u72b6\u6001\u5bf9\u8c61\n                index:\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u4eceo\u5f00\u59cb\n                count :\u5faa\u73af\u6b21\u6570\uff0c\u4ece1\u5f00\u59cb\n\n5. \u7ec3\u4e60\uff1a\n    * \u9700\u6c42\uff1a\u5728request\u57df\u4e2d\u6709\u4e00\u4e2a\u5b58\u6709User\u5bf9\u8c61\u7684List\u96c6\u5408\u3002\u9700\u8981\u4f7f\u7528jstl+el\u5c06list\u96c6\u5408\u6570\u636e\u5c55\u793a\u5230jsp\u9875\u9762\u7684\u8868\u683ctable\u4e2d\n\n\n\n\n5.\u4e09\u5c42\u67b6\u6784\uff1a\u8f6f\u4ef6\u8bbe\u8ba1\u67b6\u6784\n\n1. \u754c\u9762\u5c42(\u8868\u793a\u5c42)\uff1a\u7528\u6237\u770b\u7684\u5f97\u754c\u9762\u3002\u7528\u6237\u53ef\u4ee5\u901a\u8fc7\u754c\u9762\u4e0a\u7684\u7ec4\u4ef6\u548c\u670d\u52a1\u5668\u8fdb\u884c\u4ea4\u4e92\n2. \u4e1a\u52a1\u903b\u8f91\u5c42\uff1a\u5904\u7406\u4e1a\u52a1\u903b\u8f91\u7684\u3002\n3. \u6570\u636e\u8bbf\u95ee\u5c42\uff1a\u64cd\u4f5c\u6570\u636e\u5b58\u50a8\u6587\u4ef6\u3002\n\n\n\n\n6.\u6848\u4f8b\uff1a\u7528\u6237\u4fe1\u606f\u5217\u8868\u5c55\u793a\n\n1. \u9700\u6c42\uff1a\u7528\u6237\u4fe1\u606f\u7684\u589e\u5220\u6539\u67e5\u64cd\u4f5c\n2. \u8bbe\u8ba1\uff1a\n    1. \u6280\u672f\u9009\u578b\uff1aServlet+JSP+MySQL+JDBCTempleat+Duird+BeanUtilS+tomcat\n    2. \u6570\u636e\u5e93\u8bbe\u8ba1\uff1a\n        create database day17; -- \u521b\u5efa\u6570\u636e\u5e93\n        use day17;             -- \u4f7f\u7528\u6570\u636e\u5e93\n        create table user(   -- \u521b\u5efa\u8868\n            id int primary key auto_increment,\n            name varchar(20) not null,\n            gender varchar(5),\n            age int,\n            address varchar(32),\n            qq  varchar(20),\n            email varchar(50)\n        );\n\n3. \u5f00\u53d1\uff1a\n    1. \u73af\u5883\u642d\u5efa\n        1. \u521b\u5efa\u6570\u636e\u5e93\u73af\u5883\n        2. \u521b\u5efa\u9879\u76ee\uff0c\u5bfc\u5165\u9700\u8981\u7684jar\u5305\n\n    2. \u7f16\u7801\n4. \u6d4b\u8bd5\n5. \u90e8\u7f72\u8fd0\u7ef4\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Jsp", "slug": "Jsp", "permalink": "/Xuxx_Blogs/tag/Jsp/"}]}, {"title": "\u4f1a\u8bdd\u6280\u672f", "date": "2020-05-07T02:10:00-00.00", "path": "/Xuxx_Blogs/archives/bj14/", "text": "\n\u4f1a\u8bdd:\u4e00\u6b21\u4f1a\u8bdd\u4e2d\u5305\u542b\u591a\u6b21\u8bf7\u6c42\u548c\u54cd\u5e94\u3002\n\n \u4e00\u6b21\u4f1a\u8bdd:\u6d4f\u89c8\u5668\u7b2c\u4e00\u6b21\u7ed9\u670d\u52a1\u5668\u8d44\u6e90\u53d1\u9001\u8bf7\u6c42\uff0c\u4f1a\u8bdd\u5efa\u7acb\uff0c\u76f4\u5230\u6709\u4e00\u65b9\u65ad\u5f00\u4e3a\u6b62\n\n\u529f\u80fd:\u5728\u4e00\u6b21\u4f1a\u8bdd\u7684\u8303\u56f4\u5185\u7684\u591a\u6b21\u8bf7\u6c42\u95f4\uff0c\u5171\u4eab\u6570\u636e\n\n\u65b9\u5f0f:\n\n\u5ba2\u6237\u7aef\u4f1a\u8bdd\u6280\u672f: Cookie\n\u670d\u52a1\u5668\u7aef\u4f1a\u8bdd\u6280\u672f: Session\n\n\n\n1. Cookie\n1. \u6982\u5ff5:\n\u5ba2\u6237\u7aef\u4f1a\u8bdd\u6280\u672f\uff0c\u5c06\u6570\u636e\u4fdd\u5b58\u5230\u5ba2\u6237\u7aef\n2. \u5feb\u901f\u5165\u95e8:\n\u4f7f\u7528\u6b65\u9aa4:\n\n\u521b\u5efacookie\u5bf9\u8c61\uff0c \u7ed1\u5b9a\u6570\u636e\n\n new Cookie(String name, String value)\n\n\u53d1\u9001Cookie\u5bf9\u8c61\n\nresponse. addCookie(Cookie cookie)\n\n\u83b7\u53d6Cookie, \u5230\u6570\u636e\n\nCookie[] request. getColkies()\n\n\n3. \u5b9e\u73b0\u539f\u7406\n\u57fa\u4e8e\u54cd\u5e94\u5934set-cookie\u548c\u8bf7\u6c42\u5934cookie\u5b9e\u73b0\n4. cookie\u7684\u7ec6\u8282\n\n\u4e00\u6b21\u53ef\u4e0d\u53ef\u4ee5\u53d1\u9001\u591a\u4e2acookie?\n\u53ef\u4ee5\uff0c\u521b\u5efa\u591a\u4e2aCookie\u5bf9\u8c61\uff0c\u4f7f\u7528response\u8c03\u7528\u591a\u6b21addCookie\u65b9\u6cd5\u53d1\u9001cookie\u5373\u53ef\u3002\n\ncookie\u5728\u6d4f\u89c8\u5668\u4e2d\u4fdd\u5b58\u591a\u957f\u65f6\u95f4?\n\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u6d4f\u89c8\u5668\u5173\u95ed\u540e\uff0cCookie\u6570\u636e\u88ab\u9500\u6bc1\n\n\u6301\u4e45\u5316\u5b58\u50a8:\nsetMaxAge(int seconds )\n\n\u6b63\u6570:\u5c06Cooki e\u6570\u636e\u5199\u5230\u786c\u76d8\u7684\u6587\u4ef6\u4e2d\u3002\u6301\u4e45\u5316\u5b58\u50a8\u3002\u5e76\u6307\u5b9acookie\u5b58\u6d3b\u65f6\u95f4\uff0c\u65f6\u95f4\u5230\u540e\uff0ccookie\u6587\u4ef6\u81ea\u52a8\u5931\u6548\n\u8d1f\u6570:\u9ed8\u8ba4\u503c\n\u96f6:\u5220\u9664cookie\u4fe1\u606f\n\n\n\n\ncookie\u80fd\u4e0d\u80fd\u5b58\u4e2d\u6587?\n\u5728tomcat 8\u4e4b\u524dcookie\u4e2d\u4e0d\u80fd\u76f4\u63a5\u5b58\u50a8\u4e2d\u6587\u6570\u636e\u3002 \u2014\u2014\u9700\u8981\u5c06\u4e2d\u6587\u6570\u636e\u8f6c\u7801---- -\u822c\u91c7\u7528URL\u7f16\u7801\n\n\n\u5728tomcat 8\u4e4b\u540e\uff0ccookie\u652f\u6301\u4e2d\u6587\u6570\u636e\u3002\n\ncookie\u5171\u4eab\u95ee\u9898 ?\n\n\u5047\u8bbe\u5728\u4e00\u4e2atomcat\u670d\u52a1\u5668\u4e2d\uff0c\u90e8\u7f72\u4e86\u591a\u4e2aweb\u9879\u76ee\uff0c\u90a3\u4e48\u5728\u8fd9\u4e9bweb\u9879\u76ee\u4e2dcookie\u80fd\u4e0d\u80fd\u5171\u4eab?\n  \u9ed8\u8ba4\u60c5\u51b5\u4e0bcookie\u4e0d\u80fd\u5171\u4eab\nsetPath(String path) :\u8bbe\u7f6ecookie\u7684\u83b7\u53d6\u8303\u56f4\u3002\u9ed8\u8ba4\u8bbe\u7f6e\u4e3a\u5f53\u524d\u7684\u865a\u62df\u76ee\u5f55\n\n      \u5982\u679c\u8981\u5171\u4eab\u7ed9\u540c\u4e00\u53f0\u670d\u52a1\u5668\u7684\u4e0a\u7684\u5176\u4ed6\u9879\u76ee\uff0c\u5219\u53ef\u4ee5\u5c06path\u8bbe\u7f6e\u4e3a\"/\" \n\n\n\n\u4e0d\u540c\u7684tomcat\u670d\u52a1\u5668\u95f4cookie\u5171\u4eab\u95ee\u9898?\n\n\u200b     setDomain(String path) :\u5982\u679c\u8bbe\u7f6e\u4e00\u7ea7\u57df\u540d\u76f8\u540c\uff0c \u90a3\u4e48\u591a\u4e2a\u670d\u52a1\u5668\u4e4b\u95f4cookie\u53ef\u4ee5\u5171\u4eab\n\u200b     \u4f8b\uff1asetDomain(\" .baidu. com\") ,\u90a3\u4e48tieba. baidu. com\u548cnews . baidu. com\u4e2dcookie\u53ef\u4ee5\u5171\u4eab\n\n\n\nCookie\u7684\u7279\u70b9\u548c\u4f5c\u7528\n\u7279\u70b9:\n\ncookie\u5b58\u50a8\u6570\u636e\u5728\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\n\u6d4f\u89c8\u5668\u5bf9\u4e8e\u5355\u4e2acookie\u7684\u5927\u5c0f\u6709\u9650\u5236(4kb)\u4ee5\u53ca\u5bf9\u540c\u4e00\u4e2a\u57df\u540d\u4e0b\u7684\u603bcookie\u6570\u91cf\u4e5f\u6709\u9650\u5236(20\u4e2a)\n\n\u4f5c\u7528:\n\ncookie- \u822c\u7528\u4e8e\u5b58 \u51fa\u5c11\u91cf\u7684\u4e0d\u592a\u654f\u611f\u7684\u6570\u636e\n\u5728\u4e0d\u767b\u5f55\u7684\u60c5\u51b5\u4e0b\uff0c\u5b8c\u6210\u670d\u52a1\u5668\u5bf9\u5ba2\u6237\u7aef\u7684\u8eab\u4efd\u8bc6\u522b\n\n\n\n2. Session\n1. \u6982\u5ff5:\n\u670d\u52a1\u5668\u7aef\u4f1a\u8bdd\u6280\u672f\uff0c\u5728\u4e00\u6b21\u4f1a\u8bdd\u7684\u591a\u6b21\u8bf7\u6c42\u95f4\u5171\u4eab\u6570\u636e\uff0c\u5c06\u6570\u636e\u4fdd\u5b58\u5728\u670d\u52a1\u5668\u7aef\u7684\u5bf9\u8c61\u4e2d\u3002\n2.\u5feb\u901f\u5165\u95e8\n\n\u83b7\u53d6HttpSession\u5bf9\u8c61:\n\nHttpSession session = request. getSession();\n\n\u4f7f\u7528HttpSession\u5bf9\u8c61:\n\nObject getAttribute( String name);\nvoid setAttribute(string name, object value);\nvoid removeAttribute(String name);\n\n\n3. \u539f\u7406\nSession\u7684\u5b9e\u73b0\u662f\u4f9d\u8d56\u4e8ecookie\u7684\u3002\n4. \u7ec6\u8282\n\n\u5f53\u5ba2\u6237\u7aef\u5173\u95ed\u540e,\u670d\u52a1\u5668\u4e0d\u5173\u95ed\uff0c\u4e24\u6b21\u83b7\u53d6session\u662f\u5426\u4e3a\u540c\u4e00\u4e2a?\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u3002\u4e0d\u662f\u3002\n\u5982\u679c\u9700\u8981\u76f8\u540c\uff0c\u5219\u53ef\u4ee5\u521b\u5efaCookie,\u952e\u4e3aJSESSIONID\uff0c\u8bbe\u7f6e\u6700\u5927\u5b58\u6d3b\u65f6\u95f4\uff0c\u8ba9cookie\u6301\u4e45\u5316\u4fdd\u5b58\u3002\n\nCookie C = new Cookie(\"ISESSIONID\" , session. getId());\nC. setMaxAge(60* 60) ;\nresponse. addcookie(c);\n\n\n\n\u5ba2\u6237\u7aef\u4e0d\u5173\u95ed\uff0c\u670d\u52a1\u5668\u5173\u95ed\u540e\uff0c\u4e24\u6b21\u83b7\u53d6\u7684session\u662f\u540c\u4e00\u4e2a\u5417?\n\n         \u4e0d\u662f\u540c\u4e00\u4e2a\uff0c\u4f46\u662f\u8981\u786e\u4fdd\u6570\u636e\u4e0d\u4e22\u5931\u3002\n\nsession\u7684\u949d\u5316(\u5e8f\u5217\u5316):\n\n \u5728\u670d\u52a1\u5668\u6b63\u5e38\u5173\u95ed\u4e4b\u524d\uff0c\u5c06session\u5bf9\u8c61\u5e8f\u5217\u5316\u5230\u786c\u76d8\u4e0a\u3002\n\nsession\u7684\u6d3b\u5316(\u53cd\u5e8f\u5217\u5316):\n\n   \u5728\u670d\u52a1\u5668\u542f\u52a8\u540e\uff0c\u5c06session\u6587\u4ef6\u8f6c\u5316\u4e3a\u5185\u5b58\u4e2d\u7684session\u5bf9\u8c61\u5373\u53ef\u3002\n\nsession\u4ec0\u4e48\u65f6\u5019\u88ab\u9500\u6bc1?\n\n\u670d\u52a1\u5668\u5173\u95ed\n\n\nsession\u5bf9\u8c61\u8c03\u7528invalidate()\n\nsession\u9ed8\u8ba4\u5931\u6548\u65f6\u95f430\u5206\u949f\n\u5728web.xml\u4e2d\uff08\u53ef\u4ee5\u662f\u9879\u76ee\u7684web.xml,\u4e5f\u53ef\u4ee5\u662ftomcat\u7684conf\u4e0b\u7684web.xml\uff09\u9009\u62e9\u6027\u914d\u7f6e\u4fee\u6539\n&lt;session-config&gt;\n&lt;session-timeout&gt;30&lt;/session-timeout&gt;\n&lt;/session-config&gt;\n\n\n\n\n\n5. session\u7684\u7279\u70b9\n\nsession\u7528\u4e8e\u5b58\u50a8\u4e00\u6b21\u4f1a\u8bdd\u7684\u591a\u6b21\u8bf7\u6c42\u7684\u6570\u636e\uff0c \u5b58\u5728\u670d\u52a1\u5668\u7aef\nsession\u53ef\u4ee5\u5b58 \u50a8\u4efb\u610f\u7c7b\u578b\uff0c\u4efb\u610f\u5927\u5c0f\u7684\u6570\u636e\n\nsession\u4e0ecookie\u7684\u533a\u522b:\n\nsession\u5b58 \u50a8\u6570\u636e\u5728\u670d\u52a1\u5668\u7aef\uff0cCookie\u5728\u5ba2\u6237\u7aef\nsession\u6ca1\u6709\u6570\u636e\u5927\u5c0f\u9650\u5236\uff0cCookie\u6709\nsession\u6570\u636e\u5b89\u5168\uff0cCookie\u76f8\u5bf9\u4e8e\u4e0d\u5b89\u5168\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Cookie", "slug": "Cookie", "permalink": "/Xuxx_Blogs/tag/Cookie/"}, {"name": "Session", "slug": "Session", "permalink": "/Xuxx_Blogs/tag/Session/"}]}, {"title": "Spring Boot\u6ce8\u518c\u62e6\u622a\u5668", "date": "2020-05-07T01:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj13/", "text": "1. \u7f16\u5199Controller\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;/hello&quot;)\n    public String hello() {\n        return &quot;Hello&quot;;\n    }\n}\n\n2.  \u7f16\u5199\u62e6\u622a\u5668\n/**\n * \u5b9a\u4e49\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\n */\npublic class MyInterceptor implements HandlerInterceptor {\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        System.out.println(&quot;preHandle\u65b9\u6cd5&quot;);\n        return true;\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        System.out.println(&quot;postHandle\u65b9\u6cd5&quot;);\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        System.out.println(&quot;afterCompletion\u65b9\u6cd5&quot;);\n    }\n}\n\n3.\u914d\u7f6e\u62e6\u622a\u5668\n/**\n * \u914d\u7f6e\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\n */\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n\n    //\u6ce8\u5165\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\n    @Bean\n    MyInterceptor myInterceptor() {\n        return new MyInterceptor();\n    }\n\n    @Override\n    public void addInterceptors(InterceptorRegistry registry) {\n        //\u62e6\u622a\u6240\u6709\u8def\u5f84 \u5b58\u5728\u591a\u4e2a\u62e6\u622a\u5668\u65f6\u8981\u914d\u7f6e\u4f18\u5148\u7ea7\n        registry.addInterceptor(myInterceptor()).addPathPatterns(&quot;/**&quot;);\n    }\n}\n\n4. \u6d4b\u8bd5\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "Spring Boot\u901a\u8fc7CORS\u5b9e\u73b0\u8de8\u57df", "date": "2020-05-07T00:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj12/", "text": "CORS\u6982\u8ff0\n\u5f53\u4e00\u4e2a\u8d44\u6e90\u4ece\u4e0e\u8be5\u8d44\u6e90\u672c\u8eab\u6240\u5728\u7684\u670d\u52a1\u5668\u4e0d\u540c\u7684\u57df\u3001\u534f\u8bae\u3001\u7aef\u53e3\u8bf7\u6c42\u4e00\u4e2a\u8d44\u6e90\u65f6\uff0c\u8d44\u6e90\u4f1a\u53d1\u8d77\u4e00\u4e2a\u8de8\u57df HTTP \u8bf7\u6c42\u3002\u540c\u6e90\u7b56\u7565\u53c2\u8003\u6d4f\u89c8\u5668\u7684\u540c\u6e90\u7b56\u7565 | MDN\n\u51fa\u4e8e\u5b89\u5168\u539f\u56e0\uff0c\u6d4f\u89c8\u5668\u9650\u5236\u4ece\u811a\u672c\u5185\u53d1\u8d77\u7684\u8de8\u6e90HTTP\u8bf7\u6c42\uff0cXMLHttpRequest\u548cFetch API\uff0c\u53ea\u80fd\u4ece\u52a0\u8f7d\u5e94\u7528\u7a0b\u5e8f\u7684\u540c\u4e00\u4e2a\u57df\u8bf7\u6c42HTTP\u8d44\u6e90\uff0c\u9664\u975e\u4f7f\u7528CORS\u5934\u6587\u4ef6\n\u5bf9\u4e8e\u6d4f\u89c8\u5668\u9650\u5236\u8fd9\u4e2a\u8bcd\uff0c\u8981\u7740\u91cd\u89e3\u91ca\u4e00\u4e0b\uff1a\u4e0d\u4e00\u5b9a\u662f\u6d4f\u89c8\u5668\u9650\u5236\u4e86\u53d1\u8d77\u8de8\u7ad9\u8bf7\u6c42\uff0c\u4e5f\u53ef\u80fd\u662f\u8de8\u7ad9\u8bf7\u6c42\u53ef\u4ee5\u6b63\u5e38\u53d1\u8d77\uff0c\u4f46\u662f\u8fd4\u56de\u7ed3\u679c\u88ab\u6d4f\u89c8\u5668\u62e6\u622a\u4e86\u3002\n\u7b80\u5355\u8bf7\u6c42\n\u4e0d\u4f1a\u89e6\u53d1CORS\u9884\u68c0\u7684\u8bf7\u6c42\u79f0\u4e3a\u7b80\u5355\u8bf7\u6c42\uff0c\u6ee1\u8db3\u4ee5\u4e0b\u6240\u6709\u6761\u4ef6\u7684\u624d\u4f1a\u88ab\u89c6\u4e3a\u7b80\u5355\u8bf7\u6c42\uff0c\u57fa\u672c\u4e0a\u6211\u4eec\u65e5\u5e38\u5f00\u53d1\u53ea\u4f1a\u5173\u6ce8\u524d\u4e24\u70b9\n\n\u4f7f\u7528GET\u3001POST\u3001HEAD\u5176\u4e2d\u4e00\u79cd\u65b9\u6cd5\n\n\u53ea\u4f7f\u7528\u4e86\u5982\u4e0b\u7684\u5b89\u5168\u9996\u90e8\u5b57\u6bb5\uff0c\u4e0d\u5f97\u4eba\u4e3a\u8bbe\u7f6e\u5176\u4ed6\u9996\u90e8\u5b57\u6bb5\n\nAccept\n\nAccept-Language\n\nContent-Language\n\nContent-Type\n\u4ec5\u9650\u4ee5\u4e0b\u4e09\u79cd\n\ntext/plain\n\n\n\n\n\n\nmultipart/form-data\n\napplication/x-www-form-urlencoded\n\nHTML\u5934\u90e8header field\u5b57\u6bb5\uff1aDPR\u3001Download\u3001Save-Data\u3001Viewport-Width\u3001WIdth\n\n\n\n\n\n\n\u8bf7\u6c42\u4e2d\u7684\u4efb\u610fXMLHttpRequestUpload \u5bf9\u8c61\u5747\u6ca1\u6709\u6ce8\u518c\u4efb\u4f55\u4e8b\u4ef6\u76d1\u542c\u5668\uff1bXMLHttpRequestUpload \u5bf9\u8c61\u53ef\u4ee5\u4f7f\u7528 XMLHttpRequest.upload \u5c5e\u6027\u8bbf\u95ee\n\n\u8bf7\u6c42\u4e2d\u6ca1\u6709\u4f7f\u7528 ReadableStream \u5bf9\u8c61\n\n\n\u9884\u68c0\u8bf7\u6c42\n\u9700\u9884\u68c0\u7684\u8bf7\u6c42\u8981\u6c42\u5fc5\u987b\u9996\u5148\u4f7f\u7528 OPTIONS \u65b9\u6cd5\u53d1\u8d77\u4e00\u4e2a\u9884\u68c0\u8bf7\u6c42\u5230\u670d\u52a1\u5668\uff0c\u4ee5\u83b7\u77e5\u670d\u52a1\u5668\u662f\u5426\u5141\u8bb8\u8be5\u5b9e\u9645\u8bf7\u6c42\u3002\"\u9884\u68c0\u8bf7\u6c42\u201c\u7684\u4f7f\u7528\uff0c\u53ef\u4ee5\u907f\u514d\u8de8\u57df\u8bf7\u6c42\u5bf9\u670d\u52a1\u5668\u7684\u7528\u6237\u6570\u636e\u4ea7\u751f\u672a\u9884\u671f\u7684\u5f71\u54cd\n\u4e0b\u9762\u7684\u8bf7\u6c42\u4f1a\u89e6\u53d1\u9884\u68c0\u8bf7\u6c42\uff0c\u5176\u5b9e\u975e\u7b80\u5355\u8bf7\u6c42\u4e4b\u5916\u7684\u5c31\u4f1a\u89e6\u53d1\u9884\u68c0\uff0c\u5c31\u4e0d\u7528\u8bb0\u90a3\u4e48\u591a\u4e86\n\n\u4f7f\u7528\u4e86PUT\u3001DELETE\u3001CONNECT\u3001OPTIONS\u3001TRACE\u3001PATCH\u65b9\u6cd5\n\n\u4eba\u4e3a\u8bbe\u7f6e\u4e86\u975e\u89c4\u5b9a\u5185\u7684\u5176\u4ed6\u9996\u90e8\u5b57\u6bb5\uff0c\u53c2\u8003\u4e0a\u9762\u7b80\u5355\u8bf7\u6c42\u7684\u5b89\u5168\u5b57\u6bb5\u96c6\u5408\uff0c\u8fd8\u8981\u7279\u522b\u6ce8\u610fContent-Type\u7684\u7c7b\u578b\n\nXMLHttpRequestUpload \u5bf9\u8c61\u6ce8\u518c\u4e86\u4efb\u4f55\u4e8b\u4ef6\u76d1\u542c\u5668\n\n#### \u8bf7\u6c42\u4e2d\u4f7f\u7528\u4e86ReadableStream\u5bf9\u8c61\n\n\n1. \u95ee\u9898\u6f14\u793a\n\u521b\u5efa\u4e24\u4e2aSpring Boot\u9879\u76ee\uff0c\u4e00\u4e2a\u63d0\u4f9b\u63a5\u53e3\uff0c\u53e6\u4e00\u4e2a\u6765\u8bbf\u95ee\u3002\ncors1(\u7aef\u53e3\u4e3a8080)\u63d0\u4f9b\u7684\u63a5\u53e3 \u8bbf\u95eeURL:http://localhost:8080/hello\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;/hello&quot;)\n    public String hello() {\n        return &quot;Hello cors1&quot;;\n    }\n}\n\ncors2(\u7aef\u53e3\u4e3a8081)\u7f16\u5199\u4e00\u4e2aHTML\u6765\u8bbf\u95eehttp://localhost:8080/hello\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n    &lt;script src=&quot;jquery-3.3.1.min.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=&quot;app&quot;&gt;&lt;/div&gt;\n&lt;input type=&quot;button&quot; value=&quot;GET&quot; onclick=&quot;getData()&quot;&gt;\n&lt;script&gt;\n    function getData() {\n        $.get(&#39;http://localhost:8080/hello&#39;, function (msg) {\n            $(&quot;#app&quot;).html(msg);\n        })\n    }\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\u8bbf\u95ee\u7ed3\u679c\uff1a\n\u8bbf\u95ee\u7ed3\u679c\n\u70b9\u51fb get \u6309\u94ae\u65f6\u62a5\u9519 \uff08\u4ece\u6e90\u5730\u5740http://localhost:8080/hello\u8bbf\u95ee XMLHttpRequest \u5df2\u88abCORS\u7b56\u7565\u963b\u585e:\u5728\u88ab\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0a\u6ca1\u6709Access-Control-Allow-Origin\u62a5\u5934\u3002\uff09\n2. \u89e3\u51b3\u95ee\u9898\n\u4e0a\u9762\u7684\u62a5\u9519\u662f\u56e0\u4e3a\u5728\u88ab\u8bf7\u6c42\u7684\u8d44\u6e90\u4e0a\u6ca1\u6709Access-Control-Allow-Origin\u62a5\u5934\uff0c\u5728 Spring Boot \u4e2d\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u901a\u8fc7@CrossOrigin\u6ce8\u89e3\u4e3a\u63a5\u53e3\u914d\u7f6e\u3002\n\u6539\u5199 cros1 \u7684 Controller\uff0c\u6dfb\u52a0@CrossOrigin\u6ce8\u89e3\n\u5176\u4e2d @CrossOrigin \u4e2d\u76842\u4e2a\u5e38\u7528\u53c2\u6570\uff1a\norigins  \uff1a \u5141\u8bb8\u53ef\u8bbf\u95ee\u7684\u57df\u5217\u8868\nmaxAge\uff1a\u51c6\u5907\u54cd\u5e94\u524d\u7684\u7f13\u5b58\u6301\u7eed\u7684\u6700\u5927\u65f6\u95f4\uff08\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff09\u3002\n@CrossOrigin\u6ce8\u89e3\u4e0d\u4ec5\u80fd\u5728\u65b9\u6cd5\u4e0a\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u5728\u7c7b\u4e0a\u4f7f\u7528\u3002\n\n@RestController\npublic class HelloController {\n    @GetMapping(\"/hello\")\n    @CrossOrigin(origins = {\"http://localhost:8081\"})\n    public String hello() {\n        return \"Hello cors1\";\n    }\n}\n\u8bbf\u95ee\u7ed3\u679c\uff1a\u54cd\u5e94\u5934\u4e2d\u591a\u4e86Access-Control-Allow-Origin: http://localhost:8081\n\u8bbf\u95ee\u7ed3\u679c\n3. \u5168\u5c40CORS\u914d\u7f6e\n\u7f16\u5199\u914d\u7f6e\u7c7b\n@Configuration\npublic class WebMvcConfig implements WebMvcConfigurer {\n    @Override\n    public void addCorsMappings(CorsRegistry registry) {\n        registry.addMapping(&quot;/**&quot;)//\u5141\u8bb8\u8de8\u57df\u7684\u63a5\u53e3\n                .allowedOrigins(&quot;http://localhost:8081&quot;)//\u5141\u8bb8\u7684\u6765\u6e90\n                .allowedHeaders(&quot;*&quot;)//\u5141\u8bb8\u7684Headers,\u9ed8\u8ba4\u5141\u8bb8\u6240\u6709\n                .allowedMethods(&quot;*&quot;)//\u5141\u8bb8\u7684Methods\uff0c\u9ed8\u8ba4\u5141\u8bb8GET\u3001HEAD\u3001POST\n                .maxAge(1800);//\u6700\u5927\u6709\u6548\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a1800\u79d2(30\u5206\u949f)\n    }\n}\n\n\u6b64\u65f6cros1\u4e2d\u6240\u6709\u7684\u63a5\u53e3\u90fd\u5f00\u542f\u4e86CORS\uff0c\u5c31\u53ef\u4ee5\u8de8\u57df\u8bbf\u95ee\u4e86\u3002\n4. \u9884\u68c0\u8bf7\u6c42\uff08\u63a2\u6d4b\u8bf7\u6c42\uff09\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "Spring Boot\u4e2d\u7684\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406", "date": "2020-05-06T02:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj11/", "text": "1. Spring Boot\u5b9e\u73b0\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\n\u6f14\u793a\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;/hello&quot;)\n    public String hello() {\n        int i = 1 / 0;\n        return &quot;hello&quot;;\n    }\n}\n\n\u8bbf\u95ee\u7ed3\u679c\n\u8bbf\u95ee\u7ed3\u679c\n\u914d\u7f6e\u9ed8\u8ba4\u7684error\u9875\u9762\n\u5728src\\main\\resources\\static\u76ee\u5f55\u4e0b\u521b\u5efaerror\u76ee\u5f55,\u521b\u5efa\u5982\uff1a404.HTML,500.HTML\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;404&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;404\u9519\u8bef\u9875\u9762&lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n--------------------------------\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;500&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;500\u9519\u8bef\u9875\u9762&lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\u518d\u6b21\u8bbf\u95ee\u4fbf\u4f1a\u770b\u5230500.HTML\u4e2d\u7684\u5185\u5bb9\uff08Controller\u4e2d\u6709int i = 1 / 0\uff09;\u5982\u679c\u8bbf\u95eehttp://localhost:8080/hello2\u7b49\u4f1a\u51fa\u73b0404\u9519\u8bef\u7684\u8def\u5f84\u4fbf\u4f1a\u770b\u5230404.HTML\u7684\u5185\u5bb9\u3002\n\u5373Spring Boot\u4f1a\u6839\u636e\u72b6\u6001\u7801\u53bb\u5bfb\u627e\u5bf9\u5e94\u7684\u9875\u9762\u6765\u66ff\u6362\u5176\u9ed8\u8ba4\u7684\u9519\u8bef\u9875\u3002\n\u9519\u8bef\u9875\u9762\u67e5\u627e\u987a\u5e8f\uff1a\u7cbe\u786e&gt;\u6a21\u7cca\uff0c\u52a8\u6001&gt;\u9759\u6001\n\u4f7f\u7528Spring\u65f6\uff0c\u540e\u7aef\u51fa\u73b0\u9519\u8bef\u65f6\uff0c\u5728\u524d\u7aef\u7684\u62a5\u9519\u63d0\u793a\u5bf9\u7528\u6237\u6765\u8bf4\u76f8\u5f53\u4e0d\u53cb\u597d\uff0c\u6240\u4ee5\u5e94\u8be5\u5bf9\u5f02\u5e38\u8fdb\u884c\u5904\u7406\uff0c\u4f46\u662f\u5bf9\u6bcf\u4e00\u4e2aController\u5355\u72ec\u8fdb\u884c\u5904\u7406\u8fc7\u4e8e\u91cd\u590d\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528@ControllerAdvice\u5904\u7406\u5168\u5c40\u5f02\u5e38\u3002\n\u5f53\u7136\uff0c\u5982\u679c\u5b9a\u4e49\u4e86404.HTML\u548c4xx.HTML\u9875\u9762\uff0c\u51fa\u73b0404\u9519\u8bef\u65f6\uff0cSpring Boot\u4f1a\u4f18\u5148\u5c55\u793a404.HTML\u7684\u5185\u5bb9\u3002\n\u4ee5\u4e0a\u90fd\u662f\u4f7f\u7528\u9759\u6001\u9875\u9762(static\u76ee\u5f55\u4e0b)\u5c55\u793a\u9519\u8bef\u4fe1\u606f\uff0c\u4f46\u662fSpring Boot\u8fd8\u652f\u6301\u52a8\u6001\u9875\u9762(templates\u76ee\u5f55\u4e0b),\u5982\uff1athymeleaf\u3001freemarker\u3002\n\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u4f7f\u7528thymeleaf\u6765\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u9762\n\n\u5bfc\u5165thymeleaf\u4f9d\u8d56\n&lt;dependency&gt;\n &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n\n\u5728src\\main\\resources\\templates\u76ee\u5f55\u4e0b\u521b\u5efaerror\u76ee\u5f55,\u5e76\u521b\u5efa\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\n\u521b\u5efa\u5982\u4e0b3\u4e2a\u9875\u9762\n&lt;!--4xx.HTML--&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;4xx&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;thymeleaf:4xx\u9875\u9762&lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n-------------------------------------\n&lt;!--404.HTML--&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;404&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;thymeleaf:404\u9875\u9762&lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n-------------------------------------\n&lt;!--5xx.HTML--&gt;\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;5xx&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;thymeleaf: 5xx\u9875\u9762&lt;/h2&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\u4e0e\u9759\u6001\u9519\u8bef\u9875\u4e00\u6837\uff0c\u52a8\u6001\u9519\u8bef\u9875\u4e5f\u662f\u4f18\u5148\u5c55\u793a\u66f4\u4e3a\u7cbe\u786e\u7684\u72b6\u6001\u7801\u6240\u5bf9\u5e94\u7684\u9519\u8bef\u9875\u5185\u5bb9\u3002\n\u4f8b\uff1a\u5728\u5b58\u5728\u4ee5\u4e0a3\u4e2a\u52a8\u6001\u9519\u8bef\u9875\u65f6\uff0c\u5982\u679c\u51fa\u73b0404\u9519\u8bef\uff0c\u4f18\u5148\u5c55\u793a\u7684\u4e5f\u662f404.HTML\u7684\u5185\u5bb9\u3002\n\u6b64\u65f6\u5df2\u7ecf\u521b\u5efa\u4e86\u9759\u6001\u9519\u8bef\u9875\u548c\u52a8\u6001\u9519\u8bef\u9875\uff0c\u90a3\u4e48\u6b64\u65f6\u4f1a\u4f18\u5148\u5c55\u793a\u52a8\u6001\u9519\u8bef\u9875\u3002\n\n\n2. Spring Boot\u5f02\u5e38\u5904\u7406\u6e90\u7801\u5206\u6790\n\u6253\u5f00Spring Boot\u5f02\u5e38\u5904\u7406\u7684\u81ea\u52a8\u914d\u7f6e\u7c7borg.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration\n\u5176\u4e2d\u914d\u7f6e\u4e86DefaultErrorAttributes(\u9ed8\u8ba4\u9519\u8bef\u5c5e\u6027)\u3001DefaultErrorViewResolver(\u9ed8\u8ba4\u9519\u8bef\u89c6\u56fe\u89e3\u6790\u5668)\u7b49\u7b49\n\u4e3a\u4ec0\u4e48\u5728error\u76ee\u5f55\u4e0b\u521b\u5efa\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u4f1a\u88ab\u89e3\u6790\u5462\uff1f\n\u4e3a\u4ec0\u4e48\u9519\u8bef\u9875\u9762\u67e5\u627e\u987a\u5e8f\uff1a\u7cbe\u786e&gt;\u6a21\u7cca\uff0c\u52a8\u6001&gt;\u9759\u6001 \u5462\uff1f\n\u7b54\u6848\u5728DefaultErrorViewResolver\u7c7b\u4e2d\u3002\n//DefaultErrorViewResolver\u7c7b\n\n@Override\n    public ModelAndView resolveErrorView(HttpServletRequest request, HttpStatus status, Map&lt;String, Object&gt; model) {\n        //status.value()\u8fd4\u56de\u7684\u662fint\u7c7b\u578b\u7684\u72b6\u6001\u7801\uff0cmodel\u662f\u5f02\u5e38\u6570\u636e\n        ModelAndView modelAndView = resolve(String.valueOf(status.value()), model);\n        //\u5728\u9759\u6001\u8d44\u6e90\u8def\u5f84\u4e0b\u6ca1\u6709\u627e\u5230\u7cbe\u786e\u5bf9\u5e94\u7684\u9519\u8bef\u9875\u9762\u65f6\u518d\u5224\u65ad\u662f\u5426\u5b58\u5728\u6a21\u7cca\u5bf9\u5e94\u7684\u9519\u8bef\u9875\u9762\n        //SERIES_VIEWS\u4e2d\u53ea\u6709&quot;4xx&quot;\u548c&quot;5xx&quot;\n        if (modelAndView == null &amp;&amp; SERIES_VIEWS.containsKey(status.series())) {\n            //\u5b58\u5728\u6a21\u7cca\u5bf9\u5e94\u7684\u9519\u8bef\u9875\u9762\u65f6\uff0c\u518d\u6b21\u4f7f\u7528\u6a21\u7cca\u7684\u72b6\u6001\u7801\u8fdb\u884c\u5904\u7406\n            modelAndView = resolve(SERIES_VIEWS.get(status.series()), model);\n        }\n        //\u5982\u679c\u7cbe\u786e\u7684\u548c\u6a21\u7cca\u7684\u9519\u8bef\u9875\u90fd\u4e0d\u5b58\u5728\uff0c\u4fbf\u4f7f\u7528\u81ea\u8eab\u9ed8\u8ba4\u7684\u9519\u8bef\u9875\u9762\n        return modelAndView;\n    }\n...\n\nprivate ModelAndView resolve(String viewName, Map&lt;String, Object&gt; model) {\n        String errorViewName = &quot;error/&quot; + viewName;\n        //\u5224\u65ad\u662f\u5426\u5b58\u5728\u52a8\u6001\u9875\u9762\n        TemplateAvailabilityProvider provider = this.templateAvailabilityProviders.getProvider(errorViewName,\n                this.applicationContext);\n        //\u5b58\u5728\u52a8\u6001\u9875\u9762\u5c31\u4f18\u5148\u4f7f\u7528\u52a8\u6001\u9875\u9762\n        if (provider != null) {\n            return new ModelAndView(errorViewName, model);\n        }\n        return resolveResource(errorViewName, model);\n    }\n\n\n        private ModelAndView resolveResource(String viewName, Map&lt;String, Object&gt; model) {\n        for (String location : this.resourceProperties.getStaticLocations()) {\n            try {\n                //\u67e5\u627e\u9759\u6001\u8d44\u6e90\u8def\u5f84 4\u4e2a \n                /*{ &quot;classpath:/META-INF/resources/&quot;,\n                &quot;classpath:/resources/&quot;, &quot;classpath:/static/&quot;, &quot;classpath:/public/&quot; }*/\n                Resource resource = this.applicationContext.getResource(location);\n                resource = resource.createRelative(viewName + &quot;.html&quot;);\n                if (resource.exists()) {\n                    return new ModelAndView(new HtmlResourceView(resource), model);\n                }\n            }\n            catch (Exception ex) {\n            }\n        }\n        //\u5728\u9759\u6001\u8d44\u6e90\u8def\u5f84\u4e0b\u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u9519\u8bef\u9875\u9762\u5c31\u8fd4\u56denull\n        return null;\n    }\n\n3. Spring Boot\u81ea\u5b9a\u4e49\u5f02\u5e38\u6570\u636e\n\u7ecf\u8fc7\u67e5\u770bSpring Boot\u5f02\u5e38\u5904\u7406\u7684\u81ea\u52a8\u914d\u7f6e\u7c7borg.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration\u53ef\u77e5DefaultErrorAttributes\u7c7b\u4e2d\u5b9a\u4e49\u4e86\u9ed8\u8ba4\u7684\u5f02\u5e38\u6570\u636e\u5904\u7406\u903b\u8f91\u3002\n\u5305\u542b\u4e86\u4ee5\u4e0b\u5f02\u5e38\u6570\u636e:\n\ntimestamp - The time that the errors were extracted(\u51fa\u73b0\u9519\u8bef\u7684\u65f6\u95f4)\nstatus - The status code\uff08\u72b6\u6001\u7801\uff09\nerror - The error reason\uff08\u9519\u8bef\u539f\u56e0\uff09\nexception - The class name of the root exception (if configured)\uff08\u6839\u5f02\u5e38\u7684\u7c7b\u540d\uff08\u5982\u679c\u5df2\u914d\u7f6e\uff09\uff09\nmessage - The exception message\uff08\u5f02\u5e38\u6d88\u606f\uff09\nerrors - Any ObjectErrors from a BindingResult exception\uff08BindingResult\u5f02\u5e38\u4e2d\u7684\u4efb\u4f55ObjectError\uff09\ntrace - The exception stack trace\uff08\u5f02\u5e38\u5806\u6808\u8ddf\u8e2a\uff09\npath - The URL path when the exception was raised\uff08\u5f15\u53d1\u5f02\u5e38\u65f6\u7684URL\u8def\u5f84\uff09\n\u7f16\u5199\u81ea\u5b9a\u4e49\u9519\u8bef\u98755xx.HTML\u6765\u67e5\u770b\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;5xx&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;thymeleaf: 5xx\u9875\u9762&lt;/h2&gt;\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;path&lt;/td&gt;\n        &lt;td th:text=&quot;${path}&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;timestamp&lt;/td&gt;\n        &lt;td th:text=&quot;${timestamp}&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;message&lt;/td&gt;\n        &lt;td th:text=&quot;${message}&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;error&lt;/td&gt;\n        &lt;td th:text=&quot;${error}&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;status&lt;/td&gt;\n        &lt;td th:text=&quot;${status}&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;exception&lt;/td&gt;\n        &lt;td th:text=&quot;${exception}&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\u8bbf\u95ee\u7ed3\u679c:(\u8bbf\u95ee\u7684Controller\u4e2d\u6709by zero\u9519\u8bef)\n\u8bbf\u95ee\u7ed3\u679c\n\u4e3a\u4e86\u81ea\u5b9a\u4e49\u5f02\u5e38\u6570\u636e\uff0c\u53ef\u4ee5\u76f4\u63a5\u7ee7\u627fDefaultErrorAttributes\u7c7b\uff0c\u7136\u540e\u65b0\u589e\u6216\u91cd\u5199\u5176\u65b9\u6cd5\u3002\n/* \u6ce8\u518c\u5230spring\u4ee5\u66ff\u6362DefaultErrorAttributes\nErrorMvcAutoConfiguration\u4e2d\u6709\u6761\u4ef6\u5224\u65ad:\u5f53\u5b58\u5728ErrorAttributes.class(DefaultErrorAttributes\u5b9e\u73b0\u7684\u63a5\u53e3)\u65f6\uff0cDefaultErrorAttributes\u4e0d\u751f\u6548.\n...\n@ConditionalOnMissingBean(value = ErrorAttributes.class, search = SearchStrategy.CURRENT)\n    public DefaultErrorAttributes errorAttributes() {\n        return new DefaultErrorAttributes(this.serverProperties.getError().isIncludeException());\n    }\n*/\n@Component\npublic class MyErrorAttribute extends DefaultErrorAttributes {\n    @Override\n    public Map&lt;String, Object&gt; getErrorAttributes(WebRequest webRequest, boolean includeStackTrace) {\n        //\u62ff\u5230DefaultErrorAttributes\u7c7b\u4e2d\u6536\u96c6\u597d\u7684\u5f02\u5e38\u4fe1\u606f\n        Map&lt;String, Object&gt; map = super.getErrorAttributes(webRequest, includeStackTrace);\n        //\u6dfb\u52a0\u81ea\u5b9a\u4e49\u5f02\u5e38\u4fe1\u606f\n        map.put(&quot;myerror&quot;, &quot;\u81ea\u5b9a\u4e49\u5f02\u5e38\u4fe1\u606f&quot;);\n        return map;\n}\n\n\u57285xx.HTML\u4e2d\u6dfb\u52a0\u4e00\u5217\n...\n&lt;h2&gt;thymeleaf: 500\u9875\u9762&lt;/h2&gt;\n...\n    &lt;tr&gt;\n        &lt;td&gt;myerror&lt;/td&gt;\n        &lt;td th:text=&quot;${myerror}&quot;&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n...\n\n\u8bbf\u95ee\u7ed3\u679c:(\u8bbf\u95ee\u7684Controller\u4e2d\u6709by zero\u9519\u8bef)\n\u8bbf\u95ee\u7ed3\u679c\n4. Spring Boot\u81ea\u5b9a\u4e49\u5f02\u5e38\u89c6\u56fe\n\u4e0e\u81ea\u5b9a\u4e49\u5f02\u5e38\u6570\u636e\u7c7b\u4f3c\uff0cSpring Boot\u5f02\u5e38\u5904\u7406\u7684\u81ea\u52a8\u914d\u7f6e\u7c7borg.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration\u4e2d\u5b9a\u4e49\u4e86DefaultErrorViewResolver\u7c7b\u4e2d\u7528\u4e8e\u5f02\u5e38\u89c6\u56fe\u5904\u7406\u3002\u8981\u81ea\u5b9a\u4e49\u5f02\u5e38\u89c6\u56fe\u5904\u7406\uff0c\u7ee7\u627fDefaultErrorViewResolver\u7c7b\uff0c\u7136\u540e\u65b0\u589e\u6216\u91cd\u5199\u5176\u65b9\u6cd5\u5c31\u884c\u4e86\u3002\n@Component\npublic class MyErrorViewResolver extends DefaultErrorViewResolver {\n    public MyErrorViewResolver(ApplicationContext applicationContext, ResourceProperties resourceProperties) {\n        super(applicationContext, resourceProperties);\n    }\n\n    @Override\n    public ModelAndView resolveErrorView(HttpServletRequest request, HttpStatus status, Map&lt;String, Object&gt; model) {\n        //\u8fd9\u91cc\u7684model\u5c31\u662f\u5f02\u5e38\u6570\u636e\uff0c\u4f46\u662f\u5b83\u662f\u4e00\u4e2a\u4e0d\u53ef\u4fee\u6539\u7684map\uff0c\u8981\u5728\u8fd9\u4fee\u6539\u53ef\u4ee5new\u4e00\u4e2amap\uff0c\u5c06model\u7684\u6570\u636e\u590d\u5236\u8fdb\u6765\u518d\u6dfb\u52a0\u5230mv\u8fd4\u56de\n        ModelAndView mv = new ModelAndView();\n        mv.setViewName(&quot;xuxx&quot;);\n        mv.addAllObjects(model);\n        return mv;\n    }\n}\n\n\u65b0\u5efaxuxx.HTML\u76f4\u63a5\u653e\u5728src\\main\\resources\\templates\u76ee\u5f55\u4e0b\u5373\u53ef\uff08\u56e0\u4e3a\u81ea\u5b9a\u4e49\u7684MyErrorViewResolver\u4e2d\u8bbe\u7f6e\u7684ViewName\u4e0d\u5e26\u8def\u5f84\u4e86\uff0c\u53c8\u56e0\u4e3a\u662f\u7528thymeleaf\uff09\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\" xmlns:th=\"http://www.thymeleaf.org\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;xuxx\u9875\u9762&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h2&gt;xuxx: 5xx&lt;/h2&gt;\n&lt;table&gt;\n    &lt;tr&gt;\n        &lt;td&gt;path&lt;/td&gt;\n        &lt;td th:text=\"${path}\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;timestamp&lt;/td&gt;\n        &lt;td th:text=\"${timestamp}\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;message&lt;/td&gt;\n        &lt;td th:text=\"${message}\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;error&lt;/td&gt;\n        &lt;td th:text=\"${error}\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;status&lt;/td&gt;\n        &lt;td th:text=\"${status}\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n    &lt;tr&gt;\n        &lt;td&gt;myerror&lt;/td&gt;\n        &lt;td th:text=\"${myerror}\"&gt;&lt;/td&gt;\n    &lt;/tr&gt;\n&lt;/table&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\u8bbf\u95ee\u7ed3\u679c\uff1a\n\u8bbf\u95ee\u7ed3\u679c\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "Spring\u6ce8\u89e3-@ControllerAdvice\u7684\u4f7f\u7528", "date": "2020-05-05T02:20:00-00.00", "path": "/Xuxx_Blogs/archives/bj10/", "text": "\u6839\u636e\u6e90\u7801\u4e2d\u7684\u4ecb\u7ecd\uff1a\n@ControllerAdvice\u662f\u4e00\u4e2a\u7279\u6b8a\u7684@Component\uff0c\u7528\u4e8e\u6807\u8bc6\u4e00\u4e2a\u7c7b\uff0c\u8fd9\u4e2a\u7c7b\u4e2d\u88ab\u4ee5\u4e0b\u4e09\u79cd\u6ce8\u89e3\u6807\u8bc6\u7684\u65b9\u6cd5\uff1a@ExceptionHandler\uff0c@InitBinder\uff0c@ModelAttribute\uff0c\u5c06\u4f5c\u7528\u4e8e\u6240\u6709\u7684@Controller\u7c7b\u7684\u63a5\u53e3\u4e0a\u3002\n@ControllerAdvice\u7684\u529f\u80fd:\n\n\u5904\u7406\u5168\u5c40\u5f02\n\u9884\u8bbe\u5168\u5c40\u6570\u636e\n\u8bf7\u6c42\u53c2\u6570\u9884\u5904\u7406\n\n1. @ControllerAdvice\u5904\u7406\u5168\u5c40\u5f02\u5e38\n\u4f7f\u7528Spring\u65f6\uff0c\u540e\u7aef\u51fa\u73b0\u9519\u8bef\u65f6\uff0c\u5728\u524d\u7aef\u7684\u62a5\u9519\u63d0\u793a\u5bf9\u7528\u6237\u6765\u8bf4\u76f8\u5f53\u4e0d\u53cb\u597d\uff0c\u6240\u4ee5\u5e94\u8be5\u5bf9\u5f02\u5e38\u8fdb\u884c\u5904\u7406\uff0c\u4f46\u662f\u5bf9\u6bcf\u4e00\u4e2aController\u5355\u72ec\u8fdb\u884c\u5904\u7406\u8fc7\u4e8e\u91cd\u590d\uff0c\u6240\u4ee5\u53ef\u4ee5\u4f7f\u7528@ControllerAdvice\u5904\u7406\u5168\u5c40\u5f02\u5e38\u3002\n\u4f8b\u5982\uff1a\u5f53\u4e0a\u4f20\u6587\u4ef6\u5927\u5c0f\u8d85\u51fa\u9650\u65f6\uff0c\u524d\u7aef\u663e\u793a\u5982\u4e0b\n\n\u89e3\u51b3\uff1a\n@ControllerAdvice//@Controller\u7684\u589e\u5f3a\npublic class MyCustomException {\n    //\u914d\u7f6e\u8981\u62e6\u622a\u7684\u5f02\u5e38\n    @ExceptionHandler(MaxUploadSizeExceededException.class)\n    //\u5176\u4e2d\u7684\u53c2\u6570\u4e0eController\u7684\u53c2\u6570\u76f8\u4f3c\n    public void myexception(MaxUploadSizeExceededException exception, HttpServletResponse response) throws IOException {\n        response.setContentType(&quot;text/html:charset=utf-8&quot;);\n        PrintWriter out = response.getWriter();\n        out.write(&quot;\u4e0a\u4f20\u6587\u4ef6\u5927\u5c0f\u8d85\u51fa\u9650\u5236\uff0c\u8bf7\u91cd\u8bd5&quot;);\n        out.flush();\n        out.close();\n    }\n}\n\n\u6b64\u65f6\u518d\u51fa\u73b0\u4e0a\u9762\u7684\u9519\u8bef\u65f6\uff0c\u524d\u7aef\u4fbf\u4f1a\u663e\u793a\u6307\u5b9a\u7684\u5185\u5bb9\n\n\u4e0a\u4f20\u6587\u4ef6\u5927\u5c0f\u8d85\u51fa\u9650\u5236\uff0c\u8bf7\u91cd\u8bd5\n\u4f7f\u7528thymeleaf\u81ea\u5b9a\u4e49\u9519\u8bef\u9875\u9762\n\n\u5f15\u5165thymeleaf\u4f9d\u8d56\n\n&lt;dependency&gt;\n   &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n   &lt;artifactId&gt;spring-boot-starter-thymeleaf&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n\n\u521b\u5efa\u9519\u8bef\u9875\u9762\n\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot; xmlns:th=&quot;http://www.thymeleaf.org&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;\u9519\u8bef\u9875&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div th:text=&quot;${error}&quot;&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\n\u7f16\u5199\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406\u7c7b\n\n@ControllerAdvice\npublic class MyCustomException {\n    @ExceptionHandler(MaxUploadSizeExceededException.class)\n    public ModelAndView myexception(MaxUploadSizeExceededException e) throws IOException {\n        ModelAndView mv = new ModelAndView(&quot;myerror&quot;);\n        mv.addObject(&quot;error&quot;, &quot;\u4e0a\u4f20\u6587\u4ef6\u5927\u5c0f\u8d85\u51fa\u9650\u5236&quot;);\n        return mv;\n    }\n}\n\n\n\u6548\u679c\n\n\u4e0a\u4f20\u6587\u4ef6\u5927\u5c0f\u8d85\u51fa\u9650\u5236\uff0c\u8bf7\u91cd\u8bd5\n\n2. @ControllerAdvice\u9884\u8bbe\u5168\u5c40\u6570\u636e\n\n\u7f16\u5199\u9884\u8bbe\u5168\u5c40\u6570\u636e\u7c7b\n@ControllerAdvice\npublic class GlobalData {\n    @ModelAttribute(value = &quot;info&quot;)\n    public Map&lt;String, Object&gt; mydata() {\n        Map&lt;String, Object&gt; map = new HashMap&lt;&gt;();\n        map.put(&quot;name&quot;, &quot;xuxx&quot;);\n        map.put(&quot;addr&quot;, &quot;\u56db\u5ddd&quot;);\n        return map;\n    }\n}\n\n\u5728\u8fd9\u4e2a\u7c7b\u4e2d\uff0c\u4f7f\u7528\u4e86@ModelAttribute\u6ce8\u89e3\uff0c\u6b64\u6ce8\u89e3\u5c06\u65b9\u6cd5\u8fd4\u56de\u503c\u6dfb\u52a0\u5230Model\u5bf9\u8c61\uff0c\u8981\u4f7f\u7528\u5b58\u5165\u7684\u6570\u636e\u65f6\uff0c\u53ef\u4ee5\u4eceModel\u5bf9\u8c61\u4e2d\u53d6\u51fa\u3002\n\n\u4f7f\u7528\u9884\u8bbe\u5168\u5c40\u6570\u636e\n@RestController\npublic class HelloController {\n    @GetMapping(&quot;/hello&quot;)\n    public void hello(Model model) {\n        Map&lt;String, Object&gt; map = model.asMap();\n        Set&lt;String&gt; keySet = map.keySet();\n        for (String kay : keySet) {\n            System.out.println(kay + &quot; : &quot; + map.get(kay));\n        }\n        return;\n    }\n}\n\n\u63a7\u5236\u53f0\u8f93\u51fa\ninfo : {name=xuxx, addr=\u56db\u5ddd}\n\n\u8865\u5145\uff1a\n@ModelAttribute\u6ce8\u89e3\n\u4f5c\u7528\uff1a\n\n\u51fa\u73b0\u5728\u65b9\u6cd5\u4e0a:\u8868\u793a\u5f53\u524d\u65b9\u6cd5\u4f1a\u5728\u63a7\u5236\u5668\u65b9\u6cd5\u6267\u884c\u524d\u7ebf\u6267\u884c\u3002\n\u51fa\u73b0\u5728\u53c2\u6570\u4e0a:\u83b7\u53d6\u6307\u5b9a\u7684\u6570\u636e\u7ed9\u53c2\u6570\u8d4b\u503c\u3002\n\n\u5e94\u7528\u573a\u666f\uff1a\n   \u5f53\u63d0\u4ea4\u8868\u5355\u6570\u636e\u4e0d\u662f\u5b8c\u6574\u7684\u5b9e\u4f53\u6570\u636e\u65f6,\u4fdd\u8bc1\u6ca1\u6709\u63d0\u4ea4\u7684\u5b57\u6bb5\u4f7f\u7528\u6570\u636e\u5e93\u539f\u6765\u7684\u6570\u636e\u3002\n\n\n3.  @ControllerAdvice\u8bf7\u6c42\u53c2\u6570\u9884\u5904\u7406\n\n\u95ee\u9898\u6f14\u793a\n\u7f16\u5199\u5b9e\u4f53\u7c7b\n@Data\npublic class Book {\n    private String name;\n    private Double price;\n}\n\n@Data\npublic class Auther {\n    private String name;\n    private Integer age;\n}\n\n\u7f16\u5199Controller\n@RestController\npublic class BookController {\n    @PostMapping(&quot;/book&quot;)\n    public void addbook(Book book,Auther auther) {\n        System.out.println(book);\n        System.out.println(auther);\n    }\n}\n\n\u53d1\u9001\u8bf7\u6c42\n\u63a7\u5236\u53f0\uff1a\nBook{name=&#39;\u4e66\u540d,\u4f5c\u8005\u540d&#39;, price=100.0}\nAuther{name=&#39;\u4e66\u540d,\u4f5c\u8005\u540d&#39;, age=21}\n\n\u8fd9\u662f\u7531\u4e8e\u4e24\u4e2a\u5bf9\u8c61\u5c5e\u6027\u540d\u76f8\u540c(\u6b64\u5904\u53ea\u662f\u4e3a\u4e86\u6f14\u793a\u95ee\u9898\uff0c\u5b9e\u9645\u5f00\u53d1\u65f6\u8981\u6ce8\u610f)\u5bfc\u81f4\u7684\u3002\n\n\u89e3\u51b3\u95ee\u9898\n\u6539\u5199Controller\n\n@RestController\npublic class BookController {\n    @PostMapping(\"/book\")\n    public void addbook(@ModelAttribute(\"b\") Book book,\n                        @ModelAttribute(\"a\") Auther auther) {\n        System.out.println(book);\n        System.out.println(auther);\n    }\n}\n\u7f16\u5199ControllerAdvice\u7c7b\n\n@ControllerAdvice\npublic class GlobalData {\n    @InitBinder(\"a\")\n    public void initA(WebDataBinder binder) {\n        binder.setFieldDefaultPrefix(\"a.\");\n    }\n\n    @InitBinder(\"b\")\n    public void initB(WebDataBinder binder) {\n        binder.setFieldDefaultPrefix(\"b.\");\n    }\n}\nWebDataBinder\u5bf9\u8c61\u5b83\u7684\u4f5c\u7528\u5c31\u662f\u4eceweb request\u91cc\uff08\u6ce8\u610f\uff1a\u8fd9\u91cc\u6307\u7684web\u8bf7\u6c42\uff0c\u5e76\u4e0d\u4e00\u5b9a\u5c31\u662fServletRequest\u8bf7\u6c42\u54df~\uff09\u628aweb\u8bf7\u6c42\u7684parameters\u7ed1\u5b9a\u5230JavaBean\u4e0a\u3002\nWebDataBinder\u5bf9\u8c61\u8fd8\u6709\u8bb8\u591a\u65b9\u6cd5~~\nController\u65b9\u6cd5\u7684\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u662f\u57fa\u672c\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u5c01\u88c5\u540e\u7684\u666e\u901aJava\u7c7b\u578b\u3002\u82e5\u8fd9\u4e2a\u666e\u901aJava\u7c7b\u578b\u6ca1\u6709\u58f0\u660e\u4efb\u4f55\u6ce8\u89e3\uff0c\u5219\u610f\u5473\u7740\u5b83\u7684\u6bcf\u4e00\u4e2a\u5c5e\u6027\u90fd\u9700\u8981\u5230Request\u4e2d\u53bb\u67e5\u627e\u5bf9\u5e94\u7684\u8bf7\u6c42\u53c2\u6570\u3002\n\n\n\u53d1\u9001\u8bf7\u6c42\n\n\u63a7\u5236\u53f0\uff1a\nBook{name=&#39;\u4e66\u540d&#39;, price=100.0}\n   Auther{name=&#39;\u4f5c\u8005\u540d&#39;, age=21}\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/Xuxx_Blogs/tag/Spring/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "Spring Boot\u6587\u4ef6\u4e0a\u4f20", "date": "2020-05-05T00:20:00-00.00", "path": "/Xuxx_Blogs/archives/bj09/", "text": "\u5728Spring Boot\u4e2d\u8fdb\u884c\u6587\u4ef6\u4e0a\u4f20\u53ea\u9700\u8981\u989d\u5916\u5f15\u5165web\u4f9d\u8d56\uff0c\u4e0d\u518d\u9700\u8981\u50cfSpring MVC\u90a3\u6837\u989d\u5916\u5f15\u5165commons-fileupload\u548ccommons-io\u4f9d\u8d56\u3002\n\u5728Spring Boot\u4e2d,\u9ed8\u8ba4\u4f7f\u7528StandardServletMultipartResolver(\u652f\u6301servlet3.0\u4ee5\u540e\u7684\u7248\u672c)\u4ee3\u66ffCommonsMultipartResolver(\u517c\u5bb9\u65e9\u671f\u7684servlet)\u89e3\u6790 Multipart \u8bf7\u6c42\uff0c\u5982\u679c\u5fc5\u987b\u4f7f\u7528CommonsMultipartResolver\u5219\u9700\u8981\u81ea\u5df1\u6dfb\u52a0commons-fileupload\u548ccommons-io\u4f9d\u8d56\u3002\n\u56de\u987e\n@Controller\n@RequestMapping(&quot;/user&quot;)\npublic class FileUploadControll {\n    /**\n     * \u4f20\u7edf\u6587\u4ef6\u4e0a\u4f20\n     *\n     * @return\n     */\n    @RequestMapping(&quot;/fileupload01&quot;)\n    public String fileupload01(HttpServletRequest request) throws Exception {\n        System.out.println(&quot;fileupload01\u65b9\u6cd5\u6267\u884c\u4e86---\u4f20\u7edf\u6587\u4ef6\u4e0a\u4f20&quot;);\n        //\u4f7f\u7528fileupload\u7ec4\u4ef6\u5b8c\u6210\u6587\u4ef6\u4e0a\u4f20\n        //\u6307\u5b9a\u4e0a\u4f20\u4f4d\u7f6e\uff08\u8def\u5f84\uff09\n        String path = request.getSession().getServletContext().getRealPath(&quot;/uploads/&quot;);\n        //\u5224\u65ad\u8be5\u8def\u5f84\u662f\u5426\u5b58\u5728\n        File file = new File(path);\n        //\u5982\u679c\u4e0d\u5b58\u5728\n        if (!file.exists()) {\n            //\u521b\u5efa\u8be5\u6587\u4ef6\u5939\n            file.mkdirs();\n        }\n        //\u89e3\u6790request\u5bf9\u8c61\uff0c\u83b7\u53d6\u4e0a\u4f20\u7684\u6587\u4ef6\u9879            \u78c1\u76d8\u6587\u4ef6\u9879\u76ee\u5de5\u5382\n        DiskFileItemFactory fileItemFactory = new DiskFileItemFactory();\n        ServletFileUpload upload = new ServletFileUpload(fileItemFactory);\n        //\u89e3\u6790request\n        List&lt;FileItem&gt; fileItems = upload.parseRequest(request);\n        //\u904d\u5386\n        for (FileItem fileItem : fileItems) {\n            //\u8fdb\u884c\u5224\u65ad\uff0c\u5f53\u524d\u7684fileItem\u5bf9\u8c61\u662f\u5426\u662f\u4e0a\u4f20\u6587\u4ef6\u9879\n            if (fileItem.isFormField()) {\n                //\u662f\u666e\u901a\u8868\u5355\u9879\n            } else {\n                //\u662f\u4e0a\u4f20\u6587\u4ef6\u9879\n                //\u83b7\u53d6\u6587\u4ef6\u4e0a\u4f20\u540d\u79f0\n                String fileName = fileItem.getName();\n                //\u628a\u6587\u4ef6\u540d\u79f0\u8bbe\u7f6e\u4e3a\u552f\u4e00\u7684\n                String uuid = UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);\n                fileName = uuid + &quot;_&quot; + fileName;\n                //\u5b8c\u6210\u4e0a\u4f20\n                fileItem.write(new File(path, fileName));\n                //\u5220\u9664\u4e34\u65f6\u6587\u4ef6\n                fileItem.delete();\n            }\n        }\n        return &quot;success&quot;;\n    }\n\n\n    /**\n     * springmvc\u6587\u4ef6\u4e0a\u4f20\n     * \u9700\u8981commons-fileupload\u548ccommons-io\u4f9d\u8d56\n     * @param request\n     * @return\n     */\n    @RequestMapping(&quot;/fileupload02&quot;)\n    public String fileupload02(HttpServletRequest request, MultipartFile upload) throws IOException {\n        System.out.println(&quot;fileupload02\u65b9\u6cd5\u6267\u884c\u4e86---springmvc\u6587\u4ef6\u4e0a\u4f20&quot;);\n        //\u6307\u5b9a\u4e0a\u4f20\u4f4d\u7f6e\uff08\u8def\u5f84\uff09\n        String path = request.getSession().getServletContext().getRealPath(&quot;/uploads/&quot;);\n        //\u5224\u65ad\u8be5\u8def\u5f84\u662f\u5426\u5b58\u5728\n        File file = new File(path);\n        //\u5982\u679c\u4e0d\u5b58\u5728\n        if (!file.exists()) {\n            //\u521b\u5efa\u8be5\u6587\u4ef6\u5939\n            file.mkdirs();\n        }\n\n        //\u83b7\u53d6\u6587\u4ef6\u4e0a\u4f20\u540d\u79f0\n        String filename = upload.getOriginalFilename();\n        //\u628a\u6587\u4ef6\u540d\u79f0\u8bbe\u7f6e\u4e3a\u552f\u4e00\u7684\n        String uuid = UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);\n        filename = uuid + &quot;_&quot; + filename;\n        //\u5b8c\u6210\u4e0a\u4f20\n        upload.transferTo(new File(path, filename));\n        return &quot;success&quot;;\n    }\n\n    /**\n     * springmvc\u8de8\u670d\u52a1\u5668\u4e0a\u4f20\n     * \u9700\u8981\u989d\u5916\u7684\u4e24\u4e2a\u4f9d\u8d56:jersey-core\u548cjersey-client\n     */\n    @RequestMapping(&quot;/fileupload03&quot;)\n    public String fileupload03(MultipartFile upload) throws Exception {\n        System.out.println(&quot;fileupload03\u65b9\u6cd5\u6267\u884c\u4e86---springmvc\u8de8\u670d\u52a1\u5668\u4e0a\u4f20&quot;);\n        //\u8bbe\u7f6e\u8981\u4e0a\u4f20\u7684\u6587\u4ef6\u670d\u52a1\u5668\u7684\u8def\u5f84\n        String path = &quot;http://localhost:8081/fileupload/uploads/&quot;;\n        //\u83b7\u53d6\u4e0a\u4f20\u7684\u6587\u4ef6\u540d\u79f0\n        String filename = upload.getOriginalFilename();\n        //\u628a\u6587\u4ef6\u540d\u79f0\u8bbe\u7f6e\u4e3a\u552f\u4e00\n        String uuid = UUID.randomUUID().toString().replace(&quot;-&quot;, &quot;&quot;);\n        filename = uuid + &quot;_&quot; + filename;\n        // \u521b\u5efa\u5ba2\u6237\u7aef\u7684\u5bf9\u8c61\n        Client client = Client.create();\n        // \u548c\u56fe\u7247\u670d\u52a1\u5668\u8fdb\u884c\u8fde\u63a5\n        WebResource webResource = client.resource(path + filename);\n        // \u4e0a\u4f20\u6587\u4ef6\n        webResource.put(upload.getBytes());\n        return &quot;success&quot;;\n    }\n}\n\n1. \u4f7f\u7528form\u8868\u5355\u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\n1.1 \u7f16\u5199HTML\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;fileupload_form&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form action=&quot;/upload&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;\n    &lt;input type=&quot;file&quot; name=&quot;file&quot;&gt;\n    &lt;input type=&quot;submit&quot; value=&quot;\u63d0\u4ea4&quot;&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n1.2 \u7f16\u5199Controller\n@RestController\npublic class FileUploadController {\n\n    //\u6309\u65e5\u671f\u5206\u7c7b\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;/yyyy/MM/dd/&quot;);\n\n    /**\n     * \u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\uff0c\u8fd4\u56de\u4e0a\u4f20\u6587\u4ef6\u7684URL\n     */\n    @PostMapping(&quot;/upload&quot;)\n    public String upload(MultipartFile file, HttpServletRequest request) {\n        String format = sdf.format(new Date());\n        String realpath = request.getServletContext().getRealPath(&quot;/img&quot;) + format;\n        File folder = new File(realpath);\n        if (!folder.exists()) {\n            folder.mkdirs();\n        }\n        //\u9632\u6b62\u6587\u4ef6\u91cd\u540d\n        String oldName = file.getOriginalFilename();\n        String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(&quot;.&quot;));\n        try {\n            //\u4fdd\u5b58\u4e0a\u4f20\u7684\u6587\u4ef6\u5230\u6307\u5b9a\u4f4d\u7f6e\n            file.transferTo(new File(folder, newName));\n            String url = request.getScheme() + &quot;://&quot; + request.getServerName() + &quot;:&quot; + request.getServerPort() + &quot;/img&quot; + format + newName;\n            //  http://localhost:8080/img/2020/01/05/d0a64514-b990-4bf6-8297-563f66ca3530.jpg\n            return url;\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return &quot;error&quot;;\n    }\n}\n\n2. \u4f7f\u7528ajax\u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\n2.1 \u7f16\u5199HTML\n\u4e3a\u65b9\u4fbf\u64cd\u4f5c\uff0c\u4f7f\u7528JQuery.js\n\n\u8865\u5145\uff1aXMLHttpRequest Level2\u6dfb\u52a0\u4e86\u4e00\u4e2a\u65b0\u7684\u63a5\u53e3FormData. \u5229\u7528FormData\u5bf9\u8c61,\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7JavaScript\u7528\u4e00\u4e9b\u952e\u503c\u5bf9\u6765\u6a21\u62df\u4e00\u7cfb\u5217\u8868\u5355\u63a7\u4ef6,\u6211\u4eec\u8fd8\u53ef\u4ee5\u4f7f\u7528XMLHttpRequest\u7684send()\u65b9\u6cd5\u6765\u5f02\u6b65\u7684\u63d0\u4ea4\u8fd9\u4e2a\"\u8868\u5355\".\n\u6bd4\u8d77\u666e\u901a\u7684ajax,\u4f7f\u7528FormData\u7684\u6700\u5927\u4f18\u70b9\u5c31\u662f\u53ef\u4ee5\u5f02\u6b65\u4e0a\u4f20\u4e00\u4e2a\u4e8c\u8fdb\u5236\u6587\u4ef6.\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;fileupload_ajax&lt;/title&gt;\n    &lt;script src=&quot;jquery-3.3.1.min.js&quot;&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;div id=&quot;result&quot;&gt;&lt;/div&gt;\n&lt;input type=&quot;file&quot; id=&quot;file&quot;&gt;\n&lt;input type=&quot;button&quot; value=&quot;\u4e0a\u4f20&quot; onclick=&quot;uploadFile()&quot;&gt;\n&lt;script&gt;\n    function uploadFile() {\n        var file = $(&quot;#file&quot;)[0].files[0];//files\u662f\u6587\u4ef6\u6570\u7ec4\n        var formData = new FormData();//html5\n        formData.append(&quot;file&quot;, file);\n        $.ajax({\n            type: &quot;post&quot;,\n            url: &quot;/upload&quot;,\n            processData: false,//\u662f\u5426\u8981\u4e0a\u4f20\u7684\u6570\u636e\u5904\u7406\u4e3a\u5bf9\u8c61\n            contentType: false,//\u53ef\u80fd\u7834\u574f\u5206\u9694\u7b26\uff0c\u4e0d\u8ba9jquery\u8bbe\u7f6e\u8bf7\u6c42\u5934\n            data: formData,\n            success: function (msg) {\n                $(&quot;#result&quot;).html(msg);\n            }\n        });\n    }\n&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n2.2 \u7f16\u5199Controller\n@RestController\npublic class FileUploadController {\n\n    //\u6309\u65e5\u671f\u5206\u7c7b\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;/yyyy/MM/dd/&quot;);\n\n    /**\n     * \u4e0a\u4f20\u5355\u4e2a\u6587\u4ef6\uff0c\u8fd4\u56de\u4e0a\u4f20\u6587\u4ef6\u7684URL\n     */\n    @PostMapping(&quot;/upload&quot;)\n    public String upload(MultipartFile file, HttpServletRequest request) {\n        String format = sdf.format(new Date());\n        String realpath = request.getServletContext().getRealPath(&quot;/img&quot;) + format;\n        File folder = new File(realpath);\n        if (!folder.exists()) {\n            folder.mkdirs();\n        }\n        //\u9632\u6b62\u6587\u4ef6\u91cd\u540d\n        String oldName = file.getOriginalFilename();\n        String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(&quot;.&quot;));\n        try {\n            //\u4fdd\u5b58\u4e0a\u4f20\u7684\u6587\u4ef6\u5230\u6307\u5b9a\u4f4d\u7f6e\n            file.transferTo(new File(folder, newName));\n            String url = request.getScheme() + &quot;://&quot; + request.getServerName() + &quot;:&quot; + request.getServerPort() + &quot;/img&quot; + format + newName;\n            //  http://localhost:8080/img/2020/01/05/d0a64514-b990-4bf6-8297-563f66ca3530.jpg\n            return url;\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return &quot;error&quot;;\n    }\n}\n\n3. \u591a\u6587\u4ef6\u4e0a\u4f20\n\u76f8\u8f83\u4e8e\u5355\u4e2a\u6587\u4ef6\u4e0a\u4f20\uff0c\u591a\u6587\u4ef6\u4e0a\u4f20\u4e0a\u4f20\u65f6\uff0c\u540e\u7aef\u53ef\u4ee5\u7528\u591a\u4e2a MultipartFile \u6765\u63a5\u6536\uff0c\u6216\u8005\u76f4\u63a5\u7528 MultipartFile \u6570\u7ec4\u6765\u63a5\u6536\u3002\n3.1 \u7f16\u5199HTML\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;fileupload_form_02&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;form action=&quot;/uploads&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;\n    &lt;input type=&quot;file&quot; name=&quot;file&quot; multiple&gt;&lt;!--multiple\u8868\u793a\u53ef\u4ee5\u9009\u62e9\u591a\u4e2a\u6587\u4ef6--&gt;\n    &lt;input type=&quot;submit&quot; value=&quot;\u63d0\u4ea4&quot;&gt;\n&lt;/form&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n\u5982\u679c\u4f7f\u7528 ajax ,\u53ef\u4ee5\u5411 FormData \u591a append \u51e0\u4e2a\u6587\u4ef6\uff08name\u5c5e\u6027\u4e0d\u8981\u76f8\u540c\uff09\uff0c\u7136\u540e\u5728 Controller \u4e2d\u4f7f\u7528\u591a\u4e2a MultipartFile \u6765\u63a5\u6536\u3002\n3.2 \u7f16\u5199Controller\n@RestController\npublic class FileUploadController {\n\n    SimpleDateFormat sdf = new SimpleDateFormat(&quot;/yyyy/MM/dd/&quot;);\n\n    /**\n     * \u4e0a\u4f20\u591a\u4e2a\u6587\u4ef6\n     * @param files\n     * @param request\n     * @return\n     */\n    @PostMapping(&quot;/uploads&quot;)\n    public String uploads(MultipartFile[] files, HttpServletRequest request) {\n        String format = sdf.format(new Date());\n        String realpath = request.getServletContext().getRealPath(&quot;/img&quot;) + format;\n        File folder = new File(realpath);\n        if (!folder.exists()) {\n            folder.mkdirs();\n        }\n        String url = null;\n        for (MultipartFile file : files) {\n            String oldName = file.getOriginalFilename();\n            String newName = UUID.randomUUID().toString() + oldName.substring(oldName.lastIndexOf(&quot;.&quot;));\n            try {\n                file.transferTo(new File(folder, newName));\n                url = request.getScheme() + &quot;://&quot; + request.getServerName() + &quot;:&quot; + request.getServerPort() + &quot;/img&quot; + format + newName;\n            } catch (IOException e) {\n                e.printStackTrace();\n            }\n        }\n        System.out.println(url);\n        return &quot;success&quot;;\n    }\n}\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "SpringBoot\u6574\u5408Freemarker", "date": "2020-05-04T00:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj04/", "text": "\u4e00.\u57fa\u672c\u6b65\u9aa4\n\n\u6dfb\u52a0pom\u4f9d\u8d56\n\u5728application.yml\u4e2d\u6dfb\u52a0\u76f8\u5173\u914d\u7f6e\n\u521b\u5efafreemarker\u6a21\u677f\n\u521b\u5efa\u63a7\u5236\u5c42\n\u6d4b\u8bd5\u8bbf\u95ee\n\n1. \u6dfb\u52a0pom\u4f9d\u8d56\n&lt;!-- springboot\u6574\u5408freemarker --&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-freemarker&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n2. \u5728application.yml\u4e2d\u6dfb\u52a0\u76f8\u5173\u914d\u7f6e\n\n# \u914d\u7f6efreemarker\nspring:\n  freemarker:\n    # \u8bbe\u7f6e\u6a21\u677f\u540e\u7f00\u540d \u9ed8\u8ba4.ftl (\u73b0\u5df2\u6539\u4e3aftlh)\n    #suffix: .ftlh\n    # \u8bbe\u7f6e\u6587\u6863\u7c7b\u578b  \u9ed8\u8ba4 text/html\n    #content-type: text/html\n    # \u8bbe\u7f6e\u9875\u9762\u7f16\u7801\u683c\u5f0f  \u9ed8\u8ba4 UTF-8\n    #charset: UTF-8\n    # \u8bbe\u7f6e\u9875\u9762\u7f13\u5b58  \u9ed8\u8ba4false\n    #cache: false\n    # \u8bbe\u7f6eftl\u6587\u4ef6\u8def\u5f84 \u9ed8\u8ba4classpath:/templates\n    #template-loader-path:\n    # - classpath:/templates\n\n  # \u8bbe\u7f6e\u9759\u6001\u6587\u4ef6\u8def\u5f84\uff0cjs,css\u7b49\n  mvc:\n    static-path-pattern: /static/**\n3. \u521b\u5efafreemarker\u6a21\u677f\n\u76ee\u5f55\uff1asrc/main/resources \u521b\u5efatemplates\u6587\u4ef6\u5939\uff0c\u6587\u4ef6\u5939\u91cc\u65b0\u5efafreemarker.ftlh\u6587\u4ef6\n&lt;!DOCTYPE&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;freemark&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Hello ${name} from resource freemark!&lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n\n4. \u521b\u5efa\u63a7\u5236\u5c42\n@Controller\n@RequestMapping(value = &quot;/freemarker&quot;)\npublic class FreemarkerAction {\n    /**\n     * \u8df3\u8f6cfreemarker\u9875\u9762\n     */\n    @RequestMapping(value = &quot;/toDemo&quot;)\n    public String toDemo(Model model) {\n        model.addAttribute(&quot;name&quot;, &quot;Xuxx&quot;);\n        return &quot;freemarker&quot;;\n    }\n}\n\n5. \u6d4b\u8bd5\u8bbf\u95ee\n\u542f\u52a8\u9879\u76ee\uff0c\u8f93\u5165http://localhost:8080/freemarker/toDemo\n\u4e8c.FreeMarker\u5e38\u7528\u6307\u4ee4\n1.if, else, elseif\n\u8bed\u6cd5\n&lt;#if \u6761\u4ef6&gt;...\n    &lt;#elseif \u6761\u4ef6&gt;...\n    &lt;#elseif \u6761\u4ef6&gt;...\n    &lt;#else&gt;...\n&lt;/#if&gt;\n\n\u7528\u4f8b\n&lt;#if user.gender==1&gt;\u7537\n    &lt;#elseif user.gender==0&gt;\u5973\n    &lt;#else&gt;\u672a\u77e5\n&lt;/#if&gt;\n\n2.switch, case, default, break\n\u8bed\u6cd5\n&lt;#switch value&gt;\n  &lt;#case refValue1&gt;\n    ...\n    &lt;#break&gt;\n  &lt;#case refValue2&gt;\n    ...\n    &lt;#break&gt;\n  &lt;#case refValueN&gt;\n    ...\n    &lt;#break&gt;\n  &lt;#default&gt;\n    ...\n&lt;/#switch&gt;\n\n\u7528\u4f8b\n&lt;#switch user.gender&gt;\n    &lt;#case 1&gt;\u7537&lt;#break&gt;\n    &lt;#case 0&gt;\u5973&lt;#break&gt;\n    &lt;#default&gt;\u672a\u77e5\n&lt;/#switch&gt;\n\n3.list, break\n\u8bed\u6cd5\n&lt;#list sequence as item&gt;\n    ...\n    &lt;#if item = &quot;spring&quot;&gt;&lt;#break&gt;&lt;/#if&gt;\n    ...\n&lt;/#list&gt;\n\n\u5173\u952e\u5b57\n\nitem_index:\u662flist\u5f53\u524d\u503c\u7684\u4e0b\u6807\nitem_has_next:\u5224\u65adlist\u662f\u5426\u8fd8\u6709\u503c\n\n\u7528\u4f8b\n\n&lt;#assign seq = [\"winter\", \"spring\", \"summer\", \"autumn\"]&gt;\n&lt;#list seq as x&gt;\n  ${x_index + 1}. ${x}&lt;#if x_has_next&gt;,&lt;/#if&gt;\n&lt;/#list&gt;\n\u8f93\u51fa\n\nwinter,\n\nspring,\n\nsummer,\n\nautumn  \n\n\n\n4.include\n\u8bed\u6cd5\n&lt;#include filename&gt;\nor\n&lt;#include filename options&gt;\n\noptions\u5305\u542b\u4e24\u4e2a\u5c5e\u6027\n\nencoding=\u201dGBK\u201d \u7f16\u7801\u683c\u5f0f\nparse=true \u662f\u5426\u4f5c\u4e3aftl\u8bed\u6cd5\u89e3\u6790,\u9ed8\u8ba4\u662ftrue\uff0cfalse\u5c31\u662f\u4ee5\u6587\u672c\u65b9\u5f0f\u5f15\u5165.\u6ce8\u610f\u5728ftl\u6587\u4ef6\u91cc\u5e03\u5c14\u503c\u90fd\u662f\u76f4\u63a5\u8d4b\u503c\u7684\u5982parse=true,\u800c\u4e0d\u662fparse=\u201dtrue\u201d\n\n\u7528\u4f8b\n/common/copyright.ftl\u5305\u542b\u5185\u5bb9\nCopyright 2001-2002 ${me}&lt;br&gt;\nAll rights reserved.\n\n\u6a21\u677f\u6587\u4ef6\n&lt;#assign me = &quot;Juila Smith&quot;&gt;\n&lt;h1&gt;Some test&lt;/h1&gt;\n&lt;p&gt;Yeah.\n&lt;hr&gt;\n&lt;#include &quot;/common/copyright.ftl&quot; encoding=\u201dGBK\u201d&gt;\n\n\u8f93\u51fa\u7ed3\u679c\n&lt;h1&gt;Some test&lt;/h1&gt;\n&lt;p&gt;Yeah.\n&lt;hr&gt;\nCopyright 2001-2002 Juila Smith\nAll rights reserved.\n\n5.Import\n\u8bed\u6cd5\n&lt;#import path as hash&gt;\n\n\u7c7b\u4f3c\u4e8ejava\u91cc\u7684import,\u5b83\u5bfc\u5165\u6587\u4ef6\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u5728\u5f53\u524d\u6587\u4ef6\u91cc\u4f7f\u7528\u88ab\u5bfc\u5165\u6587\u4ef6\u91cc\u7684\u5b8f\u7ec4\u4ef6\n\u7528\u4f8b\n\u5047\u8bbemylib.ftl\u91cc\u5b9a\u4e49\u4e86\u5b8fcopyright\u90a3\u4e48\u6211\u4eec\u5728\u5176\u4ed6\u6a21\u677f\u9875\u9762\u91cc\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528\n\n&lt;#import \"/libs/mylib.ftl\" as my&gt;\n&lt;@my.copyright date=\"1999-2002\"/&gt;\n\"my\"\u5728freemarker\u91cc\u88ab\u79f0\u4f5cnamespace\n6.compress\n\u8bed\u6cd5\n&lt;#compress&gt;\n  ...\n&lt;/#compress&gt;\n\n\u7528\u6765\u538b\u7f29\u7a7a\u767d\u7a7a\u95f4\u548c\u7a7a\u767d\u7684\u884c\n\u7528\u4f8b\n&lt;#assign x = &quot;    moo  \\n\\n   &quot;&gt;\n(&lt;#compress&gt;\n  1 2  3   4    5\n  ${moo}\n  test only\n  I said, test only\n&lt;/#compress&gt;)\n\n\u8f93\u51fa\n(1 2 3 4 5\nmoo\ntest only\nI said, test only)\n\n7.escape, noescape\n\u8bed\u6cd5\n&lt;#escape identifier as expression&gt;\n  ...\n  &lt;#noescape&gt;...&lt;/#noescape&gt;\n  ...\n&lt;/#escape&gt;\n\n\u7528\u4f8b\n\u4e3b\u8981\u4f7f\u7528\u5728\u76f8\u4f3c\u7684\u5b57\u7b26\u4e32\u53d8\u91cf\u8f93\u51fa\uff0c\u6bd4\u5982\u67d0\u4e00\u4e2a\u6a21\u5757\u7684\u6240\u6709\u5b57\u7b26\u4e32\u8f93\u51fa\u90fd\u5fc5\u987b\u662fhtml\u5b89\u5168\u7684\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u53ef\u4ee5\u4f7f\u7528\u8be5\u8868\u8fbe\u5f0f\n&lt;#escape x as x?html&gt;\n  First name: ${firstName}\n  &lt;#noescape&gt;Last name: ${lastName}&lt;/#noescape&gt;\n  Maiden name: ${maidenName}\n&lt;/#escape&gt;\n\n\u76f8\u540c\u8868\u8fbe\u5f0f\nFirst name: ${firstName?html}\n  Last name: ${lastName }\n  Maiden name: ${maidenName?html}\n\n8.assign\n\u8bed\u6cd5\n&lt;#assign name=value&gt;\nor\n&lt;#assign name1=value1 name2=value2 ... nameN=valueN&gt;\nor\n&lt;#assign same as above... in namespacehash&gt;\nor\n&lt;#assign name&gt;\n  capture this\n&lt;/#assign&gt;\nor\n&lt;#assign name in namespacehash&gt;\n  capture this\n&lt;/#assign&gt;\n\n\u7528\u4f8b\n\u751f\u6210\u53d8\u91cf,\u5e76\u4e14\u7ed9\u53d8\u91cf\u8d4b\u503c\n\u7ed9seasons\u8d4b\u4e88\u5e8f\u5217\u503c\n&lt;#assign seasons = [&quot;winter&quot;, &quot;spring&quot;, &quot;summer&quot;, &quot;autumn&quot;]&gt;\n\n\u7ed9\u53d8\u91cftest\u52a01\n&lt;#assign test = test + 1&gt;\n\n\u7ed9my namespage \u8d4b\u4e88\u4e00\u4e2a\u53d8\u91cfbgColor,\u4e0b\u9762\u53ef\u4ee5\u901a\u8fc7my.bgColor\u6765\u8bbf\u95ee\u8fd9\u4e2a\u53d8\u91cf\n&lt;#import &quot;/mylib.ftl&quot; as my&gt;\n&lt;#assign bgColor=&quot;red&quot; in my&gt;\n\n\u5c06\u4e00\u6bb5\u8f93\u51fa\u7684\u6587\u672c\u4f5c\u4e3a\u53d8\u91cf\u4fdd\u5b58\u5728x\u91cc\n\u4e0b\u9762\u7684\u9634\u5f71\u90e8\u5206\u8f93\u51fa\u7684\u6587\u672c\u5c06\u88ab\u8d4b\u503c\u7ed9x\n&lt;#assign x&gt;\n&lt;#list [&quot;\u661f\u671f\u4e00&quot;, &quot;\u661f\u671f\u4e8c&quot;, &quot;\u661f\u671f\u4e09&quot;, &quot;\u661f\u671f\u56db&quot;, &quot;\u661f\u671f\u4e94&quot;, &quot;\u661f\u671f\u516d&quot;, &quot;\u661f\u671f\u5929&quot;] as n&gt;\n${n}\n&lt;/#list&gt;\n&lt;/#assign&gt;\n${x}\n\n\u4e0a\u9762\u7684\u4ee3\u7801\u5c06\u4ea7\u751f\u5982\u4e0b\u8f93\u51fa:\u661f\u671f\u4e00 \u661f\u671f\u4e8c \u661f\u671f\u4e09 \u661f\u671f\u56db \u661f\u671f\u4e94 \u661f\u671f\u516d \u661f\u671f\u5929\n&lt;#assign x&gt;Hello ${user}!&lt;/#assign&gt;     error\n&lt;#assign x=\u201d Hello ${user}!\u201d&gt;         true\n\n\u540c\u65f6\u4e5f\u652f\u6301\u4e2d\u6587\u8d4b\u503c\uff0c\u5982\uff1a\n&lt;#assign \u8bed\u6cd5&gt;\n  java\n&lt;/#assign&gt;\n${\u8bed\u6cd5}\n\n\u6253\u5370\u8f93\u51fa:\njava\n9.global\n\u8bed\u6cd5\n&lt;#global name=value&gt;\nor\n&lt;#global name1=value1 name2=value2 ... nameN=valueN&gt;\nor\n&lt;#global name&gt;\n  capture this\n&lt;/#global&gt;\n\n\u5168\u5c40\u8d4b\u503c\u8bed\u6cd5\uff0c\u5229\u7528\u8fd9\u4e2a\u8bed\u6cd5\u7ed9\u53d8\u91cf\u8d4b\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a\u53d8\u91cf\u5728\u6240\u6709\u7684namespace\u4e2d\u662f\u53ef\u89c1\u7684,\u5982\u679c\u8fd9\u4e2a\u53d8\u91cf\u88ab\u5f53\u524d\u7684assign\u8bed\u6cd5\u8986\u76d6 \u5982&lt;#global x=2&gt; &lt;#assign x=1&gt; \u5728\u5f53\u524d\u9875\u9762\u91ccx=2\u5c06\u88ab\u9690\u85cf\uff0c\u6216\u8005\u901a\u8fc7${.global.x}\u6765\u8bbf\u95ee\n10.setting\n\u8bed\u6cd5\n&lt;#setting name=value&gt;\n\n\u7528\u6765\u8bbe\u7f6e\u6574\u4e2a\u7cfb\u7edf\u7684\u4e00\u4e2a\u73af\u5883\n\nlocale\nnumber_format\nboolean_format\ndate_format, time_format, datetime_format\ntime_zone\nclassic_compatible\n\n\u7528\u4f8b\n\u5047\u5982\u5f53\u524d\u662f\u5308\u7259\u5229\u7684\u8bbe\u7f6e\uff0c\u7136\u540e\u4fee\u6539\u6210\u7f8e\u56fd\n${1.2}\n&lt;#setting locale=&quot;en_US&quot;&gt;\n${1.2}\n\n\u8f93\u51fa\n1,2\n1.2\n\u56e0\u4e3a\u5308\u7259\u5229\u662f\u91c7\u7528\u201c,\u201d\u4f5c\u4e3a\u5341\u8fdb\u5236\u7684\u5206\u9694\u7b26\uff0c\u7f8e\u56fd\u662f\u7528\u201c.\u201d\n11.macro, nested, return\n\u8bed\u6cd5\n&lt;#macro name param1 param2 ... paramN&gt;\n  ...\n  &lt;#nested loopvar1, loopvar2, ..., loopvarN&gt;\n  ...\n  &lt;#return&gt;\n  ...\n&lt;/#macro&gt;\n\n\u7528\u4f8b\n\n&lt;#macro test foo bar=\"Bar\" baaz=-1&gt;\n  Test text, and the params: ${foo}, ${bar}, ${baaz}\n&lt;/#macro&gt;\n&lt;@test foo=\"a\" bar=\"b\" baaz=5*5-2/&gt;\n&lt;@test foo=\"a\" bar=\"b\"/&gt;\n&lt;@test foo=\"a\" baaz=5*5-2/&gt;\n&lt;@test foo=\"a\"/&gt;\n\u8f93\u51fa\n\n  Test text, and the params: a, b, 23\n  Test text, and the params: a, b, -1\n  Test text, and the params: a, Bar, 23\n  Test text, and the params: a, Bar, -1\n\u5b9a\u4e49\u5faa\u73af\u8f93\u51fa\u7684\u5b8f\n\n&lt;#macro list title items&gt;\n  &lt;p&gt;${title?cap_first}:\n  &lt;ul&gt;\n    &lt;#list items as x&gt;\n      &lt;li&gt;${x?cap_first}\n    &lt;/#list&gt;\n  &lt;/ul&gt;\n&lt;/#macro&gt;\n&lt;@list items=[\"mouse\", \"elephant\", \"python\"] title=\"Animals\"/&gt;\n\u8f93\u51fa\u7ed3\u679c\n\n&lt;p&gt;Animals:\n  &lt;ul&gt;\n      &lt;li&gt;Mouse\n      &lt;li&gt;Elephant\n      &lt;li&gt;Python\n  &lt;/ul&gt;\n\u5305\u542bbody\u7684\u5b8f\n\n&lt;#macro repeat count&gt;\n  &lt;#list 1..count as x&gt;\n    &lt;#nested x, x/2, x==count&gt;\n  &lt;/#list&gt;\n&lt;/#macro&gt;\n&lt;@repeat count=4 ; c halfc last&gt;\n  ${c}. ${halfc}&lt;#if last&gt; Last!&lt;/#if&gt;\n&lt;/@repeat &gt;\n\u8f93\u51fa\n\n0.5\n\n1\n\n1.5\n\n2 Last!\n\n\n12.t, lt, rt\n\u8bed\u6cd5\n\n&lt;#t&gt; \u53bb\u6389\u5de6\u53f3\u7a7a\u767d\u548c\u56de\u8f66\u6362\u884c\n&lt;#lt&gt;\u53bb\u6389\u5de6\u8fb9\u7a7a\u767d\u548c\u56de\u8f66\u6362\u884c\n&lt;#rt&gt;\u53bb\u6389\u53f3\u8fb9\u7a7a\u767d\u548c\u56de\u8f66\u6362\u884c\n&lt;#nt&gt;\u53d6\u6d88\u4e0a\u9762\u7684\u6548\u679c\n\u5f53\u7136 (\u6307\u4ee4\u8fd8\u6709\u5f88\u591a)\u3002\n\u4e09\u3001\u5e38\u7528\u5185\u5efa\u51fd\u6570\n\u5185\u5efa\u51fd\u6570\u5f88\u50cf\u5b50\u53d8\u91cf(\u5982\u679c\u4e86\u89e3Java\u672f\u8bed\u7684\u8bdd\uff0c\u4e5f\u53ef\u4ee5\u8bf4\u50cf\u65b9\u6cd5)\uff0c \u5b83\u4eec\u5e76\u4e0d\u662f\u6570\u636e\u6a21\u578b\u4e2d\u7684\u4e1c\u897f\uff0c\u662f FreeMarker \u5728\u6570\u503c\u4e0a\u6dfb\u52a0\u7684\u3002 \u4e3a\u4e86\u6e05\u6670\u5b50\u53d8\u91cf\u662f\u54ea\u90e8\u5206\uff0c\u4f7f\u7528 ?(\u95ee\u53f7)\u4ee3\u66ff .(\u70b9)\u6765\u8bbf\u95ee\u5b83\u4eec\u3002\u5e38\u7528\u5185\u5efa\u51fd\u6570\u7684\u793a\u4f8b\uff1a\n\nuser?html \u7ed9\u51fa user \u7684HTML\u8f6c\u4e49\u7248\u672c\uff0c \u6bd4\u5982 &amp; \u4f1a\u7531 &amp; \u6765\u4ee3\u66ff\u3002\n\n\nuser?upper_case \u7ed9\u51fa user \u503c\u7684\u5927\u5199\u7248\u672c (\u6bd4\u5982 \"JOHN DOE\" \u6765\u66ff\u4ee3 \"John Doe\")\n\n\nanimal.name?cap_first \u7ed9\u51fa animal.name \u7684\u9996\u5b57\u6bcd\u5927\u5199\u7248\u672c(\u6bd4\u5982 \"Mouse\" \u6765\u66ff\u4ee3 \"mouse\")\n\n\nuser?length \u7ed9\u51fa user \u503c\u4e2d \u5b57\u7b26\u7684\u6570\u91cf(\u5bf9\u4e8e \"John Doe\" \u6765\u8bf4\u5c31\u662f8)\n\n\nanimals?size \u7ed9\u51fa animals \u5e8f\u5217\u4e2d \u9879\u76ee \u7684\u4e2a\u6570(\u6211\u4eec\u793a\u4f8b\u6570\u636e\u6a21\u578b\u4e2d\u662f3\u4e2a)\n\n\u5982\u679c\u5728 &lt;#list animals as animal&gt; \u548c\u5bf9\u5e94\u7684 &lt;/#list&gt; \u6807\u7b7e\u4e2d\uff1a\n\nanimal?index \u7ed9\u51fa\u4e86\u5728 animals \u4e2d\u57fa\u4e8e0\u5f00\u59cb\u7684 animal\u7684\u7d22\u5f15\u503c\n\n\nanimal?counter \u4e5f\u50cf index\uff0c \u4f46\u662f\u7ed9\u51fa\u7684\u662f\u57fa\u4e8e1\u7684\u7d22\u5f15\u503c\n\n\nanimal?item_parity \u57fa\u4e8e\u5f53\u524d\u8ba1\u6570\u7684\u5947\u5076\u6027\uff0c\u7ed9\u51fa\u5b57\u7b26\u4e32 \"odd\" \u6216 \"even\"\u3002\u5728\u7ed9\u4e0d\u540c\u884c\u7740\u8272\u65f6\u975e\u5e38\u6709\u7528\uff0c\u6bd4\u5982\u5728 \u4e2d\u3002\n\n\u4e00\u4e9b\u5185\u5efa\u51fd\u6570\u9700\u8981\u53c2\u6570\u6765\u6307\u5b9a\u884c\u4e3a\uff0c\u6bd4\u5982\uff1a\n\nanimal.protected?string(\"Y\", \"N\") \u57fa\u4e8e animal.protected \u7684\u5e03\u5c14\u503c\u6765\u8fd4\u56de\u5b57\u7b26\u4e32 \"Y\" \u6216 \"N\"\u3002\n\n\nanimal?item_cycle('lightRow','darkRow') \u662f\u4e4b\u524d\u4ecb\u7ecd\u7684 item_parity \u66f4\u4e3a\u5e38\u7528\u7684\u53d8\u4f53\u5f62\u5f0f\u3002\n\n\nfruits?join(\", \") \u901a\u8fc7\u8fde\u63a5\u6240\u6709\u9879\uff0c\u5c06\u5217\u8868\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c \u5728\u6bcf\u4e2a\u9879\u4e4b\u95f4\u63d2\u5165\u53c2\u6570\u5206\u9694\u7b26(\u6bd4\u5982 \"orange,banana\")\n\n\nuser?starts_with(\"J\") \u6839\u636e user \u7684\u9996\u5b57\u6bcd\u662f\u5426\u662f \"J\" \u8fd4\u56de\u5e03\u5c14\u503ctrue\u6216false\u3002\n\n\u5185\u5efa\u51fd\u6570\u5e94\u7528\u53ef\u4ee5\u94fe\u5f0f\u64cd\u4f5c\uff0c\u6bd4\u5982user?upper_case?html \u4f1a\u5148\u8f6c\u6362\u7528\u6237\u540d\u5230\u5927\u5199\u5f62\u5f0f\uff0c\u4e4b\u540e\u518d\u8fdb\u884cHTML\u8f6c\u4e49\u3002(\u8fd9\u5c31\u50cf\u53ef\u4ee5\u94fe\u5f0f\u4f7f\u7528 .(\u70b9)\u4e00\u6837)\n\u53ef\u4ee5\u9605\u8bfb \u5168\u90e8\u5185\u5efa\u51fd\u6570\u53c2\u8003\u3002\n\u56db\u3001\u5feb\u901f\u6d4f\u89c8(\u5907\u5fd8\u5355)\n\u8fd9\u91cc\u7ed9\u5df2\u7ecf\u4e86\u89e3 FreeMarker \u7684\u4eba\u6216\u6709\u7ecf\u9a8c\u7684\u7a0b\u5e8f\u5458\u7684\u63d0\u4e2a\u9192\uff1a\n\u76f4\u63a5\u6307\u5b9a\u503c\n\n\u5b57\u7b26\u4e32\uff1a \"Foo\" \u6216\u8005 'Foo' \u6216\u8005 \"It's \\\"quoted\\\"\" \u6216\u8005 'It\\'s \"quoted\"' \u6216\u8005 r\"C:\\raw\\string\"\n\u6570\u5b57\uff1a 123.45\n\u5e03\u5c14\u503c\uff1a true\uff0c false\n\u5e8f\u5217\uff1a [\"foo\", \"bar\", 123.45]\uff1b \u503c\u57df\uff1a 0..9, 0..&lt;10 (\u6216 0..!10), 0..\n\u54c8\u5e0c\u8868\uff1a {\"name\":\"green mouse\", \"price\":150}\n\n\u68c0\u7d22\u53d8\u91cf\n\n\u9876\u5c42\u53d8\u91cf\uff1a user\n\u4ece\u54c8\u5e0c\u8868\u4e2d\u68c0\u7d22\u6570\u636e\uff1a user.name\uff0c user[\"name\"]\n\u4ece\u5e8f\u5217\u4e2d\u68c0\u7d22\u6570\u636e\uff1a products[5]\n\u7279\u6b8a\u53d8\u91cf\uff1a .main\n\n\u5b57\u7b26\u4e32\u64cd\u4f5c\n\n\u63d2\u503c(\u6216\u8fde\u63a5)\uff1a \"Hello ${user}!\" (\u6216 \"Hello \" + user + \"!\")\n\u83b7\u53d6\u4e00\u4e2a\u5b57\u7b26\uff1a name[0]\n\u5b57\u7b26\u4e32\u5207\u5206\uff1a \u5305\u542b\u7ed3\u5c3e\uff1a name[0..4]\uff0c\u4e0d\u5305\u542b\u7ed3\u5c3e\uff1a name[0..&lt;5]\uff0c\u57fa\u4e8e\u957f\u5ea6(\u5bbd\u5bb9\u5904\u7406)\uff1a name[0..*5]\uff0c\u53bb\u9664\u5f00\u5934\uff1a name[5..]\n\n\u5e8f\u5217\u64cd\u4f5c\n\n\u8fde\u63a5\uff1a users + [\"guest\"]\n\u5e8f\u5217\u5207\u5206\uff1a\u5305\u542b\u7ed3\u5c3e\uff1a products[20..29]\uff0c \u4e0d\u5305\u542b\u7ed3\u5c3e\uff1a products[20..&lt;30]\uff0c\u57fa\u4e8e\u957f\u5ea6(\u5bbd\u5bb9\u5904\u7406)\uff1a products[20..*10]\uff0c\u53bb\u9664\u5f00\u5934\uff1a products[20..]\n\n\u54c8\u5e0c\u8868\u64cd\u4f5c\n\n\u8fde\u63a5\uff1a passwords + { \"joe\": \"secret42\" }\n\n\u7b97\u672f\u8fd0\u7b97\uff1a (x * 1.5 + 10) / 2 - y % 100\n\u6bd4\u8f83\u8fd0\u7b97\uff1a x == y\uff0c x != y\uff0c x &lt; y\uff0c x &gt; y\uff0c x &gt;= y\uff0c x &lt;= y\uff0c x lt y\uff0c x lte y\uff0c x gt y\uff0c x gte y\uff0c \u7b49\u7b49\u3002\u3002\u3002\u3002\u3002\u3002\n\u903b\u8f91\u64cd\u4f5c\uff1a !registered &amp;&amp; (firstVisit || fromEurope)\n\u5185\u5efa\u51fd\u6570\uff1a name?upper_case, path?ensure_starts_with('/')\n\u65b9\u6cd5\u8c03\u7528\uff1a repeat(\"What\", 3)\n\u5904\u7406\u4e0d\u5b58\u5728\u7684\u503c\uff1a\n\n\u9ed8\u8ba4\u503c\uff1a name!\"unknown\" \u6216\u8005 (user.name)!\"unknown\" \u6216\u8005 name! \u6216\u8005 (user.name)!\n\u68c0\u6d4b\u4e0d\u5b58\u5728\u7684\u503c\uff1a name?? \u6216\u8005 (user.name)??\n\n\u8d4b\u503c\u64cd\u4f5c\uff1a =, +=, -=, *=, /=, %=, ++, --\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "Spring  Boot \u8bb0\u5f55\u65e5\u5fd7", "date": "2020-05-03T01:55:00-00.00", "path": "/Xuxx_Blogs/archives/bj08/", "text": "1.\u57fa\u672c\u64cd\u4f5c\n1.\u5728\u7c7b\u4e2d\u6dfb\u52a0Logger\nprivate static final Logger log = LoggerFactory.getLogger(SpringbootJpaApplication.class);\n\n2.\u4f7f\u7528log\u8bb0\u5f55\u65e5\u5fd7\n\u4f8b\uff1a\n@SpringBootApplication\npublic class SpringbootApplication {\n    private static final Logger log = LoggerFactory.getLogger(SpringbootApplication.class);\n\n    public static void main(String[] args) {\n        log.debug(&quot;\u65e5\u5fd7\u8bb0\u5f55&quot;);\n        log.info(&quot;\u65e5\u5fd7\u8bb0\u5f55&quot;);\n        log.error(&quot;\u65e5\u5fd7\u8bb0\u5f55&quot;);\n        SpringApplication.run(SpringbootApplication.class, args);\n    }\n}\n\n\n2.\u4fbf\u6377\u64cd\u4f5c\n1.\u5728\u7c7b\u4e0a\u6dfb\u52a0@Slf4j\u6ce8\u89e3\n2.\u4f7f\u7528log\u8bb0\u5f55\u65e5\u5fd7\n\u4f8b\uff1a\n@Slf4j\n@SpringBootApplication\npublic class SpringbootApplication {\n    public static void main(String[] args) {\n        log.debug(&quot;\u65e5\u5fd7\u8bb0\u5f55&quot;);\n        log.info(&quot;\u65e5\u5fd7\u8bb0\u5f55&quot;);\n        log.error(&quot;\u65e5\u5fd7\u8bb0\u5f55&quot;);\n        SpringApplication.run(SpringbootApplication.class, args);\n    }\n}\n\n\n3.\u65e5\u5fd7\u914d\u7f6e\nSpring Boot\u5bf9\u5404\u79cd\u65e5\u5fd7\u6846\u67b6\u90fd\u505a\u4e86\u652f\u6301\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6765\u4fee\u6539\u9ed8\u8ba4\u7684\u65e5\u5fd7\u7684\u914d\u7f6e\n\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cSpring Boot\u4f7f\u7528Logback\u4f5c\u4e3a\u65e5\u5fd7\u6846\u67b6\nlogging:\n    file: ../1ogs/xxx.1og                      (../\u662f\u5f53\u524d\u9879\u76ee\u7684\u4e0a\u7ea7\u76ee\u5f55)\n    level.com.xuxx.xxx.xxx: DEBUG\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "\u65e5\u5fd7", "slug": "\u65e5\u5fd7", "permalink": "/Xuxx_Blogs/tag/\u65e5\u5fd7/"}, {"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "\u6570\u636e\u5e93-\u4e8b\u52a1", "date": "2020-04-15T22:55:00-00.00", "path": "/Xuxx_Blogs/archives/bj07/", "text": "\u4e8b\u52a1\n\n\u5728\u6267\u884cSQL\u8bed\u53e5\u7684\u65f6\u5019\uff0c\u67d0\u4e9b\u4e1a\u52a1\u8981\u6c42\uff0c\u4e00\u7cfb\u5217\u64cd\u4f5c\u5fc5\u987b\u5168\u90e8\u6267\u884c\uff0c\u800c\u4e0d\u80fd\u4ec5\u6267\u884c\u4e00\u90e8\u5206\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u8f6c\u8d26\u64cd\u4f5c\uff1a\n\n-- \u4eceid=1\u7684\u8d26\u6237\u7ed9id=2\u7684\u8d26\u6237\u8f6c\u8d26100\u5143\n-- \u7b2c\u4e00\u6b65\uff1a\u5c06id=1\u7684A\u8d26\u6237\u4f59\u989d\u51cf\u53bb100\nUPDATE accounts SET balance = balance - 100 WHERE id = 1;\n-- \u7b2c\u4e8c\u6b65\uff1a\u5c06id=2\u7684B\u8d26\u6237\u4f59\u989d\u52a0\u4e0a100\nUPDATE accounts SET balance = balance + 100 WHERE id = 2;\n\u8fd9\u4e24\u6761SQL\u8bed\u53e5\u5fc5\u987b\u5168\u90e8\u6267\u884c\uff0c\u6216\u8005\uff0c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\uff0c\u5982\u679c\u7b2c\u4e00\u6761\u8bed\u53e5\u6210\u529f\uff0c\u7b2c\u4e8c\u6761\u8bed\u53e5\u5931\u8d25\uff0c\u5c31\u5fc5\u987b\u5168\u90e8\u64a4\u9500\u3002\n\u8fd9\u79cd\u628a\u591a\u6761\u8bed\u53e5\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\u8fdb\u884c\u64cd\u4f5c\u7684\u529f\u80fd\uff0c\u88ab\u79f0\u4e3a\u6570\u636e\u5e93\u4e8b\u52a1\u3002\u6570\u636e\u5e93\u4e8b\u52a1\u53ef\u4ee5\u786e\u4fdd\u8be5\u4e8b\u52a1\u8303\u56f4\u5185\u7684\u6240\u6709\u64cd\u4f5c\u90fd\u53ef\u4ee5\u5168\u90e8\u6210\u529f\u6216\u8005\u5168\u90e8\u5931\u8d25\u3002\u5982\u679c\u4e8b\u52a1\u5931\u8d25\uff0c\u90a3\u4e48\u6548\u679c\u5c31\u548c\u6ca1\u6709\u6267\u884c\u8fd9\u4e9bSQL\u4e00\u6837\uff0c\u4e0d\u4f1a\u5bf9\u6570\u636e\u5e93\u6570\u636e\u6709\u4efb\u4f55\u6539\u52a8\u3002\n\u53ef\u89c1\uff0c\u6570\u636e\u5e93\u4e8b\u52a1\u5177\u6709ACID\u8fd94\u4e2a\u7279\u6027\uff1a\n\nA\uff1aAtomic\uff0c\u539f\u5b50\u6027\uff0c\u5c06\u6240\u6709SQL\u4f5c\u4e3a\u539f\u5b50\u5de5\u4f5c\u5355\u5143\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u6267\u884c\uff1b\nC\uff1aConsistent\uff0c\u4e00\u81f4\u6027\uff0c\u4e8b\u52a1\u5b8c\u6210\u540e\uff0c\u6240\u6709\u6570\u636e\u7684\u72b6\u6001\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u5373A\u8d26\u6237\u53ea\u8981\u51cf\u53bb\u4e86100\uff0cB\u8d26\u6237\u5219\u5fc5\u5b9a\u52a0\u4e0a\u4e86100\uff1b\nI\uff1aIsolation\uff0c\u9694\u79bb\u6027\uff0c\u5982\u679c\u6709\u591a\u4e2a\u4e8b\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u6bcf\u4e2a\u4e8b\u52a1\u4f5c\u51fa\u7684\u4fee\u6539\u5fc5\u987b\u4e0e\u5176\u4ed6\u4e8b\u52a1\u9694\u79bb\uff1b\nD\uff1aDuration\uff0c\u6301\u4e45\u6027\uff0c\u5373\u4e8b\u52a1\u5b8c\u6210\u540e\uff0c\u5bf9\u6570\u636e\u5e93\u6570\u636e\u7684\u4fee\u6539\u88ab\u6301\u4e45\u5316\u5b58\u50a8\u3002\n\n\u5bf9\u4e8e\u5355\u6761SQL\u8bed\u53e5\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u81ea\u52a8\u5c06\u5176\u4f5c\u4e3a\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\uff0c\u8fd9\u79cd\u4e8b\u52a1\u88ab\u79f0\u4e3a\u9690\u5f0f\u4e8b\u52a1\u3002\n\u8981\u624b\u52a8\u628a\u591a\u6761SQL\u8bed\u53e5\u4f5c\u4e3a\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\uff0c\u4f7f\u7528BEGIN\u5f00\u542f\u4e00\u4e2a\u4e8b\u52a1\uff0c\u4f7f\u7528COMMIT\u63d0\u4ea4\u4e00\u4e2a\u4e8b\u52a1\uff0c\u8fd9\u79cd\u4e8b\u52a1\u88ab\u79f0\u4e3a\u663e\u5f0f\u4e8b\u52a1\uff0c\u4f8b\u5982\uff0c\u628a\u4e0a\u8ff0\u7684\u8f6c\u8d26\u64cd\u4f5c\u4f5c\u4e3a\u4e00\u4e2a\u663e\u5f0f\u4e8b\u52a1\uff1a\n\nBEGIN;\nUPDATE accounts SET balance = balance - 100 WHERE id = 1;\nUPDATE accounts SET balance = balance + 100 WHERE id = 2;\nCOMMIT;\n\u5f88\u663e\u7136\u591a\u6761SQL\u8bed\u53e5\u8981\u60f3\u4f5c\u4e3a\u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\uff0c\u5c31\u5fc5\u987b\u4f7f\u7528\u663e\u5f0f\u4e8b\u52a1\u3002\nCOMMIT\u662f\u6307\u63d0\u4ea4\u4e8b\u52a1\uff0c\u5373\u8bd5\u56fe\u628a\u4e8b\u52a1\u5185\u7684\u6240\u6709SQL\u6240\u505a\u7684\u4fee\u6539\u6c38\u4e45\u4fdd\u5b58\u3002\u5982\u679cCOMMIT\u8bed\u53e5\u6267\u884c\u5931\u8d25\u4e86\uff0c\u6574\u4e2a\u4e8b\u52a1\u4e5f\u4f1a\u5931\u8d25\u3002\n\u6709\u4e9b\u65f6\u5019\uff0c\u6211\u4eec\u5e0c\u671b\u4e3b\u52a8\u8ba9\u4e8b\u52a1\u5931\u8d25\uff0c\u8fd9\u65f6\uff0c\u53ef\u4ee5\u7528ROLLBACK\u56de\u6eda\u4e8b\u52a1\uff0c\u6574\u4e2a\u4e8b\u52a1\u4f1a\u5931\u8d25\uff1a\n\nBEGIN;\nUPDATE accounts SET balance = balance - 100 WHERE id = 1;\nUPDATE accounts SET balance = balance + 100 WHERE id = 2;\nROLLBACK;\n\u6570\u636e\u5e93\u4e8b\u52a1\u662f\u7531\u6570\u636e\u5e93\u7cfb\u7edf\u4fdd\u8bc1\u7684\uff0c\u6211\u4eec\u53ea\u9700\u8981\u6839\u636e\u4e1a\u52a1\u903b\u8f91\u4f7f\u7528\u5b83\u5c31\u53ef\u4ee5\u3002\n\u9694\u79bb\u7ea7\u522b\n\u5bf9\u4e8e\u4e24\u4e2a\u5e76\u53d1\u6267\u884c\u7684\u4e8b\u52a1\uff0c\u5982\u679c\u6d89\u53ca\u5230\u64cd\u4f5c\u540c\u4e00\u6761\u8bb0\u5f55\u7684\u65f6\u5019\uff0c\u53ef\u80fd\u4f1a\u53d1\u751f\u95ee\u9898\u3002\u56e0\u4e3a\u5e76\u53d1\u64cd\u4f5c\u4f1a\u5e26\u6765\u6570\u636e\u7684\u4e0d\u4e00\u81f4\u6027\uff0c\u5305\u62ec\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u5e7b\u8bfb\u7b49\u3002\u6570\u636e\u5e93\u7cfb\u7edf\u63d0\u4f9b\u4e86\u9694\u79bb\u7ea7\u522b\u6765\u8ba9\u6211\u4eec\u6709\u9488\u5bf9\u6027\u5730\u9009\u62e9\u4e8b\u52a1\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u907f\u514d\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\nSQL\u6807\u51c6\u5b9a\u4e49\u4e864\u79cd\u9694\u79bb\u7ea7\u522b\uff0c\u5206\u522b\u5bf9\u5e94\u53ef\u80fd\u51fa\u73b0\u7684\u6570\u636e\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff1a\n\n\nIsolation Level\n\u810f\u8bfb\uff08Dirty Read\uff09\n\u4e0d\u53ef\u91cd\u590d\u8bfb\uff08Non Repeatable Read\uff09\n\u5e7b\u8bfb\uff08Phantom Read\uff09\n\n\n\n\nRead Uncommitted\nYes\nYes\nYes\n\n\nRead Committed\n-\nYes\nYes\n\n\nRepeatable Read\n-\n-\nYes\n\n\nSerializable\n-\n-\n-\n\n\n\n\u4e0b\u9762\u4f9d\u6b21\u4ecb\u7ecd4\u79cd\u9694\u79bb\u7ea7\u522b\u7684\u6570\u636e\u4e00\u81f4\u6027\u95ee\u9898\u3002\nRead Uncommitted\n\nRead Uncommitted\u662f\u9694\u79bb\u7ea7\u522b\u6700\u4f4e\u7684\u4e00\u79cd\u4e8b\u52a1\u7ea7\u522b\u3002\u5728\u8fd9\u79cd\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e00\u4e2a\u4e8b\u52a1\u4f1a\u8bfb\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u66f4\u65b0\u540e\u4f46\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u4e8b\u52a1\u56de\u6eda\uff0c\u90a3\u4e48\u5f53\u524d\u4e8b\u52a1\u8bfb\u5230\u7684\u6570\u636e\u5c31\u662f\u810f\u6570\u636e\uff0c\u8fd9\u5c31\u662f\u810f\u8bfb\uff08Dirty Read\uff09\u3002\n\u6211\u4eec\u6765\u770b\u4e00\u4e2a\u4f8b\u5b50\u3002\n\u9996\u5148\uff0c\u6211\u4eec\u51c6\u5907\u597dstudents\u8868\u7684\u6570\u636e\uff0c\u8be5\u8868\u4ec5\u4e00\u884c\u8bb0\u5f55\uff1a\n\nmysql&gt; select * from students;\n+----+-------+\n| id | name  |\n+----+-------+\n|  1 | Alice |\n+----+-------+\n1 row in set (0.00 sec)\n\u7136\u540e\uff0c\u5206\u522b\u5f00\u542f\u4e24\u4e2aMySQL\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u6309\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u4e8b\u52a1A\u548c\u4e8b\u52a1B\uff1a\n\n\n\u65f6\u523b\n\u4e8b\u52a1A\n\u4e8b\u52a1B\n\n\n\n\n1\nSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\nSET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;\n\n\n2\nBEGIN;\nBEGIN;\n\n\n3\nUPDATE students SET name = 'Bob' WHERE id = 1;\n\n\n\n4\n\nSELECT * FROM students WHERE id = 1;\n\n\n5\nROLLBACK;\n\n\n\n6\n\nSELECT * FROM students WHERE id = 1;\n\n\n7\n\nCOMMIT;\n\n\n\n\u5f53\u4e8b\u52a1A\u6267\u884c\u5b8c\u7b2c3\u6b65\u65f6\uff0c\u5b83\u66f4\u65b0\u4e86id=1\u7684\u8bb0\u5f55\uff0c\u4f46\u5e76\u672a\u63d0\u4ea4\uff0c\u800c\u4e8b\u52a1B\u5728\u7b2c4\u6b65\u8bfb\u53d6\u5230\u7684\u6570\u636e\u5c31\u662f\u672a\u63d0\u4ea4\u7684\u6570\u636e\u3002\n\u968f\u540e\uff0c\u4e8b\u52a1A\u5728\u7b2c5\u6b65\u8fdb\u884c\u4e86\u56de\u6eda\uff0c\u4e8b\u52a1B\u518d\u6b21\u8bfb\u53d6id=1\u7684\u8bb0\u5f55\uff0c\u53d1\u73b0\u548c\u4e0a\u4e00\u6b21\u8bfb\u53d6\u5230\u7684\u6570\u636e\u4e0d\u4e00\u81f4\uff0c\u8fd9\u5c31\u662f\u810f\u8bfb\u3002\n\u53ef\u89c1\uff0c\u5728Read Uncommitted\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e00\u4e2a\u4e8b\u52a1\u53ef\u80fd\u8bfb\u53d6\u5230\u53e6\u4e00\u4e2a\u4e8b\u52a1\u66f4\u65b0\u4f46\u672a\u63d0\u4ea4\u7684\u6570\u636e\uff0c\u8fd9\u4e2a\u6570\u636e\u6709\u53ef\u80fd\u662f\u810f\u6570\u636e\u3002\nRead Committed\n\n\u5728Read Committed\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e00\u4e2a\u4e8b\u52a1\u53ef\u80fd\u4f1a\u9047\u5230\u4e0d\u53ef\u91cd\u590d\u8bfb\uff08Non Repeatable Read\uff09\u7684\u95ee\u9898\u3002\n\u4e0d\u53ef\u91cd\u590d\u8bfb\u662f\u6307\uff0c\u5728\u4e00\u4e2a\u4e8b\u52a1\u5185\uff0c\u591a\u6b21\u8bfb\u540c\u4e00\u6570\u636e\uff0c\u5728\u8fd9\u4e2a\u4e8b\u52a1\u8fd8\u6ca1\u6709\u7ed3\u675f\u65f6\uff0c\u5982\u679c\u53e6\u4e00\u4e2a\u4e8b\u52a1\u6070\u597d\u4fee\u6539\u4e86\u8fd9\u4e2a\u6570\u636e\uff0c\u90a3\u4e48\uff0c\u5728\u7b2c\u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u4e24\u6b21\u8bfb\u53d6\u7684\u6570\u636e\u5c31\u53ef\u80fd\u4e0d\u4e00\u81f4\u3002\n\u6211\u4eec\u4ecd\u7136\u5148\u51c6\u5907\u597dstudents\u8868\u7684\u6570\u636e\uff1a\n\nmysql&gt; select * from students;\n+----+-------+\n| id | name  |\n+----+-------+\n|  1 | Alice |\n+----+-------+\n1 row in set (0.00 sec)\n\u7136\u540e\uff0c\u5206\u522b\u5f00\u542f\u4e24\u4e2aMySQL\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u6309\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u4e8b\u52a1A\u548c\u4e8b\u52a1B\uff1a\n\n\n\u65f6\u523b\n\u4e8b\u52a1A\n\u4e8b\u52a1B\n\n\n\n\n1\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED;\nSET TRANSACTION ISOLATION LEVEL READ COMMITTED;\n\n\n2\nBEGIN;\nBEGIN;\n\n\n3\n\nSELECT * FROM students WHERE id = 1;\n\n\n4\nUPDATE students SET name = 'Bob' WHERE id = 1;\n\n\n\n5\nCOMMIT;\n\n\n\n6\n\nSELECT * FROM students WHERE id = 1;\n\n\n7\n\nCOMMIT;\n\n\n\n\u5f53\u4e8b\u52a1B\u7b2c\u4e00\u6b21\u6267\u884c\u7b2c3\u6b65\u7684\u67e5\u8be2\u65f6\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u662fAlice\uff0c\u968f\u540e\uff0c\u7531\u4e8e\u4e8b\u52a1A\u5728\u7b2c4\u6b65\u66f4\u65b0\u4e86\u8fd9\u6761\u8bb0\u5f55\u5e76\u63d0\u4ea4\uff0c\u6240\u4ee5\uff0c\u4e8b\u52a1B\u5728\u7b2c6\u6b65\u518d\u6b21\u6267\u884c\u540c\u6837\u7684\u67e5\u8be2\u65f6\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u53d8\u6210\u4e86Bob\uff0c\u56e0\u6b64\uff0c\u5728Read Committed\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e8b\u52a1\u4e0d\u53ef\u91cd\u590d\u8bfb\u540c\u4e00\u6761\u8bb0\u5f55\uff0c\u56e0\u4e3a\u5f88\u53ef\u80fd\u8bfb\u5230\u7684\u7ed3\u679c\u4e0d\u4e00\u81f4\u3002\nRepeatable Read\n\n\u5728Repeatable Read\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u4e00\u4e2a\u4e8b\u52a1\u53ef\u80fd\u4f1a\u9047\u5230\u5e7b\u8bfb\uff08Phantom Read\uff09\u7684\u95ee\u9898\u3002\n\u5e7b\u8bfb\u662f\u6307\uff0c\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\uff0c\u7b2c\u4e00\u6b21\u67e5\u8be2\u67d0\u6761\u8bb0\u5f55\uff0c\u53d1\u73b0\u6ca1\u6709\uff0c\u4f46\u662f\uff0c\u5f53\u8bd5\u56fe\u66f4\u65b0\u8fd9\u6761\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\u65f6\uff0c\u7adf\u7136\u80fd\u6210\u529f\uff0c\u5e76\u4e14\uff0c\u518d\u6b21\u8bfb\u53d6\u540c\u4e00\u6761\u8bb0\u5f55\uff0c\u5b83\u5c31\u795e\u5947\u5730\u51fa\u73b0\u4e86\u3002\n\u6211\u4eec\u4ecd\u7136\u5148\u51c6\u5907\u597dstudents\u8868\u7684\u6570\u636e\uff1a\n\nmysql&gt; select * from students;\n+----+-------+\n| id | name  |\n+----+-------+\n|  1 | Alice |\n+----+-------+\n1 row in set (0.00 sec)\n\u7136\u540e\uff0c\u5206\u522b\u5f00\u542f\u4e24\u4e2aMySQL\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u6309\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u4e8b\u52a1A\u548c\u4e8b\u52a1B\uff1a\n\n\n\u65f6\u523b\n\u4e8b\u52a1A\n\u4e8b\u52a1B\n\n\n\n\n1\nSET TRANSACTION ISOLATION LEVEL REPEATABLE READ;\nSET TRANSACTION ISOLATION LEVEL REPEATABLE READ;\n\n\n2\nBEGIN;\nBEGIN;\n\n\n3\n\nSELECT * FROM students WHERE id = 99;\n\n\n4\nINSERT INTO students (id, name) VALUES (99, 'Bob');\n\n\n\n5\nCOMMIT;\n\n\n\n6\n\nSELECT * FROM students WHERE id = 99;\n\n\n7\n\nUPDATE students SET name = 'Alice' WHERE id = 99;\n\n\n8\n\nSELECT * FROM students WHERE id = 99;\n\n\n9\n\nCOMMIT;\n\n\n\n\u4e8b\u52a1B\u5728\u7b2c3\u6b65\u7b2c\u4e00\u6b21\u8bfb\u53d6id=99\u7684\u8bb0\u5f55\u65f6\uff0c\u8bfb\u5230\u7684\u8bb0\u5f55\u4e3a\u7a7a\uff0c\u8bf4\u660e\u4e0d\u5b58\u5728id=99\u7684\u8bb0\u5f55\u3002\u968f\u540e\uff0c\u4e8b\u52a1A\u5728\u7b2c4\u6b65\u63d2\u5165\u4e86\u4e00\u6761id=99\u7684\u8bb0\u5f55\u5e76\u63d0\u4ea4\u3002\u4e8b\u52a1B\u5728\u7b2c6\u6b65\u518d\u6b21\u8bfb\u53d6id=99\u7684\u8bb0\u5f55\u65f6\uff0c\u8bfb\u5230\u7684\u8bb0\u5f55\u4ecd\u7136\u4e3a\u7a7a\uff0c\u4f46\u662f\uff0c\u4e8b\u52a1B\u5728\u7b2c7\u6b65\u8bd5\u56fe\u66f4\u65b0\u8fd9\u6761\u4e0d\u5b58\u5728\u7684\u8bb0\u5f55\u65f6\uff0c\u7adf\u7136\u6210\u529f\u4e86\uff0c\u5e76\u4e14\uff0c\u4e8b\u52a1B\u5728\u7b2c8\u6b65\u518d\u6b21\u8bfb\u53d6id=99\u7684\u8bb0\u5f55\u65f6\uff0c\u8bb0\u5f55\u51fa\u73b0\u4e86\u3002\n\u53ef\u89c1\uff0c\u5e7b\u8bfb\u5c31\u662f\u6ca1\u6709\u8bfb\u5230\u7684\u8bb0\u5f55\uff0c\u4ee5\u4e3a\u4e0d\u5b58\u5728\uff0c\u4f46\u5176\u5b9e\u662f\u53ef\u4ee5\u66f4\u65b0\u6210\u529f\u7684\uff0c\u5e76\u4e14\uff0c\u66f4\u65b0\u6210\u529f\u540e\uff0c\u518d\u6b21\u8bfb\u53d6\uff0c\u5c31\u51fa\u73b0\u4e86\u3002\nSerializable\n\nSerializable\u662f\u6700\u4e25\u683c\u7684\u9694\u79bb\u7ea7\u522b\u3002\u5728Serializable\u9694\u79bb\u7ea7\u522b\u4e0b\uff0c\u6240\u6709\u4e8b\u52a1\u6309\u7167\u6b21\u5e8f\u4f9d\u6b21\u6267\u884c\uff0c\u56e0\u6b64\uff0c\u810f\u8bfb\u3001\u4e0d\u53ef\u91cd\u590d\u8bfb\u3001\u5e7b\u8bfb\u90fd\u4e0d\u4f1a\u51fa\u73b0\u3002\n\u867d\u7136Serializable\u9694\u79bb\u7ea7\u522b\u4e0b\u7684\u4e8b\u52a1\u5177\u6709\u6700\u9ad8\u7684\u5b89\u5168\u6027\uff0c\u4f46\u662f\uff0c\u7531\u4e8e\u4e8b\u52a1\u662f\u4e32\u884c\u6267\u884c\uff0c\u6240\u4ee5\u6548\u7387\u4f1a\u5927\u5927\u4e0b\u964d\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u4f1a\u6025\u5267\u964d\u4f4e\u3002\u5982\u679c\u6ca1\u6709\u7279\u522b\u91cd\u8981\u7684\u60c5\u666f\uff0c\u4e00\u822c\u90fd\u4e0d\u4f1a\u4f7f\u7528Serializable\u9694\u79bb\u7ea7\u522b\u3002\n\u9ed8\u8ba4\u9694\u79bb\u7ea7\u522b\n\u5982\u679c\u6ca1\u6709\u6307\u5b9a\u9694\u79bb\u7ea7\u522b\uff0c\u6570\u636e\u5e93\u5c31\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\u3002\u5728MySQL\u4e2d\uff0c\u5982\u679c\u4f7f\u7528InnoDB\uff0c\u9ed8\u8ba4\u7684\u9694\u79bb\u7ea7\u522b\u662fRepeatable Read\u3002\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "MySQL", "slug": "MySQL", "permalink": "/Xuxx_Blogs/tag/MySQL/"}, {"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/Xuxx_Blogs/tag/\u6570\u636e\u5e93/"}]}, {"title": "\u5b9e\u7528SQL\u8bed\u53e5", "date": "2020-04-15T22:25:00-00.00", "path": "/Xuxx_Blogs/archives/bj06/", "text": "\u5728\u7f16\u5199SQL\u65f6\uff0c\u7075\u6d3b\u8fd0\u7528\u4e00\u4e9b\u6280\u5de7\uff0c\u53ef\u4ee5\u5927\u5927\u7b80\u5316\u7a0b\u5e8f\u903b\u8f91\u3002\n\u63d2\u5165\u6216\u66ff\u6362\n\u5982\u679c\u5e0c\u671b\u63d2\u5165\u4e00\u6761\u65b0\u8bb0\u5f55\uff08INSERT\uff09\uff0c\u4f46\u5982\u679c\u8bb0\u5f55\u5df2\u7ecf\u5b58\u5728\uff0c\u5c31\u5148\u5220\u9664\u539f\u8bb0\u5f55\uff0c\u518d\u63d2\u5165\u65b0\u8bb0\u5f55\u3002\u6b64\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528REPLACE\u8bed\u53e5\uff0c\u8fd9\u6837\u5c31\u4e0d\u5fc5\u5148\u67e5\u8be2\uff0c\u518d\u51b3\u5b9a\u662f\u5426\u5148\u5220\u9664\u518d\u63d2\u5165\uff1a\n\nREPLACE INTO students (id, class_id, name, gender, score) VALUES (1, 1, '\u5c0f\u660e', 'F', 99);\n\u82e5id=1\u7684\u8bb0\u5f55\u4e0d\u5b58\u5728\uff0cREPLACE\u8bed\u53e5\u5c06\u63d2\u5165\u65b0\u8bb0\u5f55\uff0c\u5426\u5219\uff0c\u5f53\u524did=1\u7684\u8bb0\u5f55\u5c06\u88ab\u5220\u9664\uff0c\u7136\u540e\u518d\u63d2\u5165\u65b0\u8bb0\u5f55\u3002\n\u63d2\u5165\u6216\u66f4\u65b0\n\u5982\u679c\u5e0c\u671b\u63d2\u5165\u4e00\u6761\u65b0\u8bb0\u5f55\uff08INSERT\uff09\uff0c\u4f46\u5982\u679c\u8bb0\u5f55\u5df2\u7ecf\u5b58\u5728\uff0c\u5c31\u66f4\u65b0\u8be5\u8bb0\u5f55\uff0c\u6b64\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528INSERT INTO ... ON DUPLICATE KEY UPDATE ...\u8bed\u53e5\uff1a\n\nINSERT INTO students (id, class_id, name, gender, score) VALUES (1, 1, '\u5c0f\u660e', 'F', 99) ON DUPLICATE KEY UPDATE name='\u5c0f\u660e', gender='F', score=99;\n\u82e5id=1\u7684\u8bb0\u5f55\u4e0d\u5b58\u5728\uff0cINSERT\u8bed\u53e5\u5c06\u63d2\u5165\u65b0\u8bb0\u5f55\uff0c\u5426\u5219\uff0c\u5f53\u524did=1\u7684\u8bb0\u5f55\u5c06\u88ab\u66f4\u65b0\uff0c\u66f4\u65b0\u7684\u5b57\u6bb5\u7531UPDATE\u6307\u5b9a\u3002\n\u63d2\u5165\u6216\u5ffd\u7565\n\u5982\u679c\u5e0c\u671b\u63d2\u5165\u4e00\u6761\u65b0\u8bb0\u5f55\uff08INSERT\uff09\uff0c\u4f46\u5982\u679c\u8bb0\u5f55\u5df2\u7ecf\u5b58\u5728\uff0c\u5c31\u5565\u4e8b\u4e5f\u4e0d\u5e72\u76f4\u63a5\u5ffd\u7565\uff0c\u6b64\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528INSERT IGNORE INTO ...\u8bed\u53e5\uff1a\n\nINSERT IGNORE INTO students (id, class_id, name, gender, score) VALUES (1, 1, '\u5c0f\u660e', 'F', 99);\n\u82e5id=1\u7684\u8bb0\u5f55\u4e0d\u5b58\u5728\uff0cINSERT\u8bed\u53e5\u5c06\u63d2\u5165\u65b0\u8bb0\u5f55\uff0c\u5426\u5219\uff0c\u4e0d\u6267\u884c\u4efb\u4f55\u64cd\u4f5c\u3002\n\u5feb\u7167\n\u5982\u679c\u60f3\u8981\u5bf9\u4e00\u4e2a\u8868\u8fdb\u884c\u5feb\u7167\uff0c\u5373\u590d\u5236\u4e00\u4efd\u5f53\u524d\u8868\u7684\u6570\u636e\u5230\u4e00\u4e2a\u65b0\u8868\uff0c\u53ef\u4ee5\u7ed3\u5408CREATE TABLE\u548cSELECT\uff1a\n\n-- \u5bf9class_id=1\u7684\u8bb0\u5f55\u8fdb\u884c\u5feb\u7167\uff0c\u5e76\u5b58\u50a8\u4e3a\u65b0\u8868students_of_class1:\nCREATE TABLE students_of_class1 SELECT * FROM students WHERE class_id=1;\n\u65b0\u521b\u5efa\u7684\u8868\u7ed3\u6784\u548cSELECT\u4f7f\u7528\u7684\u8868\u7ed3\u6784\u5b8c\u5168\u4e00\u81f4\u3002\n\u5199\u5165\u67e5\u8be2\u7ed3\u679c\u96c6\n\u5982\u679c\u67e5\u8be2\u7ed3\u679c\u96c6\u9700\u8981\u5199\u5165\u5230\u8868\u4e2d\uff0c\u53ef\u4ee5\u7ed3\u5408INSERT\u548cSELECT\uff0c\u5c06SELECT\u8bed\u53e5\u7684\u7ed3\u679c\u96c6\u76f4\u63a5\u63d2\u5165\u5230\u6307\u5b9a\u8868\u4e2d\u3002\n\u4f8b\u5982\uff0c\u521b\u5efa\u4e00\u4e2a\u7edf\u8ba1\u6210\u7ee9\u7684\u8868statistics\uff0c\u8bb0\u5f55\u5404\u73ed\u7684\u5e73\u5747\u6210\u7ee9\uff1a\n\nCREATE TABLE statistics (\n    id BIGINT NOT NULL AUTO_INCREMENT,\n    class_id BIGINT NOT NULL,\n    average DOUBLE NOT NULL,\n    PRIMARY KEY (id)\n);\n\u7136\u540e\uff0c\u5c31\u53ef\u4ee5\u7528\u4e00\u6761\u8bed\u53e5\u5199\u5165\u5404\u73ed\u7684\u5e73\u5747\u6210\u7ee9\uff1a\n\nINSERT INTO statistics (class_id, average) SELECT class_id, AVG(score) FROM students GROUP BY class_id;\n\u786e\u4fddINSERT\u8bed\u53e5\u7684\u5217\u548cSELECT\u8bed\u53e5\u7684\u5217\u80fd\u4e00\u4e00\u5bf9\u5e94\uff0c\u5c31\u53ef\u4ee5\u5728statistics\u8868\u4e2d\u76f4\u63a5\u4fdd\u5b58\u67e5\u8be2\u7684\u7ed3\u679c\uff1a\n\n&gt; SELECT * FROM statistics;\n+----+----------+--------------+\n| id | class_id | average      |\n+----+----------+--------------+\n|  1 |        1 |         86.5 |\n|  2 |        2 | 73.666666666 |\n|  3 |        3 | 88.333333333 |\n+----+----------+--------------+\n3 rows in set (0.00 sec)\n\u5f3a\u5236\u4f7f\u7528\u6307\u5b9a\u7d22\u5f15\n\u5728\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u4f1a\u81ea\u52a8\u5206\u6790\u67e5\u8be2\u8bed\u53e5\uff0c\u5e76\u9009\u62e9\u4e00\u4e2a\u6700\u5408\u9002\u7684\u7d22\u5f15\u3002\u4f46\u662f\u5f88\u591a\u65f6\u5019\uff0c\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u67e5\u8be2\u4f18\u5316\u5668\u5e76\u4e0d\u4e00\u5b9a\u603b\u662f\u80fd\u4f7f\u7528\u6700\u4f18\u7d22\u5f15\u3002\u5982\u679c\u77e5\u9053\u5982\u4f55\u9009\u62e9\u7d22\u5f15\uff0c\u53ef\u4ee5\u4f7f\u7528FORCE INDEX\u5f3a\u5236\u67e5\u8be2\u4f7f\u7528\u6307\u5b9a\u7684\u7d22\u5f15\u3002\u4f8b\u5982\uff1a\n\n&gt; SELECT * FROM students FORCE INDEX (idx_class_id) WHERE class_id = 1 ORDER BY id DESC;\n\u6307\u5b9a\u7d22\u5f15\u7684\u524d\u63d0\u662f\u7d22\u5f15idx_class_id\u5fc5\u987b\u5b58\u5728\u3002\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "MySQL", "slug": "MySQL", "permalink": "/Xuxx_Blogs/tag/MySQL/"}, {"name": "\u6570\u636e\u5e93", "slug": "\u6570\u636e\u5e93", "permalink": "/Xuxx_Blogs/tag/\u6570\u636e\u5e93/"}]}, {"title": "SpringBoot\u4e2d\u5e38\u7528\u7684JSON\u89e3\u6790\u65b9\u6848", "date": "2020-01-02T03:50:00-00.00", "path": "/Xuxx_Blogs/archives/bj05/", "text": "\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e        -- SpringBoot\n\u672c\u6587\u6574\u7406\u4e86\u4e00\u4e0bSpringBoot\u4e2d\u5e38\u7528\u7684JSON\u89e3\u6790\u65b9\u6848\n\nHttpMessageConverter \uff0c\u8fd9\u662f\u4e00\u4e2a\u6d88\u606f\u8f6c\u6362\u5de5\u5177\uff0c\u6709\u4e24\u65b9\u9762\u7684\u529f\u80fd\uff1a\n\n\u5c06\u670d\u52a1\u7aef\u8fd4\u56de\u7684\u5bf9\u8c61\u5e8f\u5217\u5316\u6210 JSON \u5b57\u7b26\u4e32\n\u5c06\u524d\u7aef\u4f20\u6765\u7684 JSON \u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u6210 Java \u5bf9\u8c61\n\n\u6240\u6709\u7684 JSON \u751f\u6210\u90fd\u79bb\u4e0d\u5f00\u76f8\u5173\u7684 HttpMessageConverter\nSpringMVC \u81ea\u52a8\u914d\u7f6e\u4e86 Jackson \u548c Gson \u7684 HttpMessageConverter\uff0cSpring Boot \u4e2d\u53c8\u5bf9\u6b64\u505a\u4e86\u81ea\u52a8\u5316\u914d\u7f6e\uff1a\n\norg.springframework.boot.autoconfigure.http.JacksonHttpMessageConvertersConfiguration\n\norg.springframework.boot.autoconfigure.http.GsonHttpMessageConvertersConfiguration\n\n\n\u6240\u4ee5\uff0c\u5982\u679c\u7528\u6237\u4f7f\u7528 jackson \u548c gson \u7684\u8bdd\uff0c==\u6ca1\u6709\u5176\u4ed6\u989d\u5916\u914d\u7f6e==\uff0c\u5219\u53ea\u9700\u8981\u6dfb\u52a0\u4f9d\u8d56\u5373\u53ef\u3002\n2. Jackson\n1.1 \u5f15\u5165web\u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n    &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n1.2 \u7f16\u5199bean\npublic class User {\n    private Integer id;\n    private String username;\n    private String address;\n    //set/get/toString\u7565\n}\n\n1.3 \u7f16\u5199controller\n@RestController// @Controller + @ResponseBody\npublic class UserController {\n\n    @GetMapping(&quot;/user&quot;)\n    public List&lt;User&gt; getAllUaer() {\n        List&lt;User&gt; users = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; 10; i++) {\n            User user = new User();\n            user.setId(i);\n            user.setUsername(&quot;Xuxx&gt;&gt;&quot; + i);\n            user.setAddress(&quot;\u4e2d\u56fd&gt;&gt;&quot; + i);\n            users.add(user);\n        }\n        return users;\n    }\n}\n\n1.4 \u6d4b\u8bd5\uff0c\u67e5\u770b\u7ed3\u679c\n[\n  {\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;,\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;\n  },...\n]\n\n3. \u914d\u7f6eJackson\n1.\u95ee\u9898 - \u5355\u72ec\u914d\u7f6e Jackson\n\u4fee\u6539bean\npublic class User {\n    private Integer id;\n    private String username;\n    private String address;\n    @JsonFormat(pattern = &quot;yyyy-MM-dd&quot;)\n    private Date birthday;\n    //set/get/toString\u7565\n}\n\n\u8bbf\u95ee\u7ed3\u679c\n[\n  {\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;,\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;,\n    &quot;birthday&quot;: &quot;2019-12-30&quot;\n  },...\n]\n\n2.\u89e3\u51b3 - Jackson\u7684\u5168\u5c40\u914d\u7f6e\n\u5148\u6ce8\u91ca\u4e0a\u4e00\u6b65\u4e2d\u7684@JsonFormat(pattern = \"yyyy-MM-dd\")\n2.1 \u914d\u7f6eMappingJackson2HttpMessageConverter\n\u65b0\u5efa\u914d\u7f6e\u7c7bWebMvcConfig.java\n@Configuration\npublic class WebMvcConfig {\n\n    @Bean\n    MappingJackson2HttpMessageConverter jackson2HttpMessageConverter() {\n        MappingJackson2HttpMessageConverter converter = new MappingJackson2HttpMessageConverter();\n        //\u914d\u7f6eJackson         \u6b64\u5904\u53ef\u914d\u7f6e\u5f88\u591a\u4e1c\u897f\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.setDateFormat(new SimpleDateFormat(&quot;yyyy\u5e74MM\u6708dd\u65e5&quot;));\n\n        //\u5c06\u914d\u7f6e\u597d\u7684Jackson\u6ce8\u5165\u56deMappingJackson2HttpMessageConverter\n        converter.setObjectMapper(mapper);\n        return converter;\n    }\n}\n\n\u518d\u6b21\u6d4b\u8bd5\uff0c\u7ed3\u679c\u4e3a\n[\n  {\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;,\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;,\n    &quot;birthday&quot;: &quot;2019\u5e7412\u670831\u65e5&quot;\n  },...\n]\n\n\u4e0a\u9762\u53ef\u4ee5\u770b\u5230\u6b64\u65f6\u6211\u53ea\u9700\u8981\u914d\u7f6e ObjectMapper\uff0c\u4e0eMappingJackson2HttpMessageConverter\u6ca1\u592a\u5927\u5173\u7cfb\uff08\u5f53\u7136\uff0c\u5b83\u6709\u5b83\u7684\u7528\u5904\uff0c\u4f8b\u5982\u8fd9\u4e9b\uff1a\uff09\n\u6240\u4ee5\u6211\u53ef\u4ee5\u91c7\u53d6\u53e6\u4e00\u79cd\u65b9\u5f0f\u6765\u914d\u7f6eJackson\u2014\u2014\u76f4\u63a5\u6ce8\u5165\u81ea\u5df1\u5b9a\u4e49\u7684ObjectMapper\uff0c\u66ff\u6362\u6389springboot\u4e2d\u81ea\u52a8\u914d\u7f6e\u7684ObjectMapper\u3002\n\u8fd9\u91cc\u6211\u4eec\u53ef\u4ee5\u53d1\u73b0\uff0c\u6211\u4eec\u662f\u53ef\u4ee5\u6ce8\u5165\u81ea\u5df1\u914d\u7f6e\u7684\u7c7b\u6765\u66ff\u6362\u6389springboot\u4e2d\u81ea\u52a8\u914d\u7f6e\u7684\u7c7b\u7684\uff0c\u4e5f\u5c31\u662fspringboot\u4e2d\u7684\u201c\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e \u201d\u3002\n\n2.2 \u76f4\u63a5\u914d\u7f6eObjectMapper\n\u6ce8\u91ca\u4e0a\u4e00\u6b65\u7684\u914d\u7f6e\uff0c\u4fee\u6539\u914d\u7f6e\u7c7b\u4e3a\n@Configuration\npublic class WebMvcConfig {\n   @Bean\n    ObjectMapper objectMapper() {\n        ObjectMapper mapper = new ObjectMapper();\n        mapper.setDateFormat(new SimpleDateFormat(&quot;yyyy/MM/dd&quot;));\n        return mapper;\n    }\n}\n\n\u518d\u6b21\u6d4b\u8bd5\uff0c\u7ed3\u679c\u4e3a\n[\n  {\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;,\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;,\n    &quot;birthday&quot;: &quot;2019/12/31&quot;\n  },...\n]\n\n3. Gson\n1. \u57fa\u672c\u4f7f\u7528\n\u81ea\u52a8\u5316\u914d\u7f6e\u7c7b\uff1a\norg.springframework.boot.autoconfigure.http.Gson Configuration\norg.springframework.boot.autoconfigure.gson.GsonAutoConfiguration\n\n1. \u914d\u7f6e\u4f9d\u8d56\n1.1 \u6392\u9664\u9ed8\u8ba4\u7684Jackson\n&lt;dependency&gt;\n        &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n        &lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;\n        &lt;!--\u6392\u9664\u9ed8\u8ba4\u7684Jackson--&gt;\n        &lt;exclusions&gt;\n            &lt;exclusion&gt;\n                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;\n                &lt;artifactId&gt;spring-boot-starter-json&lt;/artifactId&gt;\n            &lt;/exclusion&gt;\n        &lt;/exclusions&gt;\n&lt;/dependency&gt;\n\n1.2 \u5f15\u5165Gson\u4f9d\u8d56\n&lt;!--Gson--&gt;\n&lt;dependency&gt;\n    &lt;groupId&gt;com.google.code.gson&lt;/groupId&gt;\n    &lt;artifactId&gt;gson&lt;/artifactId&gt;\n&lt;/dependency&gt;\n\n2. Bean\npublic class User {\n    private Integer id;\n    private String username;\n    private String address;\n    private Date birthday;\n    //set/get/toString\u7565\n}\n\n3. Controller\n@RestController// @Controller + @ResponseBody\npublic class UserController {\n\n    @GetMapping(&quot;/user&quot;)\n    public List&lt;User&gt; getAllUaer() {\n        List&lt;User&gt; users = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; 10; i++) {\n            User user = new User();\n            user.setId(i);\n            user.setUsername(&quot;Xuxx&gt;&gt;&quot; + i);\n            user.setAddress(&quot;\u4e2d\u56fd&gt;&gt;&quot; + i);\n            user.setBirthday(new Date());\n            users.add(user);\n        }\n        return users;\n    }\n}\n\n4.\u6d4b\u8bd5\u7ed3\u679c\n[\n  {\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;,\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;,\n    &quot;birthday&quot;: &quot;Dec 31, 2019 3:37:48 AM&quot;\n  },...\n]\n\n2. Gson\u914d\u7f6e\n1.\u914d\u7f6eGsonHttpMessageConverter\n1.1 \u521b\u5efa\u914d\u7f6e\u7c7b WebMvcConfig\n\u4e0e\u914d\u7f6eJackson\u7c7b\u4f3c\n@Configuration\npublic class WebMvcConfig {\n\n    @Bean\n    GsonHttpMessageConverter gsonHttpMessageConverter() {\n        GsonHttpMessageConverter converter = new GsonHttpMessageConverter();\n        converter.setGson(new GsonBuilder().setDateFormat(&quot;yyyy-MM-dd&quot;).create());\n        return converter;\n    }\n\n}\n\n1.2 \u6d4b\u8bd5\u7ed3\u679c\n[\n  {\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;,\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;,\n    &quot;birthday&quot;: &quot;2019-12-31&quot;\n  },...\n]\n\n2.\u76f4\u63a5\u914d\u7f6eGson\n2.1 \u914d\u7f6e\u7c7b\n@Configuration\npublic class WebMvcConfig {\n    @Bean\n    Gson gson() {\n        return new GsonBuilder().setDateFormat(&quot;yyyy\u5e74MM\u6708dd\u65e5&quot;).create();\n    }\n}\n\n2.2 \u6d4b\u8bd5\n[\n  {\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;,\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;,\n    &quot;birthday&quot;: &quot;2019\u5e7412\u670831\u65e5&quot;\n  },...\n]\n\n4. Fastjson\n1. \u4f9d\u8d56\n&lt;dependency&gt;\n    &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n    &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n    &lt;version&gt;1.2.49&lt;/version&gt;\n&lt;/dependency&gt;\n\nBean\u548cController\u90fd\u4e0e\u4e0a\u4f8b\u76f8\u540c\n2.\u914d\u7f6e\u7c7b\nFastjson\u5fc5\u987b\u81ea\u5df1\u624b\u52a8\u63d0\u4f9bHttpMessageConverter\n@Configuration\npublic class WebMvcConfig {\n    /*Fastjson\u914d\u7f6e*/\n    @Bean\n    //Fastjson\u5fc5\u987b\u81ea\u5df1\u624b\u52a8\u63d0\u4f9bHttpMessageConverter\n    FastJsonHttpMessageConverter fastJsonHttpMessageConverter() {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        converter.setDefaultCharset(Charset.forName(&quot;utf8&quot;));//\u9ed8\u8ba4\u7f16\u7801\u65f6\u4e2d\u6587\u4e71\u7801\n        FastJsonConfig fastJsonConfig = new FastJsonConfig();\n        fastJsonConfig.setDateFormat(&quot;yyyy/MM/dd&quot;);//\u8bbe\u7f6e\u65e5\u671f\u683c\u5f0f\n        converter.setFastJsonConfig(fastJsonConfig);\n        return converter;\n    }\n\n3.\u6d4b\u8bd5\u7ed3\u679c\n[\n  {\n    &quot;address&quot;: &quot;\u4e2d\u56fd&gt;&gt;0&quot;,\n    &quot;birthday&quot;: &quot;2020/01/02&quot;,\n    &quot;id&quot;: 0,\n    &quot;username&quot;: &quot;Xuxx&gt;&gt;0&quot;\n  },..\n]\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "SpringBoot\u57fa\u7840\u914d\u7f6e/\u6ce8\u89e3", "date": "2019-12-30T00:58:00-00.00", "path": "/Xuxx_Blogs/archives/bj03/", "text": "1. \u5c5e\u6027\u6ce8\u5165\n1. @Value\n\u5b9e\u4f53\u7c7b\n@Component\npublic class Book {\n\n    @Value(&quot;${book.id}&quot;)\n    private Long id;\n    @Value(&quot;${book.name}&quot;)\n    private String name;\n    @Value(&quot;${book.author}&quot;)\n    private String author;\n    //get/set/toString\u65b9\u6cd5\u7565\n\n\u914d\u7f6e\u6587\u4ef6\nbook.id=1\nbook.name=Java\u5f00\u53d1\nbook.author=Xuxx\n\n\u6d4b\u8bd5\n@Autowired\n    Book book;\n\n    @Test\n    void contextLoads() {\n        System.out.println(book);\n    }\n\n2.  @PropertySource\n\u521b\u5efa\u914d\u7f6e\u6587\u4ef6book.properties\nbook.id=1\nbook.name=Java\u5f00\u53d12.0\nbook.author=Xuxx\n\n\u5b9e\u4f53\u7c7b\n@Component\n@PropertySource(value = &quot;classpath:book.properties&quot;)\npublic class Book {\n\n    @Value(&quot;${book.id}&quot;)\n    private Long id;\n    @Value(&quot;${book.name}&quot;)\n    private String name;\n    @Value(&quot;${book.author}&quot;)\n    private String author;\n    //get/set/toString\u65b9\u6cd5\u7565\n\n\u6d4b\u8bd5\n@Autowired\n    Book book;\n\n    @Test\n    void contextLoads() {\n        System.out.println(book);\n    }\n\n3. \u7c7b\u578b\u5b89\u5168\u7684\u5c5e\u6027\u6ce8\u5165  @ConfigurationProperties\n\u5c5e\u4e8espringboot\n\u521b\u5efa\u914d\u7f6e\u6587\u4ef6book.properties\nbook.id=1\nbook.name=Java\u5f00\u53d13.0\nbook.author=Xuxx\n\n\u5b9e\u4f53\u7c7b\n@Component\n@PropertySource(value = &quot;classpath:book.properties&quot;)\n@ConfigurationProperties(prefix = &quot;book&quot;)\npublic class Book {\n    private Long id;\n    private String name;\n    private String author;\n    //get/set/toString\u65b9\u6cd5\u7565\n\n\u6d4b\u8bd5\n@Autowired\n    Book book;\n\n    @Test\n    void contextLoads() {\n        System.out.println(book);\n    }\n\n2. yaml\u5c5e\u6027\u6ce8\u5165\n\u5b9e\u4f53\u7c7b\n@Component\n@ConfigurationProperties(prefix = &quot;student&quot;)\npublic class Student {\n    private Long id;\n    private String name;\n    private int age;\n    //get/set/toString\u65b9\u6cd5\u7565\n\n\u914d\u7f6e\u6587\u4ef6 application.yaml\n\u5907\u6ce8\uff1aspringboot2.16\u6682\u65f6\u4e0d\u652f\u6301\u81ea\u5b9a\u4e49yaml\nstudent:\n  id: 1\n  name: xuxx\n  age: 21\n\n\u6d4b\u8bd5\n@Autowired\n    Student student;\n\n    @Test\n    void contextLoads02() {\n        System.out.println(student);\n    }\n\n1. \u6570\u7ec4\n\u5b9e\u4f53\u7c7b\n@Component\n@ConfigurationProperties(prefix = &quot;class&quot;)\npublic class Class {\n    private String class_name;\n     private List&lt;String&gt; teachers;\n    //get/set/toString\u65b9\u6cd5\u7565\n\n\u914d\u7f6e\u6587\u4ef6 application.yaml\nclass:\n  class_name: java\u4e00\u73ed\n  teachers:\n    - \u5f20\u4e09\n    - \u674e\u56db\n    - \u738b\u4e94\n\n2. \u6570\u7ec4+\u5bf9\u8c61\n\u5b9e\u4f53\u7c7b\n@Component\n@ConfigurationProperties(prefix = &quot;class&quot;)\npublic class Class {\n    private String class_name;\n    private List&lt;String&gt; teachers;\n    private List&lt;Student&gt; students;\n    //get/set/toString\u65b9\u6cd5\u7565\n\n\u914d\u7f6e\u6587\u4ef6 application.yaml\nclass:\n  class_name: java\u4e00\u73ed\n  teachers:\n    - \u5f20\u4e09\n    - \u674e\u56db\n    - \u738b\u4e94\n  students:\n    - id: 1\n      name: xuxx_01\n      age: 18\n    - id: 2\n      name: xuxx_02\n      age: 19\n\n3. Profile\n1. properties \u914d\u7f6e\n\u4e00\u4e2a\u5e94\u7528\u4e3a\u4e86\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\u5de5\u4f5c\uff0c\u5e38\u5e38\u4f1a\u6709\u4e0d\u540c\u7684\u914d\u7f6e\uff0c\u4ee3\u7801\u903b\u8f91\u5904\u7406\u3002Spring Boot \u5bf9\u6b64\u63d0\u4f9b\u4e86\u7b80\u4fbf\u7684\u652f\u6301\u3002\n\u5173\u952e\u8bcd\uff1a @Profile\u3001spring.profiles.active\n\u5047\u8bbe\uff0c\u4e00\u4e2a\u5e94\u7528\u7684\u5de5\u4f5c\u73af\u5883\u6709\uff1adev\u3001test\u3001prod\n\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u6dfb\u52a0 4 \u4e2a\u914d\u7f6e\u6587\u4ef6\uff1a\n\napplcation.properties - \u516c\u5171\u914d\u7f6e\napplication-dev.properties - \u5f00\u53d1\u73af\u5883\u914d\u7f6e\napplication-test.properties - \u6d4b\u8bd5\u73af\u5883\u914d\u7f6e\napplication-prod.properties - \u751f\u4ea7\u73af\u5883\u914d\u7f6e\n\n\u5728 applcation.properties \u6587\u4ef6\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u914d\u7f6e\u6765\u6fc0\u6d3b profile\uff1a\n\nspring.profiles.active = test\n2. yml \u914d\u7f6e\n\u4e0e properties \u6587\u4ef6\u7c7b\u4f3c\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u6dfb\u52a0 4 \u4e2a\u914d\u7f6e\u6587\u4ef6\uff1a\n\napplcation.yml - \u516c\u5171\u914d\u7f6e\napplication-dev.yml - \u5f00\u53d1\u73af\u5883\u914d\u7f6e\napplication-test.yml - \u6d4b\u8bd5\u73af\u5883\u914d\u7f6e\napplication-prod.yml - \u751f\u4ea7\u73af\u5883\u914d\u7f6e\n\n\u5728 applcation.yml \u6587\u4ef6\u4e2d\u53ef\u4ee5\u901a\u8fc7\u4ee5\u4e0b\u914d\u7f6e\u6765\u6fc0\u6d3b profile\uff1a\n\nspring:\n  profiles:\n    active: prod\n\u6b64\u5916\uff0cyml \u6587\u4ef6\u4e5f\u53ef\u4ee5\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b8c\u6210\u6240\u6709 profile \u7684\u914d\u7f6e\uff1a\n\n# \u6fc0\u6d3b prod\nspring:\n  profiles:\n    active: prod\n# \u4e5f\u53ef\u4ee5\u540c\u65f6\u6fc0\u6d3b\u591a\u4e2a profile\n# spring.profiles.active: prod,proddb,prodlog\n---\n# dev \u914d\u7f6e\nspring:\n  profiles: dev\n\n# \u7565\u53bb\u914d\u7f6e\n\n---\nspring:\n  profiles: test\n\n# \u7565\u53bb\u914d\u7f6e\n\n---\nspring.profiles: prod\nspring.profiles.include:\n  - proddb\n  - prodlog\n\n---\nspring:\n  profiles: proddb\n\n# \u7565\u53bb\u914d\u7f6e\n\n---\nspring:\n  profiles: prodlog\n# \u7565\u53bb\u914d\u7f6e\n\u6ce8\u610f\uff1a\u4e0d\u540c profile \u4e4b\u95f4\u901a\u8fc7 --- \u5206\u5272\n3. \u4f7f\u7528 @Profile\n\u4f7f\u7528 @Profile \u6ce8\u89e3\u53ef\u4ee5\u6307\u5b9a\u7c7b\u6216\u65b9\u6cd5\u5728\u7279\u5b9a\u7684 Profile \u73af\u5883\u751f\u6548\u3002\n\u4fee\u9970\u7c7b\n\n@Configuration\n@Profile(\"production\")\npublic class JndiDataConfig {\n\n    @Bean(destroyMethod=\"\")\n    public DataSource dataSource() throws Exception {\n        Context ctx = new InitialContext();\n        return (DataSource) ctx.lookup(\"java:comp/env/jdbc/datasource\");\n    }\n}\n\u4fee\u9970\u6ce8\u89e3\n\n@Target(ElementType.TYPE)\n@Retention(RetentionPolicy.RUNTIME)\n@Profile(\"production\")\npublic @interface Production {\n}\n\u4fee\u9970\u65b9\u6cd5\n\n@Configuration\npublic class AppConfig {\n\n    @Bean(\"dataSource\")\n    @Profile(\"development\")\n    public DataSource standaloneDataSource() {\n        return new EmbeddedDatabaseBuilder()\n            .setType(EmbeddedDatabaseType.HSQL)\n            .addScript(\"classpath:com/bank/config/sql/schema.sql\")\n            .addScript(\"classpath:com/bank/config/sql/test-data.sql\")\n            .build();\n    }\n\n    @Bean(\"dataSource\")\n    @Profile(\"production\")\n    public DataSource jndiDataSource() throws Exception {\n        Context ctx = new InitialContext();\n        return (DataSource) ctx.lookup(\"java:comp/env/jdbc/datasource\");\n    }\n}\n4. \u6fc0\u6d3b profile\u7684\u65b9\u5f0f\n\u63d2\u4ef6\u6fc0\u6d3b profile\n\nspring-boot:run -Drun.profiles=prod\nmain \u65b9\u6cd5\u6fc0\u6d3b profile\n\n--spring.profiles.active=prod\njar \u6fc0\u6d3b profile\n\njava -jar -Dspring.profiles.active=prod *.jar\n\u5728 Java \u4ee3\u7801\u4e2d\u6fc0\u6d3b profile\n\u76f4\u63a5\u6307\u5b9a\u73af\u5883\u53d8\u91cf\u6765\u6fc0\u6d3b profile\uff1a\n\nSystem.setProperty(\"spring.profiles.active\", \"test\");\n\u5728 Spring \u5bb9\u5668\u4e2d\u6fc0\u6d3b profile\uff1a\n\nAnnotationConfigApplicationContext ctx = new AnnotationConfigApplicationContext();\nctx.getEnvironment().setActiveProfiles(\"development\");\nctx.register(SomeConfig.class, StandaloneDataConfig.class, JndiDataConfig.class);\nctx.refresh();\n4. Banner\n\u53ea\u8981\u4f60\u5728 resources \u76ee\u5f55\u4e0b\u653e\u7f6e\u540d\u4e3a banner.txt\u3001banner.gif \u3001banner.jpg \u6216 banner.png \u7684\u6587\u4ef6\uff0cSpring Boot \u4f1a\u81ea\u52a8\u52a0\u8f7d\uff0c\u5e76\u5c06\u5176\u4f5c\u4e3a\u542f\u52a8\u65f6\u6253\u5370\u7684 logo\u3002\n\n\u5bf9\u4e8e\u6587\u672c\u6587\u4ef6\uff0cSpring Boot \u4f1a\u5c06\u5176\u76f4\u63a5\u8f93\u51fa\u3002\n\u5bf9\u4e8e\u56fe\u50cf\u6587\u4ef6\uff08 banner.gif \u3001banner.jpg \u6216 banner.png \uff09\uff0cSpring Boot \u4f1a\u5c06\u56fe\u50cf\u8f6c\u4e3a ASCII \u5b57\u7b26\uff0c\u7136\u540e\u8f93\u51fa\u3002\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/Xuxx_Blogs/tag/Spring/"}, {"name": "Spring Boot", "slug": "Spring Boot", "permalink": "/Xuxx_Blogs/tag/Spring Boot/"}]}, {"title": "Spring+Spring MVC\u73af\u5883\uff08Java\u914d\u7f6e\uff09\u642d\u5efa", "date": "2019-12-29T05:58:00-00.00", "path": "/Xuxx_Blogs/archives/bj02/", "text": "1.\u521b\u5efa\u5de5\u7a0b\n\u6dfb\u52a0spring-webmvc\u4f9d\u8d56\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.xuxx&lt;/groupId&gt;\n    &lt;artifactId&gt;java_ssm&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n            &lt;version&gt;5.2.2.RELEASE&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\n\n2.\u521b\u5efajava\u914d\u7f6e\u7c7b\n1. Spring\u914d\u7f6e\u7c7b\npackage com.xuxx.controller;\n\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.FilterType;\nimport org.springframework.stereotype.Controller;\n\n@Configuration\n@ComponentScan(basePackages = &quot;com.xuxx&quot;,useDefaultFilters = true,\n        excludeFilters = {@ComponentScan.Filter(type = FilterType.ANNOTATION,classes = Controller.class)})\npublic class SpringConfig {\n\n}\n\n2.SpringMvc\u914d\u7f6e\u7c7b\npackage com.xuxx.controller;\n\nimport org.springframework.context.annotation.ComponentScan;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.context.annotation.FilterType;\nimport org.springframework.stereotype.Controller;\n\n@Configuration\n@ComponentScan(basePackages = &quot;com.xuxx&quot;,useDefaultFilters = false,\n        includeFilters = {@ComponentScan.Filter(type = FilterType.ANNOTATION,classes = Controller.class)})\npublic class SpringMvcConfig {\n}\n\n3.web.xml \u914d\u7f6e\u7c7b\npackage com.xuxx.controller;\n\nimport org.springframework.web.WebApplicationInitializer;\nimport org.springframework.web.context.support.AnnotationConfigWebApplicationContext;\nimport org.springframework.web.servlet.DispatcherServlet;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.ServletRegistration;\n\n/**\n * web.xml \u914d\u7f6e\u7c7b\n */\npublic class WebInit implements WebApplicationInitializer {\n    @Override\n    public void onStartup(javax.servlet.ServletContext servletContext) throws ServletException {\n        AnnotationConfigWebApplicationContext context = new AnnotationConfigWebApplicationContext();\n        context.setServletContext(servletContext);\n        context.register(SpringMvcConfig.class);\n\n        ServletRegistration.Dynamic springmvc = servletContext.addServlet(&quot;springmvc&quot;, new DispatcherServlet(context));\n        springmvc.addMapping(&quot;/&quot;);\n        springmvc.setLoadOnStartup(1);\n    }\n}\n\n3.\u6d4b\u8bd5\n1.\u672a\u6ce8\u5165service\n1.controller\npackage com.xuxx.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\n@RestController\npublic class HelloController {\n\n    @GetMapping(value = &quot;/hello&quot;, produces = &quot;text/html;charset=utf-8&quot;)\n    public String hello() {\n        return &quot;hello \u671f\u672b\u8003\u8bd5&quot;;\n    }\n}\n\n\u6b64\u65f6\u6ca1\u95ee\u9898\n\u4f46\u662f\n2.\u6ce8\u5165service\n@RestController\npublic class HelloController {\n    @Autowired\n    HelloService helloService;\n    @GetMapping(value = &quot;/hello&quot;, produces = &quot;text/html;charset=utf-8&quot;)\n    public String hello() {\n        //        return &quot;hello \u671f\u672b\u8003\u8bd5&quot;;\n        return helloService.sayHello();\n    }\n}\n\n@Service\npublic class HelloService {\n    public String sayHello() {\n        return &quot;Hello \u671f\u672b\u8003\u8bd5&quot;;\n    }\n}\n\n\u6267\u884c\u62a5\u9519\n29-Dec-2019 05:01:12.457 \u4e25\u91cd [RMI TCP Connection(3)-127.0.0.1] org.springframework.web.servlet.FrameworkServlet.initServletBean Context initialization failed\n    org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name &#39;helloController&#39;: Unsatisfied dependency expressed through field &#39;helloService&#39;; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type &#39;com.xuxx.service.HelloService&#39; available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}\n\n\u539f\u56e0\u662fservice\u6ca1\u6709\u6ce8\u5165\u8fdb\u6765\uff0c\u6b64\u65f6\u53ea\u52a0\u8f7d\u4e86springmvc\u7684\u914d\u7f6e\u7c7b\uff0c\u8fd8\u9700\u8981\u52a0\u8f7dspring\u7684\u914d\u7f6e\u7c7b\n/**\n * spring mvc\u914d\u7f6e\u7c7b\n */\n@Configuration\n@ComponentScan(basePackages = &quot;com.xuxx&quot;,useDefaultFilters = false,\n        includeFilters = {@ComponentScan.Filter(type = FilterType.ANNOTATION,classes = Controller.class),\n                @ComponentScan.Filter(type = FilterType.ANNOTATION,classes = Configuration.class)})\npublic class SpringMvcConfig {\n}\n\n\u6b64\u65f6\u5728\u8fd0\u884c\u5c31\u6ca1\u95ee\u9898\u4e86\uff08\u6ce8\uff1a\u5f00\u53d1\u4e2d\u76f4\u63a5\u5168\u90e8\u6ce8\u5165\u5c31\u884c\uff0c\u4e0d\u7528\u518d\u5355\u72ec\u914d\u7f6e@ComponentScan.Filter\uff09\n4.\u6269\u5c55    WebMvcConfigurationSupport\n\u6ce8\uff1aWebMvcConfigurationSupport\u4e2d\u53ef\u4ee5\u914d\u7f6espringmvc.xml\u4e2d\u6240\u6709\u7684\u65b9\u6cd5\n\n1.\u914d\u7f6e\u9759\u6001\u8d44\u6e90\u89e3\u6790\u5668\n1.1.\u5728resources\u76ee\u5f55\u4e0b\u521b\u5efastatic\u76ee\u5f55\uff0c\u521b\u5efahello.HTML\n&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;title&gt;Title&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Hello world&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n\n1.2\u4fee\u6539SpringMvc\u914d\u7f6e\u7c7b,\u7ee7\u627fWebMvcConfigurationSupport\n@Configuration\n@ComponentScan(basePackages = &quot;com.xuxx&quot;, useDefaultFilters = false,\n        includeFilters = {@ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Controller.class),@ComponentScan.Filter(type = FilterType.ANNOTATION, classes = Configuration.class)})\npublic class SpringMvcConfig extends WebMvcConfigurationSupport {\n    @Override\n    protected void addResourceHandlers(ResourceHandlerRegistry registry) {    \n        registry.addResourceHandler(&quot;/static/**&quot;).addResourceLocations(&quot;classpath:/static/&quot;);\n\n    }\n}\n\n1.3\u8bbf\u95ee\u9759\u6001\u8d44\u6e90,\u6210\u529f\n\n2.\u914d\u7f6e\u62e6\u622a\u5668\n2.1\u81ea\u5b9a\u4e49\u62e6\u622a\u5668\uff0c\u7ee7\u627fHandlerInterceptor\uff0c\u91cd\u65b0\u5176\u65b9\u6cd5\npackage com.xuxx.interceptor;\n\nimport org.springframework.web.servlet.HandlerInterceptor;\nimport org.springframework.web.servlet.ModelAndView;\n\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class MyInterceptor implements HandlerInterceptor {\n    @Override\n    public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {\n        System.out.println(&quot;preHandle\u65b9\u6cd5\u6267\u884c\u4e86&quot;);\n        return true;\n    }\n\n    @Override\n    public void postHandle(HttpServletRequest request, HttpServletResponse response, Object handler, ModelAndView modelAndView) throws Exception {\n        System.out.println(&quot;postHandle\u65b9\u6cd5\u6267\u884c\u4e86&quot;);\n    }\n\n    @Override\n    public void afterCompletion(HttpServletRequest request, HttpServletResponse response, Object handler, Exception ex) throws Exception {\n        System.out.println(&quot;afterCompletion\u65b9\u6cd5\u6267\u884c\u4e86&quot;);\n    }\n}\n\n2.2\u914d\u7f6e\n/**\n * spring mvc\u914d\u7f6e\u7c7b\n */\n....\n    @Bean\n    MyInterceptor myInterceptor() {\n        return new MyInterceptor();\n    }\n\n    @Override\n    protected void addInterceptors(InterceptorRegistry registry) {\n        registry.addInterceptor(myInterceptor()).addPathPatterns(&quot;/**&quot;);\n    }\n\n2.3\u8bbf\u95ee\u4efb\u610f\u8def\u5f84\n\n3.\u914d\u7f6efastjson\n3.1\u6dfb\u52a0fastjson \u4f9d\u8d56\n&lt;dependency&gt;\n            &lt;groupId&gt;com.alibaba&lt;/groupId&gt;\n            &lt;artifactId&gt;fastjson&lt;/artifactId&gt;\n            &lt;version&gt;1.2.62&lt;/version&gt;\n&lt;/dependency&gt;\n\n3.2\u7f16\u5199controller\npackage com.xuxx.controller;\n\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport java.util.ArrayList;\nimport java.util.List;\n\n@RestController\npublic class JsonController {\n    @GetMapping(value = &quot;/data&quot;, produces = &quot;text/html;charset=utf-8&quot;)\n    public List&lt;String&gt; getData() {\n        ArrayList&lt;String&gt; list = new ArrayList&lt;&gt;();\n        for (int i = 0; i &lt; 10; i++) {\n            list.add(&quot;xuxx &gt;&gt; &quot; + i);\n        }\n        return list;\n    }\n}\n\n3.3\u914d\u7f6e\n/**\n * spring mvc\u914d\u7f6e\u7c7b\n */\n....\n    @Override\n    protected void configureMessageConverters(List&lt;HttpMessageConverter&lt;?&gt;&gt; converters) {\n        FastJsonHttpMessageConverter converter = new FastJsonHttpMessageConverter();\n        converters.add(converter);\n    }\n\n3.4\u6d4b\u8bd5\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/Xuxx_Blogs/tag/Spring/"}]}, {"title": "Spring+Spring MVC\u73af\u5883\uff08Xml\uff09\u642d\u5efa", "date": "2019-12-29T02:33:00-00.00", "path": "/Xuxx_Blogs/archives/bj01/", "text": "1.\u521b\u5efa\u5de5\u7a0b\n1.\u6dfb\u52a0spring-webmvc\u4f9d\u8d56\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;\n    &lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;\n\n    &lt;groupId&gt;com.xuxx&lt;/groupId&gt;\n    &lt;artifactId&gt;java_ssm&lt;/artifactId&gt;\n    &lt;version&gt;1.0-SNAPSHOT&lt;/version&gt;\n    &lt;packaging&gt;war&lt;/packaging&gt;\n\n    &lt;dependencies&gt;\n        &lt;dependency&gt;\n            &lt;groupId&gt;org.springframework&lt;/groupId&gt;\n            &lt;artifactId&gt;spring-webmvc&lt;/artifactId&gt;\n            &lt;version&gt;5.2.2.RELEASE&lt;/version&gt;\n        &lt;/dependency&gt;\n    &lt;/dependencies&gt;\n\n&lt;/project&gt;\n\n2.\u6253\u5f00\u9879\u76ee\u7ed3\u6784\uff0c\u6dfb\u52a0webapp\u76ee\u5f55\u548cweb.xml\u6587\u4ef6\n\n2.\u521b\u5efa\u914d\u7f6e\u6587\u4ef6\n1.spring\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans xmlns=&quot;http://www.springframework.org/schema/beans&quot;\n       xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n       xmlns:context=&quot;http://www.springframework.org/schema/context&quot;\n       xsi:schemaLocation=&quot;http://www.springframework.org/schema/beans\n       http://www.springframework.org/schema/beans/spring-beans.xsd\n       http://www.springframework.org/schema/context\n       https://www.springframework.org/schema/context/spring-context.xsd&quot;&gt;\n\n    &lt;!--\u5f00\u542f\u5305\u626b\u63cf \u6392\u9664\u52a0\u4e86@Controller\u7684\u7c7b--&gt;\n    &lt;context:component-scan base-package=&quot;com.xuxx&quot; use-default-filters=&quot;true&quot; &gt;\n        &lt;context:exclude-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt;\n    &lt;/context:component-scan&gt;\n&lt;/beans&gt;\n\n2.spring-mvc\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;beans....\n&lt;!--\u5f00\u542f\u5305\u626b\u63cf \u53ea\u626b\u63cf\u5e26\u6709@Controller\u7684\u7c7b--&gt;\n    &lt;context:component-scan base-package=&quot;com.xuxx&quot; use-default-filters=&quot;true&quot;&gt;\n        &lt;context:include-filter type=&quot;annotation&quot; expression=&quot;org.springframework.stereotype.Controller&quot;/&gt;\n    &lt;/context:component-scan&gt;\n\n    &lt;!--\u5f00\u542fmvc driven--&gt;\n    &lt;mvc:annotation-driven/&gt;\n&lt;/beans&gt;\n\n3.web.xml\uff08\u7b80\u6613\u7248\uff09\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;\n&lt;web-app xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot;\n         xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n         xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd&quot;\n         version=&quot;4.0&quot;&gt;\n    &lt;!--spring\u7684\u914d\u7f6e--&gt;\n    &lt;!--\u52a0\u8f7dspring\u914d\u7f6e\u6587\u4ef6\u7684\u8def\u5f84--&gt;\n    &lt;context-param&gt;\n        &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n        &lt;param-value&gt;classpath:applicationContext.xml&lt;/param-value&gt;\n    &lt;/context-param&gt;\n    &lt;!--\u542f\u52a8Web\u5bb9\u5668\u65f6\uff0c\u81ea\u52a8\u88c5\u914dApplicationContext.xml\u7684\u914d\u7f6e\u4fe1\u606f--&gt;\n    &lt;listener&gt;\n        &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;\n    &lt;/listener&gt;\n\n    &lt;!--spring Mvc\u7684\u914d\u7f6e--&gt;\n    &lt;servlet&gt;\n        &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\n        &lt;!--\u524d\u7aef\u63a7\u5236\u5668\uff0c\u7528\u4e8e\u63a7\u5236\u6240\u6709\u8bf7\u6c42--&gt;\n        &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\n        &lt;init-param&gt;\n            &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n            &lt;param-value&gt;classpath:spring-mvc.xml&lt;/param-value&gt;\n        &lt;/init-param&gt;\n    &lt;/servlet&gt;\n    &lt;servlet-mapping&gt;\n        &lt;servlet-name&gt;springmvc&lt;/servlet-name&gt;\n        &lt;url-pattern&gt;/&lt;/url-pattern&gt;\n        &lt;!--\u5173\u4e8e\u00a0&lt;url-pattern&gt;&lt;/url-pattern&gt;\u6709\u4e09\u79cd\u914d\u7f6e\u65b9\u5f0f:\n         (1)&lt;url-pattern&gt; / &lt;/url-pattern&gt; \uff0c \u00a0/\uff1a\u914d\u7f6e/\u7684\u8bdd\uff0curl\u4e0d\u4f1a\u62e6\u622a\u8bf8\u5982\uff1ajsp\uff0chtml \uff0c .action\u7684\u8bf7\u6c42\uff0c\u4f7f\u7528\u8be5\u6a21\u5f0f\u7684\u8bdd\uff0c\u90a3\u4e48 \u00a0 \u00a0 \u00a0spring-mvc.xml\u4e2d\u914d\u7f6ename\u4e0d\u80fd\u6709\u6269\u5c55\u540d \uff0c\u5982\u4e0b\uff1a\n         &lt;bean name=&quot;/userController&quot; class=&quot;com.neusoft.springmvc.controller.UserController&quot;&gt;&lt;/bean&gt;\uff08\u6b63\u786e\uff09 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \n         &lt;bean name=&quot;/userController.action&quot; class=&quot;com.neusoft.springmvc.controller.UserController&quot;&gt;&lt;/bean&gt;\uff08\u9519\u8bef\uff09\n\n         (2)&lt;url-pattern&gt; / *&lt;/url-pattern&gt; \u00a0\uff0c\u00a0/*\uff0c\u56e0\u4e3a\u8fd9\u4e2aurl\u4f1a\u62e6\u622a\u6240\u6709\u8bf7\u6c42\uff0c\u5305\u62ec\uff1a.jsp \u00a0.html \u00a0.action .do .css\n             \u5982\u679c\u8bbf\u95ee\u4ee5\u4e0a\u7684\u8d44\u6e90\u4f1a\u62a5404\u9519\u8bef\u00a0\uff0c\u6240\u4ee5\u914d\u7f6e\u65f6\uff0c\u4e0d\u8981\u7528/*\uff0c \u8fd9\u4e2a\u4e00\u822c\u662f\u8fc7\u6ee4\u5668\uff0c\u914d\u7f6e\u65f6\u5019\u624d\u7528\u7684\u3002\n\n         (3)&lt;url-pattern&gt; *.action&lt;/url-pattern&gt; \u00a0 \u4e0d\u4f1a\u62e6\u622a\u8bf8\u5982 .jsp .html \u7b49\u8d44\u6e90\u8bf7\u6c42\uff0c\u53ea\u4f1a\u62e6\u622a.action\u8bf7\u6c42\uff0c\u6240\u6709\u5728spring-mvc.xml\u4e2d\u914d \u00a0 \u00a0 \u00a0 \u7f6ename\u7684\u65f6\u5019\u5fc5\u987b\u8981\u6709\u6269\u5c55\u540d\uff0c\u5982\u4e0b\uff1a \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 &lt;bean name=&quot;/userController&quot; class=&quot;com.neusoft.springmvc.controller.UserController&quot;&gt;&lt;/bean&gt;\uff08\u9519\u8bef\uff09 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0\n          &lt;bean name=&quot;/userController.action&quot; class=&quot;com.neusoft.springmvc.controller.UserController&quot;&gt;&lt;/bean&gt;\uff08\u6b63\u786e\uff09   --&gt;\n    &lt;/servlet-mapping&gt;\n\n&lt;/web-app&gt;\n\n4.web.xml(\u8be6\u7ec6\u7248)\n&lt;!DOCTYPE web-app PUBLIC\n\u00a0&quot;-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN&quot;\n\u00a0&quot;http://java.sun.com/dtd/web-app_2_3.dtd&quot; &gt;\n&lt;!--\u6ce8\u610f\u7248\u672c\u2191\u2191\u2191--&gt;\n\u00a0\n&lt;web-app&gt;\n\u00a0 &lt;display-name&gt;Archetype Created Web Application&lt;/display-name&gt;\n\u00a0\n\u00a0 &lt;!--welcome pages--&gt;\n\u00a0 &lt;welcome-file-list&gt;\n\u00a0 \u00a0 &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;\n\u00a0 &lt;/welcome-file-list&gt;\n\u00a0\n\u00a0 &lt;!--applicationContext.xml\u662f\u5168\u5c40\u7684\uff0c\u5e94\u7528\u4e8e\u591a\u4e2aserverlet\uff0c\u914d\u5408listener\u4e00\u8d77\u4f7f\u7528--&gt;\n\u00a0 &lt;!-- \u5982\u679c\u662f\u76d1\u542c\u591a\u4e2a\u6587\u4ef6\uff0c\u53ef\u7528\u2018\uff0c\u2019\u9694\u5f00 --&gt;\n\u00a0\n\u00a0 &lt;context-param&gt;\n\u00a0 \u00a0 &lt;description&gt;\u914d\u7f6eSpring\u914d\u7f6e\u6587\u4ef6\u8def\u5f84&lt;/description&gt;\n\u00a0 \u00a0 &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n\u00a0\n\u00a0 \u00a0 &lt;param-value&gt;classpath:spring/applicationContext.xml&lt;/param-value&gt;\n\u00a0 &lt;/context-param&gt;\n\u00a0\n\u00a0 &lt;!-- \u5b9a\u4e49SPRING\u76d1\u542c\u5668\uff0c\u52a0\u8f7dspring --&gt;\n\u00a0 &lt;listener&gt;\n\u00a0 \u00a0 &lt;listener-class&gt;\n\u00a0 \u00a0 \u00a0 org.springframework.web.context.request.RequestContextListener\n\u00a0 \u00a0 &lt;/listener-class&gt;\n\u00a0 &lt;/listener&gt;\n\u00a0\n\u00a0 &lt;listener&gt;\n\u00a0 \u00a0 &lt;listener-class&gt;org.springframework.web.context.ContextLoaderListener&lt;/listener-class&gt;\n\u00a0 &lt;/listener&gt;\n\u00a0\n\u00a0 &lt;!--log4j\u914d\u7f6e\u6587\u4ef6\u52a0\u8f7d--&gt;\n\u00a0 &lt;context-param&gt;\n\u00a0 \u00a0 &lt;param-name&gt;log4jConfigLocation&lt;/param-name&gt;\n\u00a0 \u00a0 &lt;param-value&gt;classpath:log4j.properties&lt;/param-value&gt;\n\u00a0 &lt;/context-param&gt;\n\u00a0 &lt;!--\u542f\u52a8\u4e00\u4e2awatchdog\u7ebf\u7a0b\u6bcf1800\u79d2\u626b\u63cf\u4e00\u4e0blog4j\u914d\u7f6e\u6587\u4ef6\u7684\u53d8\u5316--&gt;\n\u00a0 &lt;context-param&gt;\n\u00a0 \u00a0 &lt;param-name&gt;log4jRefreshInterval&lt;/param-name&gt;\n\u00a0 \u00a0 &lt;param-value&gt;1800000&lt;/param-value&gt;\n\u00a0 &lt;/context-param&gt;\n\u00a0 &lt;context-param&gt;\n\u00a0 \u00a0 &lt;param-name/&gt;\n\u00a0 \u00a0 &lt;param-value/&gt;\n\u00a0 &lt;/context-param&gt;\n\u00a0\n\u00a0 &lt;!-- \u914d\u7f6eSpring\u5b57\u7b26\u7f16\u7801\u8fc7\u6ee4\u5668 --&gt;\n\u00a0 &lt;filter&gt;\n\u00a0 \u00a0 &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;\n\u00a0 \u00a0 &lt;filter-class&gt;org.springframework.web.filter.CharacterEncodingFilter&lt;/filter-class&gt;\n\u00a0 \u00a0 &lt;init-param&gt;\n\u00a0 \u00a0 \u00a0 &lt;param-name&gt;encoding&lt;/param-name&gt;\n\u00a0 \u00a0 \u00a0 &lt;param-value&gt;UTF-8&lt;/param-value&gt;\n\u00a0 \u00a0 &lt;/init-param&gt;\n\u00a0 \u00a0 &lt;init-param&gt;\n\u00a0 \u00a0 \u00a0 &lt;param-name&gt;forceEncoding&lt;/param-name&gt;\n\u00a0 \u00a0 \u00a0 &lt;param-value&gt;true&lt;/param-value&gt;\n\u00a0 \u00a0 &lt;/init-param&gt;\n\u00a0 &lt;/filter&gt;\n\u00a0 &lt;filter-mapping&gt;\n\u00a0 \u00a0 &lt;filter-name&gt;encodingFilter&lt;/filter-name&gt;\n\u00a0 \u00a0 &lt;url-pattern&gt;/*&lt;/url-pattern&gt;\n\u00a0 &lt;/filter-mapping&gt;\n\u00a0\n\u00a0 &lt;!-- Spring MVC \u6838\u5fc3\u63a7\u5236\u5668 DispatcherServlet \u914d\u7f6e\u5f00\u59cb --&gt;\n\u00a0 &lt;!--\u914d\u7f6espringmvc DispatcherServlet--&gt;\n\u00a0 &lt;servlet&gt;\n\u00a0 \u00a0 &lt;servlet-name&gt;springMVC&lt;/servlet-name&gt;\n\u00a0 \u00a0 &lt;servlet-class&gt;org.springframework.web.servlet.DispatcherServlet&lt;/servlet-class&gt;\n\u00a0 \u00a0 &lt;init-param&gt;\n\u00a0 \u00a0 \u00a0 &lt;!--Sources\u6807\u6ce8\u7684\u6587\u4ef6\u5939\u4e0b\u9700\u8981\u65b0\u5efa\u4e00\u4e2aspring\u6587\u4ef6\u5939--&gt;\n\u00a0 \u00a0 \u00a0 &lt;param-name&gt;contextConfigLocation&lt;/param-name&gt;\n\u00a0 \u00a0 \u00a0 &lt;!-- \u5982\u679c\u662f\u76d1\u542c\u591a\u4e2a\u6587\u4ef6\uff0c\u53ef\u7528\u2018\uff0c\u2019\u9694\u5f00 --&gt;\n\u00a0 \u00a0 \u00a0 &lt;param-value&gt;classpath:spring/spring-mvc.xml&lt;/param-value&gt;\n\u00a0 \u00a0 &lt;/init-param&gt;\n\u00a0 \u00a0 &lt;load-on-startup&gt;1&lt;/load-on-startup&gt;\n\u00a0 \u00a0 &lt;async-supported&gt;true&lt;/async-supported&gt;\n\u00a0 &lt;/servlet&gt;\n\u00a0\n\u00a0 &lt;!-- \u62e6\u622a\u8bbe\u7f6e --&gt;\n\u00a0 &lt;servlet-mapping&gt;\n\u00a0 \u00a0 &lt;servlet-name&gt;springMVC&lt;/servlet-name&gt;\n\u00a0 \u00a0 &lt;!-- \u6b64\u5904\u53ef\u4ee5\u53ef\u4ee5\u914d\u7f6e\u6210*.do\uff0c\u5bf9\u5e94struts\u7684\u540e\u7f00\u4e60\u60ef --&gt;\n\u00a0 \u00a0 &lt;url-pattern&gt;/&lt;/url-pattern&gt;\n\u00a0 &lt;/servlet-mapping&gt;\n\u00a0 &lt;!-- Spring MVC \u6838\u5fc3\u914d\u7f6e\u7ed3\u675f --&gt;\n\u00a0\n\u00a0 &lt;!-- \u6fc0\u6d3bTomcat\u7684defaultServlet\u6765\u5904\u7406\u9759\u6001\u6587\u4ef6 --&gt;\n\u00a0 &lt;servlet-mapping&gt;\n\u00a0 \u00a0 &lt;servlet-name&gt;default&lt;/servlet-name&gt;\n\u00a0 \u00a0 &lt;url-pattern&gt;/static/*&lt;/url-pattern&gt;\n\u00a0 &lt;/servlet-mapping&gt;\n\u00a0\n\u00a0 &lt;!-- session \u65f6\u95f4 --&gt;\n\u00a0 &lt;session-config&gt;\n\u00a0 \u00a0 &lt;session-timeout&gt;30&lt;/session-timeout&gt;\n\u00a0 &lt;/session-config&gt;\n\u00a0\n&lt;/web-app&gt;\n\n3.\u6d4b\u8bd5web-mvc\u73af\u5883\n1.\u6dfb\u52a0\u672c\u5730Tomcat\n\u4e00\u5f00\u59cb\u8bbf\u95ee\u65f6\u7684\u8def\u5f84\u52a0\u6ca1\u52a0\u9879\u76ee\u540d\uff08\u90fd\u662f\u6cea\uff09\n2.\u65b0\u5efacontroller\u548cservice\ncontroller\n@RestController\npublic class HelloController {\n    @Autowired\n    HelloService helloService;\n\n    @GetMapping(&quot;/hello&quot;)\n    //@GetMapping(value = &quot;/hello&quot;,produces = &quot;text/html;charset=utf-8&quot;) \u53ef\u4ee5\u7b80\u5355\u89e3\u51b3\u4e2d\u6587\u4e71\u7801\n    public String hello() {\n        return helloService.sayHello();\n    }\n}\n\nservice\n@Service\npublic class HelloService {\n    public String sayHello() {\n        return &quot;Hello World&quot;;\n    }\n}\n\n3.\u8bbf\u95ee,\u6210\u529f\n\n", "categories": [{"name": "\u7b14\u8bb0", "slug": "\u7b14\u8bb0", "permalink": "/Xuxx_Blogs/category/\u7b14\u8bb0/"}], "tags": [{"name": "Java", "slug": "Java", "permalink": "/Xuxx_Blogs/tag/Java/"}, {"name": "Spring", "slug": "Spring", "permalink": "/Xuxx_Blogs/tag/Spring/"}]}, {"title": "\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0", "date": "2019-12-26T01:55:00-00.00", "path": "/Xuxx_Blogs/archives/my-first/", "text": "\u8fd9\u662f\u6211\u7684\u7b2c\u4e00\u7bc7\u6587\u7ae0\u3002\u6587\u7ae0\u4f7f\u7528 GitHub \u7ba1\u7406\uff0c\u5e76\u901a\u8fc7 GitHub Actions \u81ea\u52a8\u6784\u5efa\u4e0e\u53d1\u5e03\uff01\n", "categories": [{"name": "\u9ed8\u8ba4\u5206\u7c7b", "slug": "\u9ed8\u8ba4\u5206\u7c7b", "permalink": "/Xuxx_Blogs/category/\u9ed8\u8ba4\u5206\u7c7b/"}], "tags": [{"name": "\u535a\u5ba2", "slug": "\u535a\u5ba2", "permalink": "/Xuxx_Blogs/tag/\u535a\u5ba2/"}, {"name": "GitHub", "slug": "GitHub", "permalink": "/Xuxx_Blogs/tag/GitHub/"}]}], "pages": [{"title": "\u5173\u4e8e", "date": "2019-12-26T02:26:00-00.00", "path": "/Xuxx_Blogs/about/", "text": "\u8fd9\u91cc\u662f\u6211\u7684\u4e2a\u4eba\u535a\u5ba2\uff0c\u901a\u8fc7 GitHub \u7ba1\u7406\u4e0e\u6784\u5efa\u3002   \u2014\u2014 Xuxx\n\u8054\u7cfb\u6211\nEmail: Xuxx3319@gmail.com\n", "categories": [], "tags": []}]}